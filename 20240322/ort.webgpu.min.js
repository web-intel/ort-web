/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var ort=(()=>{var Ka=Object.defineProperty;var Nh=Object.getOwnPropertyDescriptor;var Wh=Object.getOwnPropertyNames;var Vh=Object.prototype.hasOwnProperty;var se=(e,t)=>()=>(e&&(t=e(e=0)),t);var Xr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),xr=(e,t)=>{for(var r in t)Ka(e,r,{get:t[r],enumerable:!0})},Gh=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of Wh(t))!Vh.call(e,s)&&s!==r&&Ka(e,s,{get:()=>t[s],enumerable:!(o=Nh(t,s))||o.enumerable});return e};var ur=e=>Gh(Ka({},"__esModule",{value:!0}),e);var aa,Sr,lr,Hh,oa,sa=se(()=>{"use strict";aa=new Map,Sr=[],lr=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let o=aa.get(e);if(o===void 0)aa.set(e,{backend:t,priority:r});else{if(o.priority>r)return;if(o.priority===r&&o.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let s=Sr.indexOf(e);s!==-1&&Sr.splice(s,1);for(let c=0;c<Sr.length;c++)if(aa.get(Sr[c]).priority<=r){Sr.splice(c,0,e);return}Sr.push(e)}return}throw new TypeError("not a valid backend")},Hh=async e=>{let t=aa.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(o){return r||(t.error=`${o}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},oa=async e=>{let t=e.executionProviders||[],r=t.map(y=>typeof y=="string"?y:y.name),o=r.length===0?Sr:r,s,c=[],d=new Set;for(let y of o){let w=await Hh(y);typeof w=="string"?c.push({name:y,err:w}):(s||(s=w),s===w&&d.add(y))}if(!s)throw new Error(`no available backend found. ERR: ${c.map(y=>`[${y.name}] ${y.err}`).join(", ")}`);for(let{name:y,err:w}of c)r.includes(y)&&console.warn(`removing requested execution provider "${y}" from session options because it is not available: ${w}`);let h=t.filter(y=>d.has(typeof y=="string"?y:y.name));return[s,new Proxy(e,{get:(y,w)=>w==="executionProviders"?h:Reflect.get(y,w)})]}});var js=se(()=>{"use strict";sa()});var Us,Ns=se(()=>{"use strict";Us="1.18.0"});var Ws,Pt,Ja=se(()=>{"use strict";Ns();Ws="warning",Pt={wasm:{},webgl:{},webgpu:{},versions:{common:Us},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ws=e}},get logLevel(){return Ws}};Object.defineProperty(Pt,"logLevel",{enumerable:!0})});var Ve,Vs=se(()=>{"use strict";Ja();Ve=Pt});var Gs,Hs,Ls=se(()=>{"use strict";Gs=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let o=r.getContext("2d");if(o!=null){let s,c;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(s=e.dims[2],c=e.dims[3]):(s=e.dims[3],c=e.dims[2]);let d=t?.format!==void 0?t.format:"RGB",h=t?.norm,y,w;h===void 0||h.mean===void 0?y=[255,255,255,255]:typeof h.mean=="number"?y=[h.mean,h.mean,h.mean,h.mean]:(y=[h.mean[0],h.mean[1],h.mean[2],0],h.mean[3]!==void 0&&(y[3]=h.mean[3])),h===void 0||h.bias===void 0?w=[0,0,0,0]:typeof h.bias=="number"?w=[h.bias,h.bias,h.bias,h.bias]:(w=[h.bias[0],h.bias[1],h.bias[2],0],h.bias[3]!==void 0&&(w[3]=h.bias[3]));let f=c*s,C=0,S=f,k=f*2,E=-1;d==="RGBA"?(C=0,S=f,k=f*2,E=f*3):d==="RGB"?(C=0,S=f,k=f*2):d==="RBG"&&(C=0,k=f,S=f*2);for(let O=0;O<c;O++)for(let D=0;D<s;D++){let N=(e.data[C++]-w[0])*y[0],B=(e.data[S++]-w[1])*y[1],W=(e.data[k++]-w[2])*y[2],M=E===-1?255:(e.data[E++]-w[3])*y[3];o.fillStyle="rgba("+N+","+B+","+W+","+M+")",o.fillRect(D,O,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Hs=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),o;if(r!=null){let s,c,d;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(s=e.dims[2],c=e.dims[1],d=e.dims[3]):(s=e.dims[3],c=e.dims[2],d=e.dims[1]);let h=t!==void 0&&t.format!==void 0?t.format:"RGB",y=t?.norm,w,f;y===void 0||y.mean===void 0?w=[255,255,255,255]:typeof y.mean=="number"?w=[y.mean,y.mean,y.mean,y.mean]:(w=[y.mean[0],y.mean[1],y.mean[2],255],y.mean[3]!==void 0&&(w[3]=y.mean[3])),y===void 0||y.bias===void 0?f=[0,0,0,0]:typeof y.bias=="number"?f=[y.bias,y.bias,y.bias,y.bias]:(f=[y.bias[0],y.bias[1],y.bias[2],0],y.bias[3]!==void 0&&(f[3]=y.bias[3]));let C=c*s;if(t!==void 0&&(t.format!==void 0&&d===4&&t.format!=="RGBA"||d===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let S=4,k=0,E=1,O=2,D=3,N=0,B=C,W=C*2,M=-1;h==="RGBA"?(N=0,B=C,W=C*2,M=C*3):h==="RGB"?(N=0,B=C,W=C*2):h==="RBG"&&(N=0,W=C,B=C*2),o=r.createImageData(s,c);for(let q=0;q<c*s;k+=S,E+=S,O+=S,D+=S,q++)o.data[k]=(e.data[N++]-f[0])*w[0],o.data[E]=(e.data[B++]-f[1])*w[1],o.data[O]=(e.data[W++]-f[2])*w[2],o.data[D]=M===-1?255:(e.data[M++]-f[3])*w[3]}else throw new Error("Can not access image data");return o}});var Ya,Fs,qs,Ks,Js,Ys=se(()=>{"use strict";ua();Ya=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:o}=t,s=t.norm??{mean:255,bias:0},c,d;typeof s.mean=="number"?c=[s.mean,s.mean,s.mean,s.mean]:c=[s.mean[0],s.mean[1],s.mean[2],s.mean[3]??255],typeof s.bias=="number"?d=[s.bias,s.bias,s.bias,s.bias]:d=[s.bias[0],s.bias[1],s.bias[2],s.bias[3]??0];let h=t.format!==void 0?t.format:"RGBA",y=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",w=r*o,f=y==="RGBA"?new Float32Array(w*4):new Float32Array(w*3),C=4,S=0,k=1,E=2,O=3,D=0,N=w,B=w*2,W=-1;h==="RGB"&&(C=3,S=0,k=1,E=2,O=-1),y==="RGBA"?W=w*3:y==="RBG"?(D=0,B=w,N=w*2):y==="BGR"&&(B=0,N=w,D=w*2);for(let q=0;q<w;q++,S+=C,E+=C,k+=C,O+=C)f[D++]=(e[S]+d[0])/c[0],f[N++]=(e[k]+d[1])/c[1],f[B++]=(e[E]+d[2])/c[2],W!==-1&&O!==-1&&(f[W++]=(e[O]+d[3])/c[3]);return y==="RGBA"?new _t("float32",f,[1,4,r,o]):new _t("float32",f,[1,3,r,o])},Fs=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,o=typeof ImageData<"u"&&e instanceof ImageData,s=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,c=typeof e=="string",d,h=t??{},y=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},w=f=>f instanceof HTMLCanvasElement||f instanceof OffscreenCanvas?f.getContext("2d"):null;if(r){let f=y();f.width=e.width,f.height=e.height;let C=w(f);if(C!=null){let S=e.height,k=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(S=t.resizedHeight,k=t.resizedWidth),t!==void 0){if(h=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");h.tensorFormat="RGBA",h.height=S,h.width=k}else h.tensorFormat="RGBA",h.height=S,h.width=k;C.drawImage(e,0,0),d=C.getImageData(0,0,k,S).data}else throw new Error("Can not access image data")}else if(o){let f,C;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(f=t.resizedHeight,C=t.resizedWidth):(f=e.height,C=e.width),t!==void 0&&(h=t),h.format="RGBA",h.height=f,h.width=C,t!==void 0){let S=y();S.width=C,S.height=f;let k=w(S);if(k!=null)k.putImageData(e,0,0),d=k.getImageData(0,0,C,f).data;else throw new Error("Can not access image data")}else d=e.data}else if(s){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let f=y();f.width=e.width,f.height=e.height;let C=w(f);if(C!=null){let S=e.height,k=e.width;return C.drawImage(e,0,0,k,S),d=C.getImageData(0,0,k,S).data,h.height=S,h.width=k,Ya(d,h)}else throw new Error("Can not access image data")}else{if(c)return new Promise((f,C)=>{let S=y(),k=w(S);if(!e||!k)return C();let E=new Image;E.crossOrigin="Anonymous",E.src=e,E.onload=()=>{S.width=E.width,S.height=E.height,k.drawImage(E,0,0,S.width,S.height);let O=k.getImageData(0,0,S.width,S.height);h.height=S.height,h.width=S.width,f(Ya(O.data,h))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(d!==void 0)return Ya(d,h);throw new Error("Input data provided is not supported - aborted tensor creation")},qs=(e,t)=>{let{width:r,height:o,download:s,dispose:c}=t,d=[1,o,r,4];return new _t({location:"texture",type:"float32",texture:e,dims:d,download:s,dispose:c})},Ks=(e,t)=>{let{dataType:r,dims:o,download:s,dispose:c}=t;return new _t({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:o,download:s,dispose:c})},Js=(e,t,r)=>new _t({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})});var Ir,cn,Zs,Qs,Xs=se(()=>{"use strict";Ir=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),cn=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Zs=!1,Qs=()=>{if(!Zs){Zs=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;e&&(Ir.set("int64",BigInt64Array),cn.set(BigInt64Array,"int64")),t&&(Ir.set("uint64",BigUint64Array),cn.set(BigUint64Array,"uint64")),r?(Ir.set("float16",Float16Array),cn.set(Float16Array,"float16")):Ir.set("float16",Uint16Array)}}});var eu,tu,ru=se(()=>{"use strict";ua();eu=e=>{let t=1;for(let r=0;r<e.length;r++){let o=e[r];if(typeof o!="number"||!Number.isSafeInteger(o))throw new TypeError(`dims[${r}] must be an integer, got: ${o}`);if(o<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${o}`);t*=o}return t},tu=(e,t)=>{switch(e.location){case"cpu":return new _t(e.type,e.data,t);case"cpu-pinned":return new _t({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new _t({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new _t({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}});var _t,ua=se(()=>{"use strict";Ls();Ys();Xs();ru();_t=class{constructor(t,r,o){Qs();let s,c;if(typeof t=="object"&&"location"in t)switch(this.dataLocation=t.location,s=t.type,c=t.dims,t.location){case"cpu-pinned":{let h=Ir.get(s);if(!h)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(t.data instanceof h))throw new TypeError(`buffer should be of type ${h.name}`);this.cpuData=t.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let h,y;if(typeof t=="string")if(s=t,y=o,t==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");h=r}else{let w=Ir.get(t);if(w===void 0)throw new TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r)){if(t==="float16"&&w===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");t==="uint64"||t==="int64"?h=w.from(r,BigInt):h=w.from(r)}else if(r instanceof w)h=r;else throw new TypeError(`A ${s} tensor's data must be type of ${w}`)}else if(y=r,Array.isArray(t)){if(t.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let w=typeof t[0];if(w==="string")s="string",h=t;else if(w==="boolean")s="bool",h=Uint8Array.from(t);else throw new TypeError(`Invalid element type of data array: ${w}.`)}else{let w=cn.get(t.constructor);if(w===void 0)throw new TypeError(`Unsupported type for tensor data: ${t.constructor}.`);s=w,h=t}if(y===void 0)y=[h.length];else if(!Array.isArray(y))throw new TypeError("A tensor's dims must be a number array");c=y,this.cpuData=h,this.dataLocation="cpu"}let d=eu(c);if(this.cpuData&&d!==this.cpuData.length)throw new Error(`Tensor's size(${d}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=c,this.size=d}static async fromImage(t,r){return Fs(t,r)}static fromTexture(t,r){return qs(t,r)}static fromGpuBuffer(t,r){return Ks(t,r)}static fromPinnedBuffer(t,r,o){return Js(t,r,o)}toDataURL(t){return Gs(this,t)}toImageData(t){return Hs(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return tu(this,t)}}});var ft,la=se(()=>{"use strict";ua();ft=_t});var pn,iu,It,$t,Za=se(()=>{"use strict";Ja();pn=(e,t)=>{(typeof Pt.trace>"u"?!Pt.wasm.trace:!Pt.trace)||console.timeStamp(`${e}::ORT::${t}`)},iu=(e,t)=>{let r=new Error().stack?.split(/\r\n|\r|\n/g)||[],o=!1;for(let s=0;s<r.length;s++){if(o&&!r[s].includes("TRACE_FUNC")){let c=`FUNC_${e}::${r[s].trim().split(" ")[1]}`;t&&(c+=`::${t}`),pn("CPU",c);return}r[s].includes("TRACE_FUNC")&&(o=!0)}},It=e=>{(typeof Pt.trace>"u"?!Pt.wasm.trace:!Pt.trace)||iu("BEGIN",e)},$t=e=>{(typeof Pt.trace>"u"?!Pt.wasm.trace:!Pt.trace)||iu("END",e)}});var da,nu=se(()=>{"use strict";sa();la();Za();da=class e{constructor(t){this.handler=t}async run(t,r,o){It();let s={},c={};if(typeof t!="object"||t===null||t instanceof ft||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let d=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof ft)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");d=!1;for(let w of r){if(typeof w!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(w)===-1)throw new RangeError(`'fetches' contains invalid output name: ${w}.`);s[w]=null}if(typeof o=="object"&&o!==null)c=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else{let w=!1,f=Object.getOwnPropertyNames(r);for(let C of this.outputNames)if(f.indexOf(C)!==-1){let S=r[C];(S===null||S instanceof ft)&&(w=!0,d=!1,s[C]=S)}if(w){if(typeof o=="object"&&o!==null)c=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else c=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let w of this.inputNames)if(typeof t[w]>"u")throw new Error(`input '${w}' is missing in 'feeds'.`);if(d)for(let w of this.outputNames)s[w]=null;let h=await this.handler.run(t,s,c),y={};for(let w in h)if(Object.hasOwnProperty.call(h,w)){let f=h[w];f instanceof ft?y[w]=f:y[w]=new ft(f.type,f.data,f.dims)}return $t(),y}async release(){return this.handler.dispose()}static async create(t,r,o,s){It();let c,d={};if(typeof t=="string"){if(c=t,typeof r=="object"&&r!==null)d=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(c=t,typeof r=="object"&&r!==null)d=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let f=t,C=0,S=t.byteLength;if(typeof r=="object"&&r!==null)d=r;else if(typeof r=="number"){if(C=r,!Number.isSafeInteger(C))throw new RangeError("'byteOffset' must be an integer.");if(C<0||C>=f.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${f.byteLength}).`);if(S=t.byteLength-C,typeof o=="number"){if(S=o,!Number.isSafeInteger(S))throw new RangeError("'byteLength' must be an integer.");if(S<=0||C+S>f.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${f.byteLength-C}].`);if(typeof s=="object"&&s!==null)d=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(typeof o<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");c=new Uint8Array(f,C,S)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[h,y]=await oa(d),w=await h.createInferenceSessionHandler(c,y);return $t(),new e(w)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var au,ou=se(()=>{"use strict";nu();au=da});var su=se(()=>{"use strict"});var uu=se(()=>{"use strict"});var lu=se(()=>{"use strict"});var du=se(()=>{"use strict"});var Lh,ca,cu=se(()=>{"use strict";sa();la();Lh="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",ca=class e{constructor(t,r,o){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=o}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,r){let o=t.evalModel||"",s=t.optimizerModel||"",c=r||{},[d,h]=await oa(c);if(d.createTrainingSessionHandler){let y=await d.createTrainingSessionHandler(t.checkpointState,t.trainModel,o,s,h);return new e(y,!!t.optimizerModel,!!t.evalModel)}else throw new Error(Lh)}typeNarrowingForRunStep(t,r,o,s,c){let d={},h={};if(typeof o!="object"||o===null||o instanceof ft||Array.isArray(o))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let y=!0;if(typeof s=="object"){if(s===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(s instanceof ft)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(s)){if(s.length===0)throw new TypeError("'fetches' cannot be an empty array.");y=!1;for(let w of s){if(typeof w!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(w)===-1)throw new RangeError(`'fetches' contains invalid output name: ${w}.`);d[w]=null}if(typeof c=="object"&&c!==null)h=c;else if(typeof c<"u")throw new TypeError("'options' must be an object.")}else{let w=!1,f=Object.getOwnPropertyNames(s);for(let C of r)if(f.indexOf(C)!==-1){let S=s[C];(S===null||S instanceof ft)&&(w=!0,y=!1,d[C]=S)}if(w){if(typeof c=="object"&&c!==null)h=c;else if(typeof c<"u")throw new TypeError("'options' must be an object.")}else h=s}}else if(typeof s<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let w of t)if(typeof o[w]>"u")throw new Error(`input '${w}' is missing in 'feeds'.`);if(y)for(let w of r)d[w]=null;return[d,h]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let o in t)if(Object.hasOwnProperty.call(t,o)){let s=t[o];s instanceof ft?r[o]=s:r[o]=new ft(s.type,s.data,s.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,o){let[s,c]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,o),d=await this.handler.runTrainStep(t,s,c);return this.convertHandlerReturnTypeToMapOfTensors(d)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,o){if(this.hasEvalModel){let[s,c]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,o),d=await this.handler.runEvalStep(t,s,c);return this.convertHandlerReturnTypeToMapOfTensors(d)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let o=await this.getParametersSize(r);if(t.length!==4*o)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}});var pu,fu=se(()=>{"use strict";cu();pu=ca});var Qa={};xr(Qa,{InferenceSession:()=>au,TRACE:()=>pn,TRACE_FUNC_BEGIN:()=>It,TRACE_FUNC_END:()=>$t,Tensor:()=>ft,TrainingSession:()=>pu,env:()=>Ve,registerBackend:()=>lr});var Dt=se(()=>{"use strict";js();Vs();ou();la();su();uu();Za();lu();du();fu()});var Xa={};xr(Xa,{createReadStream:()=>hu,readFile:()=>Fh,readFileSync:()=>qh});var Fh,qh,hu,eo=se(()=>{Fh=void 0,qh=void 0,hu=void 0});var to={};xr(to,{join:()=>Kh});var Kh,ro=se(()=>{Kh=void 0});var bu=Xr((yu,io)=>{"use strict";var gu=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,s;r.ready=new Promise((i,n)=>{o=i,s=n}),r.mountExternalData=(i,n)=>{(r.jh||(r.jh=new Map)).set(i,n)},r.unmountExternalData=()=>{delete r.jh};let c=()=>{let i=(a,l,p)=>(...m)=>{let b=Ct,v=l?.();m=a(...m);let _=l?.();return v!==_&&(a=_,p(v),l=p=null),Ct!=b?Tn():m},n=a=>async(...l)=>{try{if(r.ih)throw Error("Session already started");let p=r.ih={Kh:l[0],errors:[]},m=await a(...l);if(r.ih!==p)throw Error("Session mismatch");r.qh?.flush();let b=p.errors;if(0<b.length){let v=await Promise.all(b);if(v=v.filter(_=>_),0<v.length)throw Error(v.join(`
`))}return m}finally{r.ih=null}};r._OrtCreateSession=i(r._OrtCreateSession,()=>r._OrtCreateSession,a=>r._OrtCreateSession=a),r._OrtRun=n(i(r._OrtRun,()=>r._OrtRun,a=>r._OrtRun=a)),r._OrtRunWithBinding=n(i(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,a=>r._OrtRunWithBinding=a)),r._OrtBindInput=i(r._OrtBindInput,()=>r._OrtBindInput,a=>r._OrtBindInput=a),c=void 0};r.jsepInit=(i,n)=>{if(c?.(),i==="webgpu"){[r.qh,r.Bh,r.Fh,r.rh,r.Eh,r.Jd,r.Gh,r.Ih,r.Ch,r.Dh,r.Hh]=n;let a=r.qh;r.jsepRegisterBuffer=(l,p,m,b)=>a.registerBuffer(l,p,m,b),r.jsepGetBuffer=l=>a.getBuffer(l),r.jsepCreateDownloader=(l,p,m)=>a.createDownloader(l,p,m),r.jsepOnReleaseSession=l=>{a.onReleaseSession(l)},r.jsepOnRunStart=l=>a.onRunStart(l)}};var d=Object.assign({},r),h="./this.program",y=(i,n)=>{throw n},w=typeof window=="object",f=typeof importScripts=="function",C=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",S="",k,E,O;if(C){var D=(eo(),ur(Xa)),N=(ro(),ur(to));S=f?N.dirname(S)+"/":__dirname+"/",k=(i,n)=>(i=De(i)?new URL(i):N.normalize(i),D.readFileSync(i,n?void 0:"utf8")),O=i=>(i=k(i,!0),i.buffer||(i=new Uint8Array(i)),i),E=(i,n,a,l=!0)=>{i=De(i)?new URL(i):N.normalize(i),D.readFile(i,l?void 0:"utf8",(p,m)=>{p?a(p):n(l?m.buffer:m)})},!r.thisProgram&&1<process.argv.length&&(h=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),y=(i,n)=>{throw process.exitCode=i,n},r.inspect=()=>"[Emscripten Module object]"}else(w||f)&&(f?S=self.location.href:typeof document<"u"&&document.currentScript&&(S=document.currentScript.src),e&&(S=e),S.indexOf("blob:")!==0?S=S.substr(0,S.replace(/[?#].*/,"").lastIndexOf("/")+1):S="",k=i=>{var n=new XMLHttpRequest;return n.open("GET",i,!1),n.send(null),n.responseText},f&&(O=i=>{var n=new XMLHttpRequest;return n.open("GET",i,!1),n.responseType="arraybuffer",n.send(null),new Uint8Array(n.response)}),E=(i,n,a)=>{var l=new XMLHttpRequest;l.open("GET",i,!0),l.responseType="arraybuffer",l.onload=()=>{l.status==200||l.status==0&&l.response?n(l.response):a()},l.onerror=a,l.send(null)});var B=console.log.bind(console),W=console.error.bind(console);Object.assign(r,d),d=null,typeof WebAssembly!="object"&&ge("no native wasm support detected");var M,q=!1,X,te,ae,J,ne,be,ze;function Ke(){var i=M.buffer;r.HEAP8=te=new Int8Array(i),r.HEAP16=new Int16Array(i),r.HEAPU8=ae=new Uint8Array(i),r.HEAPU16=new Uint16Array(i),r.HEAP32=J=new Int32Array(i),r.HEAPU32=ne=new Uint32Array(i),r.HEAPF32=be=new Float32Array(i),r.HEAPF64=ze=new Float64Array(i)}var Ne=[],Ae=[],fe=[],Fe=0,Me=null,xe=null;function ge(i){throw i="Aborted("+i+")",W(i),q=!0,X=1,i=new WebAssembly.RuntimeError(i+". Build with -sASSERTIONS for more info."),s(i),i}var ve=i=>i.startsWith("data:application/octet-stream;base64,"),De=i=>i.startsWith("file://"),it;if(it="ort-wasm-simd.wasm",!ve(it)){var ie=it;it=r.locateFile?r.locateFile(ie,S):S+ie}function he(i){if(O)return O(i);throw"both async and sync fetching of the wasm failed"}function Ee(i){if(w||f){if(typeof fetch=="function"&&!De(i))return fetch(i,{credentials:"same-origin"}).then(n=>{if(!n.ok)throw"failed to load wasm binary file at '"+i+"'";return n.arrayBuffer()}).catch(()=>he(i));if(E)return new Promise((n,a)=>{E(i,l=>n(new Uint8Array(l)),a)})}return Promise.resolve().then(()=>he(i))}function et(i,n,a){return Ee(i).then(l=>WebAssembly.instantiate(l,n)).then(l=>l).then(a,l=>{W(`failed to asynchronously prepare wasm: ${l}`),ge(l)})}function ut(i,n){var a=it;return typeof WebAssembly.instantiateStreaming!="function"||ve(a)||De(a)||C||typeof fetch!="function"?et(a,i,n):fetch(a,{credentials:"same-origin"}).then(l=>WebAssembly.instantiateStreaming(l,i).then(n,function(p){return W(`wasm streaming compile failed: ${p}`),W("falling back to ArrayBuffer instantiation"),et(a,i,n)}))}var dt,ht={1368512:(i,n,a,l)=>{if(typeof r>"u"||!r.jh)return 1;if(i=at(i>>>0),i.startsWith("./")&&(i=i.substring(2)),i=r.jh.get(i),!i)return 2;if(n>>>=0,a>>>=0,n+a>i.byteLength)return 3;try{return ae.set(i.subarray(n,n+a),l>>>0>>>0),0}catch{return 4}},1369013:()=>{r.Ch()},1369044:()=>{r.Dh()},1369073:()=>{r.Hh()},1369098:i=>r.Bh(i),1369131:i=>r.Fh(i),1369163:(i,n,a)=>{r.rh(i,n,a,!0)},1369202:(i,n,a)=>{r.rh(i,n,a)},1369235:i=>{r.Jd("Abs",i,void 0)},1369286:i=>{r.Jd("Neg",i,void 0)},1369337:i=>{r.Jd("Floor",i,void 0)},1369390:i=>{r.Jd("Ceil",i,void 0)},1369442:i=>{r.Jd("Reciprocal",i,void 0)},1369500:i=>{r.Jd("Sqrt",i,void 0)},1369552:i=>{r.Jd("Exp",i,void 0)},1369603:i=>{r.Jd("Erf",i,void 0)},1369654:i=>{r.Jd("Sigmoid",i,void 0)},1369709:(i,n,a)=>{r.Jd("HardSigmoid",i,{alpha:n,beta:a})},1369788:i=>{r.Jd("Log",i,void 0)},1369839:i=>{r.Jd("Sin",i,void 0)},1369890:i=>{r.Jd("Cos",i,void 0)},1369941:i=>{r.Jd("Tan",i,void 0)},1369992:i=>{r.Jd("Asin",i,void 0)},1370044:i=>{r.Jd("Acos",i,void 0)},1370096:i=>{r.Jd("Atan",i,void 0)},1370148:i=>{r.Jd("Sinh",i,void 0)},1370200:i=>{r.Jd("Cosh",i,void 0)},1370252:i=>{r.Jd("Asinh",i,void 0)},1370305:i=>{r.Jd("Acosh",i,void 0)},1370358:i=>{r.Jd("Atanh",i,void 0)},1370411:i=>{r.Jd("Tanh",i,void 0)},1370463:i=>{r.Jd("Not",i,void 0)},1370514:(i,n,a)=>{r.Jd("Clip",i,{min:n,max:a})},1370583:i=>{r.Jd("Clip",i,void 0)},1370635:(i,n)=>{r.Jd("Elu",i,{alpha:n})},1370693:i=>{r.Jd("Relu",i,void 0)},1370745:(i,n)=>{r.Jd("LeakyRelu",i,{alpha:n})},1370809:(i,n)=>{r.Jd("ThresholdedRelu",i,{alpha:n})},1370879:(i,n)=>{r.Jd("Cast",i,{to:n})},1370937:i=>{r.Jd("Add",i,void 0)},1370988:i=>{r.Jd("Sub",i,void 0)},1371039:i=>{r.Jd("Mul",i,void 0)},1371090:i=>{r.Jd("Div",i,void 0)},1371141:i=>{r.Jd("Pow",i,void 0)},1371192:i=>{r.Jd("Equal",i,void 0)},1371245:i=>{r.Jd("Greater",i,void 0)},1371300:i=>{r.Jd("GreaterOrEqual",i,void 0)},1371362:i=>{r.Jd("Less",i,void 0)},1371414:i=>{r.Jd("LessOrEqual",i,void 0)},1371473:(i,n,a,l,p)=>{r.Jd("ReduceMean",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,p>>>0)):[]})},1371632:(i,n,a,l,p)=>{r.Jd("ReduceMax",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,p>>>0)):[]})},1371790:(i,n,a,l,p)=>{r.Jd("ReduceMin",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,p>>>0)):[]})},1371948:(i,n,a,l,p)=>{r.Jd("ReduceProd",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,p>>>0)):[]})},1372107:(i,n,a,l,p)=>{r.Jd("ReduceSum",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,p>>>0)):[]})},1372265:(i,n,a,l,p)=>{r.Jd("ReduceL1",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,p>>>0)):[]})},1372422:(i,n,a,l,p)=>{r.Jd("ReduceL2",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,p>>>0)):[]})},1372579:(i,n,a,l,p)=>{r.Jd("ReduceLogSum",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,p>>>0)):[]})},1372740:(i,n,a,l,p)=>{r.Jd("ReduceSumSquare",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,p>>>0)):[]})},1372904:(i,n,a,l,p)=>{r.Jd("ReduceLogSumExp",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,p>>>0)):[]})},1373068:i=>{r.Jd("Where",i,void 0)},1373121:(i,n,a)=>{r.Jd("Transpose",i,{perm:n?Array.from(J.subarray(n>>>0,a>>>0)):[]})},1373229:(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)=>{r.Jd("ConvTranspose",i,{format:_?"NHWC":"NCHW",autoPad:n,dilations:[a],group:l,kernel_shape:[p],pads:[m,b],strides:[v],wIsConst:()=>!!te[x>>>0],outputPadding:I?Array.from(J.subarray(I>>>0,P>>>0)):[],outputShape:R?Array.from(J.subarray(R>>>0,T>>>0)):[],activation:at(U)})},1373631:(i,n,a,l,p,m,b,v,_,x,I,P,R,T)=>{r.Jd("ConvTranspose",i,{format:v?"NHWC":"NCHW",autoPad:n,dilations:Array.from(J.subarray(a>>>0,(a>>>0)+2>>>0)),group:l,kernelShape:Array.from(J.subarray(p>>>0,(p>>>0)+2>>>0)),pads:Array.from(J.subarray(m>>>0,(m>>>0)+4>>>0)),strides:Array.from(J.subarray(b>>>0,(b>>>0)+2>>>0)),wIsConst:()=>!!te[_>>>0],outputPadding:x?Array.from(J.subarray(x>>>0,I>>>0)):[],outputShape:P?Array.from(J.subarray(P>>>0,R>>>0)):[],activation:at(T)})},1374196:(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)=>{r.Jd("ConvTranspose",i,{format:_?"NHWC":"NCHW",autoPad:n,dilations:[a],group:l,kernel_shape:[p],pads:[m,b],strides:[v],wIsConst:()=>!!te[x>>>0],outputPadding:I?Array.from(J.subarray(I>>>0,P>>>0)):[],outputShape:R?Array.from(J.subarray(R>>>0,T>>>0)):[],activation:at(U)})},1374598:(i,n,a,l,p,m,b,v,_,x,I,P,R,T)=>{r.Jd("ConvTranspose",i,{format:v?"NHWC":"NCHW",autoPad:n,dilations:Array.from(J.subarray(a>>>0,(a>>>0)+2>>>0)),group:l,kernelShape:Array.from(J.subarray(p>>>0,(p>>>0)+2>>>0)),pads:Array.from(J.subarray(m>>>0,(m>>>0)+4>>>0)),strides:Array.from(J.subarray(b>>>0,(b>>>0)+2>>>0)),wIsConst:()=>!!te[_>>>0],outputPadding:x?Array.from(J.subarray(x>>>0,I>>>0)):[],outputShape:P?Array.from(J.subarray(P>>>0,R>>>0)):[],activation:at(T)})},1375163:(i,n)=>{r.Jd("GlobalAveragePool",i,{format:n?"NHWC":"NCHW"})},1375254:(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)=>{r.Jd("AveragePool",i,{format:G?"NHWC":"NCHW",auto_pad:n,ceil_mode:a,count_include_pad:l,storage_order:p,dilations:[m,b],kernel_shape:[v,_],pads:[x,I,P,R],strides:[T,U]})},1375538:(i,n)=>{r.Jd("GlobalAveragePool",i,{format:n?"NHWC":"NCHW"})},1375629:(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)=>{r.Jd("AveragePool",i,{format:G?"NHWC":"NCHW",auto_pad:n,ceil_mode:a,count_include_pad:l,storage_order:p,dilations:[m,b],kernel_shape:[v,_],pads:[x,I,P,R],strides:[T,U]})},1375913:(i,n)=>{r.Jd("GlobalMaxPool",i,{format:n?"NHWC":"NCHW"})},1376e3:(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)=>{r.Jd("MaxPool",i,{format:G?"NHWC":"NCHW",auto_pad:n,ceil_mode:a,count_include_pad:l,storage_order:p,dilations:[m,b],kernel_shape:[v,_],pads:[x,I,P,R],strides:[T,U]})},1376280:(i,n)=>{r.Jd("GlobalMaxPool",i,{format:n?"NHWC":"NCHW"})},1376367:(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)=>{r.Jd("MaxPool",i,{format:G?"NHWC":"NCHW",auto_pad:n,ceil_mode:a,count_include_pad:l,storage_order:p,dilations:[m,b],kernel_shape:[v,_],pads:[x,I,P,R],strides:[T,U]})},1376647:(i,n,a,l,p)=>{r.Jd("Gemm",i,{alpha:n,beta:a,transA:l,transB:p})},1376751:i=>{r.Jd("MatMul",i,void 0)},1376805:(i,n,a,l)=>{r.Jd("ArgMax",i,{keepDims:!!n,selectLastIndex:!!a,axis:l})},1376913:(i,n,a,l)=>{r.Jd("ArgMin",i,{keepDims:!!n,selectLastIndex:!!a,axis:l})},1377021:(i,n)=>{r.Jd("Softmax",i,{axis:n})},1377084:(i,n)=>{r.Jd("Concat",i,{axis:n})},1377144:(i,n,a,l,p)=>{r.Jd("Split",i,{axis:n,numOutputs:a,splitSizes:l?Array.from(J.subarray(l>>>0,p>>>0)):[]})},1377284:i=>{r.Jd("Expand",i,void 0)},1377338:(i,n)=>{r.Jd("Gather",i,{axis:Number(n)})},1377409:(i,n)=>{r.Jd("GatherElements",i,{axis:Number(n)})},1377488:(i,n,a,l,p,m,b,v,_,x,I)=>{r.Jd("Resize",i,{antialias:n,axes:a?Array.from(J.subarray(a>>>0,l>>>0)):[],coordinateTransformMode:at(p),cubicCoeffA:m,excludeOutside:b,extrapolationValue:v,keepAspectRatioPolicy:at(_),mode:at(x),nearestMode:at(I)})},1377834:(i,n,a,l,p,m,b)=>{r.Jd("Slice",i,{starts:n?Array.from(J.subarray(n>>>0,a>>>0)):[],ends:l?Array.from(J.subarray(l>>>0,p>>>0)):[],axes:m?Array.from(J.subarray(m>>>0,b>>>0)):[]})},1378050:i=>{r.Jd("Tile",i,void 0)},1378102:(i,n,a)=>{r.Jd("LayerNormalization",i,{axis:Number(n),epsilon:Number(a)})},1378209:(i,n,a)=>{r.Jd("InstanceNormalization",i,{epsilon:n,format:a?"NHWC":"NCHW"})},1378323:(i,n,a)=>{r.Jd("InstanceNormalization",i,{epsilon:n,format:a?"NHWC":"NCHW"})},1378437:i=>{r.Jd("Range",i,void 0)},1378490:(i,n)=>{r.Jd("Einsum",i,{equation:at(n)})},1378571:(i,n,a,l,p)=>{r.Jd("Pad",i,{mode:n,value:a,pads:l?Array.from(J.subarray(l>>>0,p>>>0)):[]})},1378698:(i,n,a,l,p,m)=>{r.Jd("BatchNormalization",i,{epsilon:n,momentum:a,spatial:!!p,trainingMode:!!l,format:m?"NHWC":"NCHW"})},1378867:(i,n,a,l,p,m)=>{r.Jd("BatchNormalization",i,{epsilon:n,momentum:a,spatial:!!p,trainingMode:!!l,format:m?"NHWC":"NCHW"})},1379036:(i,n,a)=>{r.Jd("CumSum",i,{exclusive:Number(n),reverse:Number(a)})},1379133:(i,n,a,l,p,m,b,v,_)=>{r.Jd("Attention",i,{numHeads:n,isUnidirectional:a,maskFilterValue:l,scale:p,doRotary:m,qkvHiddenSizes:b?Array.from(J.subarray(Number(v)>>>0,Number(v)+b>>>0)):[],pastPresentShareBuffer:!!_})},1379405:i=>{r.Jd("BiasAdd",i,void 0)},1379460:i=>{r.Jd("BiasSplitGelu",i,void 0)},1379521:i=>{r.Jd("FastGelu",i,void 0)},1379577:(i,n,a,l,p,m,b,v,_,x,I,P,R)=>{r.Jd("Conv",i,{format:_?"NHWC":"NCHW",auto_pad:n,dilations:[a],group:l,kernel_shape:[p],pads:m?Array.from(J.subarray(m>>>0,b>>>0)):[],strides:[v],w_is_const:()=>!!te[x>>>0],activation:at(I),activation_params:P?Array.from(be.subarray(P>>>0,R>>>0)):[]})},1379947:(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)=>{r.Jd("Conv",i,{format:P?"NHWC":"NCHW",auto_pad:n,dilations:[a,l],group:p,kernel_shape:[m,b],pads:v?Array.from(J.subarray(v>>>0,_>>>0)):[],strides:[x,I],w_is_const:()=>!!te[R>>>0],activation:at(T),activation_params:U?Array.from(be.subarray(U>>>0,G>>>0)):[]})},1380338:i=>{r.Jd("Gelu",i,void 0)},1380390:(i,n,a,l,p,m)=>{r.Jd("MatMulNBits",i,{k:n,n:a,accuracyLevel:l,bits:p,blockSize:m})},1380517:(i,n,a,l,p,m)=>{r.Jd("MultiHeadAttention",i,{numHeads:n,isUnidirectional:a,maskFilterValue:l,scale:p,doRotary:m})},1380676:(i,n)=>{r.Jd("SkipLayerNormalization",i,{epsilon:n})},1380757:i=>{r.Gh(i)},1380791:(i,n)=>r.Ih(i,n,r.ih.Kh,r.ih.errors)};function st(i){this.name="ExitStatus",this.message=`Program terminated with exit(${i})`,this.status=i}var nt=[],bt=0,Et=0;function Rt(i){this.hh=i,this.dh=i-24,this.Jh=function(n){ne[this.dh+4>>>2>>>0]=n},this.oh=function(){return ne[this.dh+4>>>2>>>0]},this.Ah=function(n){ne[this.dh+8>>>2>>>0]=n},this.sh=function(n){te[this.dh+12>>>0>>>0]=n?1:0},this.xh=function(){return te[this.dh+12>>>0>>>0]!=0},this.th=function(n){te[this.dh+13>>>0>>>0]=n?1:0},this.wh=function(){return te[this.dh+13>>>0>>>0]!=0},this.zh=function(n,a){this.ph(0),this.Jh(n),this.Ah(a)},this.ph=function(n){ne[this.dh+16>>>2>>>0]=n},this.uh=function(){return ne[this.dh+16>>>2>>>0]},this.yh=function(){if(yi(this.oh()))return ne[this.hh>>>2>>>0];var n=this.uh();return n!==0?n:this.hh}}var nr=i=>{var n=Et;if(!n)return er(0),0;var a=new Rt(n);a.ph(n);var l=a.oh();if(!l)return er(0),n;for(var p in i){var m=i[p];if(m===0||m===l)break;if(gi(m,l,a.dh+16))return er(m),n}return er(l),n},ar=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,si=(i,n,a)=>{n>>>=0;var l=n+a;for(a=n;i[a]&&!(a>=l);)++a;if(16<a-n&&i.buffer&&ar)return ar.decode(i.subarray(n,a));for(l="";n<a;){var p=i[n++];if(p&128){var m=i[n++]&63;if((p&224)==192)l+=String.fromCharCode((p&31)<<6|m);else{var b=i[n++]&63;p=(p&240)==224?(p&15)<<12|m<<6|b:(p&7)<<18|m<<12|b<<6|i[n++]&63,65536>p?l+=String.fromCharCode(p):(p-=65536,l+=String.fromCharCode(55296|p>>10,56320|p&1023))}}else l+=String.fromCharCode(p)}return l},at=(i,n)=>(i>>>=0)?si(ae,i,n):"",kr=i=>{for(var n=0,a=0;a<i.length;++a){var l=i.charCodeAt(a);127>=l?n++:2047>=l?n+=2:55296<=l&&57343>=l?(n+=4,++a):n+=3}return n},or=(i,n,a,l)=>{if(a>>>=0,!(0<l))return 0;var p=a;l=a+l-1;for(var m=0;m<i.length;++m){var b=i.charCodeAt(m);if(55296<=b&&57343>=b){var v=i.charCodeAt(++m);b=65536+((b&1023)<<10)|v&1023}if(127>=b){if(a>=l)break;n[a++>>>0]=b}else{if(2047>=b){if(a+1>=l)break;n[a++>>>0]=192|b>>6}else{if(65535>=b){if(a+2>=l)break;n[a++>>>0]=224|b>>12}else{if(a+3>=l)break;n[a++>>>0]=240|b>>18,n[a++>>>0]=128|b>>12&63}n[a++>>>0]=128|b>>6&63}n[a++>>>0]=128|b&63}}return n[a>>>0]=0,a-p},Bt=i=>i%4===0&&(i%100!==0||i%400===0),ui=[0,31,60,91,121,152,182,213,244,274,305,335],$n=[0,31,59,90,120,151,181,212,243,273,304,334],li=i=>{var n=kr(i)+1,a=Mr(n);return a&&or(i,ae,a,n),a},di=[],Or=(i,n)=>{di.length=0;for(var a;a=ae[i++>>>0];){var l=a!=105;l&=a!=112,n+=l&&n%8?4:0,di.push(a==112?ne[n>>>2>>>0]:a==105?J[n>>>2>>>0]:ze[n>>>3>>>0]),n+=l?8:4}return di},pr={},Pr=()=>{if(!Rr){var i={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:h||"./this.program"},n;for(n in pr)pr[n]===void 0?delete i[n]:i[n]=pr[n];var a=[];for(n in i)a.push(`${n}=${i[n]}`);Rr=a}return Rr},Rr,Xt=[null,[],[]],ci=[31,29,31,30,31,30,31,31,30,31,30,31],pi=[31,28,31,30,31,30,31,31,30,31,30,31];function lt(i){var n=Array(kr(i)+1);return or(i,n,0,n.length),n}function Cn(i,n,a,l){function p(T,U,G){for(T=typeof T=="number"?T.toString():T||"";T.length<U;)T=G[0]+T;return T}function m(T,U){return p(T,U,"0")}function b(T,U){function G(oe){return 0>oe?-1:0<oe?1:0}var ee;return(ee=G(T.getFullYear()-U.getFullYear()))===0&&(ee=G(T.getMonth()-U.getMonth()))===0&&(ee=G(T.getDate()-U.getDate())),ee}function v(T){switch(T.getDay()){case 0:return new Date(T.getFullYear()-1,11,29);case 1:return T;case 2:return new Date(T.getFullYear(),0,3);case 3:return new Date(T.getFullYear(),0,2);case 4:return new Date(T.getFullYear(),0,1);case 5:return new Date(T.getFullYear()-1,11,31);case 6:return new Date(T.getFullYear()-1,11,30)}}function _(T){var U=T.fh;for(T=new Date(new Date(T.gh+1900,0,1).getTime());0<U;){var G=T.getMonth(),ee=(Bt(T.getFullYear())?ci:pi)[G];if(U>ee-T.getDate())U-=ee-T.getDate()+1,T.setDate(1),11>G?T.setMonth(G+1):(T.setMonth(0),T.setFullYear(T.getFullYear()+1));else{T.setDate(T.getDate()+U);break}}return G=new Date(T.getFullYear()+1,0,4),U=v(new Date(T.getFullYear(),0,4)),G=v(G),0>=b(U,T)?0>=b(G,T)?T.getFullYear()+1:T.getFullYear():T.getFullYear()-1}i>>>=0,n>>>=0,a>>>=0,l>>>=0;var x=ne[l+40>>>2>>>0];l={Nh:J[l>>>2>>>0],Mh:J[l+4>>>2>>>0],kh:J[l+8>>>2>>>0],nh:J[l+12>>>2>>>0],lh:J[l+16>>>2>>>0],gh:J[l+20>>>2>>>0],eh:J[l+24>>>2>>>0],fh:J[l+28>>>2>>>0],Ph:J[l+32>>>2>>>0],Lh:J[l+36>>>2>>>0],Oh:x?at(x):""},a=at(a),x={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var I in x)a=a.replace(new RegExp(I,"g"),x[I]);var P="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),R="January February March April May June July August September October November December".split(" ");x={"%a":T=>P[T.eh].substring(0,3),"%A":T=>P[T.eh],"%b":T=>R[T.lh].substring(0,3),"%B":T=>R[T.lh],"%C":T=>m((T.gh+1900)/100|0,2),"%d":T=>m(T.nh,2),"%e":T=>p(T.nh,2," "),"%g":T=>_(T).toString().substring(2),"%G":T=>_(T),"%H":T=>m(T.kh,2),"%I":T=>(T=T.kh,T==0?T=12:12<T&&(T-=12),m(T,2)),"%j":T=>{for(var U=0,G=0;G<=T.lh-1;U+=(Bt(T.gh+1900)?ci:pi)[G++]);return m(T.nh+U,3)},"%m":T=>m(T.lh+1,2),"%M":T=>m(T.Mh,2),"%n":()=>`
`,"%p":T=>0<=T.kh&&12>T.kh?"AM":"PM","%S":T=>m(T.Nh,2),"%t":()=>"	","%u":T=>T.eh||7,"%U":T=>m(Math.floor((T.fh+7-T.eh)/7),2),"%V":T=>{var U=Math.floor((T.fh+7-(T.eh+6)%7)/7);if(2>=(T.eh+371-T.fh-2)%7&&U++,U)U==53&&(G=(T.eh+371-T.fh)%7,G==4||G==3&&Bt(T.gh)||(U=1));else{U=52;var G=(T.eh+7-T.fh-1)%7;(G==4||G==5&&Bt(T.gh%400-1))&&U++}return m(U,2)},"%w":T=>T.eh,"%W":T=>m(Math.floor((T.fh+7-(T.eh+6)%7)/7),2),"%y":T=>(T.gh+1900).toString().substring(2),"%Y":T=>T.gh+1900,"%z":T=>{T=T.Lh;var U=0<=T;return T=Math.abs(T)/60,(U?"+":"-")+("0000"+(T/60*100+T%60)).slice(-4)},"%Z":T=>T.Oh,"%%":()=>"%"},a=a.replace(/%%/g,"\0\0");for(I in x)a.includes(I)&&(a=a.replace(new RegExp(I,"g"),x[I](l)));return a=a.replace(/\0\0/g,"%"),I=lt(a),I.length>n?0:(te.set(I,i>>>0),I.length-1)}var qe=i=>{try{i()}catch(n){ge(n)}};function xn(){var i=j,n={};for(let[a,l]of Object.entries(i))n[a]=typeof l=="function"?function(){fr.push(a);try{return l.apply(null,arguments)}finally{q||(fr.pop(),Ct&&zt===1&&fr.length===0&&(zt=0,qe(Bs),typeof Fibers<"u"&&Fibers.Qh()))}}:l;return n}var zt=0,Ct=null,Sn=0,fr=[],In={},we={},Br=0,zr=null,La=[];function Tn(){return new Promise((i,n)=>{zr={resolve:i,reject:n}})}function Fa(){var i=Mr(65548),n=i+12;ne[i>>>2>>>0]=n,ne[i+4>>>2>>>0]=n+65536,n=fr[0];var a=In[n];return a===void 0&&(a=Br++,In[n]=a,we[a]=n),J[i+8>>>2>>>0]=a,i}function An(i){if(!q){if(zt===0){var n=!1,a=!1;i((l=0)=>{if(!q&&(Sn=l,n=!0,a)){zt=2,qe(()=>zs(Ct)),typeof Browser<"u"&&Browser.mh.vh&&Browser.mh.resume(),l=!1;try{var p=(0,j[we[J[Ct+8>>>2>>>0]]])()}catch(v){p=v,l=!0}var m=!1;if(!Ct){var b=zr;b&&(zr=null,(l?b.reject:b.resolve)(p),m=!0)}if(l&&!m)throw p}}),a=!0,n||(zt=1,Ct=Fa(),typeof Browser<"u"&&Browser.mh.vh&&Browser.mh.pause(),qe(()=>Rs(Ct)))}else zt===2?(zt=0,qe(Ms),Dr(Ct),Ct=null,La.forEach(l=>{if(!q)try{l();try{X=X=l=X,r.onExit?.(l),q=!0,y(l,new st(l))}catch(p){p instanceof st||p=="unwind"||y(1,p)}}catch(p){p instanceof st||p=="unwind"||y(1,p)}})):ge(`invalid state: ${zt}`);return Sn}}function En(i){return An(n=>{i().then(n)})}var kn={Ia:function(i,n,a){return En(async()=>{await r.Eh(i,n,a)})},t:function(i){return i=new Rt(i>>>0),i.xh()||(i.sh(!0),bt--),i.th(!1),nt.push(i),hi(i.hh),i.yh()},C:()=>{H(0,0);var i=nt.pop();mi(i.hh),Et=0},a:function(){return nr([])},l:function(i){return nr([i>>>0])},w:function(i,n){return nr([i>>>0,n>>>0])},p:function(i,n,a){return nr([i>>>0,n>>>0,a>>>0])},pa:()=>{var i=nt.pop();i||ge("no exception to throw");var n=i.hh;throw i.wh()||(nt.push(i),i.th(!0),i.sh(!1),bt++),Et=n,Et},r:function(i,n,a){throw i>>>=0,new Rt(i).zh(n>>>0,a>>>0),Et=i,bt++,Et},ca:()=>bt,f:function(i){throw Et||=i>>>0,Et},qa:function(){return 0},uc:function(){},Qa:function(){},Sa:function(){},Ka:function(){return 0},_b:function(){},_a:function(){},Pb:function(){},Ea:function(){},Ra:function(){},Oa:function(){},jc:function(){},Pa:function(){},Yc:()=>1,Uc:function(i,n,a){i=n+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*n:NaN,a>>>=0,i=new Date(1e3*i),J[a>>>2>>>0]=i.getUTCSeconds(),J[a+4>>>2>>>0]=i.getUTCMinutes(),J[a+8>>>2>>>0]=i.getUTCHours(),J[a+12>>>2>>>0]=i.getUTCDate(),J[a+16>>>2>>>0]=i.getUTCMonth(),J[a+20>>>2>>>0]=i.getUTCFullYear()-1900,J[a+24>>>2>>>0]=i.getUTCDay(),J[a+28>>>2>>>0]=(i.getTime()-Date.UTC(i.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Vc:function(i,n,a){i=n+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*n:NaN,a>>>=0,i=new Date(1e3*i),J[a>>>2>>>0]=i.getSeconds(),J[a+4>>>2>>>0]=i.getMinutes(),J[a+8>>>2>>>0]=i.getHours(),J[a+12>>>2>>>0]=i.getDate(),J[a+16>>>2>>>0]=i.getMonth(),J[a+20>>>2>>>0]=i.getFullYear()-1900,J[a+24>>>2>>>0]=i.getDay(),J[a+28>>>2>>>0]=(Bt(i.getFullYear())?ui:$n)[i.getMonth()]+i.getDate()-1|0,J[a+36>>>2>>>0]=-(60*i.getTimezoneOffset()),n=new Date(i.getFullYear(),6,1).getTimezoneOffset();var l=new Date(i.getFullYear(),0,1).getTimezoneOffset();J[a+32>>>2>>>0]=(n!=l&&i.getTimezoneOffset()==Math.min(l,n))|0},Wc:function(i){i>>>=0;var n=new Date(J[i+20>>>2>>>0]+1900,J[i+16>>>2>>>0],J[i+12>>>2>>>0],J[i+8>>>2>>>0],J[i+4>>>2>>>0],J[i>>>2>>>0],0),a=J[i+32>>>2>>>0],l=n.getTimezoneOffset(),p=new Date(n.getFullYear(),6,1).getTimezoneOffset(),m=new Date(n.getFullYear(),0,1).getTimezoneOffset(),b=Math.min(m,p);return 0>a?J[i+32>>>2>>>0]=+(p!=m&&b==l):0<a!=(b==l)&&(p=Math.max(m,p),n.setTime(n.getTime()+6e4*((0<a?b:p)-l))),J[i+24>>>2>>>0]=n.getDay(),J[i+28>>>2>>>0]=(Bt(n.getFullYear())?ui:$n)[n.getMonth()]+n.getDate()-1|0,J[i>>>2>>>0]=n.getSeconds(),J[i+4>>>2>>>0]=n.getMinutes(),J[i+8>>>2>>>0]=n.getHours(),J[i+12>>>2>>>0]=n.getDate(),J[i+16>>>2>>>0]=n.getMonth(),J[i+20>>>2>>>0]=n.getYear(),i=n.getTime(),isNaN(i)?(J[mr()>>>2>>>0]=61,i=-1):i/=1e3,er((dt=i,1<=+Math.abs(dt)?0<dt?+Math.floor(dt/4294967296)>>>0:~~+Math.ceil((dt-+(~~dt>>>0))/4294967296)>>>0:0)),i>>>0},Sc:function(){return-52},Tc:function(){},Ma:function(i,n,a){function l(_){return(_=_.toTimeString().match(/\(([A-Za-z ]+)\)$/))?_[1]:"GMT"}a>>>=0;var p=new Date().getFullYear(),m=new Date(p,0,1),b=new Date(p,6,1);p=m.getTimezoneOffset();var v=b.getTimezoneOffset();ne[i>>>0>>>2>>>0]=60*Math.max(p,v),J[n>>>0>>>2>>>0]=+(p!=v),i=l(m),n=l(b),i=li(i),n=li(n),v<p?(ne[a>>>2>>>0]=i,ne[a+4>>>2>>>0]=n):(ne[a>>>2>>>0]=n,ne[a+4>>>2>>>0]=i)},ha:()=>{ge("")},x:function(i,n,a){return i>>>=0,n=Or(n>>>0,a>>>0),ht[i].apply(null,n)},za:function(i,n,a){return i>>>=0,n=Or(n>>>0,a>>>0),ht[i].apply(null,n)},Ga:()=>Date.now(),Na:function(){return 4294901760},H:()=>performance.now(),Eb:function(i,n,a){return n>>>=0,ae.copyWithin(i>>>0>>>0,n>>>0,n+(a>>>0)>>>0)},La:function(i){i>>>=0;var n=ae.length;if(4294901760<i)return!1;for(var a=1;4>=a;a*=2){var l=n*(1+.2/a);l=Math.min(l,i+100663296);var p=Math;l=Math.max(i,l);e:{p=(p.min.call(p,4294901760,l+(65536-l%65536)%65536)-M.buffer.byteLength+65535)/65536;try{M.grow(p),Ke();var m=1;break e}catch{}m=void 0}if(m)return!0}return!1},jb:function(i,n){i>>>=0,n>>>=0;var a=0;return Pr().forEach((l,p)=>{var m=n+a;for(p=ne[i+4*p>>>2>>>0]=m,m=0;m<l.length;++m)te[p++>>>0>>>0]=l.charCodeAt(m);te[p>>>0>>>0]=0,a+=l.length+1}),0},ub:function(i,n){i>>>=0,n>>>=0;var a=Pr();ne[i>>>2>>>0]=a.length;var l=0;return a.forEach(p=>l+=p.length+1),ne[n>>>2>>>0]=l,0},ma:()=>52,Da:function(){return 52},Xc:function(){return 70},Ca:function(i,n,a,l){n>>>=0,a>>>=0,l>>>=0;for(var p=0,m=0;m<a;m++){var b=ne[n>>>2>>>0],v=ne[n+4>>>2>>>0];n+=8;for(var _=0;_<v;_++){var x=ae[b+_>>>0],I=Xt[i];x===0||x===10?((i===1?B:W)(si(I,0)),I.length=0):I.push(x)}p+=v}return ne[l>>>2>>>0]=p,0},ga:rf,Zc:Lf,la:Tf,L:wf,I:tf,_c:Hf,da:If,B:yf,z:Kp,b:Bp,Ba:Fp,$:Lp,g:Pp,ra:Wf,h:Op,E:Uf,i:Up,$c:Vf,j:jp,u:Dp,s:Jp,n:ef,W:nf,Q:Bf,J:Zp,na:hf,_:bf,ja:zf,xb:lh,fb:Sh,Cc:um,bb:Eh,db:Th,Ta:jh,Qb:Lm,Kc:em,hb:Ch,Va:Mh,Ob:Fm,eb:Ih,lc:xm,Rc:Ff,tc:gm,gb:xh,cb:Ah,Bb:nh,pc:wm,sc:ym,kc:Sm,Qc:qf,Ya:Rh,ab:kh,ob:yh,lb:wh,$a:Oh,nc:$m,Ib:Qm,kb:_h,Ua:Dh,Tb:Vm,Hc:im,Pc:Kf,Ac:dm,nb:bh,Za:Ph,qc:vm,d:Mp,X:cf,q:zp,Y:Nf,N:Sf,fa:of,e:Rp,Aa:af,F:jf,aa:ff,R:_f,wb:dh,ba:sf,c:Np,xa:lf,ad:Mf,ua:$f,k:Wp,wa:pf,m:Vp,ya:uf,va:mf,Ha:kf,o:Gp,ec:km,fc:Em,dc:Om,ka:Af,y:Yp,A:qp,D:Xp,Z:Df,ta:Cf,ea:df,P:vf,K:Hp,O:gf,oa:Qp,V:xf,ia:Gf,S:Pf,sa:Rf,T:Of,U:Ef,Wa:zh,oc:_m,Xb:jm,M:oh,sb:fh,hc:Tm,Sb:Gm,Db:rh,Ab:ah,Fa:Zf,Nb:qm,zb:sh,Fb:th,Rb:Hm,Hb:Xm,ic:Im,mb:vh,Kb:Ym,tb:ph,qb:hh,wc:mm,Fc:am,rb:mh,Lb:Jm,Lc:Xf,ib:$h,Bc:lm,Ic:rm,Nc:Yf,Dc:sm,pb:gh,Ec:om,yb:uh,Jb:Zm,Mc:Qf,Oc:Jf,yc:pm,Cb:ih,Yb:Dm,vb:ch,Gc:nm,Zb:Mm,Mb:Km,mc:Cm,Jc:tm,vc:hm,Gb:eh,Wb:Um,xc:fm,rc:bm,Xa:Bh,zc:cm,Ub:Wm,Vb:Nm,ac:Bm,bc:Rm,gc:Am,cc:Pm,$b:zm,v:function(i){return i>>>0},Ja:Cn,G:function(i,n,a,l){return Cn(i>>>0,n>>>0,a>>>0,l>>>0)}},j=function(){function i(a){return j=a.exports,j=xn(),j=Uh(),M=j.bd,Ke(),Ae.unshift(j.cd),Fe--,Fe==0&&(Me!==null&&(clearInterval(Me),Me=null),xe&&(a=xe,xe=null,a())),j}var n={a:kn};if(Fe++,r.instantiateWasm)try{return r.instantiateWasm(n,i)}catch(a){W(`Module.instantiateWasm callback failed with error: ${a}`),s(a)}return ut(n,function(a){i(a.instance)}).catch(s),{}}();r._OrtInit=(i,n)=>(r._OrtInit=j.dd)(i,n),r._OrtGetLastError=(i,n)=>(r._OrtGetLastError=j.ed)(i,n),r._OrtCreateSessionOptions=(i,n,a,l,p,m,b,v,_,x)=>(r._OrtCreateSessionOptions=j.fd)(i,n,a,l,p,m,b,v,_,x),r._OrtAppendExecutionProvider=(i,n)=>(r._OrtAppendExecutionProvider=j.gd)(i,n),r._OrtAddFreeDimensionOverride=(i,n,a)=>(r._OrtAddFreeDimensionOverride=j.hd)(i,n,a),r._OrtAddSessionConfigEntry=(i,n,a)=>(r._OrtAddSessionConfigEntry=j.id)(i,n,a),r._OrtReleaseSessionOptions=i=>(r._OrtReleaseSessionOptions=j.jd)(i),r._OrtCreateSession=(i,n,a)=>(r._OrtCreateSession=j.kd)(i,n,a),r._OrtReleaseSession=i=>(r._OrtReleaseSession=j.ld)(i),r._OrtGetInputOutputCount=(i,n,a)=>(r._OrtGetInputOutputCount=j.md)(i,n,a),r._OrtGetInputName=(i,n)=>(r._OrtGetInputName=j.nd)(i,n),r._OrtGetOutputName=(i,n)=>(r._OrtGetOutputName=j.od)(i,n),r._OrtFree=i=>(r._OrtFree=j.pd)(i),r._OrtCreateTensor=(i,n,a,l,p,m)=>(r._OrtCreateTensor=j.qd)(i,n,a,l,p,m),r._OrtGetTensorData=(i,n,a,l,p)=>(r._OrtGetTensorData=j.rd)(i,n,a,l,p),r._OrtReleaseTensor=i=>(r._OrtReleaseTensor=j.sd)(i),r._OrtCreateRunOptions=(i,n,a,l)=>(r._OrtCreateRunOptions=j.td)(i,n,a,l),r._OrtAddRunConfigEntry=(i,n,a)=>(r._OrtAddRunConfigEntry=j.ud)(i,n,a),r._OrtReleaseRunOptions=i=>(r._OrtReleaseRunOptions=j.vd)(i),r._OrtCreateBinding=i=>(r._OrtCreateBinding=j.wd)(i),r._OrtBindInput=(i,n,a)=>(r._OrtBindInput=j.xd)(i,n,a),r._OrtBindOutput=(i,n,a,l)=>(r._OrtBindOutput=j.yd)(i,n,a,l),r._OrtClearBoundOutputs=i=>(r._OrtClearBoundOutputs=j.zd)(i),r._OrtReleaseBinding=i=>(r._OrtReleaseBinding=j.Ad)(i),r._OrtRunWithBinding=(i,n,a,l,p)=>(r._OrtRunWithBinding=j.Bd)(i,n,a,l,p),r._OrtRun=(i,n,a,l,p,m,b,v)=>(r._OrtRun=j.Cd)(i,n,a,l,p,m,b,v),r._OrtEndProfiling=i=>(r._OrtEndProfiling=j.Dd)(i),r._JsepOutput=(i,n,a)=>(r._JsepOutput=j.Ed)(i,n,a),r._JsepGetNodeName=i=>(r._JsepGetNodeName=j.Fd)(i);var mr=()=>(mr=j.Gd)(),Mr=r._malloc=i=>(Mr=r._malloc=j.Hd)(i),Dr=r._free=i=>(Dr=r._free=j.Id)(i),H=(i,n)=>(H=j.Kd)(i,n),er=i=>(er=j.Ld)(i),L=()=>(L=j.Md)(),F=i=>(F=j.Nd)(i),fi=i=>(fi=j.Od)(i),mi=i=>(mi=j.Pd)(i),hi=i=>(hi=j.Qd)(i),gi=(i,n,a)=>(gi=j.Rd)(i,n,a),yi=i=>(yi=j.Sd)(i),bi=r.dynCall_vii=(i,n,a)=>(bi=r.dynCall_vii=j.Td)(i,n,a),vi=r.dynCall_iiii=(i,n,a,l)=>(vi=r.dynCall_iiii=j.Ud)(i,n,a,l),wi=r.dynCall_iii=(i,n,a)=>(wi=r.dynCall_iii=j.Vd)(i,n,a),_i=r.dynCall_ii=(i,n)=>(_i=r.dynCall_ii=j.Wd)(i,n),xt=r.dynCall_iiiiiii=(i,n,a,l,p,m,b)=>(xt=r.dynCall_iiiiiii=j.Xd)(i,n,a,l,p,m,b),jr=r.dynCall_vi=(i,n)=>(jr=r.dynCall_vi=j.Yd)(i,n),Ur=r.dynCall_v=i=>(Ur=r.dynCall_v=j.Zd)(i),On=r.dynCall_iiiiii=(i,n,a,l,p,m)=>(On=r.dynCall_iiiiii=j._d)(i,n,a,l,p,m),Nt=r.dynCall_iiij=(i,n,a,l,p)=>(Nt=r.dynCall_iiij=j.$d)(i,n,a,l,p),Pn=r.dynCall_iiiii=(i,n,a,l,p)=>(Pn=r.dynCall_iiiii=j.ae)(i,n,a,l,p),Mt=r.dynCall_viii=(i,n,a,l)=>(Mt=r.dynCall_viii=j.be)(i,n,a,l),$i=r.dynCall_viiiii=(i,n,a,l,p,m)=>($i=r.dynCall_viiiii=j.ce)(i,n,a,l,p,m),Ci=r.dynCall_viiii=(i,n,a,l,p)=>(Ci=r.dynCall_viiii=j.de)(i,n,a,l,p),vt=r.dynCall_viiiiii=(i,n,a,l,p,m,b)=>(vt=r.dynCall_viiiiii=j.ee)(i,n,a,l,p,m,b),Nr=r.dynCall_viiji=(i,n,a,l,p,m)=>(Nr=r.dynCall_viiji=j.fe)(i,n,a,l,p,m),ct=r.dynCall_viiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P)=>(ct=r.dynCall_viiiiiiiiiii=j.ge)(i,n,a,l,p,m,b,v,_,x,I,P),St=r.dynCall_viiijjjii=(i,n,a,l,p,m,b,v,_,x,I,P)=>(St=r.dynCall_viiijjjii=j.he)(i,n,a,l,p,m,b,v,_,x,I,P),xi=r.dynCall_iij=(i,n,a,l)=>(xi=r.dynCall_iij=j.ie)(i,n,a,l),Rn=r.dynCall_iif=(i,n,a)=>(Rn=r.dynCall_iif=j.je)(i,n,a),Bn=r.dynCall_iid=(i,n,a)=>(Bn=r.dynCall_iid=j.ke)(i,n,a),Si=r.dynCall_jii=(i,n,a)=>(Si=r.dynCall_jii=j.le)(i,n,a),zn=r.dynCall_i=i=>(zn=r.dynCall_i=j.me)(i),Mn=r.dynCall_viiiiiiii=(i,n,a,l,p,m,b,v,_)=>(Mn=r.dynCall_viiiiiiii=j.ne)(i,n,a,l,p,m,b,v,_),Dn=r.dynCall_viiiiij=(i,n,a,l,p,m,b,v)=>(Dn=r.dynCall_viiiiij=j.oe)(i,n,a,l,p,m,b,v),jn=r.dynCall_ji=(i,n)=>(jn=r.dynCall_ji=j.pe)(i,n),Un=r.dynCall_viij=(i,n,a,l,p)=>(Un=r.dynCall_viij=j.qe)(i,n,a,l,p),Nn=r.dynCall_iiiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P)=>(Nn=r.dynCall_iiiiiiiiiiii=j.re)(i,n,a,l,p,m,b,v,_,x,I,P),Ii=r.dynCall_viiiiiiiii=(i,n,a,l,p,m,b,v,_,x)=>(Ii=r.dynCall_viiiiiiiii=j.se)(i,n,a,l,p,m,b,v,_,x),Wr=r.dynCall_ij=(i,n,a)=>(Wr=r.dynCall_ij=j.te)(i,n,a),hr=r.dynCall_iiiiij=(i,n,a,l,p,m,b)=>(hr=r.dynCall_iiiiij=j.ue)(i,n,a,l,p,m,b),Vr=r.dynCall_j=i=>(Vr=r.dynCall_j=j.ve)(i),Gr=r.dynCall_vij=(i,n,a,l)=>(Gr=r.dynCall_vij=j.we)(i,n,a,l),Ti=r.dynCall_viijjjiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)=>(Ti=r.dynCall_viijjjiiiiii=j.xe)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U),gr=r.dynCall_viiijiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R)=>(gr=r.dynCall_viiijiiiiiii=j.ye)(i,n,a,l,p,m,b,v,_,x,I,P,R),Wn=r.dynCall_iiiiiiii=(i,n,a,l,p,m,b,v)=>(Wn=r.dynCall_iiiiiiii=j.ze)(i,n,a,l,p,m,b,v),Wt=r.dynCall_viiiiiii=(i,n,a,l,p,m,b,v)=>(Wt=r.dynCall_viiiiiii=j.Ae)(i,n,a,l,p,m,b,v),kt=r.dynCall_iiiiiiiij=(i,n,a,l,p,m,b,v,_,x)=>(kt=r.dynCall_iiiiiiiij=j.Be)(i,n,a,l,p,m,b,v,_,x),Ai=r.dynCall_viiiiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T)=>(Ai=r.dynCall_viiiiiiiiiiiii=j.Ce)(i,n,a,l,p,m,b,v,_,x,I,P,R,T),yr=r.dynCall_iiiiiiiii=(i,n,a,l,p,m,b,v,_)=>(yr=r.dynCall_iiiiiiiii=j.De)(i,n,a,l,p,m,b,v,_),Ei=r.dynCall_iiiiijiiiii=(i,n,a,l,p,m,b,v,_,x,I,P)=>(Ei=r.dynCall_iiiiijiiiii=j.Ee)(i,n,a,l,p,m,b,v,_,x,I,P),ki=r.dynCall_vijjjiiij=(i,n,a,l,p,m,b,v,_,x,I,P,R)=>(ki=r.dynCall_vijjjiiij=j.Fe)(i,n,a,l,p,m,b,v,_,x,I,P,R),Vn=r.dynCall_fi=(i,n)=>(Vn=r.dynCall_fi=j.Ge)(i,n),Hr=r.dynCall_fii=(i,n,a)=>(Hr=r.dynCall_fii=j.He)(i,n,a),Gn=r.dynCall_di=(i,n)=>(Gn=r.dynCall_di=j.Ie)(i,n),Hn=r.dynCall_dii=(i,n,a)=>(Hn=r.dynCall_dii=j.Je)(i,n,a),Ln=r.dynCall_vijj=(i,n,a,l,p,m)=>(Ln=r.dynCall_vijj=j.Ke)(i,n,a,l,p,m),Fn=r.dynCall_iiiiiiiiii=(i,n,a,l,p,m,b,v,_,x)=>(Fn=r.dynCall_iiiiiiiiii=j.Le)(i,n,a,l,p,m,b,v,_,x),qn=r.dynCall_viijiii=(i,n,a,l,p,m,b,v)=>(qn=r.dynCall_viijiii=j.Me)(i,n,a,l,p,m,b,v),Oi=r.dynCall_viid=(i,n,a,l)=>(Oi=r.dynCall_viid=j.Ne)(i,n,a,l),br=r.dynCall_viffiii=(i,n,a,l,p,m,b)=>(br=r.dynCall_viffiii=j.Oe)(i,n,a,l,p,m,b),Kn=r.dynCall_viifiii=(i,n,a,l,p,m,b)=>(Kn=r.dynCall_viifiii=j.Pe)(i,n,a,l,p,m,b),Lr=r.dynCall_viiiiidiidi=(i,n,a,l,p,m,b,v,_,x,I)=>(Lr=r.dynCall_viiiiidiidi=j.Qe)(i,n,a,l,p,m,b,v,_,x,I),Pi=r.dynCall_viiiiiiiiidi=(i,n,a,l,p,m,b,v,_,x,I,P)=>(Pi=r.dynCall_viiiiiiiiidi=j.Re)(i,n,a,l,p,m,b,v,_,x,I,P),Jn=r.dynCall_jiii=(i,n,a,l)=>(Jn=r.dynCall_jiii=j.Se)(i,n,a,l),Yn=r.dynCall_vjiiiiii=(i,n,a,l,p,m,b,v,_)=>(Yn=r.dynCall_vjiiiiii=j.Te)(i,n,a,l,p,m,b,v,_),Ri=r.dynCall_viiid=(i,n,a,l,p)=>(Ri=r.dynCall_viiid=j.Ue)(i,n,a,l,p),Zn=r.dynCall_viiiiiiiiiji=(i,n,a,l,p,m,b,v,_,x,I,P,R)=>(Zn=r.dynCall_viiiiiiiiiji=j.Ve)(i,n,a,l,p,m,b,v,_,x,I,P,R),tr=r.dynCall_viji=(i,n,a,l,p)=>(tr=r.dynCall_viji=j.We)(i,n,a,l,p),Bi=r.dynCall_vijjjjjjjjjjjjji=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot,pt,wt)=>(Bi=r.dynCall_vijjjjjjjjjjjjji=j.Xe)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot,pt,wt),zi=r.dynCall_viiiji=(i,n,a,l,p,m,b)=>(zi=r.dynCall_viiiji=j.Ye)(i,n,a,l,p,m,b),Mi=r.dynCall_vijjjiiji=(i,n,a,l,p,m,b,v,_,x,I,P,R)=>(Mi=r.dynCall_vijjjiiji=j.Ze)(i,n,a,l,p,m,b,v,_,x,I,P,R),Di=r.dynCall_iiiji=(i,n,a,l,p,m)=>(Di=r.dynCall_iiiji=j._e)(i,n,a,l,p,m),ji=r.dynCall_iiijiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)=>(ji=r.dynCall_iiijiiiiiiiiii=j.$e)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U),Fr=r.dynCall_vj=(i,n,a)=>(Fr=r.dynCall_vj=j.af)(i,n,a),Ui=r.dynCall_jjj=(i,n,a,l,p)=>(Ui=r.dynCall_jjj=j.bf)(i,n,a,l,p),qr=r.dynCall_iiijiiiiii=(i,n,a,l,p,m,b,v,_,x,I)=>(qr=r.dynCall_iiijiiiiii=j.cf)(i,n,a,l,p,m,b,v,_,x,I),Ni=r.dynCall_vfiii=(i,n,a,l,p)=>(Ni=r.dynCall_vfiii=j.df)(i,n,a,l,p),Kr=r.dynCall_viiiiff=(i,n,a,l,p,m,b)=>(Kr=r.dynCall_viiiiff=j.ef)(i,n,a,l,p,m,b),Wi=r.dynCall_viiiiiff=(i,n,a,l,p,m,b,v)=>(Wi=r.dynCall_viiiiiff=j.ff)(i,n,a,l,p,m,b,v),Vi=r.dynCall_viiff=(i,n,a,l,p)=>(Vi=r.dynCall_viiff=j.gf)(i,n,a,l,p),Gi=r.dynCall_viiiiiiiiifiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T)=>(Gi=r.dynCall_viiiiiiiiifiii=j.hf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T),Hi=r.dynCall_viiiiiiiijj=(i,n,a,l,p,m,b,v,_,x,I,P,R)=>(Hi=r.dynCall_viiiiiiiijj=j.jf)(i,n,a,l,p,m,b,v,_,x,I,P,R),Li=r.dynCall_iiiiiiiiiiiiiifii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee)=>(Li=r.dynCall_iiiiiiiiiiiiiifii=j.kf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee),Qn=r.dynCall_viiiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R)=>(Qn=r.dynCall_viiiiiiiiiiii=j.lf)(i,n,a,l,p,m,b,v,_,x,I,P,R),Fi=r.dynCall_iiiiiiiiiiiiiiiiifii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye)=>(Fi=r.dynCall_iiiiiiiiiiiiiiiiifii=j.mf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye),qi=r.dynCall_vijjiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P)=>(qi=r.dynCall_vijjiiiiii=j.nf)(i,n,a,l,p,m,b,v,_,x,I,P),Ki=r.dynCall_iiiijjj=(i,n,a,l,p,m,b,v,_,x)=>(Ki=r.dynCall_iiiijjj=j.of)(i,n,a,l,p,m,b,v,_,x),Xn=r.dynCall_viiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I)=>(Xn=r.dynCall_viiiiiiiiii=j.pf)(i,n,a,l,p,m,b,v,_,x,I),ea=r.dynCall_iiijjj=(i,n,a,l,p,m,b,v,_)=>(ea=r.dynCall_iiijjj=j.qf)(i,n,a,l,p,m,b,v,_),Ji=r.dynCall_fffffff=(i,n,a,l,p,m,b)=>(Ji=r.dynCall_fffffff=j.rf)(i,n,a,l,p,m,b),Yi=r.dynCall_viiiij=(i,n,a,l,p,m,b)=>(Yi=r.dynCall_viiiij=j.sf)(i,n,a,l,p,m,b),vr=r.dynCall_viiiiiijiifiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)=>(vr=r.dynCall_viiiiiijiifiii=j.tf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U),ta=r.dynCall_vjjjjjjffjifiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe)=>(ta=r.dynCall_vjjjjjjffjifiiiiii=j.uf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe),ra=r.dynCall_viiiiiiffjifiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe)=>(ra=r.dynCall_viiiiiiffjifiiiii=j.vf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe),me=r.dynCall_viiiiiiffjfiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee)=>(me=r.dynCall_viiiiiiffjfiiiii=j.wf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee),Zi=r.dynCall_viiiiiiffjiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)=>(Zi=r.dynCall_viiiiiiffjiiiii=j.xf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G),wr=r.dynCall_vjjjjjjjjfffiiifiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot,pt,wt)=>(wr=r.dynCall_vjjjjjjjjfffiiifiiiii=j.yf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot,pt,wt),sr=r.dynCall_vjjjjjjfffifijiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe)=>(sr=r.dynCall_vjjjjjjfffifijiiiii=j.zf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe),Ot=r.dynCall_vjjjjjjfffifiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je)=>(Ot=r.dynCall_vjjjjjjfffifiiiiii=j.Af)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je),Qi=r.dynCall_vjjjjjjjjfffjifiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot,pt,wt,Cr)=>(Qi=r.dynCall_vjjjjjjjjfffjifiiiiii=j.Bf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot,pt,wt,Cr),Xi=r.dynCall_vijjfffiii=(i,n,a,l,p,m,b,v,_,x,I,P)=>(Xi=r.dynCall_vijjfffiii=j.Cf)(i,n,a,l,p,m,b,v,_,x,I,P),en=r.dynCall_vijiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T)=>(en=r.dynCall_vijiiiiiiiiii=j.Df)(i,n,a,l,p,m,b,v,_,x,I,P,R,T),Jr=r.dynCall_viiiiiiijiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T)=>(Jr=r.dynCall_viiiiiiijiiii=j.Ef)(i,n,a,l,p,m,b,v,_,x,I,P,R,T),Yr=r.dynCall_vijjjjjjifiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se)=>(Yr=r.dynCall_vijjjjjjifiiiii=j.Ff)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se),tn=r.dynCall_viifi=(i,n,a,l,p)=>(tn=r.dynCall_viifi=j.Gf)(i,n,a,l,p),rn=r.dynCall_vjjjjjiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)=>(rn=r.dynCall_vjjjjjiiii=j.Hf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U),Zr=r.dynCall_vjjjjfiii=(i,n,a,l,p,m,b,v,_,x,I,P,R)=>(Zr=r.dynCall_vjjjjfiii=j.If)(i,n,a,l,p,m,b,v,_,x,I,P,R),_r=r.dynCall_viiiiiijiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)=>(_r=r.dynCall_viiiiiijiiiiii=j.Jf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U),Qr=r.dynCall_vijjii=(i,n,a,l,p,m,b,v)=>(Qr=r.dynCall_vijjii=j.Kf)(i,n,a,l,p,m,b,v),nn=r.dynCall_viiiiijjiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)=>(nn=r.dynCall_viiiiijjiiiii=j.Lf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U),an=r.dynCall_iiiiiji=(i,n,a,l,p,m,b,v)=>(an=r.dynCall_iiiiiji=j.Mf)(i,n,a,l,p,m,b,v),on=r.dynCall_iiiiji=(i,n,a,l,p,m,b)=>(on=r.dynCall_iiiiji=j.Nf)(i,n,a,l,p,m,b),sn=r.dynCall_viiiiijiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T)=>(sn=r.dynCall_viiiiijiiiiii=j.Of)(i,n,a,l,p,m,b,v,_,x,I,P,R,T),un=r.dynCall_viiijiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P)=>(un=r.dynCall_viiijiiiiii=j.Pf)(i,n,a,l,p,m,b,v,_,x,I,P),ia=r.dynCall_viijj=(i,n,a,l,p,m,b)=>(ia=r.dynCall_viijj=j.Qf)(i,n,a,l,p,m,b),$r=r.dynCall_viiiijii=(i,n,a,l,p,m,b,v,_)=>($r=r.dynCall_viiiijii=j.Rf)(i,n,a,l,p,m,b,v,_),ln=r.dynCall_viijjiii=(i,n,a,l,p,m,b,v,_,x)=>(ln=r.dynCall_viijjiii=j.Sf)(i,n,a,l,p,m,b,v,_,x),u=r.dynCall_ijii=(i,n,a,l,p)=>(u=r.dynCall_ijii=j.Tf)(i,n,a,l,p),g=r.dynCall_viiiiijjji=(i,n,a,l,p,m,b,v,_,x,I,P,R)=>(g=r.dynCall_viiiiijjji=j.Uf)(i,n,a,l,p,m,b,v,_,x,I,P,R),$=r.dynCall_vijjjjiij=(i,n,a,l,p,m,b,v,_,x,I,P,R,T)=>($=r.dynCall_vijjjjiij=j.Vf)(i,n,a,l,p,m,b,v,_,x,I,P,R,T),A=r.dynCall_viiiiijij=(i,n,a,l,p,m,b,v,_,x,I)=>(A=r.dynCall_viiiiijij=j.Wf)(i,n,a,l,p,m,b,v,_,x,I),z=r.dynCall_viiiiiijij=(i,n,a,l,p,m,b,v,_,x,I,P)=>(z=r.dynCall_viiiiiijij=j.Xf)(i,n,a,l,p,m,b,v,_,x,I,P),V=r.dynCall_vijiii=(i,n,a,l,p,m,b)=>(V=r.dynCall_vijiii=j.Yf)(i,n,a,l,p,m,b),Y=r.dynCall_viiifii=(i,n,a,l,p,m,b)=>(Y=r.dynCall_viiifii=j.Zf)(i,n,a,l,p,m,b),re=r.dynCall_viiiiiiiiifi=(i,n,a,l,p,m,b,v,_,x,I,P)=>(re=r.dynCall_viiiiiiiiifi=j._f)(i,n,a,l,p,m,b,v,_,x,I,P),ce=r.dynCall_iiijiiii=(i,n,a,l,p,m,b,v,_)=>(ce=r.dynCall_iiijiiii=j.$f)(i,n,a,l,p,m,b,v,_),le=r.dynCall_viiiiiijjiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)=>(le=r.dynCall_viiiiiijjiiiii=j.ag)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G),_e=r.dynCall_viiiiiiijiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)=>(_e=r.dynCall_viiiiiiijiiiiii=j.bg)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G),ke=r.dynCall_vif=(i,n,a)=>(ke=r.dynCall_vif=j.cg)(i,n,a),We=r.dynCall_viif=(i,n,a,l)=>(We=r.dynCall_viif=j.dg)(i,n,a,l),K=r.dynCall_fiii=(i,n,a,l)=>(K=r.dynCall_fiii=j.eg)(i,n,a,l),$e=r.dynCall_diii=(i,n,a,l)=>($e=r.dynCall_diii=j.fg)(i,n,a,l),je=r.dynCall_viiiiiifii=(i,n,a,l,p,m,b,v,_,x)=>(je=r.dynCall_viiiiiifii=j.gg)(i,n,a,l,p,m,b,v,_,x),Ft=r.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot)=>(Ft=r.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=j.hg)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot),dn=r.dynCall_viijji=(i,n,a,l,p,m,b,v)=>(dn=r.dynCall_viijji=j.ig)(i,n,a,l,p,m,b,v),Go=r.dynCall_iiiiiiiiiiiji=(i,n,a,l,p,m,b,v,_,x,I,P,R,T)=>(Go=r.dynCall_iiiiiiiiiiiji=j.jg)(i,n,a,l,p,m,b,v,_,x,I,P,R,T),Ho=r.dynCall_viifiifijjjii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)=>(Ho=r.dynCall_viifiifijjjii=j.kg)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G),Lo=r.dynCall_viiiiiiiiiiiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se)=>(Lo=r.dynCall_viiiiiiiiiiiiiiiiiiii=j.lg)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se),Fo=r.dynCall_viiiiifiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R)=>(Fo=r.dynCall_viiiiifiiiiii=j.mg)(i,n,a,l,p,m,b,v,_,x,I,P,R),qo=r.dynCall_vijiiiiiiijjii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee)=>(qo=r.dynCall_vijiiiiiiijjii=j.ng)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee),Ko=r.dynCall_viiiiiiiiiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe)=>(Ko=r.dynCall_viiiiiiiiiiiiiiiiii=j.og)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe),Jo=r.dynCall_viiiiiiiiiiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye)=>(Jo=r.dynCall_viiiiiiiiiiiiiiiiiii=j.pg)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye),Yo=r.dynCall_viiiiiiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)=>(Yo=r.dynCall_viiiiiiiiiiiiiii=j.qg)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G),Zo=r.dynCall_viiiiiiiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee)=>(Zo=r.dynCall_viiiiiiiiiiiiiiii=j.rg)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee),Qo=r.dynCall_viiiijjj=(i,n,a,l,p,m,b,v,_,x,I)=>(Qo=r.dynCall_viiiijjj=j.sg)(i,n,a,l,p,m,b,v,_,x,I),Xo=r.dynCall_iiiiid=(i,n,a,l,p,m)=>(Xo=r.dynCall_iiiiid=j.tg)(i,n,a,l,p,m),es=r.dynCall_viiiiiiijjj=(i,n,a,l,p,m,b,v,_,x,I,P,R,T)=>(es=r.dynCall_viiiiiiijjj=j.ug)(i,n,a,l,p,m,b,v,_,x,I,P,R,T),ts=r.dynCall_iiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I)=>(ts=r.dynCall_iiiiiiiiiii=j.vg)(i,n,a,l,p,m,b,v,_,x,I),rs=r.dynCall_iiiiiiiiiiiiiiiiiifi=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye)=>(rs=r.dynCall_iiiiiiiiiiiiiiiiiifi=j.wg)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye),is=r.dynCall_viiif=(i,n,a,l,p)=>(is=r.dynCall_viiif=j.xg)(i,n,a,l,p),ns=r.dynCall_viiijiiiii=(i,n,a,l,p,m,b,v,_,x,I)=>(ns=r.dynCall_viiijiiiii=j.yg)(i,n,a,l,p,m,b,v,_,x,I),as=r.dynCall_viiij=(i,n,a,l,p,m)=>(as=r.dynCall_viiij=j.zg)(i,n,a,l,p,m),os=r.dynCall_iijjj=(i,n,a,l,p,m,b,v)=>(os=r.dynCall_iijjj=j.Ag)(i,n,a,l,p,m,b,v),ss=r.dynCall_viiiiji=(i,n,a,l,p,m,b,v)=>(ss=r.dynCall_viiiiji=j.Bg)(i,n,a,l,p,m,b,v),us=r.dynCall_iijjji=(i,n,a,l,p,m,b,v,_)=>(us=r.dynCall_iijjji=j.Cg)(i,n,a,l,p,m,b,v,_),ls=r.dynCall_ijijji=(i,n,a,l,p,m,b,v,_)=>(ls=r.dynCall_ijijji=j.Dg)(i,n,a,l,p,m,b,v,_),ds=r.dynCall_viiijjiii=(i,n,a,l,p,m,b,v,_,x,I)=>(ds=r.dynCall_viiijjiii=j.Eg)(i,n,a,l,p,m,b,v,_,x,I),cs=r.dynCall_iiiiijji=(i,n,a,l,p,m,b,v,_,x)=>(cs=r.dynCall_iiiiijji=j.Fg)(i,n,a,l,p,m,b,v,_,x),ps=r.dynCall_iiiifi=(i,n,a,l,p,m)=>(ps=r.dynCall_iiiifi=j.Gg)(i,n,a,l,p,m),fs=r.dynCall_iiijii=(i,n,a,l,p,m,b)=>(fs=r.dynCall_iiijii=j.Hg)(i,n,a,l,p,m,b),ms=r.dynCall_iiiiiiiiijii=(i,n,a,l,p,m,b,v,_,x,I,P,R)=>(ms=r.dynCall_iiiiiiiiijii=j.Ig)(i,n,a,l,p,m,b,v,_,x,I,P,R),hs=r.dynCall_iiiijjii=(i,n,a,l,p,m,b,v,_,x)=>(hs=r.dynCall_iiiijjii=j.Jg)(i,n,a,l,p,m,b,v,_,x),gs=r.dynCall_iiiiiijjjii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T)=>(gs=r.dynCall_iiiiiijjjii=j.Kg)(i,n,a,l,p,m,b,v,_,x,I,P,R,T),ys=r.dynCall_iiijiii=(i,n,a,l,p,m,b,v)=>(ys=r.dynCall_iiijiii=j.Lg)(i,n,a,l,p,m,b,v),bs=r.dynCall_iiiiiiiijjjfi=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)=>(bs=r.dynCall_iiiiiiiijjjfi=j.Mg)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G),vs=r.dynCall_iijiiii=(i,n,a,l,p,m,b,v)=>(vs=r.dynCall_iijiiii=j.Ng)(i,n,a,l,p,m,b,v),ws=r.dynCall_iijjjii=(i,n,a,l,p,m,b,v,_,x)=>(ws=r.dynCall_iijjjii=j.Og)(i,n,a,l,p,m,b,v,_,x),_s=r.dynCall_jij=(i,n,a,l)=>(_s=r.dynCall_jij=j.Pg)(i,n,a,l),$s=r.dynCall_iiji=(i,n,a,l,p)=>($s=r.dynCall_iiji=j.Qg)(i,n,a,l,p),Cs=r.dynCall_iiif=(i,n,a,l)=>(Cs=r.dynCall_iiif=j.Rg)(i,n,a,l),xs=r.dynCall_vidi=(i,n,a,l)=>(xs=r.dynCall_vidi=j.Sg)(i,n,a,l),Ss=r.dynCall_vjiii=(i,n,a,l,p,m)=>(Ss=r.dynCall_vjiii=j.Tg)(i,n,a,l,p,m),Is=r.dynCall_iiiij=(i,n,a,l,p,m)=>(Is=r.dynCall_iiiij=j.Ug)(i,n,a,l,p,m),Ts=r.dynCall_viiijii=(i,n,a,l,p,m,b,v)=>(Ts=r.dynCall_viiijii=j.Vg)(i,n,a,l,p,m,b,v),As=r.dynCall_viijiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T)=>(As=r.dynCall_viijiiiiiiiii=j.Wg)(i,n,a,l,p,m,b,v,_,x,I,P,R,T),Es=r.dynCall_fiiii=(i,n,a,l,p)=>(Es=r.dynCall_fiiii=j.Xg)(i,n,a,l,p),ks=r.dynCall_jfi=(i,n,a)=>(ks=r.dynCall_jfi=j.Yg)(i,n,a),Os=r.dynCall_viiiiiiiiiiiiii=(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)=>(Os=r.dynCall_viiiiiiiiiiiiii=j.Zg)(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U),Ps=r.dynCall_jiij=(i,n,a,l,p)=>(Ps=r.dynCall_jiij=j._g)(i,n,a,l,p),Rs=i=>(Rs=j.$g)(i),Bs=()=>(Bs=j.ah)(),zs=i=>(zs=j.bh)(i),Ms=()=>(Ms=j.ch)();r.___start_em_js=1380903,r.___stop_em_js=1381064;function Op(i,n,a,l){var p=L();try{return vi(i,n,a,l)}catch(m){if(F(p),m!==m+0)throw m;H(1,0)}}function Pp(i,n,a){var l=L();try{return wi(i,n,a)}catch(p){if(F(l),p!==p+0)throw p;H(1,0)}}function Rp(i,n,a){var l=L();try{bi(i,n,a)}catch(p){if(F(l),p!==p+0)throw p;H(1,0)}}function Bp(i,n){var a=L();try{return _i(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function zp(i,n){var a=L();try{jr(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function Mp(i){var n=L();try{Ur(i)}catch(a){if(F(n),a!==a+0)throw a;H(1,0)}}function Dp(i,n,a,l,p,m,b){var v=L();try{return xt(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function jp(i,n,a,l,p,m){var b=L();try{return On(i,n,a,l,p,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function Up(i,n,a,l,p){var m=L();try{return Pn(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function Np(i,n,a,l){var p=L();try{Mt(i,n,a,l)}catch(m){if(F(p),m!==m+0)throw m;H(1,0)}}function Wp(i,n,a,l,p){var m=L();try{Ci(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function Vp(i,n,a,l,p,m){var b=L();try{$i(i,n,a,l,p,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function Gp(i,n,a,l,p,m,b){var v=L();try{vt(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Hp(i,n,a,l,p,m,b,v,_,x,I,P){var R=L();try{ct(i,n,a,l,p,m,b,v,_,x,I,P)}catch(T){if(F(R),T!==T+0)throw T;H(1,0)}}function Lp(i,n,a){var l=L();try{return Rn(i,n,a)}catch(p){if(F(l),p!==p+0)throw p;H(1,0)}}function Fp(i,n,a){var l=L();try{return Bn(i,n,a)}catch(p){if(F(l),p!==p+0)throw p;H(1,0)}}function qp(i,n,a,l,p,m,b,v,_){var x=L();try{Mn(i,n,a,l,p,m,b,v,_)}catch(I){if(F(x),I!==I+0)throw I;H(1,0)}}function Kp(i){var n=L();try{return zn(i)}catch(a){if(F(n),a!==a+0)throw a;H(1,0)}}function Jp(i,n,a,l,p,m,b,v){var _=L();try{return Wn(i,n,a,l,p,m,b,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function Yp(i,n,a,l,p,m,b,v){var _=L();try{Wt(i,n,a,l,p,m,b,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function Zp(i,n,a,l,p,m,b,v,_,x,I,P){var R=L();try{return Nn(i,n,a,l,p,m,b,v,_,x,I,P)}catch(T){if(F(R),T!==T+0)throw T;H(1,0)}}function Qp(i,n,a,l,p,m,b,v,_,x,I,P,R,T){var U=L();try{Ai(i,n,a,l,p,m,b,v,_,x,I,P,R,T)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function Xp(i,n,a,l,p,m,b,v,_,x){var I=L();try{Ii(i,n,a,l,p,m,b,v,_,x)}catch(P){if(F(I),P!==P+0)throw P;H(1,0)}}function ef(i,n,a,l,p,m,b,v,_){var x=L();try{return yr(i,n,a,l,p,m,b,v,_)}catch(I){if(F(x),I!==I+0)throw I;H(1,0)}}function tf(i,n){var a=L();try{return Vn(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function rf(i,n){var a=L();try{return Gn(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function nf(i,n,a,l,p,m,b,v,_,x){var I=L();try{return Fn(i,n,a,l,p,m,b,v,_,x)}catch(P){if(F(I),P!==P+0)throw P;H(1,0)}}function af(i,n,a,l){var p=L();try{Oi(i,n,a,l)}catch(m){if(F(p),m!==m+0)throw m;H(1,0)}}function of(i,n,a,l,p,m,b){var v=L();try{br(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function sf(i,n,a,l,p,m,b){var v=L();try{Kn(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function uf(i,n,a,l,p,m,b,v,_,x,I){var P=L();try{Lr(i,n,a,l,p,m,b,v,_,x,I)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function lf(i,n,a,l,p){var m=L();try{Ri(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function df(i,n,a,l,p,m,b,v,_,x,I,P,R,T){var U=L();try{Gi(i,n,a,l,p,m,b,v,_,x,I,P,R,T)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function cf(i,n,a,l,p){var m=L();try{Ni(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function pf(i,n,a,l,p,m,b){var v=L();try{Kr(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function ff(i,n,a,l,p){var m=L();try{Vi(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function mf(i,n,a,l,p,m,b,v){var _=L();try{Wi(i,n,a,l,p,m,b,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function hf(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee){var oe=L();try{return Li(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee)}catch(pe){if(F(oe),pe!==pe+0)throw pe;H(1,0)}}function gf(i,n,a,l,p,m,b,v,_,x,I,P,R){var T=L();try{Qn(i,n,a,l,p,m,b,v,_,x,I,P,R)}catch(U){if(F(T),U!==U+0)throw U;H(1,0)}}function yf(i,n,a,l,p){var m=L();try{return Es(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function bf(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye){var Se=L();try{return Fi(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye)}catch(Te){if(F(Se),Te!==Te+0)throw Te;H(1,0)}}function vf(i,n,a,l,p,m,b,v,_,x,I){var P=L();try{Xn(i,n,a,l,p,m,b,v,_,x,I)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function wf(i,n,a,l,p,m,b){var v=L();try{return Ji(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function _f(i,n,a,l,p){var m=L();try{tn(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function $f(i,n,a,l,p,m,b){var v=L();try{Y(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Cf(i,n,a,l,p,m,b,v,_,x,I,P){var R=L();try{re(i,n,a,l,p,m,b,v,_,x,I,P)}catch(T){if(F(R),T!==T+0)throw T;H(1,0)}}function xf(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U){var G=L();try{Os(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Sf(i,n,a){var l=L();try{ke(i,n,a)}catch(p){if(F(l),p!==p+0)throw p;H(1,0)}}function If(i,n,a,l){var p=L();try{return K(i,n,a,l)}catch(m){if(F(p),m!==m+0)throw m;H(1,0)}}function Tf(i,n,a,l){var p=L();try{return $e(i,n,a,l)}catch(m){if(F(p),m!==m+0)throw m;H(1,0)}}function Af(i,n,a,l,p,m,b,v,_,x){var I=L();try{je(i,n,a,l,p,m,b,v,_,x)}catch(P){if(F(I),P!==P+0)throw P;H(1,0)}}function Ef(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se){var Te=L();try{Lo(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se)}catch(Ue){if(F(Te),Ue!==Ue+0)throw Ue;H(1,0)}}function kf(i,n,a,l,p,m,b,v,_,x,I,P,R){var T=L();try{Fo(i,n,a,l,p,m,b,v,_,x,I,P,R)}catch(U){if(F(T),U!==U+0)throw U;H(1,0)}}function Of(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye){var Se=L();try{Jo(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye)}catch(Te){if(F(Se),Te!==Te+0)throw Te;H(1,0)}}function Pf(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee){var oe=L();try{Zo(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee)}catch(pe){if(F(oe),pe!==pe+0)throw pe;H(1,0)}}function Rf(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe){var ye=L();try{Ko(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe)}catch(Se){if(F(ye),Se!==Se+0)throw Se;H(1,0)}}function Bf(i,n,a,l,p,m,b,v,_,x,I){var P=L();try{return ts(i,n,a,l,p,m,b,v,_,x,I)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function zf(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye){var Se=L();try{return rs(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye)}catch(Te){if(F(Se),Te!==Te+0)throw Te;H(1,0)}}function Mf(i,n,a,l,p){var m=L();try{is(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function Df(i,n,a,l,p,m,b,v,_,x,I,P){var R=L();try{Pi(i,n,a,l,p,m,b,v,_,x,I,P)}catch(T){if(F(R),T!==T+0)throw T;H(1,0)}}function jf(i,n,a,l){var p=L();try{We(i,n,a,l)}catch(m){if(F(p),m!==m+0)throw m;H(1,0)}}function Uf(i,n,a,l,p,m){var b=L();try{return ps(i,n,a,l,p,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function Nf(i,n,a,l){var p=L();try{xs(i,n,a,l)}catch(m){if(F(p),m!==m+0)throw m;H(1,0)}}function Wf(i,n,a,l){var p=L();try{return Cs(i,n,a,l)}catch(m){if(F(p),m!==m+0)throw m;H(1,0)}}function Vf(i,n,a,l,p,m){var b=L();try{return Xo(i,n,a,l,p,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function Gf(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G){var ee=L();try{Yo(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)}catch(oe){if(F(ee),oe!==oe+0)throw oe;H(1,0)}}function Hf(i,n,a){var l=L();try{return Hr(i,n,a)}catch(p){if(F(l),p!==p+0)throw p;H(1,0)}}function Lf(i,n,a){var l=L();try{return Hn(i,n,a)}catch(p){if(F(l),p!==p+0)throw p;H(1,0)}}function Ff(i,n,a,l,p){var m=L();try{return Nt(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function qf(i,n,a,l){var p=L();try{return xi(i,n,a,l)}catch(m){if(F(p),m!==m+0)throw m;H(1,0)}}function Kf(i,n,a){var l=L();try{return Si(i,n,a)}catch(p){if(F(l),p!==p+0)throw p;H(1,0)}}function Jf(i,n,a,l){var p=L();try{Gr(i,n,a,l)}catch(m){if(F(p),m!==m+0)throw m;H(1,0)}}function Yf(i,n,a,l,p,m){var b=L();try{Nr(i,n,a,l,p,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function Zf(i,n,a,l,p,m,b,v){var _=L();try{Dn(i,n,a,l,p,m,b,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function Qf(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U){var G=L();try{Ti(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Xf(i,n,a,l,p,m,b,v,_,x,I,P,R){var T=L();try{gr(i,n,a,l,p,m,b,v,_,x,I,P,R)}catch(U){if(F(T),U!==U+0)throw U;H(1,0)}}function em(i,n,a,l,p,m,b,v,_,x,I,P){var R=L();try{return Ei(i,n,a,l,p,m,b,v,_,x,I,P)}catch(T){if(F(R),T!==T+0)throw T;H(1,0)}}function tm(i,n,a,l,p,m,b,v,_,x,I,P,R){var T=L();try{ki(i,n,a,l,p,m,b,v,_,x,I,P,R)}catch(U){if(F(T),U!==U+0)throw U;H(1,0)}}function rm(i,n,a,l,p){var m=L();try{Un(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function im(i,n){var a=L();try{return jn(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function nm(i,n,a,l,p,m){var b=L();try{Ln(i,n,a,l,p,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function am(i,n,a,l,p,m,b,v){var _=L();try{Ts(i,n,a,l,p,m,b,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function om(i,n,a,l,p,m,b){var v=L();try{ia(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function sm(i,n,a,l,p,m,b,v){var _=L();try{qn(i,n,a,l,p,m,b,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function um(i,n,a,l,p,m,b,v,_,x){var I=L();try{return kt(i,n,a,l,p,m,b,v,_,x)}catch(P){if(F(I),P!==P+0)throw P;H(1,0)}}function lm(i,n,a,l,p,m,b,v,_,x,I,P){var R=L();try{St(i,n,a,l,p,m,b,v,_,x,I,P)}catch(T){if(F(R),T!==T+0)throw T;H(1,0)}}function dm(i,n,a,l){var p=L();try{return Jn(i,n,a,l)}catch(m){if(F(p),m!==m+0)throw m;H(1,0)}}function cm(i,n,a,l,p,m,b,v,_){var x=L();try{Yn(i,n,a,l,p,m,b,v,_)}catch(I){if(F(x),I!==I+0)throw I;H(1,0)}}function pm(i,n,a,l,p){var m=L();try{tr(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function fm(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot,pt,wt){var Cr=L();try{Bi(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot,pt,wt)}catch(rr){if(F(Cr),rr!==rr+0)throw rr;H(1,0)}}function mm(i,n,a,l,p,m,b){var v=L();try{zi(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function hm(i,n,a,l,p,m,b,v,_,x,I,P,R){var T=L();try{Mi(i,n,a,l,p,m,b,v,_,x,I,P,R)}catch(U){if(F(T),U!==U+0)throw U;H(1,0)}}function gm(i,n,a,l,p,m){var b=L();try{return Di(i,n,a,l,p,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function ym(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U){var G=L();try{return ji(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function bm(i,n,a){var l=L();try{Fr(i,n,a)}catch(p){if(F(l),p!==p+0)throw p;H(1,0)}}function vm(i,n,a,l,p){var m=L();try{return Ui(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function wm(i,n,a,l,p,m,b,v,_,x,I){var P=L();try{return qr(i,n,a,l,p,m,b,v,_,x,I)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function _m(i,n,a,l,p,m,b,v,_,x,I,P,R){var T=L();try{Hi(i,n,a,l,p,m,b,v,_,x,I,P,R)}catch(U){if(F(T),U!==U+0)throw U;H(1,0)}}function $m(i,n,a){var l=L();try{return Wr(i,n,a)}catch(p){if(F(l),p!==p+0)throw p;H(1,0)}}function Cm(i,n,a,l,p,m,b,v,_,x,I,P){var R=L();try{qi(i,n,a,l,p,m,b,v,_,x,I,P)}catch(T){if(F(R),T!==T+0)throw T;H(1,0)}}function xm(i,n,a,l,p,m,b,v,_,x){var I=L();try{return Ki(i,n,a,l,p,m,b,v,_,x)}catch(P){if(F(I),P!==P+0)throw P;H(1,0)}}function Sm(i,n,a,l,p,m,b,v,_){var x=L();try{return ea(i,n,a,l,p,m,b,v,_)}catch(I){if(F(x),I!==I+0)throw I;H(1,0)}}function Im(i,n,a,l,p,m,b){var v=L();try{Yi(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Tm(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U){var G=L();try{vr(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Am(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe){var Xe=L();try{ta(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe)}catch(ot){if(F(Xe),ot!==ot+0)throw ot;H(1,0)}}function Em(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe){var pe=L();try{ra(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe)}catch(ye){if(F(pe),ye!==ye+0)throw ye;H(1,0)}}function km(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee){var oe=L();try{me(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee)}catch(pe){if(F(oe),pe!==pe+0)throw pe;H(1,0)}}function Om(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G){var ee=L();try{Zi(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)}catch(oe){if(F(ee),oe!==oe+0)throw oe;H(1,0)}}function Pm(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot,pt,wt){var Cr=L();try{wr(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot,pt,wt)}catch(rr){if(F(Cr),rr!==rr+0)throw rr;H(1,0)}}function Rm(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe){var ot=L();try{sr(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe)}catch(pt){if(F(ot),pt!==pt+0)throw pt;H(1,0)}}function Bm(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je){var Qe=L();try{Ot(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je)}catch(Xe){if(F(Qe),Xe!==Xe+0)throw Xe;H(1,0)}}function zm(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot,pt,wt,Cr){var rr=L();try{Qi(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot,pt,wt,Cr)}catch(qa){if(F(rr),qa!==qa+0)throw qa;H(1,0)}}function Mm(i,n,a,l,p,m,b,v,_,x,I,P){var R=L();try{Xi(i,n,a,l,p,m,b,v,_,x,I,P)}catch(T){if(F(R),T!==T+0)throw T;H(1,0)}}function Dm(i,n,a,l,p,m,b,v,_,x,I,P,R,T){var U=L();try{en(i,n,a,l,p,m,b,v,_,x,I,P,R,T)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function jm(i,n,a,l,p,m,b,v,_,x,I,P,R,T){var U=L();try{Jr(i,n,a,l,p,m,b,v,_,x,I,P,R,T)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function Um(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se){var Te=L();try{Yr(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se)}catch(Ue){if(F(Te),Ue!==Ue+0)throw Ue;H(1,0)}}function Nm(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U){var G=L();try{rn(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Wm(i,n,a,l,p,m,b,v,_,x,I,P,R){var T=L();try{Zr(i,n,a,l,p,m,b,v,_,x,I,P,R)}catch(U){if(F(T),U!==U+0)throw U;H(1,0)}}function Vm(i,n,a){var l=L();try{return ks(i,n,a)}catch(p){if(F(l),p!==p+0)throw p;H(1,0)}}function Gm(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U){var G=L();try{_r(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Hm(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U){var G=L();try{nn(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Lm(i,n,a,l,p,m,b,v){var _=L();try{return an(i,n,a,l,p,m,b,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function Fm(i,n,a,l,p,m,b){var v=L();try{return on(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function qm(i,n,a,l,p,m,b,v,_,x,I,P,R,T){var U=L();try{sn(i,n,a,l,p,m,b,v,_,x,I,P,R,T)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function Km(i,n,a,l,p,m,b,v){var _=L();try{Qr(i,n,a,l,p,m,b,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function Jm(i,n,a,l,p,m,b,v,_,x,I,P){var R=L();try{un(i,n,a,l,p,m,b,v,_,x,I,P)}catch(T){if(F(R),T!==T+0)throw T;H(1,0)}}function Ym(i,n,a,l,p,m,b,v,_){var x=L();try{$r(i,n,a,l,p,m,b,v,_)}catch(I){if(F(x),I!==I+0)throw I;H(1,0)}}function Zm(i,n,a,l,p,m,b,v,_,x){var I=L();try{ln(i,n,a,l,p,m,b,v,_,x)}catch(P){if(F(I),P!==P+0)throw P;H(1,0)}}function Qm(i,n,a,l,p){var m=L();try{return u(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function Xm(i,n,a,l,p,m,b,v,_,x,I,P,R){var T=L();try{g(i,n,a,l,p,m,b,v,_,x,I,P,R)}catch(U){if(F(T),U!==U+0)throw U;H(1,0)}}function eh(i,n,a,l,p,m,b,v,_,x,I,P,R,T){var U=L();try{$(i,n,a,l,p,m,b,v,_,x,I,P,R,T)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function th(i,n,a,l,p,m,b,v,_,x,I){var P=L();try{A(i,n,a,l,p,m,b,v,_,x,I)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function rh(i,n,a,l,p,m,b,v,_,x,I,P){var R=L();try{z(i,n,a,l,p,m,b,v,_,x,I,P)}catch(T){if(F(R),T!==T+0)throw T;H(1,0)}}function ih(i,n,a,l,p,m,b){var v=L();try{V(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function nh(i,n,a,l,p,m,b,v,_){var x=L();try{return ce(i,n,a,l,p,m,b,v,_)}catch(I){if(F(x),I!==I+0)throw I;H(1,0)}}function ah(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G){var ee=L();try{le(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)}catch(oe){if(F(ee),oe!==oe+0)throw oe;H(1,0)}}function oh(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G){var ee=L();try{_e(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)}catch(oe){if(F(ee),oe!==oe+0)throw oe;H(1,0)}}function sh(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot){var pt=L();try{Ft(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee,oe,pe,ye,Se,Te,Ue,Je,Qe,Xe,ot)}catch(wt){if(F(pt),wt!==wt+0)throw wt;H(1,0)}}function uh(i,n,a,l,p,m,b,v){var _=L();try{dn(i,n,a,l,p,m,b,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function lh(i,n,a,l,p,m,b,v,_,x,I,P,R,T){var U=L();try{return Go(i,n,a,l,p,m,b,v,_,x,I,P,R,T)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function dh(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G){var ee=L();try{Ho(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)}catch(oe){if(F(ee),oe!==oe+0)throw oe;H(1,0)}}function ch(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee){var oe=L();try{qo(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G,ee)}catch(pe){if(F(oe),pe!==pe+0)throw pe;H(1,0)}}function ph(i,n,a,l,p,m,b,v,_,x,I){var P=L();try{Qo(i,n,a,l,p,m,b,v,_,x,I)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function fh(i,n,a,l,p,m,b,v,_,x,I,P,R,T){var U=L();try{es(i,n,a,l,p,m,b,v,_,x,I,P,R,T)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function mh(i,n,a,l,p,m,b,v,_,x,I){var P=L();try{ns(i,n,a,l,p,m,b,v,_,x,I)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function hh(i,n,a,l,p,m){var b=L();try{as(i,n,a,l,p,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function gh(i,n,a,l,p,m,b,v,_,x,I,P,R,T){var U=L();try{As(i,n,a,l,p,m,b,v,_,x,I,P,R,T)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function yh(i,n,a,l,p,m,b,v){var _=L();try{return os(i,n,a,l,p,m,b,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function bh(i,n,a,l,p){var m=L();try{return Ps(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function vh(i,n,a,l,p,m,b,v){var _=L();try{ss(i,n,a,l,p,m,b,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function wh(i,n,a,l,p,m,b,v,_){var x=L();try{return us(i,n,a,l,p,m,b,v,_)}catch(I){if(F(x),I!==I+0)throw I;H(1,0)}}function _h(i,n,a,l,p,m,b,v,_){var x=L();try{return ls(i,n,a,l,p,m,b,v,_)}catch(I){if(F(x),I!==I+0)throw I;H(1,0)}}function $h(i,n,a,l,p,m,b,v,_,x,I){var P=L();try{ds(i,n,a,l,p,m,b,v,_,x,I)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function Ch(i,n,a,l,p,m,b,v,_,x){var I=L();try{return cs(i,n,a,l,p,m,b,v,_,x)}catch(P){if(F(I),P!==P+0)throw P;H(1,0)}}function xh(i,n,a,l,p,m,b){var v=L();try{return fs(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Sh(i,n,a,l,p,m,b,v,_,x,I,P,R){var T=L();try{return ms(i,n,a,l,p,m,b,v,_,x,I,P,R)}catch(U){if(F(T),U!==U+0)throw U;H(1,0)}}function Ih(i,n,a,l,p,m,b,v,_,x){var I=L();try{return hs(i,n,a,l,p,m,b,v,_,x)}catch(P){if(F(I),P!==P+0)throw P;H(1,0)}}function Th(i,n,a,l,p,m,b,v,_,x,I,P,R,T){var U=L();try{return gs(i,n,a,l,p,m,b,v,_,x,I,P,R,T)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function Ah(i,n,a,l,p,m,b,v){var _=L();try{return ys(i,n,a,l,p,m,b,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function Eh(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G){var ee=L();try{return bs(i,n,a,l,p,m,b,v,_,x,I,P,R,T,U,G)}catch(oe){if(F(ee),oe!==oe+0)throw oe;H(1,0)}}function kh(i,n,a,l,p,m,b,v){var _=L();try{return vs(i,n,a,l,p,m,b,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function Oh(i,n,a,l,p,m,b,v,_,x){var I=L();try{return ws(i,n,a,l,p,m,b,v,_,x)}catch(P){if(F(I),P!==P+0)throw P;H(1,0)}}function Ph(i,n,a,l){var p=L();try{return _s(i,n,a,l)}catch(m){if(F(p),m!==m+0)throw m;H(1,0)}}function Rh(i,n,a,l,p){var m=L();try{return $s(i,n,a,l,p)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function Bh(i,n,a,l,p,m){var b=L();try{Ss(i,n,a,l,p,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function zh(i,n,a,l,p,m,b,v,_,x,I,P,R){var T=L();try{Zn(i,n,a,l,p,m,b,v,_,x,I,P,R)}catch(U){if(F(T),U!==U+0)throw U;H(1,0)}}function Mh(i,n,a,l,p,m){var b=L();try{return Is(i,n,a,l,p,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function Dh(i){var n=L();try{return Vr(i)}catch(a){if(F(n),a!==a+0)throw a;H(1,0)}}function jh(i,n,a,l,p,m,b){var v=L();try{return hr(i,n,a,l,p,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Uh(){var i=j;i=Object.assign({},i);var n=l=>()=>l()>>>0,a=l=>p=>l(p)>>>0;return i.Gd=n(i.Gd),i.Hd=a(i.Hd),i.Md=n(i.Md),i.Od=a(i.Od),i}r.stackAlloc=fi,r.stackSave=L,r.stackRestore=F,r.UTF8ToString=at,r.stringToUTF8=(i,n,a)=>or(i,ae,n,a),r.lengthBytesUTF8=kr;var na;xe=function i(){na||Ds(),na||(xe=i)};function Ds(){if(!(0<Fe)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var i=r.preRun.shift();Ne.unshift(i)}for(;0<Ne.length;)Ne.shift()(r);if(!(0<Fe||na||(na=!0,r.calledRun=!0,q))){for(;0<Ae.length;)Ae.shift()(r);for(o(r);0<fe.length;)fe.shift()(r)}}}return Ds(),t.ready}})();typeof yu=="object"&&typeof io=="object"?io.exports=gu:typeof define=="function"&&define.amd&&define([],()=>gu)});var vu=Xr(()=>{});var wu=Xr(()=>{});var _u={};xr(_u,{cpus:()=>Jh});var Jh,$u=se(()=>{Jh=void 0});var Su=Xr((xu,no)=>{"use strict";var Cu=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return fe.buffer!=ge.buffer&&ht(),ge}function o(){return fe.buffer!=ge.buffer&&ht(),ve}function s(){return fe.buffer!=ge.buffer&&ht(),De}function c(){return fe.buffer!=ge.buffer&&ht(),it}function d(){return fe.buffer!=ge.buffer&&ht(),ie}function h(){return fe.buffer!=ge.buffer&&ht(),he}function y(){return fe.buffer!=ge.buffer&&ht(),Ee}function w(){return fe.buffer!=ge.buffer&&ht(),dt}var f=t,C,S;f.ready=new Promise((u,g)=>{C=u,S=g}),f.mountExternalData=(u,g)=>{(f.Fb||(f.Fb=new Map)).set(u,g)},f.unmountExternalData=()=>{delete f.Fb};let k=()=>{let u=($,A,z)=>(...V)=>{let Y=kt,re=A?.();V=$(...V);let ce=A?.();return re!==ce&&($=ce,z(re),A=z=null),kt!=Y?Hn():V},g=$=>async(...A)=>{try{if(f.Eb)throw Error("Session already started");let z=f.Eb={kc:A[0],errors:[]},V=await $(...A);if(f.Eb!==z)throw Error("Session mismatch");f.Ob?.flush();let Y=z.errors;if(0<Y.length){let re=await Promise.all(Y);if(re=re.filter(ce=>ce),0<re.length)throw Error(re.join(`
`))}return V}finally{f.Eb=null}};f._OrtCreateSession=u(f._OrtCreateSession,()=>f._OrtCreateSession,$=>f._OrtCreateSession=$),f._OrtRun=g(u(f._OrtRun,()=>f._OrtRun,$=>f._OrtRun=$)),f._OrtRunWithBinding=g(u(f._OrtRunWithBinding,()=>f._OrtRunWithBinding,$=>f._OrtRunWithBinding=$)),f._OrtBindInput=u(f._OrtBindInput,()=>f._OrtBindInput,$=>f._OrtBindInput=$),k=void 0};f.jsepInit=(u,g)=>{if(k?.(),u==="webgpu"){[f.Ob,f.ac,f.ec,f.Pb,f.dc,f.eb,f.fc,f.ic,f.bc,f.cc,f.hc]=g;let $=f.Ob;f.jsepRegisterBuffer=(A,z,V,Y)=>$.registerBuffer(A,z,V,Y),f.jsepGetBuffer=A=>$.getBuffer(A),f.jsepCreateDownloader=(A,z,V)=>$.createDownloader(A,z,V),f.jsepOnReleaseSession=A=>{$.onReleaseSession(A)},f.jsepOnRunStart=A=>$.onRunStart(A)}};var E=Object.assign({},f),O="./this.program",D=(u,g)=>{throw g},N=typeof window=="object",B=typeof importScripts=="function",W=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",M=f.ENVIRONMENT_IS_PTHREAD||!1,q="";function X(u){return f.locateFile?f.locateFile(u,q):q+u}var te,ae,J;if(W){var ne=(eo(),ur(Xa)),be=(ro(),ur(to));q=B?be.dirname(q)+"/":__dirname+"/",te=(g,$)=>(g=or(g)?new URL(g):be.normalize(g),ne.readFileSync(g,$?void 0:"utf8")),J=g=>(g=te(g,!0),g.buffer||(g=new Uint8Array(g)),g),ae=(g,$,A,z=!0)=>{g=or(g)?new URL(g):be.normalize(g),ne.readFile(g,z?void 0:"utf8",(V,Y)=>{V?A(V):$(z?Y.buffer:Y)})},!f.thisProgram&&1<process.argv.length&&(O=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),D=(g,$)=>{throw process.exitCode=g,$},f.inspect=()=>"[Emscripten Module object]";let u;try{u=vu()}catch(g){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),g}global.Worker=u.Worker}else(N||B)&&(B?q=self.location.href:typeof document<"u"&&document.currentScript&&(q=document.currentScript.src),typeof e<"u"&&e&&(q=e),q.indexOf("blob:")!==0?q=q.substr(0,q.replace(/[?#].*/,"").lastIndexOf("/")+1):q="",W||(te=u=>{var g=new XMLHttpRequest;return g.open("GET",u,!1),g.send(null),g.responseText},B&&(J=u=>{var g=new XMLHttpRequest;return g.open("GET",u,!1),g.responseType="arraybuffer",g.send(null),new Uint8Array(g.response)}),ae=(u,g,$)=>{var A=new XMLHttpRequest;A.open("GET",u,!0),A.responseType="arraybuffer",A.onload=()=>{A.status==200||A.status==0&&A.response?g(A.response):$()},A.onerror=$,A.send(null)}));W&&typeof performance>"u"&&(global.performance=wu().performance);var ze=console.log.bind(console),Ke=console.error.bind(console);W&&(ze=(...u)=>ne.writeSync(1,u.join(" ")+`
`),Ke=(...u)=>ne.writeSync(2,u.join(" ")+`
`));var Ne=ze,Ae=Ke;Object.assign(f,E),E=null,typeof WebAssembly!="object"&&at("no native wasm support detected");var fe,Fe,Me=!1,xe,ge,ve,De,it,ie,he,Ee,et,ut,dt;function ht(){var u=fe.buffer;f.HEAP8=ge=new Int8Array(u),f.HEAP16=De=new Int16Array(u),f.HEAPU8=ve=new Uint8Array(u),f.HEAPU16=it=new Uint16Array(u),f.HEAP32=ie=new Int32Array(u),f.HEAPU32=he=new Uint32Array(u),f.HEAPF32=Ee=new Float32Array(u),f.HEAPF64=dt=new Float64Array(u),f.HEAP64=et=new BigInt64Array(u),f.HEAPU64=ut=new BigUint64Array(u)}var st=16777216;if(M)fe=f.wasmMemory;else if(f.wasmMemory)fe=f.wasmMemory;else if(fe=new WebAssembly.Memory({initial:st/65536,maximum:65536,shared:!0}),!(fe.buffer instanceof SharedArrayBuffer))throw Ae("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),W&&Ae("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");ht(),st=fe.buffer.byteLength;var nt=[],bt=[],Et=[],Rt=0,nr=null,ar=null;function si(){if(Rt--,Rt==0&&(nr!==null&&(clearInterval(nr),nr=null),ar)){var u=ar;ar=null,u()}}function at(u){throw u="Aborted("+u+")",Ae(u),Me=!0,xe=1,u=new WebAssembly.RuntimeError(u+". Build with -sASSERTIONS for more info."),S(u),u}var kr=u=>u.startsWith("data:application/octet-stream;base64,"),or=u=>u.startsWith("file://"),Bt;Bt="ort-wasm-simd-threaded.wasm",kr(Bt)||(Bt=X(Bt));function ui(u){if(J)return J(u);throw"both async and sync fetching of the wasm failed"}function $n(u){if(N||B){if(typeof fetch=="function"&&!or(u))return fetch(u,{credentials:"same-origin"}).then(g=>{if(!g.ok)throw"failed to load wasm binary file at '"+u+"'";return g.arrayBuffer()}).catch(()=>ui(u));if(ae)return new Promise((g,$)=>{ae(u,A=>g(new Uint8Array(A)),$)})}return Promise.resolve().then(()=>ui(u))}function li(u,g,$){return $n(u).then(A=>WebAssembly.instantiate(A,g)).then(A=>A).then($,A=>{Ae(`failed to asynchronously prepare wasm: ${A}`),at(A)})}function di(u,g){var $=Bt;return typeof WebAssembly.instantiateStreaming!="function"||kr($)||or($)||W||typeof fetch!="function"?li($,u,g):fetch($,{credentials:"same-origin"}).then(A=>WebAssembly.instantiateStreaming(A,u).then(g,function(z){return Ae(`wasm streaming compile failed: ${z}`),Ae("falling back to ArrayBuffer instantiation"),li($,u,g)}))}var Or={949692:(u,g,$,A)=>{if(typeof f>"u"||!f.Fb)return 1;if(u=lt(u>>>0),u.startsWith("./")&&(u=u.substring(2)),u=f.Fb.get(u),!u)return 2;if(g>>>=0,$>>>=0,A>>>=0,g+$>u.byteLength)return 3;try{return o().set(u.subarray(g,g+$),A>>>0),0}catch{return 4}},950193:()=>{f.bc()},950224:()=>{f.cc()},950253:()=>{f.hc()},950278:u=>f.ac(u),950311:u=>f.ec(u),950343:(u,g,$)=>{f.Pb(u,g,$,!0)},950382:(u,g,$)=>{f.Pb(u,g,$)},950415:u=>{f.eb("Abs",u,void 0)},950466:u=>{f.eb("Neg",u,void 0)},950517:u=>{f.eb("Floor",u,void 0)},950570:u=>{f.eb("Ceil",u,void 0)},950622:u=>{f.eb("Reciprocal",u,void 0)},950680:u=>{f.eb("Sqrt",u,void 0)},950732:u=>{f.eb("Exp",u,void 0)},950783:u=>{f.eb("Erf",u,void 0)},950834:u=>{f.eb("Sigmoid",u,void 0)},950889:(u,g,$)=>{f.eb("HardSigmoid",u,{alpha:g,beta:$})},950968:u=>{f.eb("Log",u,void 0)},951019:u=>{f.eb("Sin",u,void 0)},951070:u=>{f.eb("Cos",u,void 0)},951121:u=>{f.eb("Tan",u,void 0)},951172:u=>{f.eb("Asin",u,void 0)},951224:u=>{f.eb("Acos",u,void 0)},951276:u=>{f.eb("Atan",u,void 0)},951328:u=>{f.eb("Sinh",u,void 0)},951380:u=>{f.eb("Cosh",u,void 0)},951432:u=>{f.eb("Asinh",u,void 0)},951485:u=>{f.eb("Acosh",u,void 0)},951538:u=>{f.eb("Atanh",u,void 0)},951591:u=>{f.eb("Tanh",u,void 0)},951643:u=>{f.eb("Not",u,void 0)},951694:(u,g,$)=>{f.eb("Clip",u,{min:g,max:$})},951763:u=>{f.eb("Clip",u,void 0)},951815:(u,g)=>{f.eb("Elu",u,{alpha:g})},951873:u=>{f.eb("Relu",u,void 0)},951925:(u,g)=>{f.eb("LeakyRelu",u,{alpha:g})},951989:(u,g)=>{f.eb("ThresholdedRelu",u,{alpha:g})},952059:(u,g)=>{f.eb("Cast",u,{to:g})},952117:u=>{f.eb("Add",u,void 0)},952168:u=>{f.eb("Sub",u,void 0)},952219:u=>{f.eb("Mul",u,void 0)},952270:u=>{f.eb("Div",u,void 0)},952321:u=>{f.eb("Pow",u,void 0)},952372:u=>{f.eb("Equal",u,void 0)},952425:u=>{f.eb("Greater",u,void 0)},952480:u=>{f.eb("GreaterOrEqual",u,void 0)},952542:u=>{f.eb("Less",u,void 0)},952594:u=>{f.eb("LessOrEqual",u,void 0)},952653:(u,g,$,A,z)=>{f.eb("ReduceMean",u,{keepDims:!!g,noopWithEmptyAxes:!!$,axes:A?Array.from(d().subarray(A>>>0,z>>>0)):[]})},952812:(u,g,$,A,z)=>{f.eb("ReduceMax",u,{keepDims:!!g,noopWithEmptyAxes:!!$,axes:A?Array.from(d().subarray(A>>>0,z>>>0)):[]})},952970:(u,g,$,A,z)=>{f.eb("ReduceMin",u,{keepDims:!!g,noopWithEmptyAxes:!!$,axes:A?Array.from(d().subarray(A>>>0,z>>>0)):[]})},953128:(u,g,$,A,z)=>{f.eb("ReduceProd",u,{keepDims:!!g,noopWithEmptyAxes:!!$,axes:A?Array.from(d().subarray(A>>>0,z>>>0)):[]})},953287:(u,g,$,A,z)=>{f.eb("ReduceSum",u,{keepDims:!!g,noopWithEmptyAxes:!!$,axes:A?Array.from(d().subarray(A>>>0,z>>>0)):[]})},953445:(u,g,$,A,z)=>{f.eb("ReduceL1",u,{keepDims:!!g,noopWithEmptyAxes:!!$,axes:A?Array.from(d().subarray(A>>>0,z>>>0)):[]})},953602:(u,g,$,A,z)=>{f.eb("ReduceL2",u,{keepDims:!!g,noopWithEmptyAxes:!!$,axes:A?Array.from(d().subarray(A>>>0,z>>>0)):[]})},953759:(u,g,$,A,z)=>{f.eb("ReduceLogSum",u,{keepDims:!!g,noopWithEmptyAxes:!!$,axes:A?Array.from(d().subarray(A>>>0,z>>>0)):[]})},953920:(u,g,$,A,z)=>{f.eb("ReduceSumSquare",u,{keepDims:!!g,noopWithEmptyAxes:!!$,axes:A?Array.from(d().subarray(A>>>0,z>>>0)):[]})},954084:(u,g,$,A,z)=>{f.eb("ReduceLogSumExp",u,{keepDims:!!g,noopWithEmptyAxes:!!$,axes:A?Array.from(d().subarray(A>>>0,z>>>0)):[]})},954248:u=>{f.eb("Where",u,void 0)},954301:(u,g,$)=>{f.eb("Transpose",u,{perm:g?Array.from(d().subarray(g>>>0,$>>>0)):[]})},954409:(u,g,$,A,z,V,Y,re,ce,le,_e,ke,We,K,$e)=>{f.eb("ConvTranspose",u,{format:ce?"NHWC":"NCHW",autoPad:g,dilations:[$],group:A,kernel_shape:[z],pads:[V,Y],strides:[re],wIsConst:()=>!!r()[le>>>0],outputPadding:_e?Array.from(d().subarray(_e>>>0,ke>>>0)):[],outputShape:We?Array.from(d().subarray(We>>>0,K>>>0)):[],activation:lt($e)})},954811:(u,g,$,A,z,V,Y,re,ce,le,_e,ke,We,K)=>{f.eb("ConvTranspose",u,{format:re?"NHWC":"NCHW",autoPad:g,dilations:Array.from(d().subarray($>>>0,($>>>0)+2>>>0)),group:A,kernelShape:Array.from(d().subarray(z>>>0,(z>>>0)+2>>>0)),pads:Array.from(d().subarray(V>>>0,(V>>>0)+4>>>0)),strides:Array.from(d().subarray(Y>>>0,(Y>>>0)+2>>>0)),wIsConst:()=>!!r()[ce>>>0],outputPadding:le?Array.from(d().subarray(le>>>0,_e>>>0)):[],outputShape:ke?Array.from(d().subarray(ke>>>0,We>>>0)):[],activation:lt(K)})},955376:(u,g,$,A,z,V,Y,re,ce,le,_e,ke,We,K,$e)=>{f.eb("ConvTranspose",u,{format:ce?"NHWC":"NCHW",autoPad:g,dilations:[$],group:A,kernel_shape:[z],pads:[V,Y],strides:[re],wIsConst:()=>!!r()[le>>>0],outputPadding:_e?Array.from(d().subarray(_e>>>0,ke>>>0)):[],outputShape:We?Array.from(d().subarray(We>>>0,K>>>0)):[],activation:lt($e)})},955778:(u,g,$,A,z,V,Y,re,ce,le,_e,ke,We,K)=>{f.eb("ConvTranspose",u,{format:re?"NHWC":"NCHW",autoPad:g,dilations:Array.from(d().subarray($>>>0,($>>>0)+2>>>0)),group:A,kernelShape:Array.from(d().subarray(z>>>0,(z>>>0)+2>>>0)),pads:Array.from(d().subarray(V>>>0,(V>>>0)+4>>>0)),strides:Array.from(d().subarray(Y>>>0,(Y>>>0)+2>>>0)),wIsConst:()=>!!r()[ce>>>0],outputPadding:le?Array.from(d().subarray(le>>>0,_e>>>0)):[],outputShape:ke?Array.from(d().subarray(ke>>>0,We>>>0)):[],activation:lt(K)})},956343:(u,g)=>{f.eb("GlobalAveragePool",u,{format:g?"NHWC":"NCHW"})},956434:(u,g,$,A,z,V,Y,re,ce,le,_e,ke,We,K,$e,je)=>{f.eb("AveragePool",u,{format:je?"NHWC":"NCHW",auto_pad:g,ceil_mode:$,count_include_pad:A,storage_order:z,dilations:[V,Y],kernel_shape:[re,ce],pads:[le,_e,ke,We],strides:[K,$e]})},956718:(u,g)=>{f.eb("GlobalAveragePool",u,{format:g?"NHWC":"NCHW"})},956809:(u,g,$,A,z,V,Y,re,ce,le,_e,ke,We,K,$e,je)=>{f.eb("AveragePool",u,{format:je?"NHWC":"NCHW",auto_pad:g,ceil_mode:$,count_include_pad:A,storage_order:z,dilations:[V,Y],kernel_shape:[re,ce],pads:[le,_e,ke,We],strides:[K,$e]})},957093:(u,g)=>{f.eb("GlobalMaxPool",u,{format:g?"NHWC":"NCHW"})},957180:(u,g,$,A,z,V,Y,re,ce,le,_e,ke,We,K,$e,je)=>{f.eb("MaxPool",u,{format:je?"NHWC":"NCHW",auto_pad:g,ceil_mode:$,count_include_pad:A,storage_order:z,dilations:[V,Y],kernel_shape:[re,ce],pads:[le,_e,ke,We],strides:[K,$e]})},957460:(u,g)=>{f.eb("GlobalMaxPool",u,{format:g?"NHWC":"NCHW"})},957547:(u,g,$,A,z,V,Y,re,ce,le,_e,ke,We,K,$e,je)=>{f.eb("MaxPool",u,{format:je?"NHWC":"NCHW",auto_pad:g,ceil_mode:$,count_include_pad:A,storage_order:z,dilations:[V,Y],kernel_shape:[re,ce],pads:[le,_e,ke,We],strides:[K,$e]})},957827:(u,g,$,A,z)=>{f.eb("Gemm",u,{alpha:g,beta:$,transA:A,transB:z})},957931:u=>{f.eb("MatMul",u,void 0)},957985:(u,g,$,A)=>{f.eb("ArgMax",u,{keepDims:!!g,selectLastIndex:!!$,axis:A})},958093:(u,g,$,A)=>{f.eb("ArgMin",u,{keepDims:!!g,selectLastIndex:!!$,axis:A})},958201:(u,g)=>{f.eb("Softmax",u,{axis:g})},958264:(u,g)=>{f.eb("Concat",u,{axis:g})},958324:(u,g,$,A,z)=>{f.eb("Split",u,{axis:g,numOutputs:$,splitSizes:A?Array.from(d().subarray(A>>>0,z>>>0)):[]})},958464:u=>{f.eb("Expand",u,void 0)},958518:(u,g)=>{f.eb("Gather",u,{axis:Number(g)})},958589:(u,g)=>{f.eb("GatherElements",u,{axis:Number(g)})},958668:(u,g,$,A,z,V,Y,re,ce,le,_e)=>{f.eb("Resize",u,{antialias:g,axes:$?Array.from(d().subarray($>>>0,A>>>0)):[],coordinateTransformMode:lt(z),cubicCoeffA:V,excludeOutside:Y,extrapolationValue:re,keepAspectRatioPolicy:lt(ce),mode:lt(le),nearestMode:lt(_e)})},959014:(u,g,$,A,z,V,Y)=>{f.eb("Slice",u,{starts:g?Array.from(d().subarray(g>>>0,$>>>0)):[],ends:A?Array.from(d().subarray(A>>>0,z>>>0)):[],axes:V?Array.from(d().subarray(V>>>0,Y>>>0)):[]})},959230:u=>{f.eb("Tile",u,void 0)},959282:(u,g,$)=>{f.eb("LayerNormalization",u,{axis:Number(g),epsilon:Number($)})},959389:(u,g,$)=>{f.eb("InstanceNormalization",u,{epsilon:g,format:$?"NHWC":"NCHW"})},959503:(u,g,$)=>{f.eb("InstanceNormalization",u,{epsilon:g,format:$?"NHWC":"NCHW"})},959617:u=>{f.eb("Range",u,void 0)},959670:(u,g)=>{f.eb("Einsum",u,{equation:lt(g)})},959751:(u,g,$,A,z)=>{f.eb("Pad",u,{mode:g,value:$,pads:A?Array.from(d().subarray(A>>>0,z>>>0)):[]})},959878:(u,g,$,A,z,V)=>{f.eb("BatchNormalization",u,{epsilon:g,momentum:$,spatial:!!z,trainingMode:!!A,format:V?"NHWC":"NCHW"})},960047:(u,g,$,A,z,V)=>{f.eb("BatchNormalization",u,{epsilon:g,momentum:$,spatial:!!z,trainingMode:!!A,format:V?"NHWC":"NCHW"})},960216:(u,g,$)=>{f.eb("CumSum",u,{exclusive:Number(g),reverse:Number($)})},960313:(u,g,$,A,z,V,Y,re,ce)=>{f.eb("Attention",u,{numHeads:g,isUnidirectional:$,maskFilterValue:A,scale:z,doRotary:V,qkvHiddenSizes:Y?Array.from(d().subarray(Number(re)>>>0,Number(re)+Y>>>0)):[],pastPresentShareBuffer:!!ce})},960585:u=>{f.eb("BiasAdd",u,void 0)},960640:u=>{f.eb("BiasSplitGelu",u,void 0)},960701:u=>{f.eb("FastGelu",u,void 0)},960757:(u,g,$,A,z,V,Y,re,ce,le,_e,ke,We)=>{f.eb("Conv",u,{format:ce?"NHWC":"NCHW",auto_pad:g,dilations:[$],group:A,kernel_shape:[z],pads:V?Array.from(d().subarray(V>>>0,Y>>>0)):[],strides:[re],w_is_const:()=>!!r()[le>>>0],activation:lt(_e),activation_params:ke?Array.from(y().subarray(ke>>>0,We>>>0)):[]})},961127:(u,g,$,A,z,V,Y,re,ce,le,_e,ke,We,K,$e,je)=>{f.eb("Conv",u,{format:ke?"NHWC":"NCHW",auto_pad:g,dilations:[$,A],group:z,kernel_shape:[V,Y],pads:re?Array.from(d().subarray(re>>>0,ce>>>0)):[],strides:[le,_e],w_is_const:()=>!!r()[We>>>0],activation:lt(K),activation_params:$e?Array.from(y().subarray($e>>>0,je>>>0)):[]})},961518:u=>{f.eb("Gelu",u,void 0)},961570:(u,g,$,A,z,V)=>{f.eb("MatMulNBits",u,{k:g,n:$,accuracyLevel:A,bits:z,blockSize:V})},961697:(u,g,$,A,z,V)=>{f.eb("MultiHeadAttention",u,{numHeads:g,isUnidirectional:$,maskFilterValue:A,scale:z,doRotary:V})},961856:(u,g)=>{f.eb("SkipLayerNormalization",u,{epsilon:g})},961937:u=>{f.fc(u)},961971:(u,g)=>f.ic(u,g,f.Eb.kc,f.Eb.errors)};function pr(u){this.name="ExitStatus",this.message=`Program terminated with exit(${u})`,this.status=u}var Pr=u=>{u.terminate(),u.onmessage=()=>{}},Rr=u=>{we.yb.length==0&&(fr(),we.Qb(we.yb[0]));var g=we.yb.pop();if(!g)return 6;we.zb.push(g),we.pb[u.xb]=g,g.xb=u.xb;var $={cmd:"run",start_routine:u.lc,arg:u.Wb,pthread_ptr:u.xb};return W&&g.unref(),g.postMessage($,u.rc),0},Xt=0,ci=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,pi=(u,g,$)=>{g>>>=0;var A=g+$;for($=g;u[$]&&!($>=A);)++$;if(16<$-g&&u.buffer&&ci)return ci.decode(u.buffer instanceof SharedArrayBuffer?u.slice(g,$):u.subarray(g,$));for(A="";g<$;){var z=u[g++];if(z&128){var V=u[g++]&63;if((z&224)==192)A+=String.fromCharCode((z&31)<<6|V);else{var Y=u[g++]&63;z=(z&240)==224?(z&15)<<12|V<<6|Y:(z&7)<<18|V<<12|Y<<6|u[g++]&63,65536>z?A+=String.fromCharCode(z):(z-=65536,A+=String.fromCharCode(55296|z>>10,56320|z&1023))}}else A+=String.fromCharCode(z)}return A},lt=(u,g)=>(u>>>=0)?pi(o(),u,g):"",Cn=u=>{var g=Zr();return u=u(),_r(g),u};function qe(u,g){var $=arguments.length-2,A=arguments;return Cn(()=>{for(var z=2*$,V=Qr(8*z),Y=V>>>3,re=0;re<$;re++){var ce=A[2+re];typeof ce=="bigint"?(et[Y+2*re]=1n,et[Y+2*re+1]=ce):(et[Y+2*re]=0n,w()[Y+2*re+1>>>0]=ce)}return en(u,z,V,g)})}function xn(u){if(M)return qe(0,1,u);xe=u,0<Xt||(we.mc(),f.onExit?.(u),Me=!0),D(u,new pr(u))}var zt=u=>{if(xe=u,M)throw zr(u),"unwind";xn(u)},Ct=u=>{u instanceof pr||u=="unwind"||D(1,u)};function Sn(){for(var u=f.numThreads;u--;)fr();nt.unshift(()=>{Rt++,In(()=>si())})}function fr(){var u=X("ort-wasm-simd-threaded.worker.js");u=new Worker(u),we.yb.push(u)}function In(u){M?u():Promise.all(we.yb.map(we.Qb)).then(u)}var we={yb:[],zb:[],Vb:[],pb:{},Ib(){M?(we.receiveObjectTransfer=we.jc,we.threadInitTLS=we.Ub,we.setExitStatus=we.Tb):Sn()},Tb:u=>xe=u,vc:["$terminateWorker"],mc:()=>{for(var u of we.zb)Pr(u);for(u of we.yb)Pr(u);we.yb=[],we.zb=[],we.pb=[]},Sb:u=>{var g=u.xb;delete we.pb[g],we.yb.push(u),we.zb.splice(we.zb.indexOf(u),1),u.xb=0,Jr(g)},jc(){},Ub(){we.Vb.forEach(u=>u())},Qb:u=>new Promise(g=>{u.onmessage=V=>{V=V.data;var Y=V.cmd;if(V.targetThread&&V.targetThread!=wr()){var re=we.pb[V.targetThread];re?re.postMessage(V,V.transferList):Ae(`Internal error! Worker sent a message "${Y}" to target pthread ${V.targetThread}, but that thread no longer exists!`)}else Y==="checkMailbox"?hr():Y==="spawnThread"?Rr(V):Y==="cleanupThread"?we.Sb(we.pb[V.thread]):Y==="killThread"?(V=V.thread,Y=we.pb[V],delete we.pb[V],Pr(Y),Jr(V),we.zb.splice(we.zb.indexOf(Y),1),Y.xb=0):Y==="cancelThread"?we.pb[V.thread].postMessage({cmd:"cancel"}):Y==="loaded"?(u.loaded=!0,W&&!u.xb&&u.unref(),g(u)):Y==="alert"?alert(`Thread ${V.threadId}: ${V.text}`):V.target==="setimmediate"?u.postMessage(V):Y==="callHandler"?f[V.handler](...V.args):Y&&Ae(`worker sent an unknown command ${Y}`)},u.onerror=V=>{throw Ae(`worker sent an error! ${V.filename}:${V.lineno}: ${V.message}`),V},W&&(u.on("message",V=>u.onmessage({data:V})),u.on("error",V=>u.onerror(V)));var $=[],A=["onExit"],z;for(z of A)f.hasOwnProperty(z)&&$.push(z);u.postMessage({cmd:"load",handlers:$,urlOrBlob:f.mainScriptUrlOrBlob||e,wasmMemory:fe,wasmModule:Fe})})};f.PThread=we;var Br=u=>{for(;0<u.length;)u.shift()(f)};f.establishStackSpace=()=>{var u=wr(),g=h()[u+52>>>2>>>0];u=h()[u+56>>>2>>>0],rn(g,g-u),_r(g)};function zr(u){if(M)return qe(1,0,u);zt(u)}f.invokeEntryPoint=(u,g)=>{u=nn.apply(null,[u,g]),0<Xt?we.Tb(u):Yr(u)};function La(u){this.Db=u-24,this.tc=function(g){h()[this.Db+4>>>2>>>0]=g},this.Mb=function(g){h()[this.Db+8>>>2>>>0]=g},this.Ib=function(g,$){this.Kb(),this.tc(g),this.Mb($)},this.Kb=function(){h()[this.Db+16>>>2>>>0]=0}}var Tn=0,Fa=0;function An(u,g,$,A){return M?qe(2,1,u,g,$,A):En(u,g,$,A)}function En(u,g,$,A){if(u>>>=0,g>>>=0,$>>>=0,A>>>=0,typeof SharedArrayBuffer>"u")return Ae("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var z=[];return M&&z.length===0?An(u,g,$,A):(u={lc:$,xb:u,Wb:A,rc:z},M?(u.uc="spawnThread",postMessage(u,z),0):Rr(u))}function kn(u,g,$){return M?qe(3,1,u,g,$):0}function j(u,g){if(M)return qe(4,1,u,g)}var mr=u=>{for(var g=0,$=0;$<u.length;++$){var A=u.charCodeAt($);127>=A?g++:2047>=A?g+=2:55296<=A&&57343>=A?(g+=4,++$):g+=3}return g},Mr=(u,g,$,A)=>{if($>>>=0,!(0<A))return 0;var z=$;A=$+A-1;for(var V=0;V<u.length;++V){var Y=u.charCodeAt(V);if(55296<=Y&&57343>=Y){var re=u.charCodeAt(++V);Y=65536+((Y&1023)<<10)|re&1023}if(127>=Y){if($>=A)break;g[$++>>>0]=Y}else{if(2047>=Y){if($+1>=A)break;g[$++>>>0]=192|Y>>6}else{if(65535>=Y){if($+2>=A)break;g[$++>>>0]=224|Y>>12}else{if($+3>=A)break;g[$++>>>0]=240|Y>>18,g[$++>>>0]=128|Y>>12&63}g[$++>>>0]=128|Y>>6&63}g[$++>>>0]=128|Y&63}}return g[$>>>0]=0,$-z},Dr=(u,g,$)=>Mr(u,o(),g,$);function H(u,g){if(M)return qe(5,1,u,g)}function er(u,g,$){if(M)return qe(6,1,u,g,$)}function L(u,g,$){return M?qe(7,1,u,g,$):0}function F(u,g){if(M)return qe(8,1,u,g)}function fi(u,g,$){if(M)return qe(9,1,u,g,$)}function mi(u,g,$,A){if(M)return qe(10,1,u,g,$,A)}function hi(u,g,$,A){if(M)return qe(11,1,u,g,$,A)}function gi(u,g,$,A){if(M)return qe(12,1,u,g,$,A)}function yi(u){if(M)return qe(13,1,u)}function bi(u,g){if(M)return qe(14,1,u,g)}function vi(u,g,$){if(M)return qe(15,1,u,g,$)}var wi=u=>{if(u===null)return"null";var g=typeof u;return g==="object"||g==="array"||g==="function"?u.toString():""+u},_i,xt=u=>{for(var g="";o()[u>>>0];)g+=_i[o()[u++>>>0]];return g},jr={},Ur={},On={},Nt;function Pn(u,g,$={}){var A=g.name;if(!u)throw new Nt(`type "${A}" must have a positive integer typeid pointer`);if(Ur.hasOwnProperty(u)){if($.Zb)return;throw new Nt(`Cannot register type '${A}' twice`)}Ur[u]=g,delete On[u],jr.hasOwnProperty(u)&&(g=jr[u],delete jr[u],g.forEach(z=>z()))}function Mt(u,g,$={}){if(!("argPackAdvance"in g))throw new TypeError("registerType registeredInstance requires argPackAdvance");Pn(u,g,$)}var $i=(u,g,$)=>{switch(g){case 1:return $?A=>r()[A>>>0>>>0]:A=>o()[A>>>0>>>0];case 2:return $?A=>s()[A>>>1>>>0]:A=>c()[A>>>1>>>0];case 4:return $?A=>d()[A>>>2>>>0]:A=>h()[A>>>2>>>0];case 8:return $?A=>et[A>>>3]:A=>ut[A>>>3];default:throw new TypeError(`invalid integer width (${g}): ${u}`)}};function Ci(){this.wb=[void 0],this.Nb=[]}var vt=new Ci;function Nr(u){u>>>=0,u>=vt.Db&&--vt.get(u).Rb===0&&vt.Mb(u)}var ct=u=>{if(!u)throw new Nt("Cannot use deleted val. handle = "+u);return vt.get(u).value},St=u=>{switch(u){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return vt.Kb({Rb:1,value:u})}};function xi(u){return this.fromWireType(d()[u>>>2>>>0])}var Rn=(u,g)=>{switch(g){case 4:return function($){return this.fromWireType(y()[$>>>2>>>0])};case 8:return function($){return this.fromWireType(w()[$>>>3>>>0])};default:throw new TypeError(`invalid float width (${g}): ${u}`)}};function Bn(u){return this.fromWireType(h()[u>>>2>>>0])}var Si=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,zn=(u,g)=>{for(var $=u>>1,A=$+g/2;!($>=A)&&c()[$>>>0];)++$;if($<<=1,32<$-u&&Si)return Si.decode(o().slice(u,$));for($="",A=0;!(A>=g/2);++A){var z=s()[u+2*A>>>1>>>0];if(z==0)break;$+=String.fromCharCode(z)}return $},Mn=(u,g,$)=>{if($??=2147483647,2>$)return 0;$-=2;var A=g;$=$<2*u.length?$/2:u.length;for(var z=0;z<$;++z){var V=u.charCodeAt(z);s()[g>>>1>>>0]=V,g+=2}return s()[g>>>1>>>0]=0,g-A},Dn=u=>2*u.length,jn=(u,g)=>{for(var $=0,A="";!($>=g/4);){var z=d()[u+4*$>>>2>>>0];if(z==0)break;++$,65536<=z?(z-=65536,A+=String.fromCharCode(55296|z>>10,56320|z&1023)):A+=String.fromCharCode(z)}return A},Un=(u,g,$)=>{if(g>>>=0,$??=2147483647,4>$)return 0;var A=g;$=A+$-4;for(var z=0;z<u.length;++z){var V=u.charCodeAt(z);if(55296<=V&&57343>=V){var Y=u.charCodeAt(++z);V=65536+((V&1023)<<10)|Y&1023}if(d()[g>>>2>>>0]=V,g+=4,g+4>$)break}return d()[g>>>2>>>0]=0,g-A},Nn=u=>{for(var g=0,$=0;$<u.length;++$){var A=u.charCodeAt($);55296<=A&&57343>=A&&++$,g+=4}return g},Ii=()=>{if(!(0<Xt))try{M?Yr(xe):zt(xe)}catch(u){Ct(u)}};function Wr(u){u>>>=0,typeof Atomics.sc=="function"&&(Atomics.sc(d(),u>>>2,u).value.then(hr),u+=128,Atomics.store(d(),u>>>2,1))}f.__emscripten_thread_mailbox_await=Wr;var hr=()=>{var u=wr();if(u&&(Wr(u),!Me))try{tn(),Ii()}catch(g){Ct(g)}};f.checkMailbox=hr;var Vr=[],Gr=(u,g)=>{var $=Ur[u];if($===void 0)throw u=Qi(u),$=xt(u),Ot(u),new Nt(g+" has unknown type "+$);return $},Ti=(u,g,$)=>{var A=[];return u=u.toWireType(A,$),A.length&&(h()[g>>>2>>>0]=St(A)),u},gr=u=>{try{u()}catch(g){at(g)}};function Wn(){var u=me,g={};for(let[$,A]of Object.entries(u))g[$]=typeof A=="function"?function(){yr.push($);try{return A.apply(null,arguments)}finally{Me||(yr.pop(),kt&&Wt===1&&yr.length===0&&(Wt=0,Xt+=1,gr(on),typeof Fibers<"u"&&Fibers.xc()))}}:A;return g}var Wt=0,kt=null,Ai=0,yr=[],Ei={},ki={},Vn=0,Hr=null,Gn=[];function Hn(){return new Promise((u,g)=>{Hr={resolve:u,reject:g}})}function Ln(){var u=sr(65548),g=u+12;h()[u>>>2>>>0]=g,h()[u+4>>>2>>>0]=g+65536,g=yr[0];var $=Ei[g];return $===void 0&&($=Vn++,Ei[g]=$,ki[$]=g),g=$,d()[u+8>>>2>>>0]=g,u}function Fn(){var u=d()[kt+8>>>2>>>0];return u=me[ki[u]],--Xt,u()}function qn(u){if(!Me){if(Wt===0){var g=!1,$=!1;u((A=0)=>{if(!Me&&(Ai=A,g=!0,$)){Wt=2,gr(()=>sn(kt)),typeof Browser<"u"&&Browser.Jb.Yb&&Browser.Jb.resume(),A=!1;try{var z=Fn()}catch(re){z=re,A=!0}var V=!1;if(!kt){var Y=Hr;Y&&(Hr=null,(A?Y.reject:Y.resolve)(z),V=!0)}if(A&&!V)throw z}}),$=!0,g||(Wt=1,kt=Ln(),typeof Browser<"u"&&Browser.Jb.Yb&&Browser.Jb.pause(),gr(()=>an(kt)))}else Wt===2?(Wt=0,gr(un),Ot(kt),kt=null,Gn.forEach(A=>{if(!Me)try{A(),Ii()}catch(z){Ct(z)}})):at(`invalid state: ${Wt}`);return Ai}}function Oi(u){return qn(g=>{u().then(g)})}var br=[],Kn={},Lr=u=>{var g=Kn[u];return g===void 0?xt(u):g},Pi=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Jn=u=>{var g=br.length;return br.push(u),g},Yn=(u,g)=>{for(var $=Array(u),A=0;A<u;++A)$[A]=Gr(h()[g+4*A>>>2>>>0],"parameter "+A);return $},Ri=(u,g)=>Object.defineProperty(g,"name",{value:u});function Zn(u){var g=Function;if(!(g instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof g} which is not a function`);var $=Ri(g.name||"unknownFunctionName",function(){});return $.prototype=g.prototype,$=new $,u=g.apply($,u),u instanceof Object?u:$}var tr=u=>u%4===0&&(u%100!==0||u%400===0),Bi=[0,31,60,91,121,152,182,213,244,274,305,335],zi=[0,31,59,90,120,151,181,212,243,273,304,334];function Mi(u,g,$,A,z,V,Y){return M?qe(16,1,u,g,$,A,z,V,Y):-52}function Di(u,g,$,A,z,V){if(M)return qe(17,1,u,g,$,A,z,V)}var ji=u=>{var g=mr(u)+1,$=sr(g);return $&&Dr(u,$,g),$},Fr=[],Ui=(u,g)=>{Fr.length=0;for(var $;$=o()[u++>>>0];){var A=$!=105;A&=$!=112,g+=A&&g%8?4:0,Fr.push($==112?h()[g>>>2>>>0]:$==106?et[g>>>3]:$==105?d()[g>>>2>>>0]:w()[g>>>3>>>0]),g+=A?8:4}return Fr},qr={},Ni=()=>{if(!Kr){var u={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:O||"./this.program"},g;for(g in qr)qr[g]===void 0?delete u[g]:u[g]=qr[g];var $=[];for(g in u)$.push(`${g}=${u[g]}`);Kr=$}return Kr},Kr;function Wi(u,g){if(M)return qe(18,1,u,g);u>>>=0,g>>>=0;var $=0;return Ni().forEach((A,z)=>{var V=g+$;for(z=h()[u+4*z>>>2>>>0]=V,V=0;V<A.length;++V)r()[z++>>>0>>>0]=A.charCodeAt(V);r()[z>>>0>>>0]=0,$+=A.length+1}),0}function Vi(u,g){if(M)return qe(19,1,u,g);u>>>=0,g>>>=0;var $=Ni();h()[u>>>2>>>0]=$.length;var A=0;return $.forEach(z=>A+=z.length+1),h()[g>>>2>>>0]=A,0}function Gi(u){return M?qe(20,1,u):52}function Hi(u,g,$,A){return M?qe(21,1,u,g,$,A):52}function Li(u,g,$,A){return M?qe(22,1,u,g,$,A):70}var Qn=[null,[],[]];function Fi(u,g,$,A){if(M)return qe(23,1,u,g,$,A);g>>>=0,$>>>=0,A>>>=0;for(var z=0,V=0;V<$;V++){var Y=h()[g>>>2>>>0],re=h()[g+4>>>2>>>0];g+=8;for(var ce=0;ce<re;ce++){var le=o()[Y+ce>>>0],_e=Qn[u];le===0||le===10?((u===1?Ne:Ae)(pi(_e,0)),_e.length=0):_e.push(le)}z+=re}return h()[A>>>2>>>0]=z,0}var qi=[31,29,31,30,31,30,31,31,30,31,30,31],Ki=[31,28,31,30,31,30,31,31,30,31,30,31];function Xn(u){var g=Array(mr(u)+1);return Mr(u,g,0,g.length),g}var ea=(u,g)=>{r().set(u,g>>>0)};function Ji(u,g,$,A){function z(K,$e,je){for(K=typeof K=="number"?K.toString():K||"";K.length<$e;)K=je[0]+K;return K}function V(K,$e){return z(K,$e,"0")}function Y(K,$e){function je(dn){return 0>dn?-1:0<dn?1:0}var Ft;return(Ft=je(K.getFullYear()-$e.getFullYear()))===0&&(Ft=je(K.getMonth()-$e.getMonth()))===0&&(Ft=je(K.getDate()-$e.getDate())),Ft}function re(K){switch(K.getDay()){case 0:return new Date(K.getFullYear()-1,11,29);case 1:return K;case 2:return new Date(K.getFullYear(),0,3);case 3:return new Date(K.getFullYear(),0,2);case 4:return new Date(K.getFullYear(),0,1);case 5:return new Date(K.getFullYear()-1,11,31);case 6:return new Date(K.getFullYear()-1,11,30)}}function ce(K){var $e=K.Ab;for(K=new Date(new Date(K.Bb+1900,0,1).getTime());0<$e;){var je=K.getMonth(),Ft=(tr(K.getFullYear())?qi:Ki)[je];if($e>Ft-K.getDate())$e-=Ft-K.getDate()+1,K.setDate(1),11>je?K.setMonth(je+1):(K.setMonth(0),K.setFullYear(K.getFullYear()+1));else{K.setDate(K.getDate()+$e);break}}return je=new Date(K.getFullYear()+1,0,4),$e=re(new Date(K.getFullYear(),0,4)),je=re(je),0>=Y($e,K)?0>=Y(je,K)?K.getFullYear()+1:K.getFullYear():K.getFullYear()-1}u>>>=0,g>>>=0,$>>>=0,A>>>=0;var le=h()[A+40>>>2>>>0];A={pc:d()[A>>>2>>>0],oc:d()[A+4>>>2>>>0],Gb:d()[A+8>>>2>>>0],Lb:d()[A+12>>>2>>>0],Hb:d()[A+16>>>2>>>0],Bb:d()[A+20>>>2>>>0],vb:d()[A+24>>>2>>>0],Ab:d()[A+28>>>2>>>0],wc:d()[A+32>>>2>>>0],nc:d()[A+36>>>2>>>0],qc:le?lt(le):""},$=lt($),le={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var _e in le)$=$.replace(new RegExp(_e,"g"),le[_e]);var ke="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),We="January February March April May June July August September October November December".split(" ");le={"%a":K=>ke[K.vb].substring(0,3),"%A":K=>ke[K.vb],"%b":K=>We[K.Hb].substring(0,3),"%B":K=>We[K.Hb],"%C":K=>V((K.Bb+1900)/100|0,2),"%d":K=>V(K.Lb,2),"%e":K=>z(K.Lb,2," "),"%g":K=>ce(K).toString().substring(2),"%G":K=>ce(K),"%H":K=>V(K.Gb,2),"%I":K=>(K=K.Gb,K==0?K=12:12<K&&(K-=12),V(K,2)),"%j":K=>{for(var $e=0,je=0;je<=K.Hb-1;$e+=(tr(K.Bb+1900)?qi:Ki)[je++]);return V(K.Lb+$e,3)},"%m":K=>V(K.Hb+1,2),"%M":K=>V(K.oc,2),"%n":()=>`
`,"%p":K=>0<=K.Gb&&12>K.Gb?"AM":"PM","%S":K=>V(K.pc,2),"%t":()=>"	","%u":K=>K.vb||7,"%U":K=>V(Math.floor((K.Ab+7-K.vb)/7),2),"%V":K=>{var $e=Math.floor((K.Ab+7-(K.vb+6)%7)/7);if(2>=(K.vb+371-K.Ab-2)%7&&$e++,$e)$e==53&&(je=(K.vb+371-K.Ab)%7,je==4||je==3&&tr(K.Bb)||($e=1));else{$e=52;var je=(K.vb+7-K.Ab-1)%7;(je==4||je==5&&tr(K.Bb%400-1))&&$e++}return V($e,2)},"%w":K=>K.vb,"%W":K=>V(Math.floor((K.Ab+7-(K.vb+6)%7)/7),2),"%y":K=>(K.Bb+1900).toString().substring(2),"%Y":K=>K.Bb+1900,"%z":K=>{K=K.nc;var $e=0<=K;return K=Math.abs(K)/60,($e?"+":"-")+("0000"+(K/60*100+K%60)).slice(-4)},"%Z":K=>K.qc,"%%":()=>"%"},$=$.replace(/%%/g,"\0\0");for(_e in le)$.includes(_e)&&($=$.replace(new RegExp(_e,"g"),le[_e](A)));return $=$.replace(/\0\0/g,"%"),_e=Xn($),_e.length>g?0:(ea(_e,u),_e.length-1)}we.Ib();for(var Yi=Array(256),vr=0;256>vr;++vr)Yi[vr]=String.fromCharCode(vr);_i=Yi,Nt=f.BindingError=class extends Error{constructor(u){super(u),this.name="BindingError"}},f.InternalError=class extends Error{constructor(u){super(u),this.name="InternalError"}},Object.assign(Ci.prototype,{get(u){return this.wb[u]},has(u){return this.wb[u]!==void 0},Kb(u){var g=this.Nb.pop()||this.wb.length;return this.wb[g]=u,g},Mb(u){this.wb[u]=void 0,this.Nb.push(u)}}),vt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),vt.Db=vt.wb.length,f.count_emval_handles=()=>{for(var u=0,g=vt.Db;g<vt.wb.length;++g)vt.wb[g]!==void 0&&++u;return u};var ta=[xn,zr,An,kn,j,H,er,L,F,fi,mi,hi,gi,yi,bi,vi,Mi,Di,Wi,Vi,Gi,Hi,Li,Fi],ra={ua:function(u,g,$){return Oi(async()=>{await f.dc(u,g,$)})},b:function(u,g,$){throw u>>>=0,new La(u).Ib(g>>>0,$>>>0),Tn=u,Fa++,Tn},fa:function(u){Xi(u>>>0,!B,1,!N,131072,!1),we.Ub()},D:function(u){u>>>=0,M?postMessage({cmd:"cleanupThread",thread:u}):we.Sb(we.pb[u])},X:En,z:kn,la:j,T:H,V:er,ma:L,ja:F,ca:fi,ia:mi,H:hi,U:gi,R:yi,ka:bi,S:vi,K:function(u,g,$,A,z){u>>>=0,g>>>=0,$>>>=0,g=xt(g);var V=g.indexOf("u")!=-1;V&&(z=(1n<<64n)-1n),Mt(u,{name:g,fromWireType:Y=>Y,toWireType:function(Y,re){if(typeof re!="bigint"&&typeof re!="number")throw new TypeError(`Cannot convert "${wi(re)}" to ${this.name}`);if(re<A||re>z)throw new TypeError(`Passing a number "${wi(re)}" from JS side to C/C++ side to an argument of type "${g}", which is outside the valid range [${A}, ${z}]!`);return re},argPackAdvance:8,readValueFromPointer:$i(g,$,!V),Cb:null})},sa:function(u,g,$,A){u>>>=0,g=xt(g>>>0),Mt(u,{name:g,fromWireType:function(z){return!!z},toWireType:function(z,V){return V?$:A},argPackAdvance:8,readValueFromPointer:function(z){return this.fromWireType(o()[z>>>0])},Cb:null})},ra:function(u,g){u>>>=0,g=xt(g>>>0),Mt(u,{name:g,fromWireType:$=>{var A=ct($);return Nr($),A},toWireType:($,A)=>St(A),argPackAdvance:8,readValueFromPointer:xi,Cb:null})},J:function(u,g,$){u>>>=0,$>>>=0,g=xt(g>>>0),Mt(u,{name:g,fromWireType:A=>A,toWireType:(A,z)=>z,argPackAdvance:8,readValueFromPointer:Rn(g,$),Cb:null})},v:function(u,g,$,A,z){if(u>>>=0,$>>>=0,g=xt(g>>>0),z===-1&&(z=4294967295),z=re=>re,A===0){var V=32-8*$;z=re=>re<<V>>>V}var Y=g.includes("unsigned")?function(re,ce){return ce>>>0}:function(re,ce){return ce};Mt(u,{name:g,fromWireType:z,toWireType:Y,argPackAdvance:8,readValueFromPointer:$i(g,$,A!==0),Cb:null})},o:function(u,g,$){function A(V){var Y=h()[V>>>2>>>0];return V=h()[V+4>>>2>>>0],new z(r().buffer,V,Y)}u>>>=0;var z=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][g];$=xt($>>>0),Mt(u,{name:$,fromWireType:A,argPackAdvance:8,readValueFromPointer:A},{Zb:!0})},L:function(u,g){u>>>=0,g=xt(g>>>0);var $=g==="std::string";Mt(u,{name:g,fromWireType:function(A){var z=h()[A>>>2>>>0],V=A+4;if($)for(var Y=V,re=0;re<=z;++re){var ce=V+re;if(re==z||o()[ce>>>0]==0){if(Y=lt(Y,ce-Y),le===void 0)var le=Y;else le+=String.fromCharCode(0),le+=Y;Y=ce+1}}else{for(le=Array(z),re=0;re<z;++re)le[re]=String.fromCharCode(o()[V+re>>>0]);le=le.join("")}return Ot(A),le},toWireType:function(A,z){z instanceof ArrayBuffer&&(z=new Uint8Array(z));var V=typeof z=="string";if(!(V||z instanceof Uint8Array||z instanceof Uint8ClampedArray||z instanceof Int8Array))throw new Nt("Cannot pass non-string to std::string");var Y=$&&V?mr(z):z.length,re=sr(4+Y+1),ce=re+4;if(h()[re>>>2>>>0]=Y,$&&V)Dr(z,ce,Y+1);else if(V)for(V=0;V<Y;++V){var le=z.charCodeAt(V);if(255<le)throw Ot(ce),new Nt("String has UTF-16 code units that do not fit in 8 bits");o()[ce+V>>>0]=le}else for(V=0;V<Y;++V)o()[ce+V>>>0]=z[V];return A!==null&&A.push(Ot,re),re},argPackAdvance:8,readValueFromPointer:Bn,Cb(A){Ot(A)}})},B:function(u,g,$){if(u>>>=0,g>>>=0,$>>>=0,$=xt($),g===2)var A=zn,z=Mn,V=Dn,Y=()=>c(),re=1;else g===4&&(A=jn,z=Un,V=Nn,Y=()=>h(),re=2);Mt(u,{name:$,fromWireType:ce=>{for(var le=h()[ce>>>2>>>0],_e=Y(),ke,We=ce+4,K=0;K<=le;++K){var $e=ce+4+K*g;(K==le||_e[$e>>>re]==0)&&(We=A(We,$e-We),ke===void 0?ke=We:(ke+=String.fromCharCode(0),ke+=We),We=$e+g)}return Ot(ce),ke},toWireType:(ce,le)=>{if(typeof le!="string")throw new Nt(`Cannot pass non-string to C++ string type ${$}`);var _e=V(le),ke=sr(4+_e+g);return h()[ke>>>2]=_e>>re,z(le,ke+4,_e+g),ce!==null&&ce.push(Ot,ke),ke},argPackAdvance:8,readValueFromPointer:xi,Cb(ce){Ot(ce)}})},ta:function(u,g){u>>>=0,g=xt(g>>>0),Mt(u,{$b:!0,name:g,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,P:function(u,g){u>>>=0,u==g>>>0?setTimeout(()=>hr()):M?postMessage({targetThread:u,cmd:"checkMailbox"}):(u=we.pb[u])&&u.postMessage({cmd:"checkMailbox"})},Y:function(u,g,$,A){g>>>=0,$/=2,Vr.length=$,A=A>>>0>>>3;for(var z=0;z<$;z++)Vr[z]=et[A+2*z]?et[A+2*z+1]:w()[A+2*z+1>>>0];return u=0>u?Or[-u-1]:ta[u],we.Xb=g,g=u.apply(null,Vr),we.Xb=0,g},ea:Wr,pa:function(u){W&&we.pb[u>>>0].ref()},t:function(u,g,$){return g>>>=0,$>>>=0,u=ct(u>>>0),g=Gr(g,"emval::as"),Ti(g,$,u)},y:function(u){return u>>>=0,Oi(()=>(u=ct(u),u.then(St)))},p:function(u,g,$,A){return $>>>=0,A>>>=0,u=br[u>>>0],g=ct(g>>>0),u(null,g,$,A)},k:function(u,g,$,A,z){return $>>>=0,A>>>=0,z>>>=0,u=br[u>>>0],g=ct(g>>>0),$=Lr($),u(g,g[$],A,z)},c:Nr,C:function(u,g){return g>>>=0,u=ct(u>>>0),g=ct(g),u==g},n:function(u){return u>>>=0,u===0?St(Pi()):(u=Lr(u),St(Pi()[u]))},j:function(u,g,$){g=Yn(u,g>>>0);var A=g.shift();u--;var z=`return function (obj, func, destructorsRef, args) {
`,V=0,Y=[];$===0&&Y.push("obj");for(var re=["retType"],ce=[A],le=0;le<u;++le)Y.push("arg"+le),re.push("argType"+le),ce.push(g[le]),z+=`  var arg${le} = argType${le}.readValueFromPointer(args${V?"+"+V:""});
`,V+=g[le].argPackAdvance;for(z+=`  var rv = ${$===1?"new func":"func.call"}(${Y.join(", ")});
`,le=0;le<u;++le)g[le].deleteObject&&(z+=`  argType${le}.deleteObject(arg${le});
`);return A.$b||(re.push("emval_returnValue"),ce.push(Ti),z+=`  return emval_returnValue(retType, destructorsRef, rv);
`),re.push(z+`};
`),u=Zn(re).apply(null,ce),$=`methodCaller<(${g.map(_e=>_e.name).join(", ")}) => ${A.name}>`,Jn(Ri($,u))},s:function(u,g){return g>>>=0,u=ct(u>>>0),g=ct(g),St(u[g])},e:function(u){u>>>=0,4<u&&(vt.get(u).Rb+=1)},w:function(){return St([])},m:function(u){u=ct(u>>>0);for(var g=Array(u.length),$=0;$<u.length;$++)g[$]=u[$];return St(g)},g:function(u){return St(Lr(u>>>0))},l:function(){return St({})},i:function(u){u>>>=0;for(var g=ct(u);g.length;){var $=g.pop();g.pop()($)}Nr(u)},h:function(u,g,$){g>>>=0,$>>>=0,u=ct(u>>>0),g=ct(g),$=ct($),u[g]=$},d:function(u,g){return g>>>=0,u=Gr(u>>>0,"_emval_take_value"),u=u.readValueFromPointer(g),St(u)},$:function(u,g){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),g>>>=0,u=new Date(1e3*u),d()[g>>>2>>>0]=u.getUTCSeconds(),d()[g+4>>>2>>>0]=u.getUTCMinutes(),d()[g+8>>>2>>>0]=u.getUTCHours(),d()[g+12>>>2>>>0]=u.getUTCDate(),d()[g+16>>>2>>>0]=u.getUTCMonth(),d()[g+20>>>2>>>0]=u.getUTCFullYear()-1900,d()[g+24>>>2>>>0]=u.getUTCDay(),u=(u.getTime()-Date.UTC(u.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,d()[g+28>>>2>>>0]=u},aa:function(u,g){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),g>>>=0,u=new Date(1e3*u),d()[g>>>2>>>0]=u.getSeconds(),d()[g+4>>>2>>>0]=u.getMinutes(),d()[g+8>>>2>>>0]=u.getHours(),d()[g+12>>>2>>>0]=u.getDate(),d()[g+16>>>2>>>0]=u.getMonth(),d()[g+20>>>2>>>0]=u.getFullYear()-1900,d()[g+24>>>2>>>0]=u.getDay();var $=(tr(u.getFullYear())?Bi:zi)[u.getMonth()]+u.getDate()-1|0;d()[g+28>>>2>>>0]=$,d()[g+36>>>2>>>0]=-(60*u.getTimezoneOffset()),$=new Date(u.getFullYear(),6,1).getTimezoneOffset();var A=new Date(u.getFullYear(),0,1).getTimezoneOffset();u=($!=A&&u.getTimezoneOffset()==Math.min(A,$))|0,d()[g+32>>>2>>>0]=u},ba:function(u){u>>>=0;var g=new Date(d()[u+20>>>2>>>0]+1900,d()[u+16>>>2>>>0],d()[u+12>>>2>>>0],d()[u+8>>>2>>>0],d()[u+4>>>2>>>0],d()[u>>>2>>>0],0),$=d()[u+32>>>2>>>0],A=g.getTimezoneOffset(),z=new Date(g.getFullYear(),6,1).getTimezoneOffset(),V=new Date(g.getFullYear(),0,1).getTimezoneOffset(),Y=Math.min(V,z);return 0>$?d()[u+32>>>2>>>0]=+(z!=V&&Y==A):0<$!=(Y==A)&&(z=Math.max(V,z),g.setTime(g.getTime()+6e4*((0<$?Y:z)-A))),d()[u+24>>>2>>>0]=g.getDay(),$=(tr(g.getFullYear())?Bi:zi)[g.getMonth()]+g.getDate()-1|0,d()[u+28>>>2>>>0]=$,d()[u>>>2>>>0]=g.getSeconds(),d()[u+4>>>2>>>0]=g.getMinutes(),d()[u+8>>>2>>>0]=g.getHours(),d()[u+12>>>2>>>0]=g.getDate(),d()[u+16>>>2>>>0]=g.getMonth(),d()[u+20>>>2>>>0]=g.getYear(),u=g.getTime(),isNaN(u)?(d()[Zi()>>>2>>>0]=61,u=-1):u/=1e3,BigInt(u)},Z:Mi,_:Di,O:function(u,g,$){function A(le){return(le=le.toTimeString().match(/\(([A-Za-z ]+)\)$/))?le[1]:"GMT"}u>>>=0,g>>>=0,$>>>=0;var z=new Date().getFullYear(),V=new Date(z,0,1),Y=new Date(z,6,1);z=V.getTimezoneOffset();var re=Y.getTimezoneOffset(),ce=Math.max(z,re);h()[u>>>2>>>0]=60*ce,d()[g>>>2>>>0]=+(z!=re),u=A(V),g=A(Y),u=ji(u),g=ji(g),re<z?(h()[$>>>2>>>0]=u,h()[$+4>>>2>>>0]=g):(h()[$>>>2>>>0]=g,h()[$+4>>>2>>>0]=u)},q:()=>{at("")},f:function(u,g,$){return u>>>=0,g=Ui(g>>>0,$>>>0),Or[u].apply(null,g)},M:function(u,g,$){return u>>>=0,g=Ui(g>>>0,$>>>0),Or[u].apply(null,g)},E:()=>{},I:()=>Date.now(),oa:()=>{throw Xt+=1,"unwind"},Q:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>W?($u(),ur(_u)).cpus().length:navigator.hardwareConcurrency,N:function(u){u>>>=0;var g=o().length;if(u<=g||4294901760<u)return!1;for(var $=1;4>=$;$*=2){var A=g*(1+.2/$);A=Math.min(A,u+100663296);var z=Math;A=Math.max(u,A);e:{z=(z.min.call(z,4294901760,A+(65536-A%65536)%65536)-fe.buffer.byteLength+65535)/65536;try{fe.grow(z),ht();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1},ga:Wi,ha:Vi,W:zt,A:Gi,G:Hi,da:Li,F:Fi,a:fe||f.wasmMemory,na:Ji,r:function(u,g,$,A){return Ji(u>>>0,g>>>0,$>>>0,A>>>0)}},me=function(){function u($,A){return me=$.exports,me=Wn(),me=ia(),we.Vb.push(me.bb),bt.unshift(me.va),Fe=A,si(),me}var g={a:ra};if(Rt++,f.instantiateWasm)try{return f.instantiateWasm(g,u)}catch($){Ae(`Module.instantiateWasm callback failed with error: ${$}`),S($)}return di(g,function($){u($.instance,$.module)}).catch(S),{}}();f._OrtInit=(u,g)=>(f._OrtInit=me.wa)(u,g),f._OrtGetLastError=(u,g)=>(f._OrtGetLastError=me.xa)(u,g),f._OrtCreateSessionOptions=(u,g,$,A,z,V,Y,re,ce,le)=>(f._OrtCreateSessionOptions=me.ya)(u,g,$,A,z,V,Y,re,ce,le),f._OrtAppendExecutionProvider=(u,g)=>(f._OrtAppendExecutionProvider=me.za)(u,g),f._OrtAddFreeDimensionOverride=(u,g,$)=>(f._OrtAddFreeDimensionOverride=me.Aa)(u,g,$),f._OrtAddSessionConfigEntry=(u,g,$)=>(f._OrtAddSessionConfigEntry=me.Ba)(u,g,$),f._OrtReleaseSessionOptions=u=>(f._OrtReleaseSessionOptions=me.Ca)(u),f._OrtCreateSession=(u,g,$)=>(f._OrtCreateSession=me.Da)(u,g,$),f._OrtReleaseSession=u=>(f._OrtReleaseSession=me.Ea)(u),f._OrtGetInputOutputCount=(u,g,$)=>(f._OrtGetInputOutputCount=me.Fa)(u,g,$),f._OrtGetInputName=(u,g)=>(f._OrtGetInputName=me.Ga)(u,g),f._OrtGetOutputName=(u,g)=>(f._OrtGetOutputName=me.Ha)(u,g),f._OrtFree=u=>(f._OrtFree=me.Ia)(u),f._OrtCreateTensor=(u,g,$,A,z,V)=>(f._OrtCreateTensor=me.Ja)(u,g,$,A,z,V),f._OrtGetTensorData=(u,g,$,A,z)=>(f._OrtGetTensorData=me.Ka)(u,g,$,A,z),f._OrtReleaseTensor=u=>(f._OrtReleaseTensor=me.La)(u),f._OrtCreateRunOptions=(u,g,$,A)=>(f._OrtCreateRunOptions=me.Ma)(u,g,$,A),f._OrtAddRunConfigEntry=(u,g,$)=>(f._OrtAddRunConfigEntry=me.Na)(u,g,$),f._OrtReleaseRunOptions=u=>(f._OrtReleaseRunOptions=me.Oa)(u),f._OrtCreateBinding=u=>(f._OrtCreateBinding=me.Pa)(u),f._OrtBindInput=(u,g,$)=>(f._OrtBindInput=me.Qa)(u,g,$),f._OrtBindOutput=(u,g,$,A)=>(f._OrtBindOutput=me.Ra)(u,g,$,A),f._OrtClearBoundOutputs=u=>(f._OrtClearBoundOutputs=me.Sa)(u),f._OrtReleaseBinding=u=>(f._OrtReleaseBinding=me.Ta)(u),f._OrtRunWithBinding=(u,g,$,A,z)=>(f._OrtRunWithBinding=me.Ua)(u,g,$,A,z),f._OrtRun=(u,g,$,A,z,V,Y,re)=>(f._OrtRun=me.Va)(u,g,$,A,z,V,Y,re),f._OrtEndProfiling=u=>(f._OrtEndProfiling=me.Wa)(u),f._JsepOutput=(u,g,$)=>(f._JsepOutput=me.Xa)(u,g,$),f._JsepGetNodeName=u=>(f._JsepGetNodeName=me.Ya)(u);var Zi=()=>(Zi=me.Za)(),wr=f._pthread_self=()=>(wr=f._pthread_self=me._a)(),sr=f._malloc=u=>(sr=f._malloc=me.$a)(u),Ot=f._free=u=>(Ot=f._free=me.ab)(u);f.__emscripten_tls_init=()=>(f.__emscripten_tls_init=me.bb)();var Qi=u=>(Qi=me.cb)(u);f.__embind_initialize_bindings=()=>(f.__embind_initialize_bindings=me.db)();var Xi=f.__emscripten_thread_init=(u,g,$,A,z,V)=>(Xi=f.__emscripten_thread_init=me.fb)(u,g,$,A,z,V);f.__emscripten_thread_crashed=()=>(f.__emscripten_thread_crashed=me.gb)();var en=(u,g,$,A)=>(en=me.hb)(u,g,$,A),Jr=u=>(Jr=me.ib)(u),Yr=f.__emscripten_thread_exit=u=>(Yr=f.__emscripten_thread_exit=me.jb)(u),tn=()=>(tn=me.kb)(),rn=(u,g)=>(rn=me.lb)(u,g),Zr=()=>(Zr=me.mb)(),_r=u=>(_r=me.nb)(u),Qr=u=>(Qr=me.ob)(u),nn=f.dynCall_ii=(u,g)=>(nn=f.dynCall_ii=me.qb)(u,g),an=u=>(an=me.rb)(u),on=()=>(on=me.sb)(),sn=u=>(sn=me.tb)(u),un=()=>(un=me.ub)();f.___start_em_js=962083,f.___stop_em_js=962244;function ia(){var u=me;u=Object.assign({},u);var g=A=>()=>A()>>>0,$=A=>z=>A(z)>>>0;return u.Za=g(u.Za),u._a=g(u._a),u.$a=$(u.$a),u.cb=$(u.cb),u.emscripten_main_runtime_thread_id=g(u.emscripten_main_runtime_thread_id),u.mb=g(u.mb),u.ob=$(u.ob),u}f.wasmMemory=fe,f.stackAlloc=Qr,f.stackSave=Zr,f.stackRestore=_r,f.keepRuntimeAlive=()=>0<Xt,f.UTF8ToString=lt,f.stringToUTF8=Dr,f.lengthBytesUTF8=mr,f.ExitStatus=pr,f.PThread=we;var $r;ar=function u(){$r||ln(),$r||(ar=u)};function ln(){if(!(0<Rt))if(M)C(f),M||Br(bt),startWorker(f);else{if(f.preRun)for(typeof f.preRun=="function"&&(f.preRun=[f.preRun]);f.preRun.length;)nt.unshift(f.preRun.shift());Br(nt),0<Rt||$r||($r=!0,f.calledRun=!0,Me||(M||Br(bt),C(f),M||Br(Et)))}}return ln(),t.ready}})();typeof xu=="object"&&typeof no=="object"?no.exports=Cu:typeof define=="function"&&define.amd&&define([],()=>Cu)});var Iu=Xr((Fb,Yh)=>{Yh.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\n'});var Au,Zh,ao,oo,pa,Tu,Qh,Xh,eg,Eu,tt,ei=se(()=>{"use strict";Au=bu();Zh=Su(),oo=!1,pa=!1,Tu=!1,Qh=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Xh=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},eg=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Eu=async e=>{if(oo)return Promise.resolve();if(pa)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Tu)throw new Error("previous call to 'initializeWebAssembly()' failed.");pa=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,s=Qh(r),c=o&&Xh(),d=e.wasmPaths,h=typeof d=="string"?d:void 0,y=eg(c,s),w=typeof d=="object"?d[y]:void 0,f=!1,C=[];if(t>0&&C.push(new Promise(S=>{setTimeout(()=>{f=!0,S()},t)})),C.push(new Promise((S,k)=>{let E=s?Zh:Au,O={locateFile:(D,N)=>{if(s&&D.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Iu()],{type:"text/javascript"}));if(D.endsWith(".wasm")){if(w)return w;let B=h??N;return y==="ort-wasm-simd.wasm"?B+"ort-wasm-simd.jsep.wasm":y==="ort-wasm-simd-threaded.wasm"?B+"ort-wasm-simd-threaded.jsep.wasm":B+y}return N+D}};if(s)if(O.numThreads=r,typeof Blob>"u")O.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let D=`var ortWasmThreaded=${E.toString()};`;O.mainScriptUrlOrBlob=new Blob([D],{type:"text/javascript"})}E(O).then(D=>{pa=!1,oo=!0,ao=D,S()},D=>{pa=!1,Tu=!0,k(D)})})),await Promise.race(C),f)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},tt=()=>{if(oo&&ao)return ao;throw new Error("WebAssembly is not initialized yet.")}});var rt,fn,Ye,fa=se(()=>{"use strict";ei();rt=(e,t)=>{let r=tt(),o=r.lengthBytesUTF8(e)+1,s=r._malloc(o);return r.stringToUTF8(e,s,o),t.push(s),s},fn=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([s,c])=>{let d=t?t+s:s;if(typeof c=="object")fn(c,d+".",r,o);else if(typeof c=="string"||typeof c=="number")o(d,c.toString());else if(typeof c=="boolean")o(d,c?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof c}`)})},Ye=e=>{let t=tt(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let s=t.HEAP32[o/4],c=t.HEAPU32[o/4+1],d=c?t.UTF8ToString(c):"";throw new Error(`${e} ERROR_CODE: ${s}, ERROR_MESSAGE: ${d}`)}finally{t.stackRestore(r)}}});var ku,Ou=se(()=>{"use strict";ei();fa();ku=e=>{let t=tt(),r=0,o=[],s=e||{};try{if(e?.logSeverityLevel===void 0)s.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)s.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(s.terminate=!1);let c=0;return e?.tag!==void 0&&(c=rt(e.tag,o)),r=t._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,c),r===0&&Ye("Can't create run options."),e?.extra!==void 0&&fn(e.extra,"",new WeakSet,(d,h)=>{let y=rt(d,o),w=rt(h,o);t._OrtAddRunConfigEntry(r,y,w)!==0&&Ye(`Can't set a run config entry: ${d} - ${h}.`)}),[r,o]}catch(c){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(d=>t._free(d)),c}}});var tg,rg,ig,ng,Pu,Ru=se(()=>{"use strict";ei();fa();tg=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},rg=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},ig=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},ng=(e,t,r)=>{for(let o of t){let s=typeof o=="string"?o:o.name;switch(s){case"webnn":if(s="WEBNN",typeof o!="string"){let d=o;if(d?.deviceType){let h=rt("deviceType",r),y=rt(d.deviceType,r);tt()._OrtAddSessionConfigEntry(e,h,y)!==0&&Ye(`Can't set a session config entry: 'deviceType' - ${d.deviceType}.`)}if(d?.numThreads){let h=d.numThreads;(typeof h!="number"||!Number.isInteger(h)||h<0)&&(h=0);let y=rt("numThreads",r),w=rt(h.toString(),r);tt()._OrtAddSessionConfigEntry(e,y,w)!==0&&Ye(`Can't set a session config entry: 'numThreads' - ${d.numThreads}.`)}if(d?.powerPreference){let h=rt("powerPreference",r),y=rt(d.powerPreference,r);tt()._OrtAddSessionConfigEntry(e,h,y)!==0&&Ye(`Can't set a session config entry: 'powerPreference' - ${d.powerPreference}.`)}}break;case"webgpu":if(s="JS",typeof o!="string"){let d=o;if(d?.preferredLayout){if(d.preferredLayout!=="NCHW"&&d.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${d.preferredLayout}`);let h=rt("preferredLayout",r),y=rt(d.preferredLayout,r);tt()._OrtAddSessionConfigEntry(e,h,y)!==0&&Ye(`Can't set a session config entry: 'preferredLayout' - ${d.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${s}`)}let c=rt(s,r);tt()._OrtAppendExecutionProvider(e,c)!==0&&Ye(`Can't append execution provider: ${s}.`)}},Pu=e=>{let t=tt(),r=0,o=[],s=e||{};ig(s);try{let c=tg(s.graphOptimizationLevel??"all"),d=rg(s.executionMode??"sequential"),h=typeof s.logId=="string"?rt(s.logId,o):0,y=s.logSeverityLevel??2;if(!Number.isInteger(y)||y<0||y>4)throw new Error(`log serverity level is not valid: ${y}`);let w=s.logVerbosityLevel??0;if(!Number.isInteger(w)||w<0||w>4)throw new Error(`log verbosity level is not valid: ${w}`);let f=typeof s.optimizedModelFilePath=="string"?rt(s.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(c,!!s.enableCpuMemArena,!!s.enableMemPattern,d,!!s.enableProfiling,0,h,y,w,f),r===0&&Ye("Can't create session options."),s.executionProviders&&ng(r,s.executionProviders,o),s.enableGraphCapture!==void 0){if(typeof s.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${s.enableGraphCapture}`);let C=rt("enableGraphCapture",o),S=rt(s.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,C,S)!==0&&Ye(`Can't set a session config entry: 'enableGraphCapture' - ${s.enableGraphCapture}.`)}if(s.freeDimensionOverrides)for(let[C,S]of Object.entries(s.freeDimensionOverrides)){if(typeof C!="string")throw new Error(`free dimension override name must be a string: ${C}`);if(typeof S!="number"||!Number.isInteger(S)||S<0)throw new Error(`free dimension override value must be a non-negative integer: ${S}`);let k=rt(C,o);t._OrtAddFreeDimensionOverride(r,k,S)!==0&&Ye(`Can't set a free dimension override: ${C} - ${S}.`)}return s.extra!==void 0&&fn(s.extra,"",new WeakSet,(C,S)=>{let k=rt(C,o),E=rt(S,o);t._OrtAddSessionConfigEntry(r,k,E)!==0&&Ye(`Can't set a session config entry: ${C} - ${S}.`)}),[r,o]}catch(c){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(d=>t._free(d)),c}}});var so,dr,mn,ma,hn,ha,uo,Ie=se(()=>{"use strict";so=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},dr=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},mn=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],ma=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},hn=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},ha=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",uo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var gn,lo=se(()=>{"use strict";gn=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let s of r)o.push(s);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let s=t.body.getReader(),c;try{c=new ArrayBuffer(o)}catch(h){if(h instanceof RangeError){let y=Math.ceil(o/65536);c=new WebAssembly.Memory({initial:y,maximum:y}).buffer}else throw h}let d=0;for(;;){let{done:h,value:y}=await s.read();if(h)break;let w=y.byteLength;new Uint8Array(c,d,w).set(y),d+=w}return new Uint8Array(c,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}});var ag,og,Bu,zu,Mu,sg,Ge,ir=se(()=>{"use strict";Ie();ag=["V","I","W","E","F"],og=(e,t)=>{console.log(`[${ag[e]},${new Date().toISOString()}]${t}`)},Mu=(e,t)=>{Bu=e,zu=t},sg=(e,t)=>{let r=hn(e),o=hn(Bu);r>=o&&og(r,typeof t=="function"?t():t)},Ge=(...e)=>{zu&&sg(...e)}});var Du,ju=se(()=>{"use strict";Ie();Du=(e,t)=>new(ma(t))(e)});var ga=se(()=>{"use strict"});var ya,ug,Uu,po,co,Wu,Vu=se(()=>{"use strict";ir();ga();ya=e=>Math.ceil(e/16)*16,ug=1,Uu=()=>ug++,po=async(e,t,r,o)=>{let s=ya(r),c=e.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let d=e.getCommandEncoder();e.endComputePass(),d.copyBufferToBuffer(t,0,c,0,s),e.flush(),await c.mapAsync(GPUMapMode.READ);let h=c.getMappedRange();if(o){let y=o();return y.set(new Uint8Array(h,0,r)),y}else return new Uint8Array(h.slice(0,r))}finally{c.destroy()}},co=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(t,r){let o=r.buffer,s=r.byteOffset,c=r.byteLength,d=ya(c),h=this.storageCache.get(t);if(!h)throw new Error("gpu data for uploading does not exist");if(h.originalSize!==c)throw new Error(`inconsistent data size. gpu data size=${h.originalSize}, data size=${c}`);let y=this.backend.device.createBuffer({mappedAtCreation:!0,size:d,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),w=y.getMappedRange();new Uint8Array(w).set(new Uint8Array(o,s,c)),y.unmap();let f=this.backend.getCommandEncoder();this.backend.endComputePass(),f.copyBufferToBuffer(y,0,h.gpuData.buffer,0,d),Ge("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(y)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let c=ya(o.originalSize),d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(o.gpuData.buffer,0,s.gpuData.buffer,0,c)}registerExternalBuffer(t,r,o){let s;if(o){if(s=this.externalBuffers.get(o),s===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ge("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else s=Uu();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,s),Ge("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ge("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=ya(t),s,c=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,d=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(c||d){let y=c?this.freeBuffers:this.freeUniformBuffers,w=y.get(o);w||(w=[],y.set(o,w)),w.length>0?s=w.pop():s=this.backend.device.createBuffer({size:o,usage:r})}else s=this.backend.device.createBuffer({size:o,usage:r});let h={id:Uu(),type:0,buffer:s};return this.storageCache.set(h.id,{gpuData:h,originalSize:t}),Ge("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${h.id}`),h}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ge("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await po(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},Wu=(...e)=>new co(...e)});var fo,Re,mt=se(()=>{"use strict";fo=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},Re=e=>new fo(e)});var mo,qt,Q,Tr,ba,va,wa,Be=se(()=>{"use strict";mo=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},qt=class{static calcShape(t,r,o=!1){let s=t.length,c=r.length;if(s===0)return r;if(c===0)return t;let d=Math.max(t.length,r.length),h=new Array(d);if(o){if(s<2||c<2)return;let y=mo.calcMatMulShape([t[s-2],t[s-1]],[r[c-2],r[c-1]]);if(y===void 0)return;[h[d-2],h[d-1]]=y}for(let y=o?3:1;y<=d;y++){let w=s-y<0?1:t[s-y],f=c-y<0?1:r[c-y];if(w!==f&&w>1&&f>1)return;let C=Math.max(w,f);if(w&&f)h[d-y]=Math.max(w,f);else{if(C>1)return;h[d-y]=0}}return h}static isValidBroadcast(t,r){let o=t.length,s=r.length;if(o>s)return!1;for(let c=1;c<=o;c++)if(t[o-c]!==1&&t[o-c]!==r[s-c])return!1;return!0}},Q=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let o=t.length;if(o===0)return[];let s=new Array(o),c=o-1;for(;c>=0;){if(t[c]%r===0){s[c]=t[c]/r;break}if(r%t[c]!==0)throw new Error("cannot convert shape");s[c]=1,r/=t[c],c--}for(c--;c>=0;c--)s[c]=t[c];return s}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let s=1;for(let c=r;c<o;c++){if(t[c]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");s*=t[c]}return s}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let s=r-3;s>=0;--s)o[s]=o[s+1]*t[s+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((s,c)=>s+r[c]+r[c+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,s)=>o===r[s])}},Tr=class e{static adjustPoolAttributes(t,r,o,s,c,d){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let h=0;h<r.length-2;h++)h>=o.length?o.push(r[h+2]):o[h]=r[h+2];for(let h=0;h<o.length;h++)if(h<s.length){if(s[h]<0)throw new Error("strides should be greater than or equal to 1")}else s.push(1);for(let h=0;h<o.length;h++)if(h<c.length){if(c[h]<0)throw new Error("dilations should be greater than or equal to 1")}else c.push(1);for(let h=0;h<o.length*2;h++)if(h<d.length){if(d[h]<0)throw new Error("pad should be greater than or equal to 1")}else d.push(0);for(let h=0;h<o.length;h++){if(o[h]<=0)throw new Error("kernel shapes need to be greater than 0");if(d[h]>=o[h]||d[h+o.length]>=o[h])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,s,c,d,h){if(h){if(c.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(s.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let y=0;y<t.length-2;y++)e.adjustPadAndReturnShape(t[y+(d?1:2)],r[y],o[y],s[y],c,y,y+t.length-2,h)}}static computePoolOutputShape(t,r,o,s,c,d,h){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let y=[r[0],r[1]];return e.computeShapeHelper(t,r,y,o,s,c,d,h),y}static computeConvOutputShape(t,r,o,s,c,d,h){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let y=[t[0],r[0]];return e.computeShapeHelper(!1,t,y,o,s,c,d,h),y}static computeShapeHelper(t,r,o,s,c,d,h,y){if(t)for(let w=0;w<r.length-2;w++)o.push(1);else for(let w=0;w<r.length-2;w++)o.push(e.adjustPadAndReturnShape(r[w+2],s[w],c[w],d[w],h,w,w+r.length-2,y))}static adjustPadAndReturnShape(t,r,o,s,c,d,h,y){let w=o*(s-1)+1;if(y&&y!=="NOTSET")switch(y){case"VALID":return c[d]=0,c[h]=0,Math.floor((t-w)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let C=((t+r-1)/r-1)*r+s-t;return c[d]=Math.floor(y==="SAME_LOWER"?(C+1)/2:C/2),c[h]=C-c[d],Math.floor((t+C-s)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+c[d]+c[h]-w)/r+1)}},ba=class{static getShapeOfGemmResult(t,r,o,s,c){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let d,h,y;r?(d=t[1],h=t[0]):(d=t[0],h=t[1]);let w=-1;if(s?(y=o[0],w=1):(y=o[1],w=0),o[w]!==h)throw new Error("dimension mismatch");if(d<=0||y<=0||h<=0)throw new Error("invalid shape specified");if(c&&!qt.isValidBroadcast(c,[d,y]))throw new Error("gemm: invalid bias shape for broadcast");return[d,y,h]}},va=-34028234663852886e22,wa=34028234663852886e22});var _a,go,He,Tt,de,Ze,gt,Vt,At,Ce,yo,Z,ue,$a,ho,Gu,ti,Pe=se(()=>{"use strict";Ie();Be();_a=64,go=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},He=(e,t=1)=>{let r=go(e,t);return typeof r=="string"?r:r[0]},Tt=(e,t=1)=>{let r=go(e,t);return typeof r=="string"?r:r[1]},de=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:Q.computeStrides(r)})}),t},Ze=e=>e%4===0?4:e%2===0?2:1,gt=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Vt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,At=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,Ce=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,yo=(e,t,r,o,s)=>{let c=typeof r=="number",d=c?r:r.length,h=[...new Array(d).keys()],y=d<2?"u32":d<=4?`vec${d}<u32>`:`array<u32, ${d}>`,w=go(t,s),f=typeof w=="string"?w:w[1],C=typeof w=="string"?w:w[0],S={indices:y,value:f,storage:C,tensor:t},k=ie=>typeof ie=="string"?ie:`${ie}u`,E={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},O=c?"uniforms.":"",D=`${O}${e}_shape`,N=`${O}${e}_strides`,B="";for(let ie=0;ie<d-1;ie++)B+=`
    let dim${ie} = current / ${Ce(N,ie,d)};
    let rest${ie} = current % ${Ce(N,ie,d)};
    indices[${ie}] = dim${ie};
    current = rest${ie};
    `;B+=`indices[${d-1}] = current;`;let W=d<2?"":`
  fn o2i_${e}(offset: u32) -> ${S.indices} {
    var indices: ${S.indices};
    var current = offset;
    ${B}
    return indices;
  }`,M=ie=>(E.offsetToIndices=!0,d<2?ie:`o2i_${e}(${ie})`),q=[];if(d>=2)for(let ie=d-1;ie>=0;ie--)q.push(`${Ce(N,ie,d)} * (indices[${ie}])`);let X=d<2?"":`
  fn i2o_${e}(indices: ${S.indices}) -> u32 {
    return ${q.join("+")};
  }`,te=ie=>(E.indicesToOffset=!0,d<2?ie:`i2o_${e}(${ie})`),ae=(...ie)=>d===0?"0u":`${S.indices}(${ie.map(k).join(",")})`,J=(ie,he)=>d<2?`${ie}`:`${Ce(ie,he,d)}`,ne=(ie,he,Ee)=>d<2?`${ie}=${Ee};`:`${Ce(ie,he,d)}=${Ee};`,be={},ze=(ie,he)=>{E.broadcastedIndicesToOffset=!0;let Ee=`${he.name}broadcastedIndicesTo${e}Offset`;if(Ee in be)return`${Ee}(${ie})`;let et=[];for(let ut=d-1;ut>=0;ut--){let dt=he.indicesGet("outputIndices",ut+he.rank-d);et.push(`${J(N,ut)} * (${dt} % ${J(D,ut)})`)}return be[Ee]=`fn ${Ee}(outputIndices: ${he.type.indices}) -> u32 {
             return ${et.length>0?et.join("+"):"0u"};
           }`,`${Ee}(${ie})`},Ke=(ie,he)=>(()=>{if(S.storage===S.value)return`${e}[${ie}]=${he};`;if(S.storage==="vec2<u32>"&&S.value==="i32")return`${e}[${ie}]=vec2<u32>(u32(${he}), select(0u, 0xFFFFFFFFu, ${he} < 0));`;if(S.storage==="vec2<u32>"&&S.value==="u32")return`${e}[${ie}]=vec2<u32>(u32(${he}), 0u);`;if(S.storage==="u32"&&S.value==="vec4<bool>")return`${e}[${ie}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${he}));`;throw new Error(`not supported combination of storage type ${S.storage} and value type ${S.value} yet`)})(),Ne=ie=>(()=>{if(S.storage===S.value)return`${e}[${ie}]`;if(S.storage==="vec2<u32>"&&S.value==="i32")return`i32(${e}[${ie}].x)`;if(S.storage==="vec2<u32>"&&S.value==="u32")return`u32(${e}[${ie}].x)`;if(S.storage==="u32"&&S.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${ie}] & 0xFFu), bool(${e}[${ie}] & 0xFF00u), bool(${e}[${ie}] & 0xFF0000u), bool(${e}[${ie}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${S.storage} and value type ${S.value} yet`)})(),Ae=d<2?"":`
  fn get_${e}ByIndices(indices: ${S.indices}) -> ${f} {
    return ${Ne(`i2o_${e}(indices)`)};
  }`,fe=d<2?"":(()=>{let ie=h.map(Ee=>`d${Ee}: u32`).join(", "),he=h.map(Ee=>`d${Ee}`).join(", ");return`
  fn get_${e}(${ie}) -> ${f} {
    return get_${e}ByIndices(${ae(he)});
  }`})(),Fe=(...ie)=>{if(ie.length!==d)throw new Error(`indices length must be ${d}`);let he=ie.map(k).join(",");return d===0?Ne("0u"):d===1?Ne(he[0]):(E.get=!0,E.getByIndices=!0,E.indicesToOffset=!0,`get_${e}(${he})`)},Me=ie=>d<2?Ne(ie):(E.getByIndices=!0,E.indicesToOffset=!0,`get_${e}ByIndices(${ie})`),xe=d<2?"":`
  fn set_${e}ByIndices(indices: ${S.indices}, value: ${f}) {
    ${Ke(`i2o_${e}(indices)`,"value")}
  }`,ge=d<2?"":(()=>{let ie=h.map(Ee=>`d${Ee}: u32`).join(", "),he=h.map(Ee=>`d${Ee}`).join(", ");return`
  fn set_${e}(${ie}, value: ${f}) {
    set_${e}ByIndices(${ae(he)}, value);
  }`})();return{impl:()=>{let ie=[],he=!1;return E.offsetToIndices&&(ie.push(W),he=!0),E.indicesToOffset&&(ie.push(X),he=!0),E.broadcastedIndicesToOffset&&(Object.values(be).forEach(Ee=>ie.push(Ee)),he=!0),E.set&&(ie.push(ge),he=!0),E.setByIndices&&(ie.push(xe),he=!0),E.get&&(ie.push(fe),he=!0),E.getByIndices&&(ie.push(Ae),he=!0),!c&&he&&ie.unshift(`const ${D} = ${S.indices}(${r.join(",")});`,`const ${N} = ${S.indices}(${Q.computeStrides(r).join(",")});`),ie.join(`
`)},type:S,offsetToIndices:M,indicesToOffset:te,broadcastedIndicesToOffset:ze,indices:ae,indicesGet:J,indicesSet:ne,set:(...ie)=>{if(ie.length!==d+1)throw new Error(`indices length must be ${d}`);let he=ie[d];if(typeof he!="string")throw new Error("value must be string");let Ee=ie.slice(0,d).map(k).join(",");return d===0?Ke("0u",he):d===1?Ke(Ee[0],he):(E.set=!0,E.setByIndices=!0,E.indicesToOffset=!0,`set_${e}(${Ee}, ${he})`)},setByOffset:Ke,setByIndices:(ie,he)=>d<2?Ke(ie,he):(E.setByIndices=!0,E.indicesToOffset=!0,`set_${e}ByIndices(${ie}, ${he});`),get:Fe,getByOffset:Ne,getByIndices:Me,usage:o,name:e,strides:N,shape:D,rank:d}},Z=(e,t,r,o=1)=>yo(e,t,r,"input",o),ue=(e,t,r,o=1)=>yo(e,t,r,"output",o),$a=(e,t,r,o=1)=>yo(e,t,r,"internal",o),ho=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=_a){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],s=typeof t=="number"?1:t[2],c=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,d=c?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,h=c?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${s})
  fn main(${d}) {
    ${h}
  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",s=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${s}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:s}of this.uniforms)if(s&&s>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(s/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(s/4)}>`);else{let c=s==null||s===1?o:`vec${s}<${o}>`;t.push(`${r}:${c}`)}return`
      struct Uniforms { ${t.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`
`)+this.internalVariables.map(t=>t.impl()).join(`
`)}},Gu=e=>new ho(e),ti=(e,t)=>{let r=e.length,o=[];for(let s=0;s<r;s++){let c=r-1-s,d=e[c]||1;(t[t.length-1-s]||1)>1&&d===1&&o.unshift(c)}return o}});var lg,Hu,dg,cg,jt,Lu,Fu,ri=se(()=>{"use strict";Ie();Be();mt();Pe();lg=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Hu=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,dg=(e,t)=>Q.sortBasedOnPerm(e,Hu(e.length,t)),cg=(e,t,r,o)=>{let s=[];s.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let c=0;c<t;++c)s.push(r.indicesSet("a",e[c],`i[${c}]`));return s.push("return a;}"),s.join(`
`)},jt=(e,t)=>{let r=e.dataType,o=e.dims.length,s=Hu(o,t),c=dg(e.dims,s),d=ue("output",r,c.length),h=Z("a",r,o),y=w=>`
  ${w.registerUniform("output_size","u32").declareVariables(h,d)}

  ${cg(s,o,h,d)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${d.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${d.setByOffset("global_idx",h.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:w=>{let f=Q.size(c);return{outputs:[{dims:c,dataType:w[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...de(w[0].dims,c)]}},getShaderSource:y}},Lu=(e,t)=>{lg(e.inputs),e.compute(jt(e.inputs[0],t.perm))},Fu=e=>Re({perm:e.perm})});var pg,fg,mg,hg,gg,yg,bg,vg,wg,_g,Kt,qu,Ku,Ju,Yu,Zu,Qu,Xu,el,tl,rl,il=se(()=>{"use strict";Ie();Be();Pe();Ca();ri();pg={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},fg={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},mg={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},hg={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},gg=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},yg=(e,t)=>{let r=[],o=e.length;for(let c=0;c<o;c++)t.indexOf(c)===-1&&r.push(e[c]);let s=t.map(c=>e[c]);return[r,s]},bg=(e,t)=>{let r=e.length+t.length,o=[],s=0;for(let c=0;c<r;c++)t.indexOf(c)===-1?o.push(e[s++]):o.push(1);return o},vg=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},wg=(e,t)=>{let r=[];if(!vg(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},_g=(e,t,r,o,s,c,d)=>{let h=r[0].dims,y=Q.size(c),w=Q.size(d),f=Z("_A",r[0].dataType,h),C=ue("output",s,c),S=32,k=`
          var<workgroup> aBestValues : array<f32, ${S}>;
       `;return{name:e,shaderCache:t,getShaderSource:O=>`
        ${O.registerUniform("reduceSize","u32").declareVariables(f,C)}
        ${k}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${O.mainStart(S)}

          let outputIndex = global_idx / ${S};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${mg[o]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${S}) {
           let candidate = f32(${f.getByOffset("offset + k")});
           bestValue = ${pg[o]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${S}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${fg[o]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${C.setByOffset("outputIndex",`${o==="mean"?`${C.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${C.type.storage}(${hg[o]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:c,dataType:s}],dispatchGroup:{x:y},programUniforms:[{type:12,data:w}]})}},Kt=(e,t,r,o)=>{let s=e.inputs.length===1?r:bo(e.inputs,r),c=s.axes;c.length===0&&!s.noopWithEmptyAxes&&(c=e.inputs[0].dims.map((k,E)=>E));let d=Q.normalizeAxes(c,e.inputs[0].dims.length),h=d,y=e.inputs[0],w=wg(h,e.inputs[0].dims.length);w.length>0&&(y=e.compute(jt(e.inputs[0],w),{inputs:[0],outputs:[-1]})[0],h=gg(h.length,y.dims.length));let[f,C]=yg(y.dims,h),S=f;s.keepDims&&(S=bg(f,d)),e.compute(_g(t,{hint:s.cacheKey,inputDependencies:["type"]},[y],o,e.inputs[0].dataType,S,C),{inputs:[y]})},qu=(e,t)=>{Kt(e,"ReduceMeanShared",t,"mean")},Ku=(e,t)=>{Kt(e,"ReduceL1Shared",t,"l1")},Ju=(e,t)=>{Kt(e,"ReduceL2Shared",t,"l2")},Yu=(e,t)=>{Kt(e,"ReduceLogSumExpShared",t,"logSumExp")},Zu=(e,t)=>{Kt(e,"ReduceMaxShared",t,"max")},Qu=(e,t)=>{Kt(e,"ReduceMinShared",t,"min")},Xu=(e,t)=>{Kt(e,"ReduceProdShared",t,"prod")},el=(e,t)=>{Kt(e,"ReduceSumShared",t,"sum")},tl=(e,t)=>{Kt(e,"ReduceSumSquareShared",t,"sumSquare")},rl=(e,t)=>{Kt(e,"ReduceLogSumShared",t,"logSum")}});var Jt,$g,xa,bo,Yt,Cg,xg,Sg,Ig,Tg,Ag,Eg,kg,Og,Pg,Zt,nl,al,ol,sl,ul,ll,dl,cl,pl,fl,Ca=se(()=>{"use strict";Ie();Be();mt();Pe();il();Jt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},$g=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],xa=(e,t,r,o,s,c,d=!1,h=!1)=>{let y=[],w=r[0].dims,f=w.length,C=Q.normalizeAxes(s,f),S=!h&&C.length===0;w.forEach((D,N)=>{S||C.indexOf(N)>=0?d&&y.push(1):y.push(D)});let k=y.length,E=Q.size(y);return{name:e,shaderCache:t,getShaderSource:D=>{let N=[],B=Z("_A",r[0].dataType,f),W=ue("output",c,k),M=o(B,W,C),q=M[2];for(let X=0,te=0;X<f;X++)S||C.indexOf(X)>=0?(d&&te++,q=`for(var j${X}: u32 = 0; j${X} < ${w[X]}; j${X}++) {
                  ${M[2].includes("last_index")?`let last_index = j${X};`:""}
                  ${B.indicesSet("input_indices",X,`j${X}`)}
                  ${q}
                }`):(N.push(`${B.indicesSet("input_indices",X,W.indicesGet("output_indices",te))};`),te++);return`

        ${D.registerUniform("output_size","u32").declareVariables(B,W)}

        ${D.mainStart()}
          ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${B.type.indices};
          let output_indices = ${W.offsetToIndices("global_idx")};

          ${N.join(`
`)}
          ${M[0]}       // init ops for reduce max/min
          ${M[1]}
          ${q}
          ${M[3]}
          ${M.length===4?W.setByOffset("global_idx","value"):M.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:y,dataType:c}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},...de(w,y)]})}},bo=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),Re({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Yt=(e,t,r,o)=>{let s=e.inputs,c=s.length===1?r:bo(s,r);e.compute(xa(t,{hint:c.cacheKey,inputDependencies:["rank"]},[s[0]],c.noopWithEmptyAxes&&c.axes.length===0?$g:o,c.axes,s[0].dataType,c.keepDims,c.noopWithEmptyAxes),{inputs:[0]})},Cg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceLogSum",t,(o,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},xg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceL1",t,(o,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},Sg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceL2",t,(o,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ig=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceLogSumExp",t,(o,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},Tg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceMax",t,(o,s,c)=>{let d=[];for(let h=0;h<o.rank;h++)(c.indexOf(h)>=0||c.length===0)&&d.push(o.indicesSet("input_indices",h,0));return[`${d.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},Ag=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceMean",t,(o,s,c)=>{let d=1;for(let h=0;h<o.rank;h++)(c.indexOf(h)>=0||c.length===0)&&(d*=e.inputs[0].dims[h]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${d});`]})},Eg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceMin",t,(o,s,c)=>{let d=[];for(let h=0;h<o.rank;h++)(c.indexOf(h)>=0||c.length===0)&&d.push(`input_indices[${h}] = 0;`);return[`${d.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},kg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceProd",t,(o,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},Og=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceSum",t,(o,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Pg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceSumSquare",t,(o,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},Zt=(e,t,r)=>{if(t.length===0)return r;let o=1,s=1;for(let c=0;c<t.length;c++)t.indexOf(c)===-1?o*=e[c]:s*=e[c];return s<32&&o>1024},nl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ag(e,t):qu(e,t)},al=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xg(e,t):Ku(e,t)},ol=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sg(e,t):Ju(e,t)},sl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ig(e,t):Yu(e,t)},ul=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Tg(e,t):Zu(e,t)},ll=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Eg(e,t):Qu(e,t)},dl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?kg(e,t):Xu(e,t)},cl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Og(e,t):el(e,t)},pl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Pg(e,t):tl(e,t)},fl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cg(e,t):rl(e,t)}});var ml,hl,gl,vo,yl=se(()=>{"use strict";Ie();mt();Ca();ml=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},hl=(e,t)=>{ml(e.inputs);let r=(o,s,c)=>{let d=[];for(let h=0;h<o.rank;h++)(c.indexOf(h)>=0||c.length===0)&&d.push(`input_indices[${h}] = 0;`);return[`${d.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${o.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]};e.compute(xa("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},gl=(e,t)=>{ml(e.inputs);let r=(o,s,c)=>{let d=[];for(let h=0;h<o.rank;h++)(c.indexOf(h)>=0||c.length===0)&&d.push(`input_indices[${h}] = 0;`);return[`${d.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${o.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]};e.compute(xa("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},vo=e=>Re(e)});var Rg,Bg,zg,Mg,Sa,Dg,bl,wo=se(()=>{"use strict";Ie();ga();Pe();Rg=(e,t)=>{let r=e[0],o=e[1],s=e[2],c=e[3],d=e[4],h=e[5];if(d&&h)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let y=r.dims[0],w=r.dims[1],f=r.dims[2];if(s.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(o.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(o.dims[0]!==f)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(s.dims[0]!==o.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let C=s.dims[0]/3,S=C,k=S;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let W of t.qkvHiddenSizes)if(W%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");C=t.qkvHiddenSizes[0],S=t.qkvHiddenSizes[1],k=t.qkvHiddenSizes[2]}let E=w;if(C!==S)throw new Error("qkv_hidden_sizes first element should be same as the second");if(s.dims[0]!==C+S+k)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let O=0;if(d){if(S!==k)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(d.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(d.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(d.dims[1]!==y)throw new Error('Input "past" second dimension must be batch_size');if(d.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(d.dims[4]!==S/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(O=d.dims[3])}let D=E+O,N=-1,B=0;if(c)throw new Error("Mask not supported");if(d)throw new Error("past is not supported");if(h)throw new Error("relativePositionBias is not supported");return{batchSize:y,sequenceLength:w,pastSequenceLength:O,kvSequenceLength:E,totalSequenceLength:D,maxSequenceLength:N,inputHiddenSize:f,hiddenSize:C,vHiddenSize:k,headSize:Math.floor(C/t.numHeads),vHeadSize:Math.floor(k/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:B,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Bg=(e,t,r,o)=>{let s=Ze(o),c=64,d=o/s;d<c?c=1:d/8<64&&(c=Math.ceil(d/8));let h=Math.ceil(o/s/c),y=[{type:t.dataType,data:1/o},{type:12,data:d},{type:12,data:h}],w=He(t.dataType,s),f=C=>{let S=ue("x",t.dataType,t.dims,s),k="thread_max_vector";s===2?k="max(thread_max_vector.x, thread_max_vector.y)":s===4&&(k="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let E=Tt(t.dataType),O=[{name:"d_inv",type:E},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`
  var<workgroup> wgMax: array<f32, ${c}>;
  var<workgroup> wgSum: array<f32, ${c}>;
  ${C.registerUniforms(O).declareVariables(S)}
  ${C.mainStart([c,1,1])}
    let localOffset = local_idx * uniforms.elements_per_wg;
    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;

    var thread_max_vector = ${gt("f32",s,"-3.402823e+38f")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      thread_max_vector = max(${Vt(E,s,"x[offset + i]")}, thread_max_vector);
    }
    wgMax[local_idx] = ${k};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${c}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${gt("f32",s,"0")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      sumVector += exp(${Vt(E,s,"x[offset + i]")} - maxValue);
    }
    wgSum[local_idx] = ${At("sumVector",s)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${c}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        x[offset + i] = ${gt(E,s,"uniforms.d_inv")};
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        let f32input = ${Vt(E,s,"x[offset + i]")};
        x[offset + i] = ${S.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${c};${w};${s}`},getShaderSource:f,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:y})},{inputs:[t],outputs:[]})},zg=(e,t,r,o,s,c)=>{let d=[s.batchSize,s.numHeads,s.sequenceLength,s.kvSequenceLength+s.pastSequenceLength],h=c.scale===0?1/Math.sqrt(s.headSize):c.scale,y=Ze(s.headSize),w=s.headSize/y,f=12,C={x:Math.ceil(s.totalSequenceLength/f),y:Math.ceil(s.sequenceLength/f),z:s.batchSize*s.numHeads},S=[{type:12,data:s.sequenceLength},{type:12,data:w},{type:12,data:s.totalSequenceLength},{type:12,data:s.kvSequenceLength},{type:t.dataType,data:h}],k=[t,r],E=D=>{let N=Z("q",t.dataType,t.dims,y),B=Z("key",r.dataType,r.dims,y),W=ue("output",t.dataType,d),M=He(t.dataType),q=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:M}];return`
  const beta: ${M} = 1.0;
  const TILE_SIZE = ${f}u;

  var<workgroup> tileQ: array<${N.type.storage}, ${f*f}>;
  var<workgroup> tileK: array<${N.type.storage}, ${f*f}>;
  ${D.registerUniforms(q).declareVariables(N,B,W)}
  ${D.mainStart([f,f,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let lm = m + local_id.y;
    let ln = n + local_id.x;

    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;

    var value = ${gt(M,y)};
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (lm < uniforms.M && ln < uniforms.N) {
      let outputIdx = headOffset + lm * uniforms.N + ln;
      output[outputIdx] = ${At("value",y)} * uniforms.alpha;
    }
  }`},O=e.compute({name:"AttentionProbs",shaderCache:{hint:`${y}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:d,dataType:t.dataType,gpuDataType:0}],dispatchGroup:C,programUniforms:S}),getShaderSource:E},{inputs:k,outputs:[-1]})[0];return Bg(e,O,s.batchSize*s.numHeads*s.sequenceLength,s.totalSequenceLength),O},Mg=(e,t,r,o)=>{let s=[o.batchSize,o.sequenceLength,o.vHiddenSize],c=12,d={x:Math.ceil(o.vHeadSize/c),y:Math.ceil(o.sequenceLength/c),z:o.batchSize*o.numHeads},h=[{type:12,data:o.sequenceLength},{type:12,data:o.totalSequenceLength},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}],y=w=>{let f=Z("probs",t.dataType,t.dims),C=Z("v",r.dataType,r.dims),S=ue("output",t.dataType,s),k=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${c}u;
  var<workgroup> tileQ: array<${f.type.value}, ${c*c}>;
  var<workgroup> tileK: array<${f.type.value}, ${c*c}>;
  ${w.registerUniforms(k).declareVariables(f,C,S)}
  ${w.mainStart([c,c,1])}
   let headIdx = workgroup_id.z;
   let m = workgroup_id.y * TILE_SIZE + local_id.y;
   let n = workgroup_id.x * TILE_SIZE + local_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${f.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType,gpuDataType:0}],dispatchGroup:d,programUniforms:h}),getShaderSource:y},{inputs:[t,r],outputs:[0]})[0]},Sa=(e,t,r,o,s,c,d,h,y,w,f)=>{let C=zg(e,t,r,y,w,f);Mg(e,C,o,w)},Dg=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,s=t.inputHiddenSize,c=t.headSize,d=12,h={x:Math.ceil(t.headSize/d),y:Math.ceil(t.sequenceLength/d),z:t.batchSize*t.numHeads},y=[e.inputs[0],e.inputs[1],e.inputs[2]],w=[{type:12,data:o},{type:12,data:s},{type:12,data:c},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],f=C=>{let S=ue("output_q",y[0].dataType,r),k=ue("output_k",y[0].dataType,r),E=ue("output_v",y[0].dataType,r),O=Z("input",y[0].dataType,y[0].dims),D=Z("weight",y[1].dataType,y[1].dims),N=Z("bias",y[2].dataType,y[2].dims),B=O.type.storage,W=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${d}u;
  var<workgroup> tileInput: array<${B}, ${d*d}>;
  var<workgroup> tileWeightQ: array<${B}, ${d*d}>;
  var<workgroup> tileWeightK: array<${B}, ${d*d}>;
  var<workgroup> tileWeightV: array<${B}, ${d*d}>;
  ${C.registerUniforms(W).declareVariables(O,D,N,S,k,E)}
  ${C.mainStart([d,d,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE + local_id.y;
    let n = workgroup_id.x * TILE_SIZE + local_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${B}(0);
    var valueK = ${B}(0);
    var valueV = ${B}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:h,programUniforms:w}),getShaderSource:f},{inputs:y,outputs:[-1,-1,-1]})},bl=(e,t)=>{let r=Rg(e.inputs,t),[o,s,c]=Dg(e,r);return Sa(e,o,s,c,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var jg,Ug,Ng,vl,wl=se(()=>{"use strict";Dt();Ie();Be();mt();Pe();jg=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,s,c)=>{let d=s.length;if(d!==o.length)throw new Error(`${c}: num dimensions != ${d}`);s.forEach((h,y)=>{if(h!==o[y])throw new Error(`${c}: dim[${y}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Ug=(e,t)=>{let{epsilon:r,spatial:o,format:s}=t,c=e[0].dims,d=o?Ze(c[c.length-1]):1,h=s==="NHWC"&&c.length>1?d:1,y=Q.size(c)/d,w=o,f=w?c.length:c,C=Z("x",e[0].dataType,e[0].dims,d),S=Z("scale",e[1].dataType,e[1].dims,h),k=Z("bias",e[2].dataType,e[2].dims,h),E=Z("inputMean",e[3].dataType,e[3].dims,h),O=Z("inputVar",e[4].dataType,e[4].dims,h),D=ue("y",e[0].dataType,f,d),N=()=>{let W="";if(o)W=`let cOffset = ${c.length===1?"0u":s==="NHWC"?`outputIndices[${c.length-1}] / ${d}`:"outputIndices[1]"};`;else if(s==="NCHW")W=`
            ${D.indicesSet("outputIndices","0","0")}
            let cOffset = ${D.indicesToOffset("outputIndices")};`;else{W=`var cIndices = ${S.type.indices}(0);
                       cIndices[0] = outputIndices[${c.length-1}];`;for(let M=1;M<S.rank;M++)W+=`cIndices[${M}] = outputIndices[${M}];`;W+=`let cOffset = ${S.indicesToOffset("cIndices")};`}return W},B=W=>`
  const epsilon = ${r};
  ${W.registerUniform("outputSize","u32").declareVariables(C,S,k,E,O,D)}
  ${W.mainStart()}
  ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${D.offsetToIndices(`global_idx * ${d}`)};
    ${N()}
    let scale = ${S.getByOffset("cOffset")};
    let bias = ${k.getByOffset("cOffset")};
    let inputMean = ${E.getByOffset("cOffset")};
    let inputVar = ${O.getByOffset("cOffset")};
    let x = ${C.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${D.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${d}`,inputDependencies:w?["rank","type","type","type","type"]:void 0},getShaderSource:B,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w?[{type:12,data:y},...de(c)]:[{type:12,data:y}]})}},Ng=e=>Re(e),vl=(e,t)=>{let{inputs:r,outputCount:o}=e,s=Ng({...t,outputCount:o});if(Ve.webgpu.validateInputContent&&jg(r,s),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Ug(r,s))}});var Wg,Vg,_l,$l=se(()=>{"use strict";Be();Pe();Wg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Vg=e=>{let t=e[0].dims,r=e[0].dims[2],o=Q.size(t)/4,s=e[0].dataType,c=Z("input",s,t,4),d=Z("bias",s,[r],4),h=Z("residual",s,t,4),y=ue("output",s,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:f=>`
  const channels = ${r}u / 4;
  ${f.declareVariables(c,d,h,y)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let value = ${c.getByOffset("global_idx")}
      + ${d.getByOffset("global_idx % channels")} + ${h.getByOffset("global_idx")};
    ${y.setByOffset("global_idx","value")}
  }`}},_l=e=>{Wg(e.inputs),e.compute(Vg(e.inputs))}});var Gg,Le,Cl,xl,Sl,Il,Tl,Al,El,kl,Ol,Hg,Pl,Rl,Bl,zl,Ia,Ml,Ta,Dl,jl,Ul,Nl,Wl,Vl,Gl,Hl,Ll,Fl,ql,Kl,Jl,Yl,Zl,Ql,Xl,ed,_o,$o,td,rd,id,Aa=se(()=>{"use strict";Ie();Be();mt();Pe();Gg=(e,t,r,o,s,c)=>{let d=Math.ceil(t/4),h="";typeof s=="string"?h=`${s}(a)`:h=s("a");let y=Z("inputData",r,[d],4),w=ue("outputData",o,[d],4);return`
      ${e.registerUniform("vec_size","u32").declareVariables(y,w)}

  ${c??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${y.getByOffset("global_idx")};
    ${w.setByOffset("global_idx",h)}
  }`},Le=(e,t,r,o,s,c=e.dataType)=>({name:t,shaderCache:{hint:s,inputDependencies:["type"]},getShaderSource:d=>Gg(d,Q.size(e.dims),e.dataType,c,r,o),getRunData:d=>({outputs:[{dims:e.dims,dataType:c}],dispatchGroup:{x:Math.ceil(Q.size(d[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(Q.size(e.dims)/4)}]})}),Cl=e=>{e.compute(Le(e.inputs[0],"Abs","abs"))},xl=e=>{e.compute(Le(e.inputs[0],"Acos","acos"))},Sl=e=>{e.compute(Le(e.inputs[0],"Acosh","acosh"))},Il=e=>{e.compute(Le(e.inputs[0],"Asin","asin"))},Tl=e=>{e.compute(Le(e.inputs[0],"Asinh","asinh"))},Al=e=>{e.compute(Le(e.inputs[0],"Atan","atan"))},El=e=>{e.compute(Le(e.inputs[0],"Atanh","atanh"))},kl=e=>Re(e),Ol=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(Le(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Hg=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:va,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:wa;return Re({min:t,max:r})},Pl=(e,t)=>{let r=e.inputs.length===1?t:Hg(e.inputs),o=Tt(e.inputs[0].dataType);e.compute(Le(e.inputs[0],"Clip",s=>`clamp(${s}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));
    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));
`,r.cacheKey),{inputs:[0]})},Rl=e=>{e.compute(Le(e.inputs[0],"Ceil","ceil"))},Bl=e=>{e.compute(Le(e.inputs[0],"Cos","cos"))},zl=e=>{e.compute(Le(e.inputs[0],"Cosh","cosh"))},Ia=e=>Re(e),Ml=(e,t)=>{let r=Tt(e.inputs[0].dataType);e.compute(Le(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},Ta=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,Dl=e=>{let t=Tt(e.inputs[0].dataType);e.compute(Le(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Ta(t)))},jl=e=>{e.compute(Le(e.inputs[0],"Exp","exp"))},Ul=e=>{e.compute(Le(e.inputs[0],"Floor","floor"))},Nl=e=>{let t=Tt(e.inputs[0].dataType);e.compute(Le(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Ta(t)))},Wl=(e,t)=>{let r=Tt(e.inputs[0].dataType);e.compute(Le(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},Vl=e=>{e.compute(Le(e.inputs[0],"Not",t=>`!${t}`))},Gl=e=>{e.compute(Le(e.inputs[0],"Neg",t=>`-${t}`))},Hl=e=>{e.compute(Le(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Ll=e=>{let t=Tt(e.inputs[0].dataType);e.compute(Le(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Fl=e=>{e.compute(Le(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},ql=e=>Re(e),Kl=(e,t)=>{let r=Tt(e.inputs[0].dataType);e.compute(Le(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Jl=e=>{e.compute(Le(e.inputs[0],"Sin","sin"))},Yl=e=>{e.compute(Le(e.inputs[0],"Sinh","sinh"))},Zl=e=>{e.compute(Le(e.inputs[0],"Sqrt","sqrt"))},Ql=e=>{e.compute(Le(e.inputs[0],"Tan","tan"))},Xl=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,ed=e=>{e.compute(Le(e.inputs[0],"Tanh",Xl))},_o=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${Xl("v")};
}
`,$o=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,td=e=>{let t=Tt(e.inputs[0].dataType);e.compute(Le(e.inputs[0],"FastGelu",$o,_o(t),void 0,e.inputs[0].dataType))},rd=(e,t)=>{let r=Tt(e.inputs[0].dataType);return e.compute(Le(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},id=e=>{e.compute(Le(e.inputs[0],"Log","log"))}});var Lg,Fg,ad,od=se(()=>{"use strict";Be();Pe();Aa();Lg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Fg=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=Z("input",e[0].dataType,e[0].dims,4),o=Z("bias",e[0].dataType,[e[0].dims[2]],4),s=ue("output",e[0].dataType,t,4),c=Q.size(t)/4,d=He(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)}}),getShaderSource:y=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${y.declareVariables(r,o,s)}

  ${Ta(d)}

  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes(c)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${s.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},ad=e=>{Lg(e.inputs),e.compute(Fg(e.inputs))}});var qg,Kg,Qt,sd,ud,ld,dd,cd,pd,fd,md,hd,gd,yd=se(()=>{"use strict";Ie();Be();Pe();qg=(e,t,r,o,s,c,d,h,y,w,f,C)=>{let S,k;typeof h=="string"?S=k=(B,W)=>`${h}((${B}),(${W}))`:typeof h=="function"?S=k=h:(S=h.scalar,k=h.vector);let E=ue("outputData",f,o.length,4),O=Z("aData",y,t.length,4),D=Z("bData",w,r.length,4),N;if(s)if(c){let B=Q.size(t)===1,W=Q.size(r)===1,M=t.length>0&&t[t.length-1]%4===0,q=r.length>0&&r[r.length-1]%4===0;B||W?N=E.setByOffset("global_idx",k(B?`${O.type.value}(${O.getByOffset("0")}.x)`:O.getByOffset("global_idx"),W?`${D.type.value}(${D.getByOffset("0")}.x)`:D.getByOffset("global_idx"))):N=`
            let outputIndices = ${E.offsetToIndices("global_idx * 4u")};
            let offsetA = ${O.broadcastedIndicesToOffset("outputIndices",E)};
            let offsetB = ${D.broadcastedIndicesToOffset("outputIndices",E)};
            ${E.setByOffset("global_idx",k(d||M?O.getByOffset("offsetA / 4u"):`${O.type.value}(${O.getByOffset("offsetA / 4u")}[offsetA % 4u])`,d||q?D.getByOffset("offsetB / 4u"):`${D.type.value}(${D.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else N=E.setByOffset("global_idx",k(O.getByOffset("global_idx"),D.getByOffset("global_idx")));else{if(!c)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let B=(W,M,q="")=>{let X=`aData[indexA${M}][componentA${M}]`,te=`bData[indexB${M}][componentB${M}]`;return`
            let outputIndices${M} = ${E.offsetToIndices(`global_idx * 4u + ${M}u`)};
            let offsetA${M} = ${O.broadcastedIndicesToOffset(`outputIndices${M}`,E)};
            let offsetB${M} = ${D.broadcastedIndicesToOffset(`outputIndices${M}`,E)};
            let indexA${M} = offsetA${M} / 4u;
            let indexB${M} = offsetB${M} / 4u;
            let componentA${M} = offsetA${M} % 4u;
            let componentB${M} = offsetB${M} % 4u;
            ${W}[${M}] = ${q}(${S(X,te)});
          `};f===9?N=`
            var data = vec4<u32>(0);
            ${B("data",0,"u32")}
            ${B("data",1,"u32")}
            ${B("data",2,"u32")}
            ${B("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:N=`
            ${B("outputData[global_idx]",0)}
            ${B("outputData[global_idx]",1)}
            ${B("outputData[global_idx]",2)}
            ${B("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(O,D,E)}

        ${C??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${N}
      }`},Kg=(e,t,r,o,s,c,d=r.dataType)=>{let h=!Q.areEqual(r.dims,o.dims),y=r.dims,w=Q.size(r.dims),f=!1,C=!1,S=[h];if(h){let k=qt.calcShape(r.dims,o.dims,!1);if(!k)throw new Error("Can't perform binary op on the given tensors");y=k,w=Q.size(y);let E=Q.size(r.dims)===1,O=Q.size(o.dims)===1,D=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,N=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;S.push(E),S.push(O),S.push(D),S.push(N);let B=1;for(let W=1;W<y.length;W++){let M=r.dims[r.dims.length-W]??1,q=o.dims[o.dims.length-W]??1;if(M===q)B*=M;else break}B%4===0?(C=!0,f=!0):(E||O||D||N)&&(f=!0)}else f=!0;return S.push(f),{name:e,shaderCache:{hint:t+S.map(k=>k.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:k=>qg(k,r.dims,o.dims,y,f,h,C,s,r.dataType,o.dataType,d,c),getRunData:()=>({outputs:[{dims:y,dataType:d}],dispatchGroup:{x:Math.ceil(w/64/4)},programUniforms:[{type:12,data:Math.ceil(Q.size(y)/4)},...de(r.dims,o.dims,y)]})}},Qt=(e,t,r,o,s,c)=>{e.compute(Kg(t,s??"",e.inputs[0],e.inputs[1],r,o,c))},sd=e=>{Qt(e,"Add",(t,r)=>`${t}+${r}`)},ud=e=>{Qt(e,"Div",(t,r)=>`${t}/${r}`)},ld=e=>{Qt(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},dd=e=>{Qt(e,"Mul",(t,r)=>`${t}*${r}`)},cd=e=>{let t=Z("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Qt(e,"Pow",{scalar:(o,s)=>`pow_custom(${o},${s})`,vector:(o,s)=>`pow_vector_custom(${o},${s})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},pd=e=>{Qt(e,"Sub",(t,r)=>`${t}-${r}`)},fd=e=>{Qt(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},md=e=>{Qt(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},hd=e=>{Qt(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},gd=e=>{Qt(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var Yg,Zg,Qg,Xg,bd,vd,wd=se(()=>{"use strict";Ie();Be();mt();Pe();Yg=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,o=e[r],s=o.dataType,c=o.dims.length;e.forEach((d,h)=>{if(h!==r){if(d.dataType!==s)throw new Error("input tensors should be one type");if(d.dims.length!==c)throw new Error("input tensors should have the same shape");d.dims.forEach((y,w)=>{if(w!==t&&y!==o.dims[w])throw new Error("non concat dimensions must match")})}})},Zg=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,Qg=(e,t)=>{let r=e.length,o=[];for(let s=0;s<r;++s){let c=t.setByOffset("global_idx",e[s].getByIndices("indices"));r===1?o.push(c):s===0?o.push(`if (inputIndex == ${s}u) { ${c} }`):s===r-1?o.push(`else { ${c} }`):o.push(`else if (inputIndex == ${s}) { ${c} }`)}return o.join(`
`)},Xg=(e,t,r,o)=>{let s=Q.size(r),c=new Array(e.length),d=new Array(e.length),h=0,y=[],w=[],f=[{type:12,data:s}];for(let O=0;O<e.length;++O)h+=e[O].dims[t],c[O]=h,w.push(e[O].dims.length),d[O]=Z(`input${O}`,o,w[O]),y.push("rank"),f.push({type:12,data:c[O]});for(let O=0;O<e.length;++O)f.push(...de(e[O].dims));f.push(...de(r));let C=ue("output",o,r.length),S=C.indicesGet("indices",t),k=Array.from(Array(c.length).keys()).map(O=>`uniforms.sizeInConcatAxis${O}`).join(","),E=O=>`

  ${(()=>{O.registerUniform("outputSize","u32");for(let D=0;D<e.length;D++)O.registerUniform(`sizeInConcatAxis${D}`,"u32");return O.declareVariables(...d,C)})()}

  ${Zg(c.length,k)}

  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${C.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${S});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${c.length}u>(${k});
      ${S} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Qg(d,C)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:r,dataType:o}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:f}),getShaderSource:E}},bd=(e,t)=>{let r=e.inputs,o=r[0].dims,s=Q.normalizeAxis(t.axis,o.length);Yg(r,s);let c=o.slice();c[s]=r.reduce((h,y)=>h+(y.dims.length>s?y.dims[s]:0),0);let d=r.filter(h=>Q.size(h.dims)>0);e.compute(Xg(d,s,c,r[0].dataType),{inputs:d})},vd=e=>Re({axis:e.axis})});var Gt,Ht,Lt,Ea,cr=se(()=>{"use strict";Ie();Be();Gt=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Ht=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Lt=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Ea=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[va,wa];return{activation:t,clipMax:o,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}});var yt,ka,Oa=se(()=>{"use strict";yt=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},ka=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `});var Pa,Co=se(()=>{"use strict";Pa=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`});var _d,ey,ii,xo=se(()=>{"use strict";_d=(e,t,r,o,s)=>{if(t)throw new Error("getAVec4DataSnippet currently not implemented for transposed A.");{let c=`mm_readA(i32(batch), i32(outputRowInGlobalBase + (${r})), i32(sharedDimBase / innerDimPackedSize + (${o}))${s?", batchIndices":""})`;return e==="f16"?`bitcast<vec2<u32>>(${c})`:`${c}`}},ey=(e,t,r=4,o=1,s=1)=>{let c=4,d=t/c,h=(N,B)=>B<<1|(N&2)>>1,y=(N,B)=>N&1;for(var w="",f=[],C=[],S=0;S<d;S=S+1)for(var k=0;k<4;k=k+1){f.push(`
          let BCached${k}_k${S} = mm_Bsub[${S*c+k}][colTileIdInWorkgroup];
  `);for(var E="",O=0;O<r;O=O+1){let N=h(O,S),B=e==="f32"?`subgroupBroadcast(distributedACache[${y(O,S)}].${"xyzw"[k]}, ${N})`:`bitcast<vec4<f16>>(subgroupBroadcast(distributedACache[${y(O,S)}], ${N})).${"xyzw"[k]}`;E=E+`
acc[${O}] = BCached${k}_k${S} * ${B} + acc[${O}];`}C.push(E)}w="";for(var O=0;O<s;O++)for(var D=0;D<o;D++)w=w+f[O*o+D];for(var O=0;O<f.length/o;O++){for(var D=0;D<o;D++)w=w+(f[(O+s)*o+D]??"");for(var D=0;D<o;D++)w=w+C[O*o+D];w=w+`

`}return w},ii=(e,t,r="f32",o,s=!1,c=32,d=!1,h=32,y=1,w=1)=>{let[f,C]=e,[S,k]=t,E=k*C,D=s?E:c;if(S!==16)throw new Error("makeMatMulPackedVec4WithSubgroupSource currently only support workgroupSize.x (i.e. colTileNumberInWorkgroup) == 16.");if(C!==4)throw new Error("makeMatMulPackedVec4WithSubgroupSource currently only support workPerThread[1] (i.e. rowPerThread) == 4.");if(f!==4)throw new Error(`colPerThread ${e[0]} must be 4.`);if(s)throw new Error("makeMatMulPackedVec4WithSubgroupSource currently not implemented for transposed A.");if(c!==32)throw new Error("makeMatMulPackedVec4WithSubgroupSource currently only support sharedDimTileStep == 32.");if(d||h!==32)throw new Error("makeMatMulPackedVec4WithSubgroupSource currently not support splitK.");if(r!=="f32"&&r!=="f16")throw new Error("makeMatMulPackedVec4WithSubgroupSource currently only support f32 and f16 type.");if(c%k!==0)throw new Error(`sharedDimTileStep (${c}) must be a multiple of rowTileNumberInWorkgroup (${k}).`);if(D%S!==0)throw new Error(`tileAWidth ${D} must be divisible by colTileNumberInWorkgroup (workgroupSize[0], ${t[0]}).`);if(c%k!==0)throw new Error(`tileInner ${c} must be divisible by rowTileNumberInWorkgroup (workgroupSize[1], ${t[1]}).`);let N=r==="f32"?"vec4<f32>":"vec2<u32>";return`
const rowPerThread = ${C}u;
const colPerThread = ${f}u;
const innerDimPackedSize = 4u; // Vec4

const rowTileNumberInWorkgroup = ${k}u;
const colTileNumberInWorkgroup = ${S}u;

const sharedDimTileStep = ${c}u;
const bRowLoadedPerThread = sharedDimTileStep / rowTileNumberInWorkgroup;

// Shader compute sliced matrix multiplication on Slice MxKxN
const sliceShapeM = rowTileNumberInWorkgroup * rowPerThread;
const sliceShapeK = sharedDimTileStep;
const sliceShapeKInVec4 = sliceShapeK / 4u;
const sliceShapeN = colTileNumberInWorkgroup * colPerThread;
const sliceShapeNInVec4 = sliceShapeN / 4u;

var<workgroup> mm_Bsub: array<array<vec4<${r}>, sliceShapeNInVec4>, sliceShapeK>;

@compute @workgroup_size(colTileNumberInWorkgroup, rowTileNumberInWorkgroup, 1)
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
    @builtin(global_invocation_id) globalId : vec3<u32>,
    @builtin(workgroup_id) workgroupId : vec3<u32>,
    @builtin(subgroup_size) subgroupSize: u32,
    @builtin(subgroup_invocation_id) subgroupId: u32) {
    let rowTileIdInWorkgroup = localId.y;
    let outputRowInWorkgroupBase = rowTileIdInWorkgroup * rowPerThread;
    let colTileIdInWorkgroup = localId.x;

    let outputRowInGlobalBase = globalId.y * rowPerThread;
    let outputColInGlobalVec4 = globalId.x;
    let batch = ${d?"0":"i32(globalId.z)"};
    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}

    // Each thread output rowPerThread*4 results
    var acc: array<vec4<${r}>, rowPerThread>;

    // Distributed A cache.
    // Accessing pattern: A[outputRowInGlobalBase + i][k], first i [0..rowPerThread(4)], then k [0..sliceShapeKInVec4(8)]
    //                    subgroups only access 4*8 vec4, each thread 2 vec4 for 16 threads in a subgroup
    // Mapped:
    //          A subgroup slice [rowPerThread(R,4), sliceShapeKInVec4(C_packed,8)] of vec4
    //          mapped to           16(subgroupId)*2(j) of distributed A cache, R first map to j.
    //                subgroupId j
    //          bits     3 2 1 0 0
    //          ---------------------
    //          bits     2 1 0 1 0
    //                       C   R
    //          subgroup[subgroupId(0..15)].distributedACache[j(0..1)] = A slice[R:((subgroupId&1u)<<1|j)][C:(subgroupId>>1)]
    //          A slice[R(0..rowPerThread-1)][C(0..C_packed-1)] = subgroup[C<<1|((R&2u)>>1)].distributedACache[(R&1u)]
    var distributedACache: array<${N}, 2>;

    // Loop over shared dimension.
    let bRowLoadingThreadBias = rowTileIdInWorkgroup * bRowLoadedPerThread;
    let sharedDimSize = u32(uniforms.dim_inner);
    for (var sharedDimBase = 0u; sharedDimBase < sharedDimSize; sharedDimBase = sharedDimBase + sharedDimTileStep) {
        // Load one tile of A into local register.
        // subgroup[i(0..15)].distributedACache[j(0..1)] = A slice[R:((subgroupId&1u)<<1|j)][C:(subgroupId>>1)]
        //   = mm_readA(i32(batch), i32(outputRowInGlobalBase + ((i&1u)<<1|j)), i32(sharedDimBase / innerDimPackedSize + (i>>1)))
        distributedACache[0] = ${_d(r,s,"((subgroupId&1u)<<1)|0","subgroupId>>1",o)};
        distributedACache[1] = ${_d(r,s,"((subgroupId&1u)<<1)|1","subgroupId>>1",o)};

        // workgroupBarrier();

        // Load one tile of B into shared local memory.
        for (var innerRow = 0u; innerRow < bRowLoadedPerThread; innerRow = innerRow + 1) {
            let inputRow = bRowLoadingThreadBias + innerRow;

            if (sliceShapeNInVec4 <= colTileNumberInWorkgroup) {
                let inputColInVec4 = colTileIdInWorkgroup;
                if (inputColInVec4 < sliceShapeNInVec4) {
                    mm_Bsub[inputRow][inputColInVec4] = mm_readB(i32(batch), i32(sharedDimBase + inputRow), i32(outputColInGlobalVec4)${o?", batchIndices":""});
                }
            } else {
                for (var inputColInVec4Base = 0u;
                     inputColInVec4Base < sliceShapeNInVec4;
                     inputColInVec4Base = inputColInVec4Base + colTileNumberInWorkgroup) {
                    let inputColInVec4 = inputColInVec4Base + colTileIdInWorkgroup;
                    if (inputColInVec4 < sliceShapeNInVec4) {
                        mm_Bsub[inputRow][inputColInVec4] = mm_readB(i32(batch), i32(sharedDimBase + inputRow), i32(outputColInGlobalVec4)${o?", batchIndices":""});
                    }
                }
            }
        }

        workgroupBarrier();

        // Unrolled computation code
        {
${ey(r,c,C,y,w)}
        }

        workgroupBarrier();
    }

    for (var innerRow = 0u; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(i32(batch), i32(outputRowInGlobalBase + innerRow), i32(outputColInGlobalVec4), acc[innerRow]);
    }
}
`}});var ty,ry,yn,$d,iy,bn,ny,ni,Ra,vn=se(()=>{"use strict";Ie();ir();Be();Pe();cr();Oa();xo();ty=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,ry=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,yn=(e,t,r="f32",o,s=!1,c=32,d=!1,h=32)=>{let y=t[1]*e[1],w=t[0]*e[0],f=s?y:c,C=s?c:y,S=f/t[0],k=c/t[1];if(!((s&&S===4&&e[1]===4||!s&&(S===3||S===4))&&f%t[0]===0&&c%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${s} is true, innerElementSize ${S} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${S} must be 3 or 4.
  tileAWidth ${f} must be divisible by workgroupSize[0]${t[0]}. tileInner ${c} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${S}<${r}>, ${f/S}>, ${C}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${w/e[0]}>, ${c}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${S};
const tileInner = ${c};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow = i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${d?"0":"i32(globalId.z)"};
  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${y};

  let num_tiles = ${d?`${Math.ceil(h/c)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${d?`i32(globalId.z) * ${h}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${k};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${ty(s,o)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${k}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${S===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${ry(s,S)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},$d=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,iy=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",bn=(e,t,r="f32",o,s=!1,c=32,d=!1,h=32,y=!1)=>{let w=e[1]*t[1],f=e[0]*t[0],C=s?w:c,S=s?c:w;if(!(S%t[1]===0&&C%t[0]===0&&c%t[1]===0))throw new Error(`tileAHight ${S} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${C} must be divisible by workgroupSize[0]${t[0]}, tileInner ${c} must be divisible by workgroupSize[1]${t[1]}`);let k=S/t[1],E=C/t[0],O=c/t[1],D=y?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${w};
    let globalColStart = i32(workgroupId.x) * ${f};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${S}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${C}; inputCol = inputCol + ${t[0]}) {
          ${$d(s,o)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${c}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${f}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${o?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${s?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${w};

let tileRowA = i32(localId.y) * ${k};
let tileColA = i32(localId.x) * ${E};
let tileRowB = i32(localId.y) * ${O};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${k}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${E}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${$d(s,o)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${O}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${o?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${iy(s)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${C}>, ${S}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${f}>, ${c}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${c};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${d?"0":"i32(globalId.z)"};
    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${d?`${Math.ceil(h/c)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${d?`i32(globalId.z) * ${h}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${D}
  }
`},ny=(e,t,r,o,s,c=!1)=>{let[d,h,y]=s,[w,f,C,S]=o,k=ti(d,y),E=ti(h,y),O=He(o[0].type.tensor),D=()=>{let W=f.rank,M=w.rank,q=`var aIndices: ${f.type.indices};`;for(let X=W-2-1,te=M-1;X>=0;X--,te--)q+=`
aIndices[${X}] = ${M>1?`batchIndices[${te}]`:"batchIndices"};`;return k.forEach(X=>{q+=`
aIndices[${X}] = 0;`}),q+=`
aIndices[${W-2}] = u32(row);
                   aIndices[${W-1}] = u32(colIn);`,q},N=()=>{let W=C.rank,M=w.rank,q=`var bIndices: ${C.type.indices};`;for(let X=W-2-1,te=M-1;X>=0;X--,te--)q+=`
bIndices[${X}] = ${M>1?`batchIndices[${te}]`:"batchIndices"};`;return E.forEach(X=>{q+=`
bIndices[${X}] = 0;`}),q+=`
bIndices[${W-2}] = u32(row);
                   bIndices[${W-1}] = u32(colIn);`,q};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${w.type.indices}) -> ${yt(e,O)} {
      var value = ${yt(e,O)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${D()}
        value = ${f.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${w.type.indices}) -> ${yt(e,O)} {
      var value = ${yt(e,O)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${N()}
        value = ${C.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${yt(e,O)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${c?"bias[colIn]":`${yt(e,O)}(bias[row])`};`:""}
        ${r}
        ${S.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},ni=(e,t)=>(e%t===0?0:1-e%t/t)/Math.ceil(e/t),Ra=(e,t,r,o,s=!1)=>{let c=e[0].dims,d=e[1].dims,h=c.slice(0,-2),y=d.slice(0,-2),w=o?o.slice(0,-2):r.slice(0,-2),f=Q.size(w),C=c[c.length-2],S=c[c.length-1],k=d[d.length-1],E=S%4===0&&k%4===0,O=E?4:1,D=He(e[0].dataType),N=32,B=E&&(ni(C,32)<.2&&ni(S,32)<.2&&ni(k,64)<.2||(1-ni(C,32))*(1-ni(S,32))*(1-ni(k,64))>.7);Ge("info",()=>`[matmul_packed_webgpu createMatmulProgramInfo] tryUsingSubgroup: ${B} (isVec4 ${E}, dimAOuter ${C}, dimInner ${S}, dimBOuter ${k})`);var W=[8,8,1],M=[4,4,1],q=!1;if(B)try{W=[16,8,1],M=[4,4,1],ii(M,W,D,void 0,!1,N),q=!0,Ge("info",()=>`[matmul_packed_webgpu createMatmulProgramInfo] try using subgroup succeed: ${B} (isVec4 ${E})`)}catch(fe){Ge("warning",()=>`[matmul_packed_webgpu createMatmulProgramInfo] try using subgroup failed: ${fe}`),q=!1}q||(W=[8,8,1],M=C<=8?[4,1,1]:[4,4,1]);let X=[Math.ceil(k/W[0]/M[0]),Math.ceil(C/W[1]/M[1]),Math.ceil(f/W[2]/M[2])],te=[...h,C,S/O],ae=te.length,J=[...y,S,k/O],ne=J.length,be=[f,C,k/O],ze=[{type:6,data:C},{type:6,data:k},{type:6,data:S}];Ht(t,ze),ze.push(...de(w,te,J));let Ke=["rank","rank"],Ne=e.length>2;Ne&&(ze.push(...de(e[2].dims)),Ke.push("rank")),ze.push(...de(be));let Ae=fe=>{let Fe=w.length,Me=$a("batchDims",e[0].dataType,Fe,1),xe=He(e[0].dataType),ge=Z("a",e[0].dataType,ae,O),ve=Z("b",e[1].dataType,ne,O),De=ue("result",e[0].dataType,be.length,O),it=[ge,ve];if(Ne){let ut=s?O:1;it.push(Z("bias",e[2].dataType,e[2].dims.length,ut))}let ie=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Lt(t,ie);let he=He(De.type.tensor),Ee=Gt(t,De.type.value,he),et=ny(O,Ne,Ee,[Me,ge,ve,De],[h,y,w],s);return`
  ${fe.registerUniforms(ie).registerInternalVariables(Me).declareVariables(...it,De)}
  ${et}
  ${q?ii(M,W,xe,Me,!1,N):E?yn(M,W,xe,Me):bn(M,W,xe,Me)}
                   `};return{name:"MatMul",shaderCache:{hint:`${M};${t.activation};${E};${s};${q}`,inputDependencies:Ke},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:X[0],y:X[1],z:X[2]},programUniforms:ze}),getShaderSource:Ae}}});var ay,Cd,xd=se(()=>{"use strict";Ie();ir();Pe();cr();Oa();Co();vn();xo();ay=(e,t,r,o,s=!1,c,d=4,h=4,y=4,w="f32")=>{let f=ne=>{switch(ne){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${w}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${ne} is not supported.`)}},C=ne=>{switch(ne){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${ne} is not supported.`)}},S=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,k=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,E=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",O=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",D=e?"row":"col",N=e?"col":"row",B=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${D} / outWidth;
    let outCol = ${D} % outWidth;

    let WRow = ${N} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${N} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${N} % inChannels;
    var resData = ${yt(d,w)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${E} && xCol >= 0 && xCol < ${O}) {
      ${S}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${f(d)}
    }
    return resData;`,W=e?t&&o?`
    let col = colIn * ${d};
    ${B}`:`
    let col = colIn * ${d};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${B}
    }
    return ${yt(d,w)}(0.0);`:o&&r?`
    let col = colIn * ${d};
    ${B}`:`
    let col = colIn * ${d};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${B}
    }
    return ${yt(d,w)}(0.0);`,M=`${C(h)}`,q=yt(y,w),X=e?yt(d,w):yt(h,w),te=e?yt(h,w):yt(d,w),ae=Gt(c,q,w);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${X} {
      ${e?W:M}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${te} {
      ${e?M:W}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${q}) {
      let col = colIn * ${y};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${k}
      ${ka(s)}
      ${ae}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},Cd=(e,t,r,o,s,c,d,h)=>{let y=t.format==="NHWC",w=y?e[0].dims[3]:e[0].dims[1],f=r[0],C=y?r[2]:r[3],S=y?r[1]:r[2],k=y?r[3]:r[1],E=y&&(w%4===0||w%3===0)&&k%4===0,O=E?y&&w%4!==0?3:4:1,D=32,N=E&&O===4;Ge("info",()=>`[conv2d_mm_webgpu subgroup] try using subgroup? ${N} (isVec4 ${E}, innerElementSize ${O})`);let B=y?k:C*S,W=y?C*S:k;var M=[8,8,1],q=[4,4,1],X=!1;if(N)try{M=[16,8,1],q=[4,4,1];let Me=He(e[0].dataType);ii(q,M,Me,void 0,!y,D),X=!0,Ge("info",()=>"[conv2d_mm_webgpu subgroup] try using subgroup succeed.")}catch(Me){Ge("warning",()=>`[conv2d_mm_webgpu] try using subgroup failed: ${Me}`),X=!1}X||(M=[8,8,1],q=o<=8?[4,1,1]:[4,4,1]);let te=[Math.ceil(B/M[0]/q[0]),Math.ceil(W/M[1]/q[1]),Math.ceil(f/M[2]/q[2])];Ge("info",()=>`[conv2d_mm_webgpu] dispatch = ${te}`);let ae=M[1]*q[1],J=M[0]*q[0],ne=Math.max(M[0]*O,M[1]),be=o%ae===0,ze=s%J===0,Ke=c%ne===0,Ne=E?[O,4,4]:[1,1,1],Ae=[{type:6,data:o},{type:6,data:s},{type:6,data:c},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Ht(t,Ae),Ae.push(...de(e[0].dims,e[1].dims));let fe=["rank","rank"];d&&(Ae.push(...de(e[2].dims)),fe.push("rank")),Ae.push(...de(r));let Fe=Me=>{let xe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Lt(t,xe);let ge=E?4:1,ve=He(e[0].dataType),De=`
      fn setOutputAtIndex(flatIndex : i32, value : ${E?`vec4<${ve}>`:ve}) {
        result[flatIndex] = ${E?`vec4<${ve}>`:ve}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${E?`vec4<${ve}>`:ve}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${E?"/ 4":""}, value);
      }`,it=Z("x",e[0].dataType,e[0].dims.length,O===3?1:O),ie=Z("w",e[1].dataType,e[1].dims.length,ge),he=[it,ie],Ee=ue("result",e[0].dataType,r.length,ge);if(d){let et=Z("bias",e[2].dataType,e[2].dims.length,ge);he.push(et),De+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${E?`vec4<${ve}>`:ve} {
          return bias[coords.${y?"w":"y"}${E?"/ 4":""}];
        }`}return`
        ${Pa("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Me.registerUniforms(xe).declareVariables(...he,Ee)}
        ${De}
        ${ay(y,be,ze,Ke,d,t,Ne[0],Ne[1],Ne[2],ve)}
        ${X?ii(q,M,ve,void 0,!y,D):E?yn(q,M,ve,void 0,!y,ne):bn(q,M,ve,void 0,!y,ne,!1,void 0,h)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${O};${E};${be};${ze};${Ke};${ae};${J};${ne};${X}`,inputDependencies:fe},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:te[0],y:te[1],z:te[2]},programUniforms:Ae}),getShaderSource:Fe}}});var So,Sd,Id=se(()=>{"use strict";Ie();Be();Pe();Io();cr();So=(e,t,r)=>{let o=e.length>2,s=o?"value += b[output_channel];":"",c=e[0].dims,d=e[1].dims,h=d[0]/t.group,y=t.format==="NHWC",w=Ba(c,d,t.dilations,t.pads,t.strides,y),f=Q.size(w),C=[{type:12,data:f},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:h}];Ht(t,C),C.push(...de(c,d,w));let S=["rank","rank"];o&&(C.push(...de(e[2].dims)),S.push("rank")),C.push(...de(w));let k=E=>{let O=ue("output",e[0].dataType,w.length),D=He(O.type.tensor),N=Gt(t,O.type.value,D),B=Z("x",e[0].dataType,c.length),W=Z("w",e[1].dataType,d.length),M=[B,W];o&&M.push(Z("b",e[2].dataType,e[2].dims));let q=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Lt(t,q),`
  ${E.registerUniforms(q).declareVariables(...M,O)}

  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${O.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${y?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${y?1:2}], outputIndices[${y?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${O.type.value} = ${O.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${y?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${y?2:3}]) {
            continue;
          }

          let xVal = ${y?B.get("batch","xHeight","xWidth","input_channel"):B.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${W.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${s}
    ${N}
    ${O.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:S},getRunData:()=>({outputs:[{dims:r?r(w):w,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:C}),getShaderSource:k}},Sd=(e,t,r)=>{let o=e.length>2,s=Ze(r[3]),c=Ze(r[2]),d=Q.size(r)/s/c,h=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/s],y=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/s],w=[r[0],r[1],r[2],r[3]/s],f=[{type:12,data:d},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];Ht(t,f),f.push(...de(h,y,w));let C=(c-1)*t.strides[1]+y[1],S=k=>{let E=ue("output",e[0].dataType,w.length,s),O=He(E.type.tensor),D=Gt(t,E.type.value,O),N=Z("x",e[0].dataType,h.length,s),B=Z("w",e[1].dataType,y.length,s),W=[N,B];o&&W.push(Z("b",e[2].dataType,e[2].dims,s));let M=o?"value += b[output_channel];":"",q=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Lt(t,q),`
  ${k.registerUniforms(q).declareVariables(...W,E)}
  ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${c}u;
    let col = (index1 % width1) * ${c}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${N.type.value}, ${C}>;
    var values: array<${E.type.value}, ${c}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${y[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${C}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${N.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${N.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${y[1]}; w_width++) {
          let w_val = ${B.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${c}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${c}u; i++) {
      var value = values[i];
      ${M}
      ${D}
      ${E.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${s};${c};${C};${y[0]};${y[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:f}),getShaderSource:S}}});var To,oy,Td,Ao=se(()=>{"use strict";Ie();Be();vn();Pe();cr();To=(e,t,r,o,s=!1)=>{let c=e[0].dims,d=e[1].dims,h=c[c.length-2],y=d[d.length-1],w=c[c.length-1],f=Ze(y),C=Ze(w),S=Ze(h),k=Q.size(r)/f/S,E=e.length>2,O=o?o.slice(0,-2):r.slice(0,-2),N=[Q.size(O),h,y],B=[{type:12,data:k},{type:12,data:h},{type:12,data:y},{type:12,data:w}];Ht(t,B),B.push(...de(O,c,d)),E&&B.push(...de(e[2].dims)),B.push(...de(N));let W=M=>{let q=$a("batch_dims",e[0].dataType,O.length),X=Z("a",e[0].dataType,c.length,C),te=Z("b",e[1].dataType,d.length,f),ae=ue("output",e[0].dataType,N.length,f),J=He(ae.type.tensor),ne=Gt(t,ae.type.value,J),be=[X,te],ze="";if(E){let ge=s?f:1;be.push(Z("bias",e[2].dataType,e[2].dims.length,ge)),ze=`${s?`value += bias[col / ${ge}];`:`value += ${ae.type.value}(bias[row + i]);`}`}let Ke=c.slice(0,-2),Ne=d.slice(0,-2),Ae=ti(Ke,O),fe=ti(Ne,O),Fe=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Lt(t,Fe);let Me=(ge,ve)=>{let De=ge.rank,it=ge.name;if(De===2)return`var ${it}_indices = ${ge.type.indices}(0u, 0u);`;let ie=q.rank,he=`var ${it}_indices: ${ge.type.indices};`;for(let Ee=De-2-1,et=ie-1;Ee>=0;Ee--,et--)he+=`
${it}_indices[${Ee}] = ${ie>1?`batch_indices[${et}]`:"batch_indices"};`;return ve.forEach(Ee=>{he+=`
${it}_indices[${Ee}] = 0;`}),he+=`${it}_indices[${De-2}] = 0u;
                     ${it}_indices[${De-1}] = 0u;`,he},xe=()=>{let ge=`var a_data: ${X.type.value};`;for(let ve=0;ve<C;ve++)ge+=`
              let b_data${ve} = b[(b_offset + (k + ${ve}) * uniforms.N + col) / ${f}];`;for(let ve=0;ve<S;ve++){ge+=`a_data = a[(a_offset + (row + ${ve}) * uniforms.K + k) / ${C}];`;for(let De=0;De<C;De++)ge+=`
            values[${ve}] = fma(${te.type.value}(a_data${C===1?"":`[${De}]`}), b_data${De}, values[${ve}]);
`}return ge};return`
  ${M.registerUniforms(Fe).registerInternalVariables(q).declareVariables(...be,ae)}
  ${M.mainStart()}
    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${f})) * ${f};
    var index1 = global_idx / (uniforms.N / ${f});
    let stride1 = uniforms.M / ${S};
    let row = (index1 % stride1) * ${S};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${q.offsetToIndices("batch")};`}
    ${Me(X,Ae)}
    let a_offset = ${X.indicesToOffset("a_indices")};
    ${Me(te,fe)}
    let b_offset = ${te.indicesToOffset("b_indices")};
    var values: array<${ae.type.value}, ${S}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${C}) {
      ${xe()}
    }
    for (var i = 0u; i < ${S}u; i++) {
      var value = values[i];
      ${ze}
      ${ne}
      let cur_indices = ${ae.type.indices}(batch, row + i, col);
      let offset = ${ae.indicesToOffset("cur_indices")};
      ${ae.setByOffset(`offset / ${f}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${f};${C};${S};${s}`,inputDependencies:E?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:B}),getShaderSource:W}},oy=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Td=e=>{oy(e.inputs);let t=qt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(To(e.inputs,{activation:""},t)):e.compute(Ra(e.inputs,{activation:""},t))}});var Ba,Eo,sy,Ad,ko,uy,ly,Oo,Io=se(()=>{"use strict";Be();xd();vn();Id();cr();Ao();ri();Ba=(e,t,r,o,s,c)=>{let d=e[0],h=e.slice(c?1:2,c?3:4),y=h.length,w=t[0],C=t.slice(2).map((E,O)=>E+(E-1)*(r[O]-1)),k=h.map((E,O)=>E+o[O]+o[O+y]).map((E,O)=>Math.floor((E-C[O]+s[O])/s[O]));return k.splice(0,0,d),k.splice(c?3:1,0,w),k},Eo=[2,3,1,0],sy=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Ad=(e,t)=>{let r=e.kernelShape.slice();for(let c=2;c<t[1].dims.length;++c)r[c-2]===0&&(r[c-2]=t[1].dims[c]);let o=e.pads.slice();Tr.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let s=Object.assign({},e);return Object.assign(s,{kernelShape:r,pads:o}),s},ko=e=>{let t=Ea(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],s=e.dilations,c=e.group,d=e.kernel_shape,h=e.pads,y=e.strides,w=e.w_is_const();return{autoPad:o,format:r,dilations:s,group:c,kernelShape:d,pads:h,strides:y,wIsConst:w,...t,cacheKey:`${e.format};${t.activation};`}},uy=(e,t,r)=>{let o=Ad(r,t),s=r.format==="NHWC";if(r.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&s&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let ae=Ba(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,s),J=e.kernelCustomData.wT??e.compute(jt(t[1],Eo),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=J);let ne=[t[0],J];t.length===3&&ne.push(t[2]),e.compute(Sd(ne,o,ae),{inputs:ne})}else e.compute(So(t,o));return}let c=t.length===3,d=t[0].dims[s?1:2],h=t[0].dims[s?2:3],y=t[0].dims[s?3:1],w=t[1].dims[2],f=t[1].dims[3],C=Ba(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,s),S=C[s?1:2],k=C[s?2:3],E=C[s?3:1],O=s&&w===d&&f===h&&r.pads[0]===0&&r.pads[1]===0,D=w===1&&f===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0;if(O||D){let te=C[0],ae,J,ne,be=[];if(s){let Ne=e.kernelCustomData.wT??e.compute(jt(t[1],Eo),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Ne),O){let Ae=d*h*y;ae=t[0].reshape([1,te,Ae]),J=Ne.reshape([1,Ae,E]),ne=[1,te,E]}else ae=t[0].reshape([te,d*h,y]),J=Ne.reshape([1,y,E]),ne=[te,S*k,E];be.push(ae),be.push(J)}else ae=t[0].reshape([te,y,d*h]),J=t[1].reshape([1,E,y]),ne=[te,E,S*k],be.push(J),be.push(ae);c&&be.push(t[2]);let ze=ne[2],Ke=be[0].dims[be[0].dims.length-1];ze<8&&Ke<8?e.compute(To(be,o,C,ne,s),{inputs:be}):e.compute(Ra(be,o,C,ne,s),{inputs:be});return}let N=!0,B=e.kernelCustomData.wT??e.compute(jt(t[1],Eo),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=B);let W=[t[0],B];c&&W.push(t[2]);let M=s?S*k:E,q=s?E:S*k,X=w*f*y;e.compute(Cd(W,o,C,M,q,X,c,N),{inputs:W})},ly=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let s=[0,t.pads[0],0,t.pads[1]],c=[1].concat(t.strides),d=[1].concat(t.dilations),h=[1].concat(t.kernelShape),y=Ad({...t,pads:s,strides:c,dilations:d,kernelShape:h},o);e.compute(So(o,y,w=>r?[w[0],w[2],w[3]]:[]))},Oo=(e,t)=>{sy(e.inputs,t),e.inputs[0].dims.length===3?ly(e,t):uy(e,e.inputs,t)}});var dy,Ed,kd=se(()=>{"use strict";Ie();ir();Pe();cr();Oa();Co();vn();dy=(e,t=!1,r,o,s=4)=>{let c=N=>{switch(N){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${o}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${N} is not supported.`)}},d=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,h=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,y=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",w=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",f=e?"row":"col",C=e?"col":"row",S=`
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${f} / outWidth;
      let outCol = ${f} % outWidth;

      let WRow = ${C} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${C} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${y}) || fract(xR) > 0.0) {
        return ${o}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${w}) || fract(xC) > 0.0) {
        return ${o}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${C} % inChannels;
      ${d}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${s}];`,k=e?`
      let col = colIn * ${s};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${S}
      }
      return ${o}(0.0);`:`
      let col = colIn * ${s};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${S}
      }
      return ${o}(0.0);`,E=`
      let col = colIn * ${s};
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${c(s)}
      }
      return ${o}(0.0);
      `,O=Gt(r,o);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${e?k:E}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${e?E:k}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {
    let col = colIn * ${s};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${h}
      ${ka(t)}
      ${O}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${s}] = value;
    }
  }`},Ed=(e,t,r,o,s,c,d,h)=>{let y=t.format==="NHWC",w=y?e[0].dims[3]:e[0].dims[1],f=r[0],C=y?r[2]:r[3],S=y?r[1]:r[2],k=y?r[3]:r[1],E=y?w%4===0&&k%4===0:C%4===0&&k%4===0,O=y?k:C*S,D=y?C*S:k,N=E?[8,8,1]:[O<=4||D<=4?4:16,O>4&&D<=4?4:16,1],B=E?[4,4,1]:[O<=4?1:4,O>4&&D<=4?1:4,1],W=[Math.ceil(O/N[0]/B[0]),Math.ceil(D/N[1]/B[1]),Math.ceil(f/N[2]/B[2])];Ge("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${W}`);let M=E?4:1,q=Math.max(N[0]*M,N[1]),X=E?4:1,te=[t.kernelShape[y?1:2],t.kernelShape[y?2:3]],ae=[te[0]+(t.dilations[0]<=1?0:(te[0]-1)*(t.dilations[0]-1)),te[1]+(t.dilations[1]<=1?0:(te[1]-1)*(t.dilations[1]-1))],J=[ae[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),ae[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],ne=[{type:6,data:o},{type:6,data:s},{type:6,data:c},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:te},{type:6,data:J}];Ht(t,ne),ne.push(...de(e[0].dims,e[1].dims));let be=["rank","rank"];d&&(ne.push(...de(e[2].dims)),be.push("rank")),ne.push(...de(r));let ze=Ke=>{let Ne=Z("x",e[0].dataType,e[0].dims.length,X),Ae=Z("w",e[1].dataType,e[1].dims.length,1),fe=ue("result",e[0].dataType,r.length,X),Fe=[Ne,Ae],Me="";if(d){let ve=Z("bias",e[2].dataType,e[2].dims.length,X);Fe.push(ve),Me+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${ve.type.value} {
            return bias[coords.${y?"w":"y"}${E?"/ 4":""}];
          }`}let xe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:te.length},{name:"pads",type:"i32",length:J.length}];Lt(t,xe);let ge=He(e[0].dataType,1);if(ge!=="f16"&&ge!=="f32")throw new Error(`elemType ${ge} is not supported.`);return`
        ${Pa("uniforms.result_strides")}
        ${Ke.registerUniforms(xe).declareVariables(...Fe,fe)};
        ${Me}
        ${dy(y,d,t,Ne.type.value,M)}
        ${E?yn(B,N,ge,void 0,!y,q):bn(B,N,ge,void 0,!y,q,!1,void 0,h)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${B};${N};${E}`,inputDependencies:be},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]},programUniforms:ne}),getShaderSource:ze}}});var cy,Po,Od=se(()=>{"use strict";Ie();ir();Be();Pe();cy=(e,t,r,o,s,c=!1,d,h,y=!1)=>{let w=y?1:2,f=y?2:3,C=y?3:1,S=c?2:1,k=`
  fn setOutputAtIndex(flatIndex : u32, value : ${c?`vec4<${d}>`:d}) {
    result[flatIndex] = ${c?`vec4<${d}>`:d}(value);
  }`;o&&(k+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${c?`vec4<${d}>`:d} {
      return bias[coords.${y?"w":"y"}${c?"/ 4":""}];
    }`);let E=c?4:1,O=Z("W",t[1].dataType,t[1].dims.length,E),D=Z("Dy",t[0].dataType,t[0].dims.length,E),N=[D,O];o&&N.push(Z("bias",t[2].dataType,[r[C]].length,E));let B=ue("result",t[0].dataType,r.length,E),W=`{
        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${s?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${s?"global_id.y":"workgroup_id.y"} * ${S};
        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${d}>, ${S}>;
        for (var i = 0; i < ${S}; i++) {
          dotProd[i] = vec4<${d}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${d}(dyCorner.x) + ${d}(wR)) / ${d}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${d}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${d}(dyCorner.y) + ${d}(wC)) / ${d}(uniforms.strides.y);
            let dyC2 = (${d}(dyCorner.y) + 1.0 + ${d}(wC)) / ${d}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${d}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${d}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${D.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${d}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${D.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${d}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${C}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${D.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${d}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${O.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${D.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${d}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${S}; i = i + 1) {
          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${d}>(0.0)`};
          ${B.set("batch","r","c + i","d1","value")};
        }
      }`,M=`
          let outputIndices = ${B.offsetToIndices("global_idx")};
          let batch = ${B.indicesGet("outputIndices",0)};
          let d1 = ${B.indicesGet("outputIndices",C)};
          let r = ${B.indicesGet("outputIndices",w)};
          let c = ${B.indicesGet("outputIndices",f)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${d}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${d}(dyRCorner) + ${d}(wR)) / ${d}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${d}(uniforms.Dy_shape[${w}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${d}(dyCCorner) + ${d}(wC)) / ${d}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${d}(uniforms.Dy_shape[${f}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${y?D.get("batch","idyR","idyC","inputChannel"):D.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${O.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${o?"bias[d1]":`${d}(0.0)`};
          ${B.setByOffset("global_idx","value")};
        `;return`
  ${e.registerUniforms(h).declareVariables(...N,B)}
  ${k}

    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${c?W:M}}`},Po=(e,t,r)=>{let o=e.length>2,s=t.outputShape,c=Q.size(s),d=[Math.ceil(c/64),1,1];Ge("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${d}`);let h=t.format==="NHWC",y=["rank","rank"],w=[t.strides[0],t.strides[1]],f=[t.kernelShape[h?1:2],t.kernelShape[h?2:3]],C=[t.dilations[0],t.dilations[1]],S=[f[0]+(t.dilations[0]<=1?0:(t.kernelShape[h?1:2]-1)*(t.dilations[0]-1)),f[1]+(t.dilations[1]<=1?0:(t.kernelShape[h?2:3]-1)*(t.dilations[1]-1))],k=[S[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),S[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],E=!1,O=t.group,D=e[1].dims,N=D[0]/O,B=D[1],W=[{type:6,data:c},{type:12,data:w},{type:12,data:f},{type:12,data:C},{type:12,data:S},{type:6,data:k},{type:12,data:N},{type:12,data:B},...de(e[0].dims,e[1].dims)];o&&(W.push(...de(e[2].dims)),y.push("rank")),W.push(...de(s));let M=d[1]===1&&d[2]===1,q=X=>{let te=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:w.length},{name:"filter_dims",type:"u32",length:f.length},{name:"dilations",type:"u32",length:f.length},{name:"effective_filter_dims",type:"u32",length:S.length},{name:"pads",type:"i32",length:k.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],ae=He(e[0].dataType);return`${cy(X,e,s,o,M,E,ae,te,h)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:y},getRunData:()=>({dispatchGroup:{x:d[0],y:d[1],z:d[2]},outputs:[{dims:r?r(s):s,dataType:e[0].dataType}],programUniforms:W}),getShaderSource:q}}});var py,fy,my,Pd,Rd,hy,gy,yy,by,Bd,zd=se(()=>{"use strict";kd();Od();cr();ri();py=(e,t,r,o,s,c)=>(e-1)*t+r+(o-1)*s+1-c,fy=(e,t,r,o,s)=>{let c=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=c,r[s]=e-c):t==="SAME_LOWER"&&(r[o]=e-c,r[s]=c)},my=(e,t,r,o,s,c,d,h,y,w)=>{let f=e.length-2,C=w.length===0;if(y.length===0)for(let E=0;E<f;++E)y.push(0);let S=e[0],k=t[h?3:1]*s;for(let E=0,O=e.length-f-(h?1:0);E<f;++E,++O){let D=e[O],N=C?D*d[E]:w[E],B=py(D,d[E],c[E],t[O],r[E],N);fy(B,o,c,E,E+f),C&&w.push(d[E]*(D-1)+y[E]+(t[O]-1)*r[E]+1-c[E]-c[E+f])}w.splice(0,0,S),w.splice(h?3:1,0,k)},Pd=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((C,S)=>C*S,1)===0){r.length=0;for(let C=2;C<t[1].dims.length;++C)r.push(t[1].dims[C])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let s=e.pads.slice(),c=e.outputShape.slice(),d=e.outputPadding.slice(),h=t[0].dims,y=e.dilations.slice();if(y.reduce((C,S)=>C+S,0)===0){let C=t[0].dims.length-2;y=new Array(C).fill(1)}let w=e.strides.slice();if(w.reduce((C,S)=>C+S,0)===0){let C=t[0].dims.length-2;w=new Array(C).fill(1)}my(h,r,y,e.autoPad,e.group,s,w,o,d,c);let f=Object.assign({},e);return Object.assign(f,{kernelShape:r,pads:s,outputPadding:d,outputShape:c,dilations:y,strides:w}),f},Rd=e=>{let t=Ea(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],s=e.dilations,c=e.group,d=e.kernelShape,h=e.pads,y=e.strides,w=e.wIsConst(),f=e.outputPadding,C=e.outputShape;return{autoPad:o,format:r,dilations:s,group:c,kernelShape:d,outputPadding:f,outputShape:C,pads:h,strides:y,wIsConst:w,...t,cacheKey:`${e.format};${t.activation};`}},hy=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let s=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==s))throw new Error("invalid bias");let c=e[0].dims.length-2;if(t.dilations.reduce((f,C)=>f+C,0)>0&&t.dilations.length!==c)throw new Error(`dilations should be ${c}D`);if(t.strides.reduce((f,C)=>f+C,0)>0&&t.strides.length!==c)throw new Error(`strides should be ${c}D`);if(t.pads.reduce((f,C)=>f+C,0)>0&&t.pads.length!==c*2)throw new Error(`pads should be ${c*2}D`);if(t.outputPadding.length!==c&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${c}D`);if(t.kernelShape.reduce((f,C)=>f+C,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},gy=[2,3,1,0],yy=(e,t,r)=>{let o=Pd(r,t),s=r.format==="NHWC",c=o.outputShape,d=c[s?3:1],h=t[0].dims[s?3:1];if(o.group!==1||d===1&&h===1){e.compute(Po(t,o));return}let y=c[s?1:2],w=c[s?2:3],f=t[1].dims[2],C=t[1].dims[3],S=s?y*w:d,k=s?d:y*w,E=f*C*h,O=!0,D=e.kernelCustomData.wT??e.compute(jt(t[1],gy),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=D);let N=[t[0],D],B=t.length===3;B&&(!s&&t[2].dims.length===1?N.push(t[2].reshape([t[2].dims[0],1,1])):N.push(t[2])),e.compute(Ed(N,o,c,S,k,E,B,O),{inputs:N})},by=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let s=t.kernelShape;(s.length===0||s[0]===0)&&(s=[e.inputs[1].dims[2]]);let c=t.dilations;(c.length===0||c[0]===0)&&(c=[1]);let d=t.strides;(d.length===0||d[0]===0)&&(d=[1]);let h=t.pads;h.length===0&&(h=[0,0]),h=[0,h[0],0,h[1]],d=[1].concat(d),c=[1].concat(c),s=[1].concat(s);let y=Pd({...t,pads:h,strides:d,dilations:c,kernelShape:s},o);e.compute(Po(o,y,w=>r?[w[0],w[2],w[3]]:[w[0],w[1],w[3]]))},Bd=(e,t)=>{hy(e.inputs,t),e.inputs[0].dims.length===3?by(e,t):yy(e,e.inputs,t)}});var vy,Md,Dd,jd=se(()=>{"use strict";Ie();Be();mt();Pe();vy=(e,t,r,o)=>{let s=Q.size(t),c=t.length,d=Z("input",e,c),h=ue("output",e,c),y=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),w=Q.normalizeAxis(y,c),f=C=>{let S=` i32(${d.indicesGet("inputIndices","uniforms.axis")}) `,k=Ce("uniforms.input_shape","uniforms.axis",c),E=o.reverse?S+(o.exclusive?" + 1":""):"0",O=o.reverse?k:S+(o.exclusive?"":" + 1");return`
                ${C.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(d,h)}
                ${C.mainStart()}
                  ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${h.offsetToIndices("global_idx")};
                  var sum = ${h.type.value}(0);
                  let first : i32 = ${E};
                  let last : i32 = ${O};
                  for (var i : i32 = first; i < last; i++) {
                    ${d.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${d.getByIndices("inputIndices")};
                  }
                  ${h.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},{type:6,data:w},...de(t,t)]}),getShaderSource:f}},Md=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,s=e.inputs[1];e.compute(vy(o,r,s,t),{inputs:[0]})},Dd=e=>{let t=e.exclusive===1,r=e.reverse===1;return Re({exclusive:t,reverse:r})}});var Ro,za,Ud,wy,_y,Bo,zo,Nd,$y,Wd,Vd,Gd=se(()=>{"use strict";Ie();Be();mt();Pe();Ro="[a-zA-Z]|\\.\\.\\.",za="("+Ro+")+",Ud="^"+za+"$",wy="("+za+",)*"+za,_y="^"+wy+"$",Bo=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},zo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,s]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(_y)))throw new Error("Invalid LHS term");if(o.split(",").forEach((h,y)=>{let w=t[y].dims.slice();if(!h.match(RegExp(Ud)))throw new Error("Invalid LHS term");let f=this.processTerm(h,!0,w,y);this.lhs.push(f)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([h,y])=>y.count===1||h==="...").map(([h])=>h).join("");else if(!s.match(RegExp(za)))throw new Error("Invalid RHS");s.match(RegExp(Ro,"g"))?.forEach(h=>{if(h==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let y=this.symbolToInfo.get(h);if(y===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(y.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(t,r,o){let s=this.symbolToInfo.get(t);if(s!==void 0){if(s.dimValue!==r&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(o)}else s={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,s)}processTerm(t,r,o,s=-1){let c=o.length,d=!1,h=[],y=0;if(!t.match(RegExp(Ud))&&!r&&t!=="")throw new Error("Invalid LHS term");let w=t.match(RegExp(Ro,"g")),f=new Bo(s);return w?.forEach((C,S)=>{if(C==="..."){if(d)throw new Error("Only one ellipsis is allowed per input term");d=!0;let k=c-w.length+1;if(k<0)throw new Error("Ellipsis out of bounds");if(h=o.slice(y,y+k),this.hasEllipsis){if(this.ellipsisDims.length!==h.length||this.ellipsisDims.toString()!==h.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=h;else throw new Error("Ellipsis must be specified in the LHS");for(let E=0;E<h.length;E++){let O=String.fromCharCode("0".charCodeAt(0)+E);f.addSymbol(O,S+E),this.addSymbol(O,o[y++],s)}}else f.addSymbol(C,S+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(C,o[y++],s)}),f}},Nd=e=>e+"_max",$y=(e,t,r,o)=>{let c=e.map(f=>f.length).map((f,C)=>Z(`input${C}`,t,f)),d=Q.size(o),h=ue("output",t,o.length),y=[...r.symbolToInfo.keys()].filter(f=>!r.rhs.symbolToIndices.has(f)),w=f=>{let C=[],S="var prod = 1.0;",k="var sum = 0.0;",E="sum += prod;",O=[],D=[],N=[],B=[],W=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((q,X)=>{if(r.rhs.symbolToIndices.has(X)){let te=r.rhs.symbolToIndices.get(X)?.[0];te!==void 0&&r.lhs.forEach((ae,J)=>{if(q.inputIndices.includes(J)){let ne=ae.symbolToIndices.get(X);if(ne===void 0)throw new Error("Invalid symbol error");ne.forEach(be=>{C.push(`${c[J].indicesSet(`input${J}Indices`,be,h.indicesGet("outputIndices",te))}`)})}})}else r.lhs.forEach((te,ae)=>{if(q.inputIndices.includes(ae)){let J=te.symbolToIndices.get(X);if(J===void 0)throw new Error("Invalid symbol error");J.forEach(ne=>{O.push(`${c[ae].indicesSet(`input${ae}Indices`,ne,`${X}`)}`)}),B.push(`prod *= ${c[ae].getByIndices(`input${ae}Indices`)};`)}}),D.push(`for(var ${X}: u32 = 0; ${X} < uniforms.${Nd(X)}; ${X}++) {`),N.push("}")});let M=W?[...C,`let sum = ${c.map((q,X)=>q.getByIndices(`input${X}Indices`)).join(" * ")};`]:[...C,k,...D,...O,S,...B,E,...N];return`
            ${f.registerUniforms(y.map(q=>({name:`${Nd(q)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...c,h)}

            ${f.mainStart()}
            ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${h.offsetToIndices("global_idx")};
            ${c.map((q,X)=>`var input${X}Indices: ${c[X].type.indices};`).join(`
`)}
            ${M.join(`
`)};
            ${h.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let f=y.filter(S=>r.symbolToInfo.has(S)).map(S=>({type:12,data:r.symbolToInfo.get(S)?.dimValue||0}));f.push({type:12,data:d});let C=e.map((S,k)=>[...de(S)]).reduce((S,k)=>S.concat(k),f);return C.push(...de(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:C}},getShaderSource:w}},Wd=(e,t)=>{let r=new zo(e.inputs,t.equation),o=r.outputDims,s=e.inputs.map((c,d)=>c.dims);e.compute($y(s,e.inputs[0].dataType,r,o))},Vd=e=>{let t=e.equation.replace(/\s+/g,"");return Re({equation:t})}});var Cy,Hd,xy,Sy,Ld,Fd=se(()=>{"use strict";Ie();Be();Pe();Cy=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,s=t.length<r.length?0:t.length-r.length;for(;o<r.length&&s<t.length;++o,++s)if(r[o]!==t[s]&&r[o]!==1&&t[s]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Hd=(e,t)=>{let r=e.length-t.length,o=[];for(let s=0;s<r;++s)o.push(e[s]);for(let s=0;s<t.length;++s)o.push(t[s]===1?e[s+r]:t[s]);return o},xy=(e,t)=>e.length>t.length?Hd(e,t):Hd(t,e),Sy=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=xy(t,r),s=e[0].dataType,c=s===9?4:1,d=Math.ceil(Q.size(o)/c),h=w=>{let f=Z("input",s,t.length,c),C=ue("output",s,o.length,c),S;if(s===9){let k=(E,O,D="")=>`
          let outputIndices${O} = ${C.offsetToIndices(`outputOffset + ${O}u`)};
          let offset${O} = ${f.broadcastedIndicesToOffset(`outputIndices${O}`,C)};
          let index${O} = offset${O} / 4u;
          let component${O} = offset${O} % 4u;
          ${E}[${O}] = ${D}(${f.getByOffset(`index${O}`)}[component${O}]);
        `;S=`
        let outputOffset = global_idx * ${c};
        var data = vec4<u32>(0);
        ${k("data",0,"u32")}
        ${k("data",1,"u32")}
        ${k("data",2,"u32")}
        ${k("data",3,"u32")}
        ${C.setByOffset("global_idx","data")}
      }`}else S=`
        let outputIndices = ${C.offsetToIndices("global_idx")};
        let inputOffset = ${f.broadcastedIndicesToOffset("outputIndices",C)};
        ${C.setByOffset("global_idx",f.getByOffset("inputOffset"))}
      }`;return`
    ${w.registerUniform("vec_size","u32").declareVariables(f,C)}
    ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${S}`},y=[{type:12,data:d},...de(t,o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:h,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y})}},Ld=e=>{Cy(e.inputs),e.compute(Sy(e.inputs),{inputs:[0]})}});var Iy,qd,Kd=se(()=>{"use strict";Ie();Be();Pe();Aa();Iy=e=>{let t=e[0].dataType,r=Q.size(e[0].dims),o=Q.size(e[1].dims),s=o%4===0,c=d=>{let h=Z("x",t,[1],4),y=Z("bias",t,[1],4),w=ue("y",t,[1],4),f=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],C=k=>`
      let bias${k}_offset: u32 = (global_idx * 4 + ${k}) % uniforms.bias_size;
      let bias${k} = ${y.getByOffset(`bias${k}_offset / 4`)}[bias${k}_offset % 4];`,S=s?`
      let bias = ${y.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${C(0)}${C(1)}${C(2)}${C(3)}
      let bias = ${h.type.value}(bias0, bias1, bias2, bias3);`;return`${d.registerUniforms(f).declareVariables(h,y,w)}

    ${_o(Tt(t))}

    ${d.mainStart(_a)}
      ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${h.getByOffset("global_idx")};
      ${S}
      let x_in = x + bias;
      ${w.setByOffset("global_idx",$o("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${s}`,inputDependencies:["type","type"]},getShaderSource:c,getRunData:d=>({outputs:[{dims:d[0].dims,dataType:d[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(r/_a/4)}})}},qd=e=>{e.inputs.length<2||Q.size(e.inputs[1].dims)===0?td(e):e.compute(Iy(e.inputs))}});var Ty,Ay,Jd,Yd,Zd=se(()=>{"use strict";Ie();Be();mt();Pe();Ty=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Ay=(e,t)=>{let r=e[0].dims,o=e[1].dims,s=r.length,c=Q.normalizeAxis(t.axis,s),d=r.slice(0);d.splice(c,1,...o);let h=r[c],y=e[0].dataType===9?4:1,w=Math.ceil(Q.size(d)/y),f=[{type:12,data:w},{type:6,data:h},{type:12,data:c},...de(e[0].dims,e[1].dims,d)],C=S=>{let k=Z("data",e[0].dataType,e[0].dims.length,y),E=Z("inputIndices",e[1].dataType,e[1].dims.length),O=ue("output",e[0].dataType,d.length,y),D=B=>{let W=o.length,M=`var indicesIndices${B}  = ${E.type.indices}(0);`;for(let q=0;q<W;q++)M+=`${W>1?`indicesIndices${B}[${q}]`:`indicesIndices${B}`} = ${d.length>1?`outputIndices${B}[uniforms.axis + ${q}]`:`outputIndices${B}`};`;M+=`
          var idx${B} = ${E.getByIndices(`indicesIndices${B}`)};
          if (idx${B} < 0) {
            idx${B} = idx${B} + uniforms.axisDimLimit;
          }
          var dataIndices${B} : ${k.type.indices};
        `;for(let q=0,X=0;q<s;q++)q===c?(M+=`${s>1?`dataIndices${B}[${q}]`:`dataIndices${B}`} = u32(idx${B});`,X+=W):(M+=`${s>1?`dataIndices${B}[${q}]`:`dataIndices${B}`} = ${d.length>1?`outputIndices${B}[${X}]`:`outputIndices${B}`};`,X++);return M},N;if(e[0].dataType===9){let B=(W,M,q="")=>`
          let outputIndices${M} = ${O.offsetToIndices(`outputOffset + ${M}u`)};
          ${D(M)};
          let offset${M} = ${k.indicesToOffset(`dataIndices${M}`)};
          let index${M} = offset${M} / 4u;
          let component${M} = offset${M} % 4u;
          ${W}[${M}] = ${q}(${k.getByOffset(`index${M}`)}[component${M}]);
        `;N=`
        let outputOffset = global_idx * ${y};
        var value = vec4<u32>(0);
        ${B("value",0,"u32")}
        ${B("value",1,"u32")}
        ${B("value",2,"u32")}
        ${B("value",3,"u32")}
        ${O.setByOffset("global_idx","value")}
      `}else N=`
      let outputIndices = ${O.offsetToIndices("global_idx")};
      ${D("")};
      let value = ${k.getByIndices("dataIndices")};
      ${O.setByOffset("global_idx","value")};
      `;return`
      ${S.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(k,E,O)}
      ${S.mainStart()}
        ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${N}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:f}),getShaderSource:C}},Jd=e=>Re({axis:e.axis}),Yd=(e,t)=>{let r=e.inputs;Ty(r),e.compute(Ay(e.inputs,t))}});var Ey,ky,Qd,Xd,ec=se(()=>{"use strict";Ie();Be();mt();Pe();Ey=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},ky=(e,t)=>{let r=e[0].dims,o=e[0].dataType,s=r.length,c=e[1].dims,d=e[1].dataType,h=Q.normalizeAxis(t.axis,s),y=r[h],w=c.slice(0),f=Q.size(w),C=Z("input",o,s),S=Z("indicesInput",d,c.length),k=ue("output",o,w.length),E=[{type:12,data:f},{type:6,data:y},{type:12,data:h}];return E.push(...de(r,c,w)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:w,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:E}),getShaderSource:N=>`
      ${N.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(C,S,k)}
      ${N.mainStart()}
      ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${k.offsetToIndices("global_idx")};

      var idx = ${S.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${C.type.indices}(outputIndices);
      ${C.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${C.getByIndices("inputIndices")};

      ${k.setByOffset("global_idx","value")};
  }`}},Qd=e=>Re({axis:e.axis}),Xd=(e,t)=>{let r=e.inputs;Ey(r),e.compute(ky(e.inputs,t))}});var Oy,Py,tc,rc,ic=se(()=>{"use strict";Ie();Be();Pe();Oy=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Py=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[s,c,d]=ba.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),h=[s,c];if(!h)throw new Error("Can't use gemm on the given tensors");let y=Q.size(h),w=[{type:12,data:y},{type:12,data:s},{type:12,data:c},{type:12,data:d},{type:1,data:t.alpha},{type:1,data:t.beta}],f=["type","type"];e.length===3&&(w.push(...de(e[2].dims)),f.push("rank")),w.push(...de(h));let C=S=>{let k="";t.transA&&t.transB?k="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?k="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?k="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(k="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let E=t.alpha===1?"":"value *= uniforms.alpha;",O=Z("a",e[0].dataType,e[0].dims),D=Z("b",e[1].dataType,e[1].dims),N=O.type.value,B=null,W=[O,D];e.length===3&&(B=Z("c",e[2].dataType,e[2].dims.length),W.push(B));let M=ue("output",e[0].dataType,h.length);W.push(M);let q=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${S.registerUniforms(q).declareVariables(...W)}

  ${S.mainStart()}
    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${N}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${k}
    }

    ${E}
    ${(()=>B!=null?`let cOffset = ${B.broadcastedIndicesToOffset("vec2(m, n)",M)}; value += ${N}(uniforms.beta) * ${B.getByOffset("cOffset")};`:"")()}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:h,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w}),getShaderSource:C}},tc=e=>{let t=e.transA,r=e.transB,o=e.alpha,s=e.beta;return{transA:t,transB:r,alpha:o,beta:s,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},rc=(e,t)=>{Oy(e.inputs),e.compute(Py(e.inputs,t))}});var Ry,By,zy,nc,ac=se(()=>{"use strict";Ie();Be();Pe();Ry=(e,t)=>{let r=e[0].dims,o=r,s=2,c=Q.sizeToDimension(r,s),d=Q.sizeFromDimension(r,s),h=Ze(d),y=d/h,w=[r[0],r[1],y],f=["rank","type","type"],C=[{type:12,data:d},{type:12,data:y}];C.push(...de(w,w));let S=k=>{let E=Z("x",e[0].dataType,w.length,h),O=Z("scale",e[1].dataType,e[1].dims),D=Z("bias",e[2].dataType,e[2].dims),N=ue("output",e[0].dataType,w.length,h),B=[E,O,D,N],W=E.type.value,M=h===1?"f32":`vec${h}<f32>`,q=64,X=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${M}, ${q}>;
  const workgroupSize = ${q}u;
  ${k.registerUniforms(X).declareVariables(...B)}
  ${k.mainStart(q)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${M}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${M}(${E.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${At("workgroupShared[0]",h)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${M}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${M}(${E.get("batch","channel","h")}) - ${M}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${At("workgroupShared[0]",h)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));
    let channelScale = invStdDev * f32(${O.getByOffset("channel")});
    let channelShift = f32(${D.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${E.get("batch","channel","h")} * ${W}(${M}(channelScale)) + ${W}(${M}(channelShift));
      ${N.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${h}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:c},programUniforms:C}),getShaderSource:S}},By=(e,t,r,o,s,c,d,h)=>{let y=Ze(d),w=64,f=y===1?"vec2f":`mat2x${y}f`,C=y===1?"f32":`vec${y}f`,S=(X,te)=>`${f}(${X}, ${te})`,k=s*d/y,E=Math.ceil(c/w),O=["type"],D=[{type:12,data:E},{type:12,data:c},{type:12,data:Math.floor(d/y)},{type:12,data:Math.floor(c*d/y)}],N=X=>{let te=Z("input",t.dataType,t.dims,y);return`
  ${X.declareVariables(te)}
  @group(0) @binding(1) var<storage, read_write> output : array<${f}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${X.mainStart(w)}
    let currentImageNumber = global_idx / ${w} / uniforms.C;
    let currentChannelNumber = (global_idx / ${w}) % uniforms.C;
    let wgId = global_idx % ${w};
    let wgOffset = wgId * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${gt("f32",y)};
    var squaredSum = ${gt("f32",y)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${C}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${S("sum","squaredSum")};
  }`},B=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${y}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:[s,d,w,2],dataType:1}],dispatchGroup:{x:s*d/y},programUniforms:D}),getShaderSource:N},{inputs:[t],outputs:[-1]})[0],W=[{type:12,data:k},{type:12,data:c},{type:12,data:Math.floor(d/y)},{type:12,data:Math.floor(w*d/y)}],M=["type","type","type"],q=X=>{let te=Z("scale",r.dataType,r.dims,y),ae=Z("bias",o.dataType,o.dims,y);return`
  @group(0) @binding(0) var<storage, read> input : array<${f}>;
  @group(0) @binding(1) var<storage, read> scale : array<${te.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${ae.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${f}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${X.mainStart()}
    ${X.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${gt("f32",y)};
    var squaredSum = ${gt("f32",y)};
    for (var i: u32 = 0; i < min(${w}, uniforms.H); i++) {
        let value = input[offset + i + currentChannelNumber * ${w}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${h}));
    let channelScale = invStdDev * ${C}(scale[currentChannelNumber]);
    let channelShift = ${C}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${S("channelScale","channelShift")};
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${y};${h}`,inputDependencies:M},getRunData:()=>({outputs:[{dims:[s,d,2],dataType:1}],dispatchGroup:{x:Math.ceil(k/64)},programUniforms:W}),getShaderSource:q},{inputs:[B,r,o],outputs:[-1]})[0]},zy=(e,t,r)=>{let o=t[0].dims,s=o,c=o[0],d=o[o.length-1],h=Q.sizeFromDimension(o,1)/d,y=Ze(d),w=Q.size(s)/y,f=[{type:12,data:h},{type:12,data:Math.floor(d/y)}],C=["type","type"],S=By(e,t[0],t[1],t[2],c,h,d,r.epsilon),k=E=>{let O=He(t[0].dataType),D=y===1?"vec2f":`mat2x${y}f`,N=y===1?O:`vec${y}<${O}>`,B=Z("input",t[0].dataType,t[0].dims,y),W=ue("output",t[0].dataType,s,y);return`
  @group(0) @binding(0) var<storage, read> input : array<${B.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${D}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${W.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${E.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${N}(scale[0]), ${N}(scale[1]));
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${y}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:f}),getShaderSource:k},{inputs:[t[0],S]})},nc=(e,t)=>{t.format==="NHWC"?zy(e,e.inputs,t):e.compute(Ry(e.inputs,t))}});var My,Dy,oc,sc=se(()=>{"use strict";Ie();Be();Pe();My=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Dy=(e,t,r)=>{let o=e[0].dims,s=e[1],c=e[2],d=o,h=Q.normalizeAxis(t.axis,o.length),y=Q.sizeToDimension(o,h),w=Q.sizeFromDimension(o,h),f=Q.size(s.dims),C=c?Q.size(c.dims):0;if(f!==w||c&&C!==w)throw new Error(`Size of X.shape()[axis:] == ${w}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${f} and bias size of ${C}`);let S=[];for(let M=0;M<o.length;++M)M<h?S.push(o[M]):S.push(1);let k=Ze(w),E=["type","type"],O=[{type:12,data:y},{type:1,data:w},{type:12,data:Math.floor(w/k)},{type:1,data:t.epsilon}];c&&E.push("type");let D=r>1,N=r>2,B=M=>{let q=He(e[0].dataType),X=[Z("x",e[0].dataType,e[0].dims,k),Z("scale",s.dataType,s.dims,k)];c&&X.push(Z("bias",c.dataType,c.dims,k)),X.push(ue("output",e[0].dataType,d,k)),D&&X.push(ue("mean_data_output",1,S)),N&&X.push(ue("inv_std_output",1,S));let te=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${M.registerUniforms(te).declareVariables(...X)}
  ${M.mainStart()}
    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${gt("f32",k)};
    var mean_square_vector = ${gt("f32",k)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Vt(q,k,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${At("mean_vector",k)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${At("mean_square_vector",k)} / uniforms.norm_size - mean * mean + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Vt(q,k,"x[j + offset]")};
      let f32scale = ${Vt(q,k,"scale[j]")};
      output[j + offset] = ${X[0].type.value}((f32input - mean) * inv_std_dev * f32scale
        ${c?`+ ${Vt(q,k,"bias[j]")}`:""}
      );
    }

    ${D?"mean_data_output[global_idx] = mean":""};
    ${N?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},W=[{dims:d,dataType:e[0].dataType}];return D&&W.push({dims:S,dataType:1}),N&&W.push({dims:S,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${k};${r}`,inputDependencies:E},getRunData:()=>({outputs:W,dispatchGroup:{x:Math.ceil(y/64)},programUniforms:O}),getShaderSource:B}},oc=(e,t)=>{My(e.inputs),e.compute(Dy(e.inputs,t,e.outputCount))}});var jy,Uy,uc,lc,dc=se(()=>{"use strict";Ie();Be();mt();Pe();jy=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],o=r.dims.length;if(r.dims[o-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let s=Math.floor((t.k+t.blockSize-1)/t.blockSize),c=t.blockSize/8*t.bits,d=e[1];if(!Q.areEqual(d.dims,[t.n,s,c]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let y=e[2].dims;if(Q.size(y)!==t.n*s)throw new Error("scales input size error.");if(e.length===4){let f=e[3].dims,C=t.bits>4?t.n*s:t.n*Math.floor((s+1)/2);if(Q.size(f)!==C)throw new Error("zeroPoints input size error.")}},Uy=(e,t)=>{let r=e[0].dims,o=r.length,s=r.slice(0,o-1).concat(t.n),c=r[o-2],h=t.blockSize/8*t.bits/4,y=Ze(c),w=Ze(t.n),f=Ze(t.k),C=Ze(h),S=Q.size(s)/w/y,k=[{type:12,data:S},{type:12,data:t.k},{type:12,data:t.n},{type:12,data:t.accuracyLevel},{type:12,data:t.bits},{type:12,data:t.blockSize}],E=r.slice();E.splice(-1,1,t.k/f);let O=Q.convertShape(e[1].dims).slice();O.splice(-1,1,h/C),k.push(...de(E)),k.push(...de(O)),k.push(...de(e[2].dims)),e.length===4&&k.push(...de(Q.convertShape(e[3].dims)));let D=s.slice();D.splice(-1,1,t.n/w),k.push(...de(D));let N=B=>{let W=Z("a",e[0].dataType,E.length,f),M=Z("b",12,O.length,C),q=Z("scales",e[2].dataType,e[2].dims.length),X=[W,M,q],te=e.length===4?Z("zero_points",12,e[3].dims.length):void 0;te&&X.push(te);let ae=ue("output",e[0].dataType,s.length,w),J=[{name:"output_size",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}],ne=Math.floor((t.k+t.blockSize-1)/t.blockSize),be=He(e[0].dataType),ze=(()=>{switch(f){case 1:return`array<${be}, 8>`;case 2:return`mat4x2<${be}>`;case 4:return`mat2x4<${be}>`;default:throw new Error(`${f}-component is not supported.`)}})(),Ke=`
        fn dequantize(quantized: ${ze}, zero_point: ${be}, scale: ${be}) -> ${ze} {
          ${(()=>f===1?`var dequantized = ${ze}(${Array.from({length:8},(fe,Fe)=>`(quantized[${Fe}] - zero_point) * scale`).join(", ")});
              return dequantized;`:`var zero_points: ${ze} = ${ze}(${Array(8).fill("zero_point").join(",")});
              return (quantized - zero_points) * scale;`)()}
        }`,Ne=`
        fn ortUnpack8x4snorm(value: u32) -> ${ze} {
          var quantized: ${ze};
          var offset: u32 = 0;
          let count: u32 = 4;
          for (var i: u32 = 0; i < 8u; i++) {
            var result = ${be}(extractBits(value, offset, count));
            ${(()=>{switch(f){case 1:return"quantized[i] = result;";case 2:return"quantized[i / 2][i % 2] = result;";case 4:return"quantized[i / 4][i % 4] = result;";default:throw new Error(`${f}-component is not supported.`)}})()}
            offset += count;
          }
          return quantized;
        }`,Ae=te?`
          zero_point_offset += 4;
          if (zero_point_offset == 32) {
            zero_point_offset = 0;
            zero_point_index++;
            zero_point_word = ${te.getByOffset("zero_point_index")};
          }`:"";return`
        ${Ke};
        ${Ne};
        ${B.registerUniforms(J).declareVariables(...X,ae)}
        ${B.mainStart()}
          ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var output_values: array<${ae.type.value}, ${y}>;
          var output_indices = ${ae.offsetToIndices("global_idx")};
          var n = ${ae.indicesGet("output_indices",o-1)};
          var m = ${ae.indicesGet("output_indices",o-2)};
          var a_indices: ${W.type.indices} = output_indices;
          // Two zero points are packed into one byte because uniforms.bits <= 4.
          // zero_point_offset is either 0 or 4. It is bit offset within one byte.
          // TODO support zero_point_offset for bits > 4
          ${te?`
          var zero_point_index: u32 = n * ${w} * ((${ne} + 1) / 2) / 4;
          var zero_point_word: u32 = ${te.getByOffset("zero_point_index")};
          var zero_point_offset: u32 = 0;`:""}
          var scale_index = n * ${ne*w};
          var b_indices: ${M.type.indices};
          for (var c: u32 = 0; c < ${w}; c++) {
            ${M.indicesSet("b_indices","0",`n * ${w} + c`)};
            var block_offset: u32 = 0;
            for (var block: u32 = 0; block < ${ne}; block++) {
              // The scale and zero points are computed per block.
              let scale = ${q.getByOffset("scale_index")};
              // The default zero point is 8 for unsigned 4-bit quantization.
              let zero_point = ${be}(${te?"extractBits(zero_point_word, zero_point_offset, 4)":8});
              ${M.indicesSet("b_indices","1","block")};
              var word_offset: u32 = block_offset;
              for (var word: u32 = 0; word < ${h}; word += ${C}) {
                ${M.indicesSet("b_indices","2","word")};
                let b_data = ${M.getByIndices("b_indices")};
                for (var i: u32 = 0; i < ${C}; i++) {
                  let b_value = ${C===1?"b_data":"b_data[word + i]"};
                  let b_quantized_values: ${ze} = ortUnpack8x4snorm(b_value);
                  let b_dequantized_values = dequantize(b_quantized_values, zero_point, scale);
                  // Number of B elements per 32-bit word is 32/bits = 32/4 = 8
                  var offset: u32 = word_offset;
                  for (var j: u32 = 0; j < 8/${f}; j++) {
                    ${W.indicesSet("a_indices",o-1,`offset/${f}`)};
                    for (var k: u32 = 0; k < ${y}u; k++) {
                      ${W.indicesSet("a_indices",o-2,`m * ${y} + k`)};
                      let a_data = ${W.getByIndices("a_indices")};
                      output_values[k]${w>1?"[c]":""} += ${f===1?"a_data * b_dequantized_values[j]":"dot(a_data, b_dequantized_values[j])"};
                    }
                    offset += ${f};
                  }
                  word_offset += 8;
                }
              }
              scale_index++;
              ${Ae}
              block_offset += uniforms.block_size;
            }
            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.
            ${te?`if (zero_point_offset % 8 > 0) {
                ${Ae}
              }`:""}
            }
            for (var k: u32 = 0u; k < ${y}u; k++) {
              ${ae.indicesSet("output_indices",o-2,`${y+" * m + k"}`)};
              ${ae.setByIndices("output_indices","output_values[k]")}
            }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:k}),getShaderSource:N}},uc=(e,t)=>{jy(e.inputs,t),e.compute(Uy(e.inputs,t))},lc=e=>Re(e)});var Ny,pc,cc,Wy,Mo,fc,mc=se(()=>{"use strict";Ie();Be();mt();ga();wo();Pe();ri();Ny=(e,t)=>{let r=e[0],o=e[1],s=e[2],c=e[3],d=e[4],h=e[5],y=e[6],w=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let f=!1,C=r.dims[0],S=r.dims[1],k=r.dims.length===3?f?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],E=S,O=0,D=0,N=Math.floor(k/t.numHeads);if(y&&w){if(y.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(w.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');O=y.dims[2],D=y.dims[2]}else if(y||w)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let B;if(o){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(o.dims.length<3||o.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==o.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');B=2,E=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==N)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');B=5,E=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==N)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');B=0,E=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');B=3}if(c){if(c.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let W=0;if(d){W=8;let ae=d.dims;throw ae.length===1?ae[0]===C?W=1:ae[0]===3*C+2&&(W=3):ae.length===2&&ae[0]===C&&ae[1]===E&&(W=5),W===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let M=!1,q=k;if(s){if(s.dims.length!==3&&s.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(s.dims.length===3){if(E!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');q=s.dims[2]}else{if(E!==s.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');q=s.dims[1]*s.dims[3],M=!0}}let X=O+E,te=!1;if(d)throw new Error("Key padding mask is not supported");if(h)throw new Error("extraAddQk is not supported");if(y)throw new Error("pastKey is not supported");if(w)throw new Error("pastValue is not supported");return{batchSize:C,sequenceLength:S,pastSequenceLength:O,kvSequenceLength:E,totalSequenceLength:X,maxSequenceLength:D,inputHiddenSize:0,hiddenSize:k,vHiddenSize:q,headSize:N,vHeadSize:Math.floor(q/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:W,scale:t.scale,broadcastResPosBias:te,passPastInKv:M,qkvFormat:B}},pc=e=>Re({...e}),cc=Re({perm:[0,2,1,3]}),Wy=(e,t,r,o,s,c,d)=>{let h=[o,s,c],y=Q.size(h),w=[{type:12,data:y},{type:12,data:d},{type:12,data:c}],f=C=>{let S=ue("qkv_with_bias",t.dataType,h),k=Z("qkv",t.dataType,h),E=Z("bias",r.dataType,h),O=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${C.registerUniforms(O).declareVariables(k,E,S)}
  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:h,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w}),getShaderSource:f},{inputs:[t,r],outputs:[-1]})[0]},Mo=(e,t,r,o,s,c,d,h)=>{let y=c;if(d){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return y=Wy(e,c,d,t,o,r*s,h),y=y.reshape([t,o,r,s]),e.compute(jt(y,cc.perm),{inputs:[y],outputs:[-1]})[0]}else return c.dims.length===3&&(y=c.reshape([t,o,r,s])),e.compute(jt(y,cc.perm),{inputs:[y],outputs:[-1]})[0]},fc=(e,t)=>{let r=Ny(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,s=Mo(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return Sa(e,s,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let c=Mo(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),d=Mo(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);Sa(e,s,c,d,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var Vy,Gy,Hy,Ly,Fy,qy,Ky,Jy,hc,gc=se(()=>{"use strict";Ie();Be();Pe();Vy=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Gy=(e,t,r)=>{let o="";for(let s=t-1;s>=0;--s)o+=`
            k = i32(${e.indicesGet("indices",s)}) - ${Ce("uniforms.pads",s,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${Ce("uniforms.x_shape",s,t)})) {
              break;
            }
            offset += k * i32(${Ce("uniforms.x_strides",s,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${o}
            value = x[offset];
          }
      `},Hy=(e,t,r)=>{let o="";for(let s=t-1;s>=0;--s)o+=`
                k = i32(${e.indicesGet("indices",s)}) - ${Ce("uniforms.pads",s,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${Ce("uniforms.x_shape",s,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${Ce("uniforms.x_shape",s,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${Ce("uniforms.x_strides",s,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},Ly=(e,t,r)=>{let o="";for(let s=t-1;s>=0;--s)o+=`
                k = i32(${e.indicesGet("indices",s)}) - ${Ce("uniforms.pads",s,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${Ce("uniforms.x_shape",s,t)})) {
                  k = i32(${Ce("uniforms.x_shape",s,t)}) - 1;
                }
                offset += k * i32(${Ce("uniforms.x_strides",s,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},Fy=(e,t,r)=>{let o="";for(let s=t-1;s>=0;--s)o+=`
                k = i32(${e.indicesGet("indices",s)}) - ${Ce("uniforms.pads",s,r)};
                if (k < 0)  {
                  k += i32(${Ce("uniforms.x_shape",s,t)}]);
                }
                if (k >= i32(${Ce("uniforms.x_shape",s,t)})) {
                  k -= i32(${Ce("uniforms.x_shape",s,t)});
                }
                offset += k * i32(${Ce("uniforms.x_strides",s,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},qy=(e,t,r)=>{switch(r.mode){case 0:return Gy(e,t,r.pads.length);case 1:return Hy(e,t,r.pads.length);case 2:return Ly(e,t,r.pads.length);case 3:return Fy(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Ky=(e,t)=>{let r=Q.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,s=Q.size(r),c=[{type:12,data:s},{type:12,data:t.pads}];t.mode===0&&c.push({type:e[0].dataType,data:t.value}),c.push(...de(e[0].dims,r));let d=["rank"],h=y=>{let w=ue("output",e[0].dataType,r.length),f=Z("x",e[0].dataType,o.length),C=f.type.value,S=qy(w,o.length,t),k=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&k.push({name:"constant_value",type:C}),`
            ${y.registerUniforms(k).declareVariables(f,w)}
            ${y.mainStart()}
            ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${w.offsetToIndices("global_idx")};

            var value = ${C}(0);
            ${S}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Q.size(r)/64)},programUniforms:c}),getShaderSource:h}},Jy=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,s=e[0].dims.length,c=new Int32Array(2*s).fill(0);if(e.length>=4){let h=e[3].getBigInt64Array();for(let y=0;y<h.length;y++)c[Number(h[y])]=Number(r[y]),c[Number(h[y])+s]=Number(r[y+h.length])}else r.forEach((h,y)=>c[Number(y)]=Number(h));let d=[];return c.forEach(h=>d.push(h)),{mode:t.mode,value:o,pads:d}}else return t},hc=(e,t)=>{Vy(e.inputs);let r=Jy(e.inputs,t);e.compute(Ky(e.inputs,r),{inputs:[0]})}});var Ma,yc,bc,vc,wc,Yy,Zy,_c,$c,Cc,xc,Sc,Ic,Tc,Ac,Ec,kc,Oc,Pc,Rc=se(()=>{"use strict";Dt();Ie();Be();Pe();Ma=e=>{if(Ve.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},yc=(e,t,r)=>{let o=t.format==="NHWC",s=e.dims.slice();o&&s.splice(1,0,s.pop());let c=Object.hasOwnProperty.call(t,"dilations"),d=t.kernelShape.slice(),h=t.strides.slice(),y=c?t.dilations.slice():[],w=t.pads.slice();Tr.adjustPoolAttributes(r,s,d,h,y,w);let f=Tr.computePoolOutputShape(r,s,h,y,d,w,t.autoPad),C=Object.assign({},t);c?Object.assign(C,{kernelShape:d,strides:h,pads:w,dilations:y,cacheKey:t.cacheKey}):Object.assign(C,{kernelShape:d,strides:h,pads:w,cacheKey:t.cacheKey});let S=f.slice();return S.push(S.splice(1,1)[0]),[C,o?S:f]},bc=(e,t)=>{let r=t.format==="NHWC",o=Q.size(e),s=Q.size(t.kernelShape),c=[{type:12,data:o},{type:12,data:s}],d=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let h=t.kernelShape[t.kernelShape.length-1],y=t.strides[t.strides.length-1],w=t.pads[t.pads.length/2-1],f=t.pads[t.pads.length-1],C=!!(w+f);c.push({type:12,data:h},{type:12,data:y},{type:12,data:w},{type:12,data:f}),d.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let S=!1;if(t.kernelShape.length===2){let k=t.kernelShape[t.kernelShape.length-2],E=t.strides[t.strides.length-2],O=t.pads[t.pads.length/2-2],D=t.pads[t.pads.length-2];S=!!(O+D),c.push({type:12,data:k},{type:12,data:E},{type:12,data:O},{type:12,data:D}),d.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[c,d,!0,C,S]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let h=Q.computeStrides(t.kernelShape);c.push({type:12,data:h},{type:12,data:t.pads},{type:12,data:t.strides}),d.push({name:"kernelStrides",type:"u32",length:h.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let y=t.pads.reduce((w,f)=>w+f);return[c,d,!!y,!1,!1]}},vc=(e,t,r,o,s,c,d,h,y,w,f,C)=>{let S=s.format==="NHWC",k=t.type.value,E=ue("output",t.type.tensor,o);if(s.kernelShape.length<=2){let O="",D="",N="",B=r-(S?2:1);if(f?O=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${B}] = indices[${B}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${B}] < 0 || xIndices[${B}]
                      >= uniforms.x_shape[${B}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${c}
                }`:O=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${B}] = indices[${B}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${c}
                }`,s.kernelShape.length===2){let M=r-(S?3:2);C?D=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${M}] = indices[${M}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${M}] < 0 || xIndices[${M}] >= uniforms.x_shape[${M}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:D=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${M}] = indices[${M}] * uniforms.sh - uniforms.phStart + j;
                `,N=`
              }
            `}return`
            ${e.registerUniforms(y).declareVariables(t,E)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${E.offsetToIndices("global_idx")};
              var xIndices = ${E.offsetToIndices("global_idx")};

              var value = ${k}(${h});
              var pad = 0;
              ${D}
              ${O}
              ${N}
              ${d}

              output[global_idx] = value;
            }`}else{if(S)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let O=s.kernelShape.length,D=s.pads.length,N="";return w?N=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${c}
              }`:N=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${c}
            `,`
            ${e.registerUniforms(y).declareVariables(t,E)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${E.offsetToIndices("global_idx")};
              var xIndices = ${E.offsetToIndices("global_idx")};

              var offsets: array<u32, ${O}>;

              var value = ${k}(${h});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${O-1}u; j++) {
                  offsets[j] = offset / ${Ce("uniforms.kernelStrides","j",O)};
                  offset -= offsets[j] * ${Ce("uniforms.kernelStrides","j",O)};
                }
                offsets[${O-1}] = offset;

                isPad = false;
                for (var j = ${r-O}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${Ce("uniforms.strides",`j - ${r-O}u`,O)}
                    + offsets[j - ${r-O}u] - ${Ce("uniforms.pads","j - 2u",D)};
                  ${N}
              }
              ${d}

              output[global_idx] = value;
            }`}},wc=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Yy=e=>`${wc(e)};${e.countIncludePad}`,Zy=e=>`${wc(e)};${e.storageOrder};${e.dilations}`,_c=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),$c=(e,t,r,o)=>{let[s,c]=yc(t,o,r),d=Z("x",t.dataType,t.dims.length),h=d.type.value,y="value += x_val;",w="";s.countIncludePad?w+=`value /= ${h}(uniforms.kernelSize);`:w+=`value /= ${h}(i32(uniforms.kernelSize) - pad);`;let[f,C,S,k,E]=bc(c,s);f.push(...de(t.dims,c));let O=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${S};${k};${E}`,inputDependencies:O},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Q.size(c)/64)},programUniforms:f}),getShaderSource:D=>vc(D,d,t.dims.length,c.length,s,y,w,0,C,S,k,E)}},Cc=e=>{let t=e.count_include_pad!==0,r=_c(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:Yy(o)}},xc=(e,t)=>{Ma(e.inputs),e.compute($c("AveragePool",e.inputs[0],!1,t))},Sc={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Ic=e=>{let t=e.format;return{format:t,...Sc,cacheKey:t}},Tc=(e,t)=>{Ma(e.inputs),e.compute($c("GlobalAveragePool",e.inputs[0],!0,t))},Ac=(e,t,r,o)=>{let[s,c]=yc(t,o,r),d=`
      value = max(x_val, value);
    `,h="",y=Z("x",t.dataType,t.dims.length),w=["rank"],[f,C,S,k,E]=bc(c,s);return f.push(...de(t.dims,c)),{name:e,shaderCache:{hint:`${o.cacheKey};${S};${k};${E}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:c,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Q.size(c)/64)},programUniforms:f}),getShaderSource:O=>vc(O,y,t.dims.length,c.length,s,d,h,t.dataType===10?-65504:-1e5,C,S,k,E)}},Ec=(e,t)=>{Ma(e.inputs),e.compute(Ac("MaxPool",e.inputs[0],!1,t))},kc=e=>{let t=e.storage_order,r=e.dilations,o=_c(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let s={storageOrder:t,dilations:r,...o,cacheKey:""};return{...s,cacheKey:Zy(s)}},Oc=e=>{let t=e.format;return{format:t,...Sc,cacheKey:t}},Pc=(e,t)=>{Ma(e.inputs),e.compute(Ac("GlobalMaxPool",e.inputs[0],!0,t))}});var Xy,e0,Bc,zc=se(()=>{"use strict";Dt();Ie();Pe();Xy=(e,t,r)=>{let o=e===t,s=e<t&&r<0,c=e>t&&r>0;if(o||s||c)throw new Error("Range these inputs' contents are invalid.")},e0=(e,t,r,o)=>{let s=Math.abs(Math.ceil((t-e)/r)),c=[s],d=s,h=[{type:12,data:d},{type:o,data:e},{type:o,data:r},...de(c)],y=w=>{let f=ue("output",o,c.length),C=f.type.value,S=[{name:"outputSize",type:"u32"},{name:"start",type:C},{name:"delta",type:C}];return`
        ${w.registerUniforms(S).declareVariables(f)}
        ${w.mainStart()}
        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${C}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:y,getRunData:()=>({outputs:[{dims:c,dataType:o}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:h})}},Bc=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),Ve.webgpu.validateInputContent&&Xy(t,r,o),e.compute(e0(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var t0,r0,i0,n0,a0,o0,s0,u0,l0,d0,c0,Mc,p0,f0,m0,h0,g0,Dc,jc,Uc=se(()=>{"use strict";Ie();Be();mt();Pe();t0=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},r0=(e,t,r)=>{t.every(s=>s>=0&&s<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((s,c)=>o[s]=e[c]),o},i0=(e,t,r,o,s,c)=>{let[d,h,y]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],w=e[0].dims.length;if(d>0&&e.length>d&&e[d].dims.length>0)e[d].getFloat32Array().forEach(f=>c.push(f));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(h>0&&e.length>h&&e[h].dims.length>0){if(e[h].getFloat32Array().forEach(f=>o.push(f)),o.length!==0&&o.length!==w&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");t0(o,t),t.axes.length>0&&r0(o,t.axes,w).forEach((f,C)=>o[C]=f)}if(y>0&&e.length>y&&(e[y].getBigInt64Array().forEach(f=>s.push(Number(f))),s.length!==w||r>=18&&s.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(s.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof o<"u"&&typeof s<"u"&&o.length>0&&s.length>w)throw new Error("Resize requires only of scales or sizes to be specified")},n0=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",a0=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",o0=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),s=e.length===0?o:e.slice();return t.length>0?(t.forEach((c,d)=>{o[c]=s[d],o[d+r]=s[t.length+d]}),o):s},s0=(e,t,r,o)=>{let s=[];if(r.length>0)if(o.length>0){if(e.forEach(c=>s.push(c)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((c,d)=>s[c]=r[d])}else r.forEach(c=>s.push(c));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");s=e.map((c,d)=>Math.round(c*t[d]))}return s},u0=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(c=>t[c]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(c=>t[c]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let s=e.slice();return r.axes.length>0?(r.axes.forEach(c=>t[c]=o),r.axes.forEach(c=>s[c]=Math.round(e[c]*t[c]))):(t.fill(o,0,t.length),s.forEach((c,d)=>s[d]=Math.round(c*t[d]))),s},l0=(e,t,r,o,s)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${Ce("uniforms.scales","i",o)};
        var roi_low = ${Ce("uniforms.roi","i",s)};
        var roi_hi = ${Ce("uniforms.roi",`i + ${t.length}`,s)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${Ce("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${Ce("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,d0=(e,t,r,o,s,c,d)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${o.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${Ce("uniforms.scales","i",s)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${Ce("uniforms.roi","i",c)};
          var roi_hi = ${Ce("uniforms.roi",`i + ${r.length}`,c)};
          var input_shape_i = ${Ce("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${Ce("uniforms.output_shape","i",o.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${d} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,c0=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${Ce("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,Mc=(e,t,r,o)=>e.rank>o?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",p0=(e,t,r,o,s)=>{let[d,h,y,w]=r.length===2?[-1,0,1,-1]:[0,2,3,1],f=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${f} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",h,`max(0, min(row, ${r[h]} - 1))`)};
      ${e.indicesSet("input_indices",y,`max(0, min(col, ${r[y]} - 1))`)};
      ${Mc(e,w,d,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${f} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${f} = originalIndices[${h}];
      var col:${f} = originalIndices[${y}];
      ${o?`if (row < 0 || row > (${r[h]} - 1) || col < 0 || col > (${r[y]} - 1)) {
        return ${s};
      }`:""};
      row = max(0, min(row, ${r[h]} - 1));
      col = max(0, min(col, ${r[y]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${w}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${d}])`:"0"};
      var x11: ${f} = getInputValue(batch, channel, row1, col1);
      var x12: ${f} = getInputValue(batch, channel, row1, col2);
      var x21: ${f} = getInputValue(batch, channel, row2, col1);
      var x22: ${f} = getInputValue(batch, channel, row2, col2);
      var dx1: ${f} = abs(row - ${f}(row1));
      var dx2: ${f} = abs(${f}(row2) - row);
      var dy1: ${f} = abs(col - ${f}(col1));
      var dy2: ${f} = abs(${f}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},f0=(e,t,r,o,s,c,d,h,y,w)=>{let f=r.length===2,C=!0,[S,k]=f?[0,1]:C?[2,3]:[1,2],E=e.type.value,O=D=>{let N=D===S?"row":"col";return`
      fn ${N}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${E} {
        var output_index = ${t.indicesGet("output_indices",D)};
        var originalIdx: ${E} = getOriginalCoordinateFromResizedCoordinate(output_index, ${s[D]},
        ${o[D]}, ${r[D]}, ${c[D]}, ${c[D]} + ${r.length});
        var fractOriginalIdx: ${E} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${h} && (originalIdx < 0 || originalIdx > (${r[D]} - 1))) {
          return ${y};
        }
        var data: array<${E}, 4> = array<${E}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${N}: ${E} = originalIdx + ${E}(i);
          if (${N} < 0 || ${N} >= ${r[D]}) {
            ${(()=>w?`coefs[i + 1] = 0.0;
                        continue;`:h?`return ${y};`:`${N} = max(0, min(${N}, ${r[D]} - 1));`)()};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",D,`u32(${N})`)};
          data[i + 1] = ${D===S?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${O(S)};
    ${O(k)};
  fn getCubicInterpolationCoefs(s: ${E}) -> array<${E}, 4> {
    var absS = abs(s);
    var coeffs: array<${E}, 4> = array<${E}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${E} = 1.0 - absS;
    var twoMinusAbsS: ${E} = 2.0 - absS;
    var onePlusAbsS: ${E} = 1.0 + absS;
    coeffs[0] = ((${d} * onePlusAbsS - 5 * ${d}) * onePlusAbsS + 8 * ${d}) * onePlusAbsS - 4 * ${d};
    coeffs[1] = ((${d} + 2) * absS - (${d} + 3)) * absS * absS + 1;
    coeffs[2] = ((${d} + 2) * oneMinusAbsS - (${d} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${d} * twoMinusAbsS - 5 * ${d}) * twoMinusAbsS + 8 * ${d}) * twoMinusAbsS - 4 * ${d};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${E}, 4>, coefs: array<${E}, 4>) -> ${E} {
    var coefsSum: ${E} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${E} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},m0=(e,t,r,o,s)=>{let[d,h,y,w,f]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],C=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${C} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",h,`max(0, min(depth, ${r[h]} - 1))`)};
      ${e.indicesSet("input_indices",y,`max(0, min(height, ${r[y]} - 1))`)};
      ${e.indicesSet("input_indices",w,`max(0, min(width, ${r[w]} - 1))`)};
      ${Mc(e,f,d,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${C} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${C} = originalIndices[${h}];
      var height:${C} = originalIndices[${y}];
      var width:${C} = originalIndices[${w}];
      ${o?`if (depth < 0 || depth > (${r[h]} - 1) || height < 0 || height > (${r[y]} - 1) || width < 0 || (width > ${r[w]} - 1)) {
      return ${s};
        }`:""};

    depth = max(0, min(depth, ${r[h]} - 1));
      height = max(0, min(height, ${r[y]} - 1));
      width = max(0, min(width, ${r[w]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${f}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${d}])`:"0"};

      var x111: ${C} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${C} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${C} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${C} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${C} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${C} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${C} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${C} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${C} = abs(depth - ${C}(depth1));
      var dx2: ${C} = abs(${C}(depth2) - depth);
      var dy1: ${C} = abs(height - ${C}(height1));
      var dy2: ${C} = abs(${C}(height2) - height);
      var dz1: ${C} = abs(width - ${C}(width1));
      var dz2: ${C} = abs(${C}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},h0=(e,t,r,o,s,c)=>{let d=e.dims,h=o0(c,t.axes,d.length),y=s0(d,o,s,t.axes),w=o.slice();o.length===0&&(w=d.map((B,W)=>B===0?1:y[W]/B),t.keepAspectRatioPolicy!=="stretch"&&(y=u0(d,w,t)));let f=ue("output",e.dataType,y.length),C=Z("input",e.dataType,d.length),S=Q.size(y),k=d.length===y.length&&d.every((B,W)=>B===y[W]),E=t.coordinateTransformMode==="tf_crop_and_resize",O=t.extrapolationValue,D=C.type.value,N=B=>`
      ${k?"":`
      ${n0(t.coordinateTransformMode,D)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${c0(C,d)};
              ${a0(t.nearestMode,r,D)};
              ${d0(C,f,d,y,w.length,h.length,E)};
              `;case"linear":return`
              ${l0(f,d,y,w.length,h.length)};
              ${(()=>{if(d.length===2||d.length===4)return`${p0(C,f,d,E,O)}`;if(d.length===3||d.length===5)return`${m0(C,f,d,E,O)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(d.length===2||d.length===4)return`${f0(C,f,d,y,w,h,t.cubicCoeffA,E,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${B.registerUniform("output_size","u32").registerUniform("scales","f32",w.length).registerUniform("roi","f32",h.length).declareVariables(C,f)}
      ${B.mainStart()}
        ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${k?"output[global_idx] = input[global_idx];":`
        let output_indices = ${f.offsetToIndices("global_idx")};
        var input_indices: ${C.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${C.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${d.length===2||d.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${w.length>0?w:""}|${s.length>0?s:""}|${h.length>0?h:""}|${k}|${d}`,inputDependencies:["rank"]},getShaderSource:N,getRunData:()=>({outputs:[{dims:y,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:[{type:12,data:S},{type:1,data:w},{type:1,data:h},...de(d,y)]})}},g0=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Dc=(e,t)=>{let r=[],o=[],s=[],c=g0(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");i0(e.inputs,t,c,r,o,s),e.compute(h0(e.inputs[0],t,c,r,o,s),{inputs:[0]})},jc=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,s=e.cubicCoeffA,c=e.excludeOutside!==0,d=e.extrapolationValue,h=e.keepAspectRatioPolicy,y=e.mode,w=e.nearestMode===""?"simple":e.nearestMode;return Re({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:s,excludeOutside:c,extrapolationValue:d,keepAspectRatioPolicy:h,mode:y,nearestMode:w})}});var y0,b0,Nc,Wc=se(()=>{"use strict";Ie();Be();Pe();y0=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let s=t.dims[t.dims.length-1],c=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==s)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==c)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==s)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let d=e[3];if(d.dims.length!==1)throw new Error("Beta must be 1D");if(d.dims[d.dims.length-1]!==s)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let d=e[4];if(d.dims.length!==1)throw new Error("Bias must be 1D");if(d.dims[d.dims.length-1]!==s)throw new Error("Bias must have the same hidden size as input")}},b0=(e,t,r,o)=>{let s=e[0].dims,c=Q.size(s),d=s,h=c,y=s.slice(-1)[0],w=o?s.slice(0,-1).concat(1):[],f=e.length>3,C=e.length>4,S=o&&r>1,k=o&&r>2,E=r>3,O=Ze(y),D=[{type:12,data:h},{type:12,data:O},{type:12,data:y},{type:1,data:t.epsilon}],N=W=>{let M=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],q=[Z("x",e[0].dataType,e[0].dims,O),Z("skip",e[1].dataType,e[1].dims,O),Z("gamma",e[2].dataType,e[2].dims,O)];f&&q.push(Z("beta",e[3].dataType,e[3].dims,O)),C&&q.push(Z("bias",e[4].dataType,e[4].dims,O)),q.push(ue("output",e[0].dataType,d,O)),S&&q.push(ue("mean_output",1,w)),k&&q.push(ue("inv_std_output",1,w)),E&&q.push(ue("input_skip_bias_sum",e[0].dataType,d,O));let X=He(e[0].dataType);return`

      ${W.registerUniforms(M).declareVariables(...q)}

      ${W.mainStart()}
        ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}
        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        let offset = global_idx * hidden_size_vectorized;
        var sum = ${gt("f32",O)};
        var squareSum = ${gt("f32",O)};
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${C?"bias[i]":"0.0"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${E?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Vt(X,O,"value")};
          sum += f32_value;
          squareSum += f32_value * f32_value;
        }
        let mean = ${At("sum",O)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${At("squareSum",O)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);
        ${S?"mean_output[global_idx] = mean;":""}
        ${k?"inv_std_output[global_idx] = inv_std_dev;":""}
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          output[offset + i] = (output[offset + i] - ${X}(mean)) * ${X}(inv_std_dev) * gamma[i] + ${f?"beta[i]":"0.0"};
        }
      }`},B=[{dims:d,dataType:e[0].dataType}];return r>1&&B.push({dims:w,dataType:1}),r>2&&B.push({dims:w,dataType:1}),r>3&&B.push({dims:s,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${O};${S};${k};${E}`,inputDependencies:e.map((W,M)=>"type")},getShaderSource:N,getRunData:()=>({outputs:B,dispatchGroup:{x:Math.ceil(h/y/64)},programUniforms:D})}},Nc=(e,t)=>{y0(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(b0(e.inputs,t,e.outputCount,!1),{outputs:o})}});var v0,Da,w0,Vc,_0,$0,Gc,Hc,Lc=se(()=>{"use strict";Ie();Be();mt();Pe();v0=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Da=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},w0=(e,t)=>{if(e.length>1){let r=Da(e,1),o=Da(e,2),s=Da(e,3);return s.length===0&&(s=[...Array(e[0].dims.length).keys()]),Re({starts:r,ends:o,axes:s})}else return t},Vc=(e,t,r,o,s)=>{let c=e;return e<0&&(c+=r[o[t]]),s[t]<0?Math.max(0,Math.min(c,r[o[t]]-1)):Math.max(0,Math.min(c,r[o[t]]))},_0=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${Ce("uniforms.input_shape","i",r.length)};
            let steps_i = ${Ce("uniforms.steps","i",r.length)};
            let signs_i = ${Ce("uniforms.signs","i",r.length)};
            let starts_i = ${Ce("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,$0=(e,t)=>{let r=e[0].dims,o=Q.size(r),s=t.axes.length>0?Q.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],c=Da(e,4);c.forEach(N=>N!==0||(()=>{throw new Error("step cannot be 0")})),c.length===0&&(c=Array(s.length).fill(1));let d=t.starts.map((N,B)=>Vc(N,B,r,s,c)),h=t.ends.map((N,B)=>Vc(N,B,r,s,c));if(s.length!==d.length||s.length!==h.length)throw new Error("start, ends and axes should have the same number of elements");if(s.length!==r.length)for(let N=0;N<r.length;++N)s.includes(N)||(d.splice(N,0,0),h.splice(N,0,r[N]),c.splice(N,0,1));let y=c.map(N=>Math.sign(N));c.forEach((N,B,W)=>{if(N<0){let M=(h[B]-d[B])/N,q=d[B],X=q+M*c[B];d[B]=X,h[B]=q,W[B]=-N}});let w=r.slice(0);s.forEach((N,B)=>{w[N]=Math.ceil((h[N]-d[N])/c[N])});let f={dims:w,dataType:e[0].dataType},C=ue("output",e[0].dataType,w.length),S=Z("input",e[0].dataType,e[0].dims.length),k=Q.size(w),E=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:d.length},{name:"signs",type:"i32",length:y.length},{name:"steps",type:"u32",length:c.length}],O=[{type:12,data:k},{type:12,data:d},{type:6,data:y},{type:12,data:c},...de(e[0].dims,w)],D=N=>`
      ${N.registerUniforms(E).declareVariables(S,C)}
        ${_0(S,C,r)}
        ${N.mainStart()}
          ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${C.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${C.setByOffset("global_idx",S.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${y.length}_${d.length}_${c.length}`,inputDependencies:["rank"]},getShaderSource:D,getRunData:()=>({outputs:[f],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:O})}},Gc=(e,t)=>{v0(e.inputs,t);let r=w0(e.inputs,t);e.compute($0(e.inputs,r),{inputs:[0]})},Hc=e=>{let t=e.starts,r=e.ends,o=e.axes;return Re({starts:t,ends:r,axes:o})}});var C0,x0,Fc,qc,Kc=se(()=>{"use strict";Ie();Be();mt();Pe();C0=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},x0=(e,t)=>{let r=e.dims,o=Q.size(r),s=64,c=t.axis;if(c<0&&(c=r.length+c),c<r.length-1)throw new Error("softmax only supports last axis for now.");let d=r[c],h=o/d,y=Ze(d),w=d/y,f=(D,N)=>N===4?`max(max(${D}.x, ${D}.y), max(${D}.z, ${D}.w))`:N===2?`max(${D}.x, ${D}.y)`:N===3?`max(max(${D}.x, ${D}.y), ${D}.z)`:D,C=Z("x",e.dataType,e.dims,y),S=ue("result",e.dataType,e.dims,y),k=C.type.value,E=He(e.dataType)==="f32"?`var threadMax = ${k}(-3.402823e+38f);`:`var threadMax = ${k}(-65504.0h);`,O=D=>`
      var<workgroup> rowMaxShared : ${k};
      var<workgroup> rowSumShared : ${k};
      var<workgroup> threadShared : array<${k}, ${s}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${k} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${k}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${D.registerUniform("packedCols","i32").declareVariables(C,S)}
      ${D.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${s};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${E}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${k}(${f("threadShared[0]",y)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${k}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${k}(${At("threadShared[0]",y)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${y}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:h},programUniforms:[{type:12,data:w}]}),getShaderSource:O}},Fc=(e,t)=>{C0(e.inputs),e.compute(x0(e.inputs[0],t))},qc=e=>Re({axis:e.axis})});var S0,I0,T0,A0,E0,Jc,Yc,Zc=se(()=>{"use strict";Ie();Be();mt();Pe();S0=e=>{if(!e||e.length<1)throw new Error("too few inputs")},I0=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(s=>r.push(Number(s))),o=r.length),Re({numOutputs:o,axis:t.axis,splitSizes:r})},T0=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${Ce("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,A0=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let s=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(s):o===0?r.push(`if (output_number == ${o}u) { ${s} }`):o===t-1?r.push(`else { ${s} }`):r.push(`else if (output_number == ${o}) { ${s} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},E0=(e,t)=>{let r=e[0].dims,o=Q.size(r),s=e[0].dataType,c=Q.normalizeAxis(t.axis,r.length),d=new Array(t.numOutputs),h=Z("input",s,r.length),y=new Array(t.numOutputs),w=[],f=[],C=0,S=[{type:12,data:o}];for(let E=0;E<t.numOutputs;E++){C+=t.splitSizes[E],y[E]=C;let O=r.slice();O[t.axis]=t.splitSizes[E],f.push(O),d[E]=ue(`output${E}`,s,O.length),w.push({dims:f[E],dataType:e[0].dataType})}S.push({type:12,data:y},...de(r,...f));let k=E=>`
  ${E.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",y.length).declareVariables(h,...d)}
  ${T0(y.length)}
  ${A0(d)}

  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${h.offsetToIndices("global_idx")};
    var index = ${h.indicesGet("indices",c)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${Ce("uniforms.size_in_split_axis","output_number - 1u",y.length)};
      ${h.indicesSet("indices",c,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:k,getRunData:()=>({outputs:w,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:S})}},Jc=(e,t)=>{S0(e.inputs);let r=e.inputs.length===1?t:I0(e.inputs,t);e.compute(E0(e.inputs,r),{inputs:[0]})},Yc=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Re({axis:t,numOutputs:o,splitSizes:r})}});var Qc,k0,O0,P0,Xc,ep=se(()=>{"use strict";Ie();Be();Pe();Qc=e=>Array.from(e.getBigInt64Array(),Number),k0=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Qc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},O0=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},P0=e=>{let t=e[0].dims,r=Qc(e[1]),o=O0(t,r),s=Q.size(o),c=e[0].dataType,d=Z("input",c,t.length),h=ue("output",c,o.length),y=w=>`
      const inputShape = ${d.indices(...t)};
      ${w.registerUniform("output_size","u32").declareVariables(d,h)}
      ${w.mainStart()}
      ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${h.offsetToIndices("global_idx")};
      var input_indices: ${d.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${d.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${h.indicesGet("output_indices","i")}  % input_dim_i;

        ${d.indicesSet("input_indices","i","input_dim_value")}
      }
      ${h.setByOffset("global_idx",d.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},...de(e[0].dims,o)]}),getShaderSource:y}},Xc=e=>{k0(e.inputs),e.compute(P0(e.inputs),{inputs:[0]})}});var R0,B0,tp,rp=se(()=>{"use strict";Ie();Be();Pe();R0=(e,t,r,o,s)=>{let c=ue("output_data",s,r.length,4),d=Z("a_data",t[1].dataType,t[1].dims.length,4),h=Z("b_data",t[2].dataType,t[2].dims.length,4),y=Z("c_data",t[0].dataType,t[0].dims.length,4),w,f=(C,S,k)=>`select(${S}, ${C}, ${k})`;if(!o)w=c.setByOffset("global_idx",f(d.getByOffset("global_idx"),h.getByOffset("global_idx"),y.getByOffset("global_idx")));else{let C=(S,k,E="")=>{let O=`a_data[index_a${k}][component_a${k}]`,D=`b_data[index_b${k}][component_b${k}]`,N=`bool(c_data[index_c${k}] & (0xffu << (component_c${k} * 8)))`;return`
            let output_indices${k} = ${c.offsetToIndices(`global_idx * 4u + ${k}u`)};
            let offset_a${k} = ${d.broadcastedIndicesToOffset(`output_indices${k}`,c)};
            let offset_b${k} = ${h.broadcastedIndicesToOffset(`output_indices${k}`,c)};
            let offset_c${k} = ${y.broadcastedIndicesToOffset(`output_indices${k}`,c)};
            let index_a${k} = offset_a${k} / 4u;
            let index_b${k} = offset_b${k} / 4u;
            let index_c${k} = offset_c${k} / 4u;
            let component_a${k} = offset_a${k} % 4u;
            let component_b${k} = offset_b${k} % 4u;
            let component_c${k} = offset_c${k} % 4u;
            ${S}[${k}] = ${E}(${f(O,D,N)});
          `};s===9?w=`
            var data = vec4<u32>(0);
            ${C("data",0,"u32")}
            ${C("data",1,"u32")}
            ${C("data",2,"u32")}
            ${C("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:w=`
            ${C("output_data[global_idx]",0)}
            ${C("output_data[global_idx]",1)}
            ${C("output_data[global_idx]",2)}
            ${C("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(y,d,h,c)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${w}
      }`},B0=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,s=e[1].dataType,c=!(Q.areEqual(t,r)&&Q.areEqual(r,o)),d=t,h=Q.size(t);if(c){let w=qt.calcShape(qt.calcShape(t,r,!1),o,!1);if(!w)throw new Error("Can't perform where op on the given tensors");d=w,h=Q.size(d)}let y=Math.ceil(h/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:w=>R0(w,e,d,c,s),getRunData:()=>({outputs:[{dims:d,dataType:s}],dispatchGroup:{x:Math.ceil(h/64/4)},programUniforms:[{type:12,data:y},...de(o,t,r,d)]})}},tp=e=>{e.compute(B0(e.inputs))}});var ip,np=se(()=>{"use strict";yl();wo();wl();$l();od();yd();wd();Io();zd();jd();Gd();Fd();Kd();Zd();ec();ic();ac();sc();Ao();dc();mc();gc();Rc();zc();Ca();Uc();Wc();Lc();Kc();Zc();ep();ri();Aa();rp();ip=new Map([["Abs",[Cl]],["Acos",[xl]],["Acosh",[Sl]],["Add",[sd]],["ArgMax",[gl,vo]],["ArgMin",[hl,vo]],["Asin",[Il]],["Asinh",[Tl]],["Atan",[Al]],["Atanh",[El]],["Attention",[bl]],["AveragePool",[xc,Cc]],["BatchNormalization",[vl]],["BiasAdd",[_l]],["BiasSplitGelu",[ad]],["Cast",[Ol,kl]],["Ceil",[Rl]],["Clip",[Pl]],["Concat",[bd,vd]],["Conv",[Oo,ko]],["ConvTranspose",[Bd,Rd]],["Cos",[Bl]],["Cosh",[zl]],["CumSum",[Md,Dd]],["Div",[ud]],["Einsum",[Wd,Vd]],["Elu",[Ml,Ia]],["Equal",[ld]],["Erf",[Dl]],["Exp",[jl]],["Expand",[Ld]],["FastGelu",[qd]],["Floor",[Ul]],["FusedConv",[Oo,ko]],["Gather",[Yd,Jd]],["GatherElements",[Xd,Qd]],["Gelu",[Nl]],["Gemm",[rc,tc]],["GlobalAveragePool",[Tc,Ic]],["GlobalMaxPool",[Pc,Oc]],["Greater",[fd]],["GreaterOrEqual",[hd]],["HardSigmoid",[Kl,ql]],["InstanceNormalization",[nc]],["LayerNormalization",[oc]],["LeakyRelu",[Wl,Ia]],["Less",[md]],["LessOrEqual",[gd]],["Log",[id]],["MatMul",[Td]],["MatMulNBits",[uc,lc]],["MaxPool",[Ec,kc]],["Mul",[dd]],["MultiHeadAttention",[fc,pc]],["Neg",[Gl]],["Not",[Vl]],["Pad",[hc]],["Pow",[cd]],["Range",[Bc]],["Reciprocal",[Hl]],["ReduceMin",[ll]],["ReduceMean",[nl]],["ReduceMax",[ul]],["ReduceSum",[cl]],["ReduceProd",[dl]],["ReduceL1",[al]],["ReduceL2",[ol]],["ReduceLogSum",[fl]],["ReduceLogSumExp",[sl]],["ReduceSumSquare",[pl]],["Relu",[Ll]],["Resize",[Dc,jc]],["Sigmoid",[Fl]],["Sin",[Jl]],["Sinh",[Yl]],["Slice",[Gc,Hc]],["SkipLayerNormalization",[Nc]],["Split",[Jc,Yc]],["Sqrt",[Zl]],["Softmax",[Fc,qc]],["Sub",[pd]],["Tan",[Ql]],["Tanh",[ed]],["ThresholdedRelu",[rd,Ia]],["Tile",[Xc]],["Transpose",[Lu,Fu]],["Where",[tp]]])});var ja,ap=se(()=>{"use strict";Dt();ir();Pe();ja=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,s,c){It(t.programInfo.name);let d=this.backend.device,h=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let y=[];for(let f of r)y.push({binding:y.length,resource:{buffer:f.buffer}});for(let f of o)y.push({binding:y.length,resource:{buffer:f.buffer}});c&&y.push({binding:y.length,resource:c});let w=d.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:y,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let f={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:w,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(f)}h.setPipeline(t.computePipeline),h.setBindGroup(0,w),h.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),$t(t.programInfo.name)}dispose(){}build(t,r){It(t.name);let o=this.backend.device,s=[];o.features.has("shader-f16")&&s.push("enable f16;"),o.features.has("chromium-experimental-subgroups")&&s.push("enable chromium_experimental_subgroups;");let c=Gu(r),d=t.getShaderSource(c),h=`${s.join(`
`)}
${c.additionalImplementations}
${d}`,y=o.createShaderModule({code:h,label:t.name});Ge("verbose",()=>`[WebGPU] ${t.name} shader code: ${h}`);let w=o.createComputePipeline({compute:{module:y,entryPoint:"main"},layout:"auto",label:t.name});return $t(t.name),{programInfo:t,computePipeline:w}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,s=typeof t=="number"?1:t.z||1,c=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=c&&o<=c&&s<=c)return[r,o,s];let d=r*o*s,h=Math.ceil(Math.sqrt(d));if(h>c){if(h=Math.ceil(Math.cbrt(d)),h>c)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[h,h,h]}else return[h,h,1]}}});var z0,M0,Do,Ua,op=se(()=>{"use strict";Dt();Ie();ir();ju();Vu();np();ap();z0=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let s=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${s}`);break}case"rank":{let c=e[o].dims.length;r.push(`${s};${c}`);break}case"dims":{let c=e[o].dims.join(",");r.push(`${s};${c}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},M0=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${z0(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Do=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},Ua=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16*8;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),r.features.has("chromium-experimental-subgroups")&&o.push("chromium-experimental-subgroups"),this.device=await r.requestDevice(s),this.adapterInfo=new Do(await r.requestAdapterInfo()),this.gpuDataManager=Wu(this),this.programManager=new ja(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Mu(t.logLevel,!!t.debug),this.device.onuncapturederror=c=>{c.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${c.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;It(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let s=0;s<r.length/2;s++){let c=o[s],d=c.kernelId,h=this.kernels.get(d),y=h.kernelType,w=h.kernelName,f=c.programName,C=c.inputTensorViews,S=c.outputTensorViews,k=r[s*2],E=r[s*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=k);let O=Number(k-this.queryTimeBase),D=Number(E-this.queryTimeBase);if(!Number.isSafeInteger(O)||!Number.isSafeInteger(D))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:C.map(N=>({dims:N.dims,dataType:dr(N.dataType)})),outputsMetadata:S.map(N=>({dims:N.dims,dataType:dr(N.dataType)})),kernelId:d,kernelType:y,kernelName:w,programName:f,startTime:O,endTime:D});else{let N="";C.forEach((W,M)=>{N+=`input[${M}]: [${W.dims}] | ${dr(W.dataType)}, `});let B="";S.forEach((W,M)=>{B+=`output[${M}]: [${W.dims}] | ${dr(W.dataType)}, `}),console.log(`[profiling] kernel "${d}|${y}|${w}|${f}" ${N}${B}execution time: ${D-O} ns`)}pn("GPU",`${f}::${k}::${E}`)}t.unmap(),this.pendingQueries.delete(t)}),$t()}run(t,r,o,s,c){It(t.name);let d=[];for(let B=0;B<r.length;++B){let W=r[B].data;if(W===0)continue;let M=this.gpuDataManager.get(W);if(!M)throw new Error(`no GPU data for input: ${W}`);d.push(M)}let{outputs:h,dispatchGroup:y,programUniforms:w}=t.getRunData(r),f=o.length===0?h.map((B,W)=>W):o;if(f.length!==h.length)throw new Error(`Output size ${f.length} must be equal to ${h.length}.`);let C=[],S=[];for(let B=0;B<h.length;++B){if(!Number.isInteger(f[B])||f[B]<-3||f[B]>=h.length)throw new Error(`Invalid output index: ${f[B]}`);if(f[B]===-3)continue;let W=f[B]===-1,M=f[B]===-2,q=W||M?c(h[B].dataType,h[B].dims):s(f[B],h[B].dataType,h[B].dims);if(C.push(q),q.data===0)continue;let X=this.gpuDataManager.get(q.data);if(!X)throw new Error(`no GPU data for output: ${q.data}`);if(W&&this.temporaryData.push(X),M){let te=this.kernelPersistentData.get(this.currentKernelId);te||(te=[],this.kernelPersistentData.set(this.currentKernelId,te)),te.push(X)}S.push(X)}if(d.length!==r.length||S.length!==C.length){if(S.length===0)return $t(t.name),C;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let k;if(w){let B=0,W=[];w.forEach(te=>{let ae=typeof te.data=="number"?[te.data]:te.data;if(ae.length===0)return;let J=te.type===10?2:4,ne,be;te.type===10?(be=ae.length>4?16:ae.length>2?8:ae.length*J,ne=ae.length>4?16:J*ae.length):(be=ae.length<=2?ae.length*J:16,ne=16),B=Math.ceil(B/be)*be,W.push(B);let ze=te.type===10?8:4;B+=ae.length>4?Math.ceil(ae.length/ze)*ne:ae.length*J});let M=16;B=Math.ceil(B/M)*M;let q=new ArrayBuffer(B);w.forEach((te,ae)=>{let J=W[ae],ne=typeof te.data=="number"?[te.data]:te.data;if(te.type===6)new Int32Array(q,J,ne.length).set(ne);else if(te.type===12)new Uint32Array(q,J,ne.length).set(ne);else if(te.type===10)new Uint16Array(q,J,ne.length).set(ne);else if(te.type===1)new Float32Array(q,J,ne.length).set(ne);else throw new Error(`Unsupported uniform type: ${dr(te.type)}`)});let X=this.gpuDataManager.create(B,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(X.buffer,0,q,0,B),this.gpuDataManager.release(X.id),k={offset:0,size:B,buffer:X.buffer}}let E=this.programManager.normalizeDispatchGroupSize(y),O=E[1]===1&&E[2]===1,D=M0(t,r,O),N=this.programManager.getArtifact(D);if(N||(N=this.programManager.build(t,E),this.programManager.setArtifact(D,N),Ge("info",()=>`[artifact] key: ${D}, programName: ${t.name}`)),Ge("info",()=>`[ProgramManager] run "${t.name}" (key=${D}) with ${E[0]}x${E[1]}x${E[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let B={kernelId:this.currentKernelId,programName:N.programInfo.name,inputTensorViews:r,outputTensorViews:C};this.pendingKernels.push(B),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(B)}return this.programManager.run(N,d,S,E,k),$t(t.name),C}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,s){let c=ip.get(t);if(!c)throw new Error(`kernel not implemented: ${t}`);let d={kernelType:t,kernelName:s,kernelEntry:c[0],attributes:[c[1],o]};this.kernels.set(r,d)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let s=this.kernels.get(t);if(!s)throw new Error(`kernel not created: ${t}`);let c=s.kernelType,d=s.kernelName,h=s.kernelEntry,y=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${c}] ${d}" is not allowed to be called recursively`);this.currentKernelId=t,y[0]&&(y[1]=y[0](y[1]),y[0]=void 0),Ge("info",()=>`[WebGPU] Start to run kernel "[${c}] ${d}"...`);let w=this.env.debug;this.temporaryData=[];try{return w&&this.device.pushErrorScope("validation"),h(r,y[1]),0}catch(f){return o.push(Promise.resolve(`[WebGPU] Kernel "[${c}] ${d}" failed. ${f}`)),1}finally{w&&o.push(this.device.popErrorScope().then(f=>f?`GPU validation error for kernel "[${c}] ${d}": ${f.message}`:null));for(let f of this.temporaryData)this.gpuDataManager.release(f.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,s){let c=this.sessionExternalDataMapping.get(t);c||(c=new Map,this.sessionExternalDataMapping.set(t,c));let d=c.get(r),h=this.gpuDataManager.registerExternalBuffer(o,s,d?.[1]);return c.set(r,[h,o]),h}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let s=await po(this,t,r);return Du(s.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ge("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ge("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ge("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let s=0;s<o;s++){let c=this.getComputePassEncoder(),d=t[s];this.writeTimestamp(this.pendingDispatchNumber*2),c.setPipeline(d.computePipeline),c.setBindGroup(0,d.bindGroup),c.dispatchWorkgroups(...d.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var sp={};xr(sp,{init:()=>D0});var wn,jo,D0,up=se(()=>{"use strict";Ie();op();ir();Be();wn=class e{constructor(t,r,o,s){this.module=t;this.dataType=r;this.data=o;this.dims=s}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=Q.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=Q.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=Q.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(Q.size(t)!==Q.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},jo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=r.adapterInfo;let s=t.HEAPU32,c=o>>>2;this.opKernelContext=s[c++];let d=s[c++];this.outputCount=s[c++],this.customDataOffset=s[c++],this.customDataSize=s[c++];let h=[];for(let y=0;y<d;y++){let w=s[c++],f=s[c++],C=s[c++],S=[];for(let k=0;k<C;k++)S.push(s[c++]);h.push(new wn(t,w,f,S))}this.inputs=h}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(h=>typeof h=="number"?this.inputs[h]:h)??this.inputs,s=r?.outputs??[],c=(h,y,w)=>new wn(this.module,y,this.output(h,w),w),d=(h,y)=>{let w=mn(h);if(!w)throw new Error(`Unsupported data type: ${h}`);let f=w*Q.size(y),C=f>0?this.backend.gpuDataManager.create(f).id:0;return new wn(this.module,h,C,y)};return this.backend.run(t,o,s,c,d)}output(t,r){let o=this.module.stackSave();try{let s=this.module.stackAlloc((1+r.length)*4),c=s>>2;this.module.HEAPU32[c++]=r.length;for(let d=0;d<r.length;d++)this.module.HEAPU32[c++]=r[d];return this.module._JsepOutput(this.opKernelContext,t,s)}catch(s){throw new Error(`Failed to generate kernel's output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(o)}}},D0=async(e,t,r,o)=>{let s=t.jsepInit;if(!s)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let c=new Ua;await c.initialize(r,o),s("webgpu",[c,d=>c.alloc(d),d=>c.free(d),(d,h,y,w=!1)=>{if(w)Ge("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${d}, dst=${h}, size=${y}`),c.memcpy(d,h);else{Ge("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${d}, gpuDataId=${h}, size=${y}`);let f=t.HEAPU8.subarray(d>>>0,(d>>>0)+y);c.upload(h,f)}},async(d,h,y)=>{Ge("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${d}, dataOffset=${h}, size=${y}`),await c.download(d,()=>t.HEAPU8.subarray(h>>>0,(h>>>0)+y))},(d,h,y)=>c.createKernel(d,h,y,t.UTF8ToString(t._JsepGetNodeName(h))),d=>c.releaseKernel(d),(d,h,y,w)=>{Ge("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${y}, kernel=${d}, contextDataOffset=${h}`);let f=new jo(t,c,h);return c.computeKernel(d,f,w)},()=>c.captureBegin(),()=>c.captureEnd(),()=>c.replay()])}else s("webnn")}});var j0,dp,cp,Ar,U0,Uo,pp,fp,lp,mp,hp,gp,yp=se(()=>{"use strict";Ou();Ru();Ie();ei();fa();lo();j0=(e,t)=>{tt()._OrtInit(e,t)!==0&&Ye("Can't initialize onnxruntime.")},dp=async e=>{j0(e.wasm.numThreads,hn(e.logLevel))},cp=async(e,t)=>{{let r=(up(),ur(sp)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let o=e.webgpu.adapter;if(o){if(typeof o.limits!="object"||typeof o.features!="object"||typeof o.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let s=e.webgpu.powerPreference;if(s!==void 0&&s!=="low-power"&&s!=="high-performance")throw new Error(`Invalid powerPreference setting: "${s}"`);let c=e.webgpu.forceFallbackAdapter;if(c!==void 0&&typeof c!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${c}"`);if(o=await navigator.gpu.requestAdapter({powerPreference:s,forceFallbackAdapter:c}),!o)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",tt(),e,o)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",tt(),e)}}},Ar=new Map,U0=e=>{let t=tt(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Ye("Can't get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Uo=e=>{let t=tt(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},pp=async(e,t)=>{let r,o,s=tt();Array.isArray(e)?[r,o]=e:e.buffer===s.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Uo(e);let c=0,d=0,h=0,y=[],w=[],f=[];try{if([d,y]=Pu(t),t?.externalData&&s.mountExternalData){let B=[];for(let W of t.externalData){let M=typeof W=="string"?W:W.path;B.push(gn(typeof W=="string"?W:W.data).then(q=>{s.mountExternalData(M,q)}))}await Promise.all(B)}c=await s._OrtCreateSession(r,o,d),c===0&&Ye("Can't create a session.");let[C,S]=U0(c),k=!!t?.enableGraphCapture,E=[],O=[],D=[];for(let B=0;B<C;B++){let W=s._OrtGetInputName(c,B);W===0&&Ye("Can't get an input name."),w.push(W),E.push(s.UTF8ToString(W))}for(let B=0;B<S;B++){let W=s._OrtGetOutputName(c,B);W===0&&Ye("Can't get an output name."),f.push(W);let M=s.UTF8ToString(W);O.push(M);{if(k&&t?.preferredOutputLocation===void 0){D.push("gpu-buffer");continue}let q=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[M]??"cpu";if(q!=="cpu"&&q!=="cpu-pinned"&&q!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${q}.`);if(k&&q!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${q}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);D.push(q)}}let N=null;return D.some(B=>B==="gpu-buffer")&&(h=s._OrtCreateBinding(c),h===0&&Ye("Can't create IO binding."),N={handle:h,outputPreferredLocations:D,outputPreferredLocationsEncoded:D.map(B=>uo(B))}),Ar.set(c,[c,w,f,N,k,!1]),[c,E,O]}catch(C){throw w.forEach(S=>s._OrtFree(S)),f.forEach(S=>s._OrtFree(S)),h!==0&&s._OrtReleaseBinding(h),c!==0&&s._OrtReleaseSession(c),C}finally{s._free(r),d!==0&&s._OrtReleaseSessionOptions(d),y.forEach(C=>s._free(C)),s.unmountExternalData?.()}},fp=e=>{let t=tt(),r=Ar.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,s,c,d,h]=r;d&&(h&&t._OrtClearBoundOutputs(d.handle),t._OrtReleaseBinding(d.handle)),t.jsepOnReleaseSession?.(e),s.forEach(y=>t._OrtFree(y)),c.forEach(y=>t._OrtFree(y)),t._OrtReleaseSession(o),Ar.delete(e)},lp=(e,t,r,o,s,c=!1)=>{if(!e){t.push(0);return}let d=tt(),h=e[0],y=e[1],w=e[3],f,C;if(h==="string"&&w==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(c&&w!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${s} when enableGraphCapture is true.`);if(w==="gpu-buffer"){let E=e[2].gpuBuffer,O=mn(so(h));C=y.reduce((N,B)=>N*B,1)*O;let D=d.jsepRegisterBuffer;if(!D)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');f=D(o,s,E,C)}else{let E=e[2];if(Array.isArray(E)){C=4*E.length,f=d._malloc(C),r.push(f);let O=f/4;for(let D=0;D<E.length;D++){if(typeof E[D]!="string")throw new TypeError(`tensor data at index ${D} is not a string`);d.HEAPU32[O++]=rt(E[D],r)}}else C=E.byteLength,f=d._malloc(C),r.push(f),d.HEAPU8.set(new Uint8Array(E.buffer,E.byteOffset,C),f)}let S=d.stackSave(),k=d.stackAlloc(4*y.length);try{let E=k/4;y.forEach(D=>d.HEAP32[E++]=D);let O=d._OrtCreateTensor(so(h),f,C,k,y.length,uo(w));O===0&&Ye(`Can't create tensor for input/output. session=${o}, index=${s}.`),t.push(O)}finally{d.stackRestore(S)}},mp=async(e,t,r,o,s,c)=>{let d=tt(),h=Ar.get(e);if(!h)throw new Error(`cannot run inference. invalid session id: ${e}`);let y=h[0],w=h[1],f=h[2],C=h[3],S=h[4],k=h[5],E=t.length,O=o.length,D=0,N=[],B=[],W=[],M=[],q=d.stackSave(),X=d.stackAlloc(E*4),te=d.stackAlloc(E*4),ae=d.stackAlloc(O*4),J=d.stackAlloc(O*4);try{[D,N]=ku(c);for(let fe=0;fe<E;fe++)lp(r[fe],B,M,e,t[fe],S);for(let fe=0;fe<O;fe++)lp(s[fe],W,M,e,E+o[fe],S);let ne=X/4,be=te/4,ze=ae/4,Ke=J/4;for(let fe=0;fe<E;fe++)d.HEAPU32[ne++]=B[fe],d.HEAPU32[be++]=w[t[fe]];for(let fe=0;fe<O;fe++)d.HEAPU32[ze++]=W[fe],d.HEAPU32[Ke++]=f[o[fe]];if(C&&!k){let{handle:fe,outputPreferredLocations:Fe,outputPreferredLocationsEncoded:Me}=C;if(w.length!==E)throw new Error(`input count from feeds (${E}) is expected to be always equal to model's input count (${w.length}).`);for(let xe=0;xe<E;xe++){let ge=t[xe];await d._OrtBindInput(fe,w[ge],B[xe])!==0&&Ye(`Can't bind input[${xe}] for session=${e}.`)}for(let xe=0;xe<O;xe++){let ge=o[xe];s[xe]?.[3]?d._OrtBindOutput(fe,f[ge],W[xe],0)!==0&&Ye(`Can't bind pre-allocated output[${xe}] for session=${e}.`):d._OrtBindOutput(fe,f[ge],0,Me[ge])!==0&&Ye(`Can't bind output[${xe}] to ${Fe[xe]} for session=${e}.`)}Ar.set(e,[y,w,f,C,S,!0])}d.jsepOnRunStart?.(y);let Ne;C?Ne=await d._OrtRunWithBinding(y,C.handle,O,ae,D):Ne=await d._OrtRun(y,te,X,E,J,O,ae,D),Ne!==0&&Ye("failed to call OrtRun().");let Ae=[];for(let fe=0;fe<O;fe++){let Fe=d.HEAPU32[ae/4+fe];if(Fe===W[fe]){Ae.push(s[fe]);continue}let Me=d.stackSave(),xe=d.stackAlloc(4*4),ge=!1,ve,De=0;try{d._OrtGetTensorData(Fe,xe,xe+4,xe+8,xe+12)!==0&&Ye(`Can't access output tensor data on index ${fe}.`);let ie=xe/4,he=d.HEAPU32[ie++];De=d.HEAPU32[ie++];let Ee=d.HEAPU32[ie++],et=d.HEAPU32[ie++],ut=[];for(let st=0;st<et;st++)ut.push(d.HEAPU32[Ee/4+st]);d._OrtFree(Ee);let dt=ut.reduce((st,nt)=>st*nt,1);ve=dr(he);let ht=C?.outputPreferredLocations[o[fe]];if(ve==="string"){if(ht==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let st=[],nt=De/4;for(let bt=0;bt<dt;bt++){let Et=d.HEAPU32[nt++],Rt=bt===dt-1?void 0:d.HEAPU32[nt]-Et;st.push(d.UTF8ToString(Et,Rt))}Ae.push([ve,ut,st,"cpu"])}else if(ht==="gpu-buffer"&&dt>0){let st=d.jsepGetBuffer;if(!st)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let nt=st(De),bt=mn(he);if(bt===void 0||!ha(ve))throw new Error(`Unsupported data type: ${ve}`);ge=!0,Ae.push([ve,ut,{gpuBuffer:nt,download:d.jsepCreateDownloader(nt,dt*bt,ve),dispose:()=>{d._OrtReleaseTensor(Fe)}},"gpu-buffer"])}else{let st=ma(ve),nt=new st(dt);new Uint8Array(nt.buffer,nt.byteOffset,nt.byteLength).set(d.HEAPU8.subarray(De,De+nt.byteLength)),Ae.push([ve,ut,nt,"cpu"])}}finally{d.stackRestore(Me),ve==="string"&&De&&d._free(De),ge||d._OrtReleaseTensor(Fe)}}return C&&!S&&(d._OrtClearBoundOutputs(C.handle),Ar.set(e,[y,w,f,C,S,!1])),Ae}finally{d.stackRestore(q),B.forEach(ne=>d._OrtReleaseTensor(ne)),W.forEach(ne=>d._OrtReleaseTensor(ne)),M.forEach(ne=>d._free(ne)),D!==0&&d._OrtReleaseRunOptions(D),N.forEach(ne=>d._free(ne))}},hp=e=>{let t=tt(),r=Ar.get(e);if(!r)throw new Error("invalid session id");let o=r[0],s=t._OrtEndProfiling(o);s===0&&Ye("Can't get an profile file name."),t._OrtFree(s)},gp=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t}});var bp=Xr((lx,W0)=>{W0.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var So=Object.defineProperty;var Um=Object.getOwnPropertyDescriptor;var jm=Object.getOwnPropertyNames;var Vm=Object.prototype.hasOwnProperty;var ue=(e,r)=>()=>(e&&(r=e(e=0)),r);var Qn=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),Hi=(e,r)=>{for(var t in r)So(e,t,{get:r[t],enumerable:!0})},Nm=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let l of jm(r))!Vm.call(e,l)&&l!==t&&So(e,l,{get:()=>r[l],enumerable:!(s=Um(r,l))||s.enumerable});return e};var Wr=e=>Nm(So({},"__esModule",{value:!0}),e);var xo={};Hi(xo,{createReadStream:()=>us,readFile:()=>Wm,readFileSync:()=>Gm});var Wm,Gm,us,Io=ue(()=>{Wm=void 0,Gm=void 0,us=void 0});var Ao={};Hi(Ao,{join:()=>Hm});var Hm,To=ue(()=>{Hm=void 0});var cs=Qn((ds,Eo)=>{"use strict";var ls=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(r={}){var t=r,s,l;t.ready=new Promise((n,i)=>{s=n,l=i}),t.mountExternalData=(n,i)=>{(t.jh||(t.jh=new Map)).set(n,i)},t.unmountExternalData=()=>{delete t.jh};let f=()=>{let n=(o,u,c)=>(...p)=>{let g=vt,v=u?.();p=o(...p);let w=u?.();return v!==w&&(o=w,c(v),u=c=null),vt!=g?fi():p},i=o=>async(...u)=>{try{if(t.ih)throw Error("Session already started");let c=t.ih={Kh:u[0],errors:[]},p=await o(...u);if(t.ih!==c)throw Error("Session mismatch");t.qh?.flush();let g=c.errors;if(0<g.length){let v=await Promise.all(g);if(v=v.filter(w=>w),0<v.length)throw Error(v.join(`\n`))}return p}finally{t.ih=null}};t._OrtCreateSession=n(t._OrtCreateSession,()=>t._OrtCreateSession,o=>t._OrtCreateSession=o),t._OrtRun=i(n(t._OrtRun,()=>t._OrtRun,o=>t._OrtRun=o)),t._OrtRunWithBinding=i(n(t._OrtRunWithBinding,()=>t._OrtRunWithBinding,o=>t._OrtRunWithBinding=o)),t._OrtBindInput=n(t._OrtBindInput,()=>t._OrtBindInput,o=>t._OrtBindInput=o),f=void 0};t.jsepInit=(n,i)=>{if(f?.(),n==="webgpu"){[t.qh,t.Bh,t.Fh,t.rh,t.Eh,t.Jd,t.Gh,t.Ih,t.Ch,t.Dh,t.Hh]=i;let o=t.qh;t.jsepRegisterBuffer=(u,c,p,g)=>o.registerBuffer(u,c,p,g),t.jsepGetBuffer=u=>o.getBuffer(u),t.jsepCreateDownloader=(u,c,p)=>o.createDownloader(u,c,p),t.jsepOnReleaseSession=u=>{o.onReleaseSession(u)},t.jsepOnRunStart=u=>o.onRunStart(u)}};var d=Object.assign({},t),y="./this.program",b=(n,i)=>{throw i},C=typeof window=="object",m=typeof importScripts=="function",S=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",T="",O,E,k;if(S){var j=(Io(),Wr(xo)),V=(To(),Wr(Ao));T=m?V.dirname(T)+"/":__dirname+"/",O=(n,i)=>(n=ze(n)?new URL(n):V.normalize(n),j.readFileSync(n,i?void 0:"utf8")),k=n=>(n=O(n,!0),n.buffer||(n=new Uint8Array(n)),n),E=(n,i,o,u=!0)=>{n=ze(n)?new URL(n):V.normalize(n),j.readFile(n,u?void 0:"utf8",(c,p)=>{c?o(c):i(u?p.buffer:p)})},!t.thisProgram&&1<process.argv.length&&(y=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),b=(n,i)=>{throw process.exitCode=n,i},t.inspect=()=>"[Emscripten Module object]"}else(C||m)&&(m?T=self.location.href:typeof document<"u"&&document.currentScript&&(T=document.currentScript.src),e&&(T=e),T.indexOf("blob:")!==0?T=T.substr(0,T.replace(/[?#].*/,"").lastIndexOf("/")+1):T="",O=n=>{var i=new XMLHttpRequest;return i.open("GET",n,!1),i.send(null),i.responseText},m&&(k=n=>{var i=new XMLHttpRequest;return i.open("GET",n,!1),i.responseType="arraybuffer",i.send(null),new Uint8Array(i.response)}),E=(n,i,o)=>{var u=new XMLHttpRequest;u.open("GET",n,!0),u.responseType="arraybuffer",u.onload=()=>{u.status==200||u.status==0&&u.response?i(u.response):o()},u.onerror=o,u.send(null)});var B=console.log.bind(console),W=console.error.bind(console);Object.assign(t,d),d=null,typeof WebAssembly!="object"&&ge("no native wasm support detected");var M,q=!1,Q,te,oe,J,ie,be,De;function qe(){var n=M.buffer;t.HEAP8=te=new Int8Array(n),t.HEAP16=new Int16Array(n),t.HEAPU8=oe=new Uint8Array(n),t.HEAPU16=new Uint16Array(n),t.HEAP32=J=new Int32Array(n),t.HEAPU32=ie=new Uint32Array(n),t.HEAPF32=be=new Float32Array(n),t.HEAPF64=De=new Float64Array(n)}var Ve=[],Te=[],pe=[],Le=0,Me=null,Se=null;function ge(n){throw n="Aborted("+n+")",W(n),q=!0,Q=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),l(n),n}var ve=n=>n.startsWith("data:application/octet-stream;base64,"),ze=n=>n.startsWith("file://"),rt;if(rt="ort-wasm-simd.wasm",!ve(rt)){var ne=rt;rt=t.locateFile?t.locateFile(ne,T):T+ne}function he(n){if(k)return k(n);throw"both async and sync fetching of the wasm failed"}function Ee(n){if(C||m){if(typeof fetch=="function"&&!ze(n))return fetch(n,{credentials:"same-origin"}).then(i=>{if(!i.ok)throw"failed to load wasm binary file at \'"+n+"\'";return i.arrayBuffer()}).catch(()=>he(n));if(E)return new Promise((i,o)=>{E(n,u=>i(new Uint8Array(u)),o)})}return Promise.resolve().then(()=>he(n))}function Qe(n,i,o){return Ee(n).then(u=>WebAssembly.instantiate(u,i)).then(u=>u).then(o,u=>{W(`failed to asynchronously prepare wasm: ${u}`),ge(u)})}function st(n,i){var o=rt;return typeof WebAssembly.instantiateStreaming!="function"||ve(o)||ze(o)||S||typeof fetch!="function"?Qe(o,n,i):fetch(o,{credentials:"same-origin"}).then(u=>WebAssembly.instantiateStreaming(u,n).then(i,function(c){return W(`wasm streaming compile failed: ${c}`),W("falling back to ArrayBuffer instantiation"),Qe(o,n,i)}))}var lt,pt={1368512:(n,i,o,u)=>{if(typeof t>"u"||!t.jh)return 1;if(n=it(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=t.jh.get(n),!n)return 2;if(i>>>=0,o>>>=0,i+o>n.byteLength)return 3;try{return oe.set(n.subarray(i,i+o),u>>>0>>>0),0}catch{return 4}},1369013:()=>{t.Ch()},1369044:()=>{t.Dh()},1369073:()=>{t.Hh()},1369098:n=>t.Bh(n),1369131:n=>t.Fh(n),1369163:(n,i,o)=>{t.rh(n,i,o,!0)},1369202:(n,i,o)=>{t.rh(n,i,o)},1369235:n=>{t.Jd("Abs",n,void 0)},1369286:n=>{t.Jd("Neg",n,void 0)},1369337:n=>{t.Jd("Floor",n,void 0)},1369390:n=>{t.Jd("Ceil",n,void 0)},1369442:n=>{t.Jd("Reciprocal",n,void 0)},1369500:n=>{t.Jd("Sqrt",n,void 0)},1369552:n=>{t.Jd("Exp",n,void 0)},1369603:n=>{t.Jd("Erf",n,void 0)},1369654:n=>{t.Jd("Sigmoid",n,void 0)},1369709:(n,i,o)=>{t.Jd("HardSigmoid",n,{alpha:i,beta:o})},1369788:n=>{t.Jd("Log",n,void 0)},1369839:n=>{t.Jd("Sin",n,void 0)},1369890:n=>{t.Jd("Cos",n,void 0)},1369941:n=>{t.Jd("Tan",n,void 0)},1369992:n=>{t.Jd("Asin",n,void 0)},1370044:n=>{t.Jd("Acos",n,void 0)},1370096:n=>{t.Jd("Atan",n,void 0)},1370148:n=>{t.Jd("Sinh",n,void 0)},1370200:n=>{t.Jd("Cosh",n,void 0)},1370252:n=>{t.Jd("Asinh",n,void 0)},1370305:n=>{t.Jd("Acosh",n,void 0)},1370358:n=>{t.Jd("Atanh",n,void 0)},1370411:n=>{t.Jd("Tanh",n,void 0)},1370463:n=>{t.Jd("Not",n,void 0)},1370514:(n,i,o)=>{t.Jd("Clip",n,{min:i,max:o})},1370583:n=>{t.Jd("Clip",n,void 0)},1370635:(n,i)=>{t.Jd("Elu",n,{alpha:i})},1370693:n=>{t.Jd("Relu",n,void 0)},1370745:(n,i)=>{t.Jd("LeakyRelu",n,{alpha:i})},1370809:(n,i)=>{t.Jd("ThresholdedRelu",n,{alpha:i})},1370879:(n,i)=>{t.Jd("Cast",n,{to:i})},1370937:n=>{t.Jd("Add",n,void 0)},1370988:n=>{t.Jd("Sub",n,void 0)},1371039:n=>{t.Jd("Mul",n,void 0)},1371090:n=>{t.Jd("Div",n,void 0)},1371141:n=>{t.Jd("Pow",n,void 0)},1371192:n=>{t.Jd("Equal",n,void 0)},1371245:n=>{t.Jd("Greater",n,void 0)},1371300:n=>{t.Jd("GreaterOrEqual",n,void 0)},1371362:n=>{t.Jd("Less",n,void 0)},1371414:n=>{t.Jd("LessOrEqual",n,void 0)},1371473:(n,i,o,u,c)=>{t.Jd("ReduceMean",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(J.subarray(u>>>0,c>>>0)):[]})},1371632:(n,i,o,u,c)=>{t.Jd("ReduceMax",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(J.subarray(u>>>0,c>>>0)):[]})},1371790:(n,i,o,u,c)=>{t.Jd("ReduceMin",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(J.subarray(u>>>0,c>>>0)):[]})},1371948:(n,i,o,u,c)=>{t.Jd("ReduceProd",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(J.subarray(u>>>0,c>>>0)):[]})},1372107:(n,i,o,u,c)=>{t.Jd("ReduceSum",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(J.subarray(u>>>0,c>>>0)):[]})},1372265:(n,i,o,u,c)=>{t.Jd("ReduceL1",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(J.subarray(u>>>0,c>>>0)):[]})},1372422:(n,i,o,u,c)=>{t.Jd("ReduceL2",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(J.subarray(u>>>0,c>>>0)):[]})},1372579:(n,i,o,u,c)=>{t.Jd("ReduceLogSum",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(J.subarray(u>>>0,c>>>0)):[]})},1372740:(n,i,o,u,c)=>{t.Jd("ReduceSumSquare",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(J.subarray(u>>>0,c>>>0)):[]})},1372904:(n,i,o,u,c)=>{t.Jd("ReduceLogSumExp",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(J.subarray(u>>>0,c>>>0)):[]})},1373068:n=>{t.Jd("Where",n,void 0)},1373121:(n,i,o)=>{t.Jd("Transpose",n,{perm:i?Array.from(J.subarray(i>>>0,o>>>0)):[]})},1373229:(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)=>{t.Jd("ConvTranspose",n,{format:w?"NHWC":"NCHW",autoPad:i,dilations:[o],group:u,kernel_shape:[c],pads:[p,g],strides:[v],wIsConst:()=>!!te[$>>>0],outputPadding:x?Array.from(J.subarray(x>>>0,P>>>0)):[],outputShape:R?Array.from(J.subarray(R>>>0,I>>>0)):[],activation:it(U)})},1373631:(n,i,o,u,c,p,g,v,w,$,x,P,R,I)=>{t.Jd("ConvTranspose",n,{format:v?"NHWC":"NCHW",autoPad:i,dilations:Array.from(J.subarray(o>>>0,(o>>>0)+2>>>0)),group:u,kernelShape:Array.from(J.subarray(c>>>0,(c>>>0)+2>>>0)),pads:Array.from(J.subarray(p>>>0,(p>>>0)+4>>>0)),strides:Array.from(J.subarray(g>>>0,(g>>>0)+2>>>0)),wIsConst:()=>!!te[w>>>0],outputPadding:$?Array.from(J.subarray($>>>0,x>>>0)):[],outputShape:P?Array.from(J.subarray(P>>>0,R>>>0)):[],activation:it(I)})},1374196:(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)=>{t.Jd("ConvTranspose",n,{format:w?"NHWC":"NCHW",autoPad:i,dilations:[o],group:u,kernel_shape:[c],pads:[p,g],strides:[v],wIsConst:()=>!!te[$>>>0],outputPadding:x?Array.from(J.subarray(x>>>0,P>>>0)):[],outputShape:R?Array.from(J.subarray(R>>>0,I>>>0)):[],activation:it(U)})},1374598:(n,i,o,u,c,p,g,v,w,$,x,P,R,I)=>{t.Jd("ConvTranspose",n,{format:v?"NHWC":"NCHW",autoPad:i,dilations:Array.from(J.subarray(o>>>0,(o>>>0)+2>>>0)),group:u,kernelShape:Array.from(J.subarray(c>>>0,(c>>>0)+2>>>0)),pads:Array.from(J.subarray(p>>>0,(p>>>0)+4>>>0)),strides:Array.from(J.subarray(g>>>0,(g>>>0)+2>>>0)),wIsConst:()=>!!te[w>>>0],outputPadding:$?Array.from(J.subarray($>>>0,x>>>0)):[],outputShape:P?Array.from(J.subarray(P>>>0,R>>>0)):[],activation:it(I)})},1375163:(n,i)=>{t.Jd("GlobalAveragePool",n,{format:i?"NHWC":"NCHW"})},1375254:(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)=>{t.Jd("AveragePool",n,{format:G?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:u,storage_order:c,dilations:[p,g],kernel_shape:[v,w],pads:[$,x,P,R],strides:[I,U]})},1375538:(n,i)=>{t.Jd("GlobalAveragePool",n,{format:i?"NHWC":"NCHW"})},1375629:(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)=>{t.Jd("AveragePool",n,{format:G?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:u,storage_order:c,dilations:[p,g],kernel_shape:[v,w],pads:[$,x,P,R],strides:[I,U]})},1375913:(n,i)=>{t.Jd("GlobalMaxPool",n,{format:i?"NHWC":"NCHW"})},1376e3:(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)=>{t.Jd("MaxPool",n,{format:G?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:u,storage_order:c,dilations:[p,g],kernel_shape:[v,w],pads:[$,x,P,R],strides:[I,U]})},1376280:(n,i)=>{t.Jd("GlobalMaxPool",n,{format:i?"NHWC":"NCHW"})},1376367:(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)=>{t.Jd("MaxPool",n,{format:G?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:u,storage_order:c,dilations:[p,g],kernel_shape:[v,w],pads:[$,x,P,R],strides:[I,U]})},1376647:(n,i,o,u,c)=>{t.Jd("Gemm",n,{alpha:i,beta:o,transA:u,transB:c})},1376751:n=>{t.Jd("MatMul",n,void 0)},1376805:(n,i,o,u)=>{t.Jd("ArgMax",n,{keepDims:!!i,selectLastIndex:!!o,axis:u})},1376913:(n,i,o,u)=>{t.Jd("ArgMin",n,{keepDims:!!i,selectLastIndex:!!o,axis:u})},1377021:(n,i)=>{t.Jd("Softmax",n,{axis:i})},1377084:(n,i)=>{t.Jd("Concat",n,{axis:i})},1377144:(n,i,o,u,c)=>{t.Jd("Split",n,{axis:i,numOutputs:o,splitSizes:u?Array.from(J.subarray(u>>>0,c>>>0)):[]})},1377284:n=>{t.Jd("Expand",n,void 0)},1377338:(n,i)=>{t.Jd("Gather",n,{axis:Number(i)})},1377409:(n,i)=>{t.Jd("GatherElements",n,{axis:Number(i)})},1377488:(n,i,o,u,c,p,g,v,w,$,x)=>{t.Jd("Resize",n,{antialias:i,axes:o?Array.from(J.subarray(o>>>0,u>>>0)):[],coordinateTransformMode:it(c),cubicCoeffA:p,excludeOutside:g,extrapolationValue:v,keepAspectRatioPolicy:it(w),mode:it($),nearestMode:it(x)})},1377834:(n,i,o,u,c,p,g)=>{t.Jd("Slice",n,{starts:i?Array.from(J.subarray(i>>>0,o>>>0)):[],ends:u?Array.from(J.subarray(u>>>0,c>>>0)):[],axes:p?Array.from(J.subarray(p>>>0,g>>>0)):[]})},1378050:n=>{t.Jd("Tile",n,void 0)},1378102:(n,i,o)=>{t.Jd("LayerNormalization",n,{axis:Number(i),epsilon:Number(o)})},1378209:(n,i,o)=>{t.Jd("InstanceNormalization",n,{epsilon:i,format:o?"NHWC":"NCHW"})},1378323:(n,i,o)=>{t.Jd("InstanceNormalization",n,{epsilon:i,format:o?"NHWC":"NCHW"})},1378437:n=>{t.Jd("Range",n,void 0)},1378490:(n,i)=>{t.Jd("Einsum",n,{equation:it(i)})},1378571:(n,i,o,u,c)=>{t.Jd("Pad",n,{mode:i,value:o,pads:u?Array.from(J.subarray(u>>>0,c>>>0)):[]})},1378698:(n,i,o,u,c,p)=>{t.Jd("BatchNormalization",n,{epsilon:i,momentum:o,spatial:!!c,trainingMode:!!u,format:p?"NHWC":"NCHW"})},1378867:(n,i,o,u,c,p)=>{t.Jd("BatchNormalization",n,{epsilon:i,momentum:o,spatial:!!c,trainingMode:!!u,format:p?"NHWC":"NCHW"})},1379036:(n,i,o)=>{t.Jd("CumSum",n,{exclusive:Number(i),reverse:Number(o)})},1379133:(n,i,o,u,c,p,g,v,w)=>{t.Jd("Attention",n,{numHeads:i,isUnidirectional:o,maskFilterValue:u,scale:c,doRotary:p,qkvHiddenSizes:g?Array.from(J.subarray(Number(v)>>>0,Number(v)+g>>>0)):[],pastPresentShareBuffer:!!w})},1379405:n=>{t.Jd("BiasAdd",n,void 0)},1379460:n=>{t.Jd("BiasSplitGelu",n,void 0)},1379521:n=>{t.Jd("FastGelu",n,void 0)},1379577:(n,i,o,u,c,p,g,v,w,$,x,P,R)=>{t.Jd("Conv",n,{format:w?"NHWC":"NCHW",auto_pad:i,dilations:[o],group:u,kernel_shape:[c],pads:p?Array.from(J.subarray(p>>>0,g>>>0)):[],strides:[v],w_is_const:()=>!!te[$>>>0],activation:it(x),activation_params:P?Array.from(be.subarray(P>>>0,R>>>0)):[]})},1379947:(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)=>{t.Jd("Conv",n,{format:P?"NHWC":"NCHW",auto_pad:i,dilations:[o,u],group:c,kernel_shape:[p,g],pads:v?Array.from(J.subarray(v>>>0,w>>>0)):[],strides:[$,x],w_is_const:()=>!!te[R>>>0],activation:it(I),activation_params:U?Array.from(be.subarray(U>>>0,G>>>0)):[]})},1380338:n=>{t.Jd("Gelu",n,void 0)},1380390:(n,i,o,u,c,p)=>{t.Jd("MatMulNBits",n,{k:i,n:o,accuracyLevel:u,bits:c,blockSize:p})},1380517:(n,i,o,u,c,p)=>{t.Jd("MultiHeadAttention",n,{numHeads:i,isUnidirectional:o,maskFilterValue:u,scale:c,doRotary:p})},1380676:(n,i)=>{t.Jd("SkipLayerNormalization",n,{epsilon:i})},1380757:n=>{t.Gh(n)},1380791:(n,i)=>t.Ih(n,i,t.ih.Kh,t.ih.errors)};function at(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var nt=[],gt=0,St=0;function Tt(n){this.hh=n,this.dh=n-24,this.Jh=function(i){ie[this.dh+4>>>2>>>0]=i},this.oh=function(){return ie[this.dh+4>>>2>>>0]},this.Ah=function(i){ie[this.dh+8>>>2>>>0]=i},this.sh=function(i){te[this.dh+12>>>0>>>0]=i?1:0},this.xh=function(){return te[this.dh+12>>>0>>>0]!=0},this.th=function(i){te[this.dh+13>>>0>>>0]=i?1:0},this.wh=function(){return te[this.dh+13>>>0>>>0]!=0},this.zh=function(i,o){this.ph(0),this.Jh(i),this.Ah(o)},this.ph=function(i){ie[this.dh+16>>>2>>>0]=i},this.uh=function(){return ie[this.dh+16>>>2>>>0]},this.yh=function(){if(an(this.oh()))return ie[this.hh>>>2>>>0];var i=this.uh();return i!==0?i:this.hh}}var Zt=n=>{var i=St;if(!i)return qt(0),0;var o=new Tt(i);o.ph(i);var u=o.oh();if(!u)return qt(0),i;for(var c in n){var p=n[c];if(p===0||p===u)break;if(on(p,u,o.dh+16))return qt(p),i}return qt(u),i},Xt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Jr=(n,i,o)=>{i>>>=0;var u=i+o;for(o=i;n[o]&&!(o>=u);)++o;if(16<o-i&&n.buffer&&Xt)return Xt.decode(n.subarray(i,o));for(u="";i<o;){var c=n[i++];if(c&128){var p=n[i++]&63;if((c&224)==192)u+=String.fromCharCode((c&31)<<6|p);else{var g=n[i++]&63;c=(c&240)==224?(c&15)<<12|p<<6|g:(c&7)<<18|p<<12|g<<6|n[i++]&63,65536>c?u+=String.fromCharCode(c):(c-=65536,u+=String.fromCharCode(55296|c>>10,56320|c&1023))}}else u+=String.fromCharCode(c)}return u},it=(n,i)=>(n>>>=0)?Jr(oe,n,i):"",vr=n=>{for(var i=0,o=0;o<n.length;++o){var u=n.charCodeAt(o);127>=u?i++:2047>=u?i+=2:55296<=u&&57343>=u?(i+=4,++o):i+=3}return i},Qt=(n,i,o,u)=>{if(o>>>=0,!(0<u))return 0;var c=o;u=o+u-1;for(var p=0;p<n.length;++p){var g=n.charCodeAt(p);if(55296<=g&&57343>=g){var v=n.charCodeAt(++p);g=65536+((g&1023)<<10)|v&1023}if(127>=g){if(o>=u)break;i[o++>>>0]=g}else{if(2047>=g){if(o+1>=u)break;i[o++>>>0]=192|g>>6}else{if(65535>=g){if(o+2>=u)break;i[o++>>>0]=224|g>>12}else{if(o+3>=u)break;i[o++>>>0]=240|g>>18,i[o++>>>0]=128|g>>12&63}i[o++>>>0]=128|g>>6&63}i[o++>>>0]=128|g&63}}return i[o>>>0]=0,o-c},Et=n=>n%4===0&&(n%100!==0||n%400===0),Yr=[0,31,60,91,121,152,182,213,244,274,305,335],si=[0,31,59,90,120,151,181,212,243,273,304,334],Zr=n=>{var i=vr(n)+1,o=xr(i);return o&&Qt(n,oe,o,i),o},Xr=[],wr=(n,i)=>{Xr.length=0;for(var o;o=oe[n++>>>0];){var u=o!=105;u&=o!=112,i+=u&&i%8?4:0,Xr.push(o==112?ie[i>>>2>>>0]:o==105?J[i>>>2>>>0]:De[i>>>3>>>0]),i+=u?8:4}return Xr},ir={},_r=()=>{if(!$r){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:y||"./this.program"},i;for(i in ir)ir[i]===void 0?delete n[i]:n[i]=ir[i];var o=[];for(i in n)o.push(`${i}=${n[i]}`);$r=o}return $r},$r,Ft=[null,[],[]],Qr=[31,29,31,30,31,30,31,31,30,31,30,31],en=[31,28,31,30,31,30,31,31,30,31,30,31];function ut(n){var i=Array(vr(n)+1);return Qt(n,i,0,i.length),i}function ui(n,i,o,u){function c(I,U,G){for(I=typeof I=="number"?I.toString():I||"";I.length<U;)I=G[0]+I;return I}function p(I,U){return c(I,U,"0")}function g(I,U){function G(ae){return 0>ae?-1:0<ae?1:0}var ee;return(ee=G(I.getFullYear()-U.getFullYear()))===0&&(ee=G(I.getMonth()-U.getMonth()))===0&&(ee=G(I.getDate()-U.getDate())),ee}function v(I){switch(I.getDay()){case 0:return new Date(I.getFullYear()-1,11,29);case 1:return I;case 2:return new Date(I.getFullYear(),0,3);case 3:return new Date(I.getFullYear(),0,2);case 4:return new Date(I.getFullYear(),0,1);case 5:return new Date(I.getFullYear()-1,11,31);case 6:return new Date(I.getFullYear()-1,11,30)}}function w(I){var U=I.fh;for(I=new Date(new Date(I.gh+1900,0,1).getTime());0<U;){var G=I.getMonth(),ee=(Et(I.getFullYear())?Qr:en)[G];if(U>ee-I.getDate())U-=ee-I.getDate()+1,I.setDate(1),11>G?I.setMonth(G+1):(I.setMonth(0),I.setFullYear(I.getFullYear()+1));else{I.setDate(I.getDate()+U);break}}return G=new Date(I.getFullYear()+1,0,4),U=v(new Date(I.getFullYear(),0,4)),G=v(G),0>=g(U,I)?0>=g(G,I)?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}n>>>=0,i>>>=0,o>>>=0,u>>>=0;var $=ie[u+40>>>2>>>0];u={Nh:J[u>>>2>>>0],Mh:J[u+4>>>2>>>0],kh:J[u+8>>>2>>>0],nh:J[u+12>>>2>>>0],lh:J[u+16>>>2>>>0],gh:J[u+20>>>2>>>0],eh:J[u+24>>>2>>>0],fh:J[u+28>>>2>>>0],Ph:J[u+32>>>2>>>0],Lh:J[u+36>>>2>>>0],Oh:$?it($):""},o=it(o),$={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var x in $)o=o.replace(new RegExp(x,"g"),$[x]);var P="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),R="January February March April May June July August September October November December".split(" ");$={"%a":I=>P[I.eh].substring(0,3),"%A":I=>P[I.eh],"%b":I=>R[I.lh].substring(0,3),"%B":I=>R[I.lh],"%C":I=>p((I.gh+1900)/100|0,2),"%d":I=>p(I.nh,2),"%e":I=>c(I.nh,2," "),"%g":I=>w(I).toString().substring(2),"%G":I=>w(I),"%H":I=>p(I.kh,2),"%I":I=>(I=I.kh,I==0?I=12:12<I&&(I-=12),p(I,2)),"%j":I=>{for(var U=0,G=0;G<=I.lh-1;U+=(Et(I.gh+1900)?Qr:en)[G++]);return p(I.nh+U,3)},"%m":I=>p(I.lh+1,2),"%M":I=>p(I.Mh,2),"%n":()=>`\n`,"%p":I=>0<=I.kh&&12>I.kh?"AM":"PM","%S":I=>p(I.Nh,2),"%t":()=>"	","%u":I=>I.eh||7,"%U":I=>p(Math.floor((I.fh+7-I.eh)/7),2),"%V":I=>{var U=Math.floor((I.fh+7-(I.eh+6)%7)/7);if(2>=(I.eh+371-I.fh-2)%7&&U++,U)U==53&&(G=(I.eh+371-I.fh)%7,G==4||G==3&&Et(I.gh)||(U=1));else{U=52;var G=(I.eh+7-I.fh-1)%7;(G==4||G==5&&Et(I.gh%400-1))&&U++}return p(U,2)},"%w":I=>I.eh,"%W":I=>p(Math.floor((I.fh+7-(I.eh+6)%7)/7),2),"%y":I=>(I.gh+1900).toString().substring(2),"%Y":I=>I.gh+1900,"%z":I=>{I=I.Lh;var U=0<=I;return I=Math.abs(I)/60,(U?"+":"-")+("0000"+(I/60*100+I%60)).slice(-4)},"%Z":I=>I.Oh,"%%":()=>"%"},o=o.replace(/%%/g,"\\0\\0");for(x in $)o.includes(x)&&(o=o.replace(new RegExp(x,"g"),$[x](u)));return o=o.replace(/\\0\\0/g,"%"),x=ut(o),x.length>i?0:(te.set(x,n>>>0),x.length-1)}var Fe=n=>{try{n()}catch(i){ge(i)}};function li(){var n=z,i={};for(let[o,u]of Object.entries(n))i[o]=typeof u=="function"?function(){or.push(o);try{return u.apply(null,arguments)}finally{q||(or.pop(),vt&&Pt===1&&or.length===0&&(Pt=0,Fe(is),typeof Fibers<"u"&&Fibers.Qh()))}}:u;return i}var Pt=0,vt=null,di=0,or=[],ci={},we={},Cr=0,Sr=null,_o=[];function fi(){return new Promise((n,i)=>{Sr={resolve:n,reject:i}})}function $o(){var n=xr(65548),i=n+12;ie[n>>>2>>>0]=i,ie[n+4>>>2>>>0]=i+65536,i=or[0];var o=ci[i];return o===void 0&&(o=Cr++,ci[i]=o,we[o]=i),J[n+8>>>2>>>0]=o,n}function pi(n){if(!q){if(Pt===0){var i=!1,o=!1;n((u=0)=>{if(!q&&(di=u,i=!0,o)){Pt=2,Fe(()=>os(vt)),typeof Browser<"u"&&Browser.mh.vh&&Browser.mh.resume(),u=!1;try{var c=(0,z[we[J[vt+8>>>2>>>0]]])()}catch(v){c=v,u=!0}var p=!1;if(!vt){var g=Sr;g&&(Sr=null,(u?g.reject:g.resolve)(c),p=!0)}if(u&&!p)throw c}}),o=!0,i||(Pt=1,vt=$o(),typeof Browser<"u"&&Browser.mh.vh&&Browser.mh.pause(),Fe(()=>ns(vt)))}else Pt===2?(Pt=0,Fe(as),Ir(vt),vt=null,_o.forEach(u=>{if(!q)try{u();try{Q=Q=u=Q,t.onExit?.(u),q=!0,b(u,new at(u))}catch(c){c instanceof at||c=="unwind"||b(1,c)}}catch(c){c instanceof at||c=="unwind"||b(1,c)}})):ge(`invalid state: ${Pt}`);return di}}function mi(n){return pi(i=>{n().then(i)})}var hi={Ia:function(n,i,o){return mi(async()=>{await t.Eh(n,i,o)})},t:function(n){return n=new Tt(n>>>0),n.xh()||(n.sh(!0),gt--),n.th(!1),nt.push(n),nn(n.hh),n.yh()},C:()=>{H(0,0);var n=nt.pop();rn(n.hh),St=0},a:function(){return Zt([])},l:function(n){return Zt([n>>>0])},w:function(n,i){return Zt([n>>>0,i>>>0])},p:function(n,i,o){return Zt([n>>>0,i>>>0,o>>>0])},pa:()=>{var n=nt.pop();n||ge("no exception to throw");var i=n.hh;throw n.wh()||(nt.push(n),n.th(!0),n.sh(!1),gt++),St=i,St},r:function(n,i,o){throw n>>>=0,new Tt(n).zh(i>>>0,o>>>0),St=n,gt++,St},ca:()=>gt,f:function(n){throw St||=n>>>0,St},qa:function(){return 0},uc:function(){},Qa:function(){},Sa:function(){},Ka:function(){return 0},_b:function(){},_a:function(){},Pb:function(){},Ea:function(){},Ra:function(){},Oa:function(){},jc:function(){},Pa:function(){},Yc:()=>1,Uc:function(n,i,o){n=i+2097152>>>0<4194305-!!n?(n>>>0)+4294967296*i:NaN,o>>>=0,n=new Date(1e3*n),J[o>>>2>>>0]=n.getUTCSeconds(),J[o+4>>>2>>>0]=n.getUTCMinutes(),J[o+8>>>2>>>0]=n.getUTCHours(),J[o+12>>>2>>>0]=n.getUTCDate(),J[o+16>>>2>>>0]=n.getUTCMonth(),J[o+20>>>2>>>0]=n.getUTCFullYear()-1900,J[o+24>>>2>>>0]=n.getUTCDay(),J[o+28>>>2>>>0]=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Vc:function(n,i,o){n=i+2097152>>>0<4194305-!!n?(n>>>0)+4294967296*i:NaN,o>>>=0,n=new Date(1e3*n),J[o>>>2>>>0]=n.getSeconds(),J[o+4>>>2>>>0]=n.getMinutes(),J[o+8>>>2>>>0]=n.getHours(),J[o+12>>>2>>>0]=n.getDate(),J[o+16>>>2>>>0]=n.getMonth(),J[o+20>>>2>>>0]=n.getFullYear()-1900,J[o+24>>>2>>>0]=n.getDay(),J[o+28>>>2>>>0]=(Et(n.getFullYear())?Yr:si)[n.getMonth()]+n.getDate()-1|0,J[o+36>>>2>>>0]=-(60*n.getTimezoneOffset()),i=new Date(n.getFullYear(),6,1).getTimezoneOffset();var u=new Date(n.getFullYear(),0,1).getTimezoneOffset();J[o+32>>>2>>>0]=(i!=u&&n.getTimezoneOffset()==Math.min(u,i))|0},Wc:function(n){n>>>=0;var i=new Date(J[n+20>>>2>>>0]+1900,J[n+16>>>2>>>0],J[n+12>>>2>>>0],J[n+8>>>2>>>0],J[n+4>>>2>>>0],J[n>>>2>>>0],0),o=J[n+32>>>2>>>0],u=i.getTimezoneOffset(),c=new Date(i.getFullYear(),6,1).getTimezoneOffset(),p=new Date(i.getFullYear(),0,1).getTimezoneOffset(),g=Math.min(p,c);return 0>o?J[n+32>>>2>>>0]=+(c!=p&&g==u):0<o!=(g==u)&&(c=Math.max(p,c),i.setTime(i.getTime()+6e4*((0<o?g:c)-u))),J[n+24>>>2>>>0]=i.getDay(),J[n+28>>>2>>>0]=(Et(i.getFullYear())?Yr:si)[i.getMonth()]+i.getDate()-1|0,J[n>>>2>>>0]=i.getSeconds(),J[n+4>>>2>>>0]=i.getMinutes(),J[n+8>>>2>>>0]=i.getHours(),J[n+12>>>2>>>0]=i.getDate(),J[n+16>>>2>>>0]=i.getMonth(),J[n+20>>>2>>>0]=i.getYear(),n=i.getTime(),isNaN(n)?(J[ar()>>>2>>>0]=61,n=-1):n/=1e3,qt((lt=n,1<=+Math.abs(lt)?0<lt?+Math.floor(lt/4294967296)>>>0:~~+Math.ceil((lt-+(~~lt>>>0))/4294967296)>>>0:0)),n>>>0},Sc:function(){return-52},Tc:function(){},Ma:function(n,i,o){function u(w){return(w=w.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?w[1]:"GMT"}o>>>=0;var c=new Date().getFullYear(),p=new Date(c,0,1),g=new Date(c,6,1);c=p.getTimezoneOffset();var v=g.getTimezoneOffset();ie[n>>>0>>>2>>>0]=60*Math.max(c,v),J[i>>>0>>>2>>>0]=+(c!=v),n=u(p),i=u(g),n=Zr(n),i=Zr(i),v<c?(ie[o>>>2>>>0]=n,ie[o+4>>>2>>>0]=i):(ie[o>>>2>>>0]=i,ie[o+4>>>2>>>0]=n)},ha:()=>{ge("")},x:function(n,i,o){return n>>>=0,i=wr(i>>>0,o>>>0),pt[n].apply(null,i)},za:function(n,i,o){return n>>>=0,i=wr(i>>>0,o>>>0),pt[n].apply(null,i)},Ga:()=>Date.now(),Na:function(){return 4294901760},H:()=>performance.now(),Eb:function(n,i,o){return i>>>=0,oe.copyWithin(n>>>0>>>0,i>>>0,i+(o>>>0)>>>0)},La:function(n){n>>>=0;var i=oe.length;if(4294901760<n)return!1;for(var o=1;4>=o;o*=2){var u=i*(1+.2/o);u=Math.min(u,n+100663296);var c=Math;u=Math.max(n,u);e:{c=(c.min.call(c,4294901760,u+(65536-u%65536)%65536)-M.buffer.byteLength+65535)/65536;try{M.grow(c),qe();var p=1;break e}catch{}p=void 0}if(p)return!0}return!1},jb:function(n,i){n>>>=0,i>>>=0;var o=0;return _r().forEach((u,c)=>{var p=i+o;for(c=ie[n+4*c>>>2>>>0]=p,p=0;p<u.length;++p)te[c++>>>0>>>0]=u.charCodeAt(p);te[c>>>0>>>0]=0,o+=u.length+1}),0},ub:function(n,i){n>>>=0,i>>>=0;var o=_r();ie[n>>>2>>>0]=o.length;var u=0;return o.forEach(c=>u+=c.length+1),ie[i>>>2>>>0]=u,0},ma:()=>52,Da:function(){return 52},Xc:function(){return 70},Ca:function(n,i,o,u){i>>>=0,o>>>=0,u>>>=0;for(var c=0,p=0;p<o;p++){var g=ie[i>>>2>>>0],v=ie[i+4>>>2>>>0];i+=8;for(var w=0;w<v;w++){var $=oe[g+w>>>0],x=Ft[n];$===0||$===10?((n===1?B:W)(Jr(x,0)),x.length=0):x.push($)}c+=v}return ie[u>>>2>>>0]=c,0},ga:ef,Zc:Gf,la:xf,L:bf,I:Qc,_c:Wf,da:Sf,B:hf,z:Fc,b:Oc,Ba:Hc,$:Gc,g:Pc,ra:jf,h:Ec,E:zf,i:zc,$c:Vf,j:Mc,u:Dc,s:qc,n:Xc,W:tf,Q:Of,J:Jc,na:pf,_:gf,ja:Rf,xb:sm,fb:Cm,Cc:ap,bb:Am,db:xm,Ta:Mm,Qb:Gp,Kc:Xf,hb:_m,Va:Bm,Ob:Hp,eb:Sm,lc:$p,Rc:Hf,tc:mp,gb:$m,cb:Im,Bb:rm,pc:bp,sc:hp,kc:Cp,Qc:Lf,Ya:km,ab:Tm,ob:hm,lb:bm,$a:Em,nc:wp,Ib:Yp,kb:vm,Ua:Dm,Tb:Vp,Hc:tp,Pc:Ff,Ac:up,nb:gm,Za:Pm,qc:yp,d:Bc,X:lf,q:Rc,Y:Uf,N:Cf,fa:nf,e:kc,Aa:rf,F:Mf,aa:cf,R:vf,wb:um,ba:of,c:Uc,xa:sf,ad:Bf,ua:wf,k:jc,wa:df,m:Vc,ya:af,va:ff,Ha:Tf,o:Nc,ec:Tp,fc:Ap,dc:Ep,ka:If,y:Kc,A:Lc,D:Zc,Z:Df,ta:_f,ea:uf,P:yf,K:Wc,O:mf,oa:Yc,V:$f,ia:Nf,S:Pf,sa:kf,T:Ef,U:Af,Wa:Rm,oc:vp,Xb:Mp,M:im,sb:cm,hc:xp,Sb:Np,Db:em,Ab:nm,Fa:Jf,Nb:Lp,zb:om,Fb:Qp,Rb:Wp,Hb:Zp,ic:Sp,mb:ym,Kb:Kp,tb:dm,qb:pm,wc:fp,Fc:np,rb:fm,Lb:qp,Lc:Zf,ib:wm,Bc:sp,Ic:ep,Nc:Kf,Dc:op,pb:mm,Ec:ip,yb:am,Jb:Jp,Mc:Yf,Oc:qf,yc:dp,Cb:tm,Yb:Dp,vb:lm,Gc:rp,Zb:Bp,Mb:Fp,mc:_p,Jc:Qf,vc:pp,Gb:Xp,Wb:zp,xc:cp,rc:gp,Xa:Om,zc:lp,Ub:jp,Vb:Up,ac:Op,bc:kp,gc:Ip,cc:Pp,$b:Rp,v:function(n){return n>>>0},Ja:ui,G:function(n,i,o,u){return ui(n>>>0,i>>>0,o>>>0,u>>>0)}},z=function(){function n(o){return z=o.exports,z=li(),z=zm(),M=z.bd,qe(),Te.unshift(z.cd),Le--,Le==0&&(Me!==null&&(clearInterval(Me),Me=null),Se&&(o=Se,Se=null,o())),z}var i={a:hi};if(Le++,t.instantiateWasm)try{return t.instantiateWasm(i,n)}catch(o){W(`Module.instantiateWasm callback failed with error: ${o}`),l(o)}return st(i,function(o){n(o.instance)}).catch(l),{}}();t._OrtInit=(n,i)=>(t._OrtInit=z.dd)(n,i),t._OrtGetLastError=(n,i)=>(t._OrtGetLastError=z.ed)(n,i),t._OrtCreateSessionOptions=(n,i,o,u,c,p,g,v,w,$)=>(t._OrtCreateSessionOptions=z.fd)(n,i,o,u,c,p,g,v,w,$),t._OrtAppendExecutionProvider=(n,i)=>(t._OrtAppendExecutionProvider=z.gd)(n,i),t._OrtAddFreeDimensionOverride=(n,i,o)=>(t._OrtAddFreeDimensionOverride=z.hd)(n,i,o),t._OrtAddSessionConfigEntry=(n,i,o)=>(t._OrtAddSessionConfigEntry=z.id)(n,i,o),t._OrtReleaseSessionOptions=n=>(t._OrtReleaseSessionOptions=z.jd)(n),t._OrtCreateSession=(n,i,o)=>(t._OrtCreateSession=z.kd)(n,i,o),t._OrtReleaseSession=n=>(t._OrtReleaseSession=z.ld)(n),t._OrtGetInputOutputCount=(n,i,o)=>(t._OrtGetInputOutputCount=z.md)(n,i,o),t._OrtGetInputName=(n,i)=>(t._OrtGetInputName=z.nd)(n,i),t._OrtGetOutputName=(n,i)=>(t._OrtGetOutputName=z.od)(n,i),t._OrtFree=n=>(t._OrtFree=z.pd)(n),t._OrtCreateTensor=(n,i,o,u,c,p)=>(t._OrtCreateTensor=z.qd)(n,i,o,u,c,p),t._OrtGetTensorData=(n,i,o,u,c)=>(t._OrtGetTensorData=z.rd)(n,i,o,u,c),t._OrtReleaseTensor=n=>(t._OrtReleaseTensor=z.sd)(n),t._OrtCreateRunOptions=(n,i,o,u)=>(t._OrtCreateRunOptions=z.td)(n,i,o,u),t._OrtAddRunConfigEntry=(n,i,o)=>(t._OrtAddRunConfigEntry=z.ud)(n,i,o),t._OrtReleaseRunOptions=n=>(t._OrtReleaseRunOptions=z.vd)(n),t._OrtCreateBinding=n=>(t._OrtCreateBinding=z.wd)(n),t._OrtBindInput=(n,i,o)=>(t._OrtBindInput=z.xd)(n,i,o),t._OrtBindOutput=(n,i,o,u)=>(t._OrtBindOutput=z.yd)(n,i,o,u),t._OrtClearBoundOutputs=n=>(t._OrtClearBoundOutputs=z.zd)(n),t._OrtReleaseBinding=n=>(t._OrtReleaseBinding=z.Ad)(n),t._OrtRunWithBinding=(n,i,o,u,c)=>(t._OrtRunWithBinding=z.Bd)(n,i,o,u,c),t._OrtRun=(n,i,o,u,c,p,g,v)=>(t._OrtRun=z.Cd)(n,i,o,u,c,p,g,v),t._OrtEndProfiling=n=>(t._OrtEndProfiling=z.Dd)(n),t._JsepOutput=(n,i,o)=>(t._JsepOutput=z.Ed)(n,i,o),t._JsepGetNodeName=n=>(t._JsepGetNodeName=z.Fd)(n);var ar=()=>(ar=z.Gd)(),xr=t._malloc=n=>(xr=t._malloc=z.Hd)(n),Ir=t._free=n=>(Ir=t._free=z.Id)(n),H=(n,i)=>(H=z.Kd)(n,i),qt=n=>(qt=z.Ld)(n),L=()=>(L=z.Md)(),F=n=>(F=z.Nd)(n),tn=n=>(tn=z.Od)(n),rn=n=>(rn=z.Pd)(n),nn=n=>(nn=z.Qd)(n),on=(n,i,o)=>(on=z.Rd)(n,i,o),an=n=>(an=z.Sd)(n),sn=t.dynCall_vii=(n,i,o)=>(sn=t.dynCall_vii=z.Td)(n,i,o),un=t.dynCall_iiii=(n,i,o,u)=>(un=t.dynCall_iiii=z.Ud)(n,i,o,u),ln=t.dynCall_iii=(n,i,o)=>(ln=t.dynCall_iii=z.Vd)(n,i,o),dn=t.dynCall_ii=(n,i)=>(dn=t.dynCall_ii=z.Wd)(n,i),wt=t.dynCall_iiiiiii=(n,i,o,u,c,p,g)=>(wt=t.dynCall_iiiiiii=z.Xd)(n,i,o,u,c,p,g),Ar=t.dynCall_vi=(n,i)=>(Ar=t.dynCall_vi=z.Yd)(n,i),Tr=t.dynCall_v=n=>(Tr=t.dynCall_v=z.Zd)(n),gi=t.dynCall_iiiiii=(n,i,o,u,c,p)=>(gi=t.dynCall_iiiiii=z._d)(n,i,o,u,c,p),Rt=t.dynCall_iiij=(n,i,o,u,c)=>(Rt=t.dynCall_iiij=z.$d)(n,i,o,u,c),yi=t.dynCall_iiiii=(n,i,o,u,c)=>(yi=t.dynCall_iiiii=z.ae)(n,i,o,u,c),kt=t.dynCall_viii=(n,i,o,u)=>(kt=t.dynCall_viii=z.be)(n,i,o,u),cn=t.dynCall_viiiii=(n,i,o,u,c,p)=>(cn=t.dynCall_viiiii=z.ce)(n,i,o,u,c,p),fn=t.dynCall_viiii=(n,i,o,u,c)=>(fn=t.dynCall_viiii=z.de)(n,i,o,u,c),yt=t.dynCall_viiiiii=(n,i,o,u,c,p,g)=>(yt=t.dynCall_viiiiii=z.ee)(n,i,o,u,c,p,g),Er=t.dynCall_viiji=(n,i,o,u,c,p)=>(Er=t.dynCall_viiji=z.fe)(n,i,o,u,c,p),dt=t.dynCall_viiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P)=>(dt=t.dynCall_viiiiiiiiiii=z.ge)(n,i,o,u,c,p,g,v,w,$,x,P),_t=t.dynCall_viiijjjii=(n,i,o,u,c,p,g,v,w,$,x,P)=>(_t=t.dynCall_viiijjjii=z.he)(n,i,o,u,c,p,g,v,w,$,x,P),pn=t.dynCall_iij=(n,i,o,u)=>(pn=t.dynCall_iij=z.ie)(n,i,o,u),bi=t.dynCall_iif=(n,i,o)=>(bi=t.dynCall_iif=z.je)(n,i,o),vi=t.dynCall_iid=(n,i,o)=>(vi=t.dynCall_iid=z.ke)(n,i,o),mn=t.dynCall_jii=(n,i,o)=>(mn=t.dynCall_jii=z.le)(n,i,o),wi=t.dynCall_i=n=>(wi=t.dynCall_i=z.me)(n),_i=t.dynCall_viiiiiiii=(n,i,o,u,c,p,g,v,w)=>(_i=t.dynCall_viiiiiiii=z.ne)(n,i,o,u,c,p,g,v,w),$i=t.dynCall_viiiiij=(n,i,o,u,c,p,g,v)=>($i=t.dynCall_viiiiij=z.oe)(n,i,o,u,c,p,g,v),Ci=t.dynCall_ji=(n,i)=>(Ci=t.dynCall_ji=z.pe)(n,i),Si=t.dynCall_viij=(n,i,o,u,c)=>(Si=t.dynCall_viij=z.qe)(n,i,o,u,c),xi=t.dynCall_iiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P)=>(xi=t.dynCall_iiiiiiiiiiii=z.re)(n,i,o,u,c,p,g,v,w,$,x,P),hn=t.dynCall_viiiiiiiii=(n,i,o,u,c,p,g,v,w,$)=>(hn=t.dynCall_viiiiiiiii=z.se)(n,i,o,u,c,p,g,v,w,$),Pr=t.dynCall_ij=(n,i,o)=>(Pr=t.dynCall_ij=z.te)(n,i,o),sr=t.dynCall_iiiiij=(n,i,o,u,c,p,g)=>(sr=t.dynCall_iiiiij=z.ue)(n,i,o,u,c,p,g),kr=t.dynCall_j=n=>(kr=t.dynCall_j=z.ve)(n),Or=t.dynCall_vij=(n,i,o,u)=>(Or=t.dynCall_vij=z.we)(n,i,o,u),gn=t.dynCall_viijjjiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)=>(gn=t.dynCall_viijjjiiiiii=z.xe)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U),ur=t.dynCall_viiijiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R)=>(ur=t.dynCall_viiijiiiiiii=z.ye)(n,i,o,u,c,p,g,v,w,$,x,P,R),Ii=t.dynCall_iiiiiiii=(n,i,o,u,c,p,g,v)=>(Ii=t.dynCall_iiiiiiii=z.ze)(n,i,o,u,c,p,g,v),Bt=t.dynCall_viiiiiii=(n,i,o,u,c,p,g,v)=>(Bt=t.dynCall_viiiiiii=z.Ae)(n,i,o,u,c,p,g,v),xt=t.dynCall_iiiiiiiij=(n,i,o,u,c,p,g,v,w,$)=>(xt=t.dynCall_iiiiiiiij=z.Be)(n,i,o,u,c,p,g,v,w,$),yn=t.dynCall_viiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I)=>(yn=t.dynCall_viiiiiiiiiiiii=z.Ce)(n,i,o,u,c,p,g,v,w,$,x,P,R,I),lr=t.dynCall_iiiiiiiii=(n,i,o,u,c,p,g,v,w)=>(lr=t.dynCall_iiiiiiiii=z.De)(n,i,o,u,c,p,g,v,w),bn=t.dynCall_iiiiijiiiii=(n,i,o,u,c,p,g,v,w,$,x,P)=>(bn=t.dynCall_iiiiijiiiii=z.Ee)(n,i,o,u,c,p,g,v,w,$,x,P),vn=t.dynCall_vijjjiiij=(n,i,o,u,c,p,g,v,w,$,x,P,R)=>(vn=t.dynCall_vijjjiiij=z.Fe)(n,i,o,u,c,p,g,v,w,$,x,P,R),Ai=t.dynCall_fi=(n,i)=>(Ai=t.dynCall_fi=z.Ge)(n,i),Rr=t.dynCall_fii=(n,i,o)=>(Rr=t.dynCall_fii=z.He)(n,i,o),Ti=t.dynCall_di=(n,i)=>(Ti=t.dynCall_di=z.Ie)(n,i),Ei=t.dynCall_dii=(n,i,o)=>(Ei=t.dynCall_dii=z.Je)(n,i,o),Pi=t.dynCall_vijj=(n,i,o,u,c,p)=>(Pi=t.dynCall_vijj=z.Ke)(n,i,o,u,c,p),ki=t.dynCall_iiiiiiiiii=(n,i,o,u,c,p,g,v,w,$)=>(ki=t.dynCall_iiiiiiiiii=z.Le)(n,i,o,u,c,p,g,v,w,$),Oi=t.dynCall_viijiii=(n,i,o,u,c,p,g,v)=>(Oi=t.dynCall_viijiii=z.Me)(n,i,o,u,c,p,g,v),wn=t.dynCall_viid=(n,i,o,u)=>(wn=t.dynCall_viid=z.Ne)(n,i,o,u),dr=t.dynCall_viffiii=(n,i,o,u,c,p,g)=>(dr=t.dynCall_viffiii=z.Oe)(n,i,o,u,c,p,g),Ri=t.dynCall_viifiii=(n,i,o,u,c,p,g)=>(Ri=t.dynCall_viifiii=z.Pe)(n,i,o,u,c,p,g),Br=t.dynCall_viiiiidiidi=(n,i,o,u,c,p,g,v,w,$,x)=>(Br=t.dynCall_viiiiidiidi=z.Qe)(n,i,o,u,c,p,g,v,w,$,x),_n=t.dynCall_viiiiiiiiidi=(n,i,o,u,c,p,g,v,w,$,x,P)=>(_n=t.dynCall_viiiiiiiiidi=z.Re)(n,i,o,u,c,p,g,v,w,$,x,P),Bi=t.dynCall_jiii=(n,i,o,u)=>(Bi=t.dynCall_jiii=z.Se)(n,i,o,u),Di=t.dynCall_vjiiiiii=(n,i,o,u,c,p,g,v,w)=>(Di=t.dynCall_vjiiiiii=z.Te)(n,i,o,u,c,p,g,v,w),$n=t.dynCall_viiid=(n,i,o,u,c)=>($n=t.dynCall_viiid=z.Ue)(n,i,o,u,c),Mi=t.dynCall_viiiiiiiiiji=(n,i,o,u,c,p,g,v,w,$,x,P,R)=>(Mi=t.dynCall_viiiiiiiiiji=z.Ve)(n,i,o,u,c,p,g,v,w,$,x,P,R),Kt=t.dynCall_viji=(n,i,o,u,c)=>(Kt=t.dynCall_viji=z.We)(n,i,o,u,c),Cn=t.dynCall_vijjjjjjjjjjjjji=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot,ct,bt)=>(Cn=t.dynCall_vijjjjjjjjjjjjji=z.Xe)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot,ct,bt),Sn=t.dynCall_viiiji=(n,i,o,u,c,p,g)=>(Sn=t.dynCall_viiiji=z.Ye)(n,i,o,u,c,p,g),xn=t.dynCall_vijjjiiji=(n,i,o,u,c,p,g,v,w,$,x,P,R)=>(xn=t.dynCall_vijjjiiji=z.Ze)(n,i,o,u,c,p,g,v,w,$,x,P,R),In=t.dynCall_iiiji=(n,i,o,u,c,p)=>(In=t.dynCall_iiiji=z._e)(n,i,o,u,c,p),An=t.dynCall_iiijiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)=>(An=t.dynCall_iiijiiiiiiiiii=z.$e)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U),Dr=t.dynCall_vj=(n,i,o)=>(Dr=t.dynCall_vj=z.af)(n,i,o),Tn=t.dynCall_jjj=(n,i,o,u,c)=>(Tn=t.dynCall_jjj=z.bf)(n,i,o,u,c),Mr=t.dynCall_iiijiiiiii=(n,i,o,u,c,p,g,v,w,$,x)=>(Mr=t.dynCall_iiijiiiiii=z.cf)(n,i,o,u,c,p,g,v,w,$,x),En=t.dynCall_vfiii=(n,i,o,u,c)=>(En=t.dynCall_vfiii=z.df)(n,i,o,u,c),zr=t.dynCall_viiiiff=(n,i,o,u,c,p,g)=>(zr=t.dynCall_viiiiff=z.ef)(n,i,o,u,c,p,g),Pn=t.dynCall_viiiiiff=(n,i,o,u,c,p,g,v)=>(Pn=t.dynCall_viiiiiff=z.ff)(n,i,o,u,c,p,g,v),kn=t.dynCall_viiff=(n,i,o,u,c)=>(kn=t.dynCall_viiff=z.gf)(n,i,o,u,c),On=t.dynCall_viiiiiiiiifiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I)=>(On=t.dynCall_viiiiiiiiifiii=z.hf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I),Rn=t.dynCall_viiiiiiiijj=(n,i,o,u,c,p,g,v,w,$,x,P,R)=>(Rn=t.dynCall_viiiiiiiijj=z.jf)(n,i,o,u,c,p,g,v,w,$,x,P,R),Bn=t.dynCall_iiiiiiiiiiiiiifii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee)=>(Bn=t.dynCall_iiiiiiiiiiiiiifii=z.kf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee),zi=t.dynCall_viiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R)=>(zi=t.dynCall_viiiiiiiiiiii=z.lf)(n,i,o,u,c,p,g,v,w,$,x,P,R),Dn=t.dynCall_iiiiiiiiiiiiiiiiifii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye)=>(Dn=t.dynCall_iiiiiiiiiiiiiiiiifii=z.mf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye),Mn=t.dynCall_vijjiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P)=>(Mn=t.dynCall_vijjiiiiii=z.nf)(n,i,o,u,c,p,g,v,w,$,x,P),zn=t.dynCall_iiiijjj=(n,i,o,u,c,p,g,v,w,$)=>(zn=t.dynCall_iiiijjj=z.of)(n,i,o,u,c,p,g,v,w,$),Ui=t.dynCall_viiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x)=>(Ui=t.dynCall_viiiiiiiiii=z.pf)(n,i,o,u,c,p,g,v,w,$,x),ji=t.dynCall_iiijjj=(n,i,o,u,c,p,g,v,w)=>(ji=t.dynCall_iiijjj=z.qf)(n,i,o,u,c,p,g,v,w),Un=t.dynCall_fffffff=(n,i,o,u,c,p,g)=>(Un=t.dynCall_fffffff=z.rf)(n,i,o,u,c,p,g),jn=t.dynCall_viiiij=(n,i,o,u,c,p,g)=>(jn=t.dynCall_viiiij=z.sf)(n,i,o,u,c,p,g),cr=t.dynCall_viiiiiijiifiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)=>(cr=t.dynCall_viiiiiijiifiii=z.tf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U),Vi=t.dynCall_vjjjjjjffjifiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze)=>(Vi=t.dynCall_vjjjjjjffjifiiiiii=z.uf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze),Ni=t.dynCall_viiiiiiffjifiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae)=>(Ni=t.dynCall_viiiiiiffjifiiiii=z.vf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae),me=t.dynCall_viiiiiiffjfiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee)=>(me=t.dynCall_viiiiiiffjfiiiii=z.wf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee),Vn=t.dynCall_viiiiiiffjiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)=>(Vn=t.dynCall_viiiiiiffjiiiii=z.xf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G),fr=t.dynCall_vjjjjjjjjfffiiifiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot,ct,bt)=>(fr=t.dynCall_vjjjjjjjjfffiiifiiiii=z.yf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot,ct,bt),er=t.dynCall_vjjjjjjfffifijiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe)=>(er=t.dynCall_vjjjjjjfffifijiiiii=z.zf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe),It=t.dynCall_vjjjjjjfffifiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke)=>(It=t.dynCall_vjjjjjjfffifiiiiii=z.Af)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke),Nn=t.dynCall_vjjjjjjjjfffjifiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot,ct,bt,hr)=>(Nn=t.dynCall_vjjjjjjjjfffjifiiiiii=z.Bf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot,ct,bt,hr),Wn=t.dynCall_vijjfffiii=(n,i,o,u,c,p,g,v,w,$,x,P)=>(Wn=t.dynCall_vijjfffiii=z.Cf)(n,i,o,u,c,p,g,v,w,$,x,P),Gn=t.dynCall_vijiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I)=>(Gn=t.dynCall_vijiiiiiiiiii=z.Df)(n,i,o,u,c,p,g,v,w,$,x,P,R,I),Ur=t.dynCall_viiiiiiijiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I)=>(Ur=t.dynCall_viiiiiiijiiii=z.Ef)(n,i,o,u,c,p,g,v,w,$,x,P,R,I),jr=t.dynCall_vijjjjjjifiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe)=>(jr=t.dynCall_vijjjjjjifiiiii=z.Ff)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe),Hn=t.dynCall_viifi=(n,i,o,u,c)=>(Hn=t.dynCall_viifi=z.Gf)(n,i,o,u,c),Ln=t.dynCall_vjjjjjiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)=>(Ln=t.dynCall_vjjjjjiiii=z.Hf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U),Vr=t.dynCall_vjjjjfiii=(n,i,o,u,c,p,g,v,w,$,x,P,R)=>(Vr=t.dynCall_vjjjjfiii=z.If)(n,i,o,u,c,p,g,v,w,$,x,P,R),pr=t.dynCall_viiiiiijiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)=>(pr=t.dynCall_viiiiiijiiiiii=z.Jf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U),Nr=t.dynCall_vijjii=(n,i,o,u,c,p,g,v)=>(Nr=t.dynCall_vijjii=z.Kf)(n,i,o,u,c,p,g,v),Fn=t.dynCall_viiiiijjiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)=>(Fn=t.dynCall_viiiiijjiiiii=z.Lf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U),qn=t.dynCall_iiiiiji=(n,i,o,u,c,p,g,v)=>(qn=t.dynCall_iiiiiji=z.Mf)(n,i,o,u,c,p,g,v),Kn=t.dynCall_iiiiji=(n,i,o,u,c,p,g)=>(Kn=t.dynCall_iiiiji=z.Nf)(n,i,o,u,c,p,g),Jn=t.dynCall_viiiiijiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I)=>(Jn=t.dynCall_viiiiijiiiiii=z.Of)(n,i,o,u,c,p,g,v,w,$,x,P,R,I),Yn=t.dynCall_viiijiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P)=>(Yn=t.dynCall_viiijiiiiii=z.Pf)(n,i,o,u,c,p,g,v,w,$,x,P),Wi=t.dynCall_viijj=(n,i,o,u,c,p,g)=>(Wi=t.dynCall_viijj=z.Qf)(n,i,o,u,c,p,g),mr=t.dynCall_viiiijii=(n,i,o,u,c,p,g,v,w)=>(mr=t.dynCall_viiiijii=z.Rf)(n,i,o,u,c,p,g,v,w),Zn=t.dynCall_viijjiii=(n,i,o,u,c,p,g,v,w,$)=>(Zn=t.dynCall_viijjiii=z.Sf)(n,i,o,u,c,p,g,v,w,$),a=t.dynCall_ijii=(n,i,o,u,c)=>(a=t.dynCall_ijii=z.Tf)(n,i,o,u,c),h=t.dynCall_viiiiijjji=(n,i,o,u,c,p,g,v,w,$,x,P,R)=>(h=t.dynCall_viiiiijjji=z.Uf)(n,i,o,u,c,p,g,v,w,$,x,P,R),_=t.dynCall_vijjjjiij=(n,i,o,u,c,p,g,v,w,$,x,P,R,I)=>(_=t.dynCall_vijjjjiij=z.Vf)(n,i,o,u,c,p,g,v,w,$,x,P,R,I),A=t.dynCall_viiiiijij=(n,i,o,u,c,p,g,v,w,$,x)=>(A=t.dynCall_viiiiijij=z.Wf)(n,i,o,u,c,p,g,v,w,$,x),D=t.dynCall_viiiiiijij=(n,i,o,u,c,p,g,v,w,$,x,P)=>(D=t.dynCall_viiiiiijij=z.Xf)(n,i,o,u,c,p,g,v,w,$,x,P),N=t.dynCall_vijiii=(n,i,o,u,c,p,g)=>(N=t.dynCall_vijiii=z.Yf)(n,i,o,u,c,p,g),Y=t.dynCall_viiifii=(n,i,o,u,c,p,g)=>(Y=t.dynCall_viiifii=z.Zf)(n,i,o,u,c,p,g),re=t.dynCall_viiiiiiiiifi=(n,i,o,u,c,p,g,v,w,$,x,P)=>(re=t.dynCall_viiiiiiiiifi=z._f)(n,i,o,u,c,p,g,v,w,$,x,P),ce=t.dynCall_iiijiiii=(n,i,o,u,c,p,g,v,w)=>(ce=t.dynCall_iiijiiii=z.$f)(n,i,o,u,c,p,g,v,w),le=t.dynCall_viiiiiijjiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)=>(le=t.dynCall_viiiiiijjiiiii=z.ag)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G),_e=t.dynCall_viiiiiiijiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)=>(_e=t.dynCall_viiiiiiijiiiiii=z.bg)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G),Pe=t.dynCall_vif=(n,i,o)=>(Pe=t.dynCall_vif=z.cg)(n,i,o),Ne=t.dynCall_viif=(n,i,o,u)=>(Ne=t.dynCall_viif=z.dg)(n,i,o,u),K=t.dynCall_fiii=(n,i,o,u)=>(K=t.dynCall_fiii=z.eg)(n,i,o,u),$e=t.dynCall_diii=(n,i,o,u)=>($e=t.dynCall_diii=z.fg)(n,i,o,u),Ue=t.dynCall_viiiiiifii=(n,i,o,u,c,p,g,v,w,$)=>(Ue=t.dynCall_viiiiiifii=z.gg)(n,i,o,u,c,p,g,v,w,$),jt=t.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot)=>(jt=t.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=z.hg)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot),Xn=t.dynCall_viijji=(n,i,o,u,c,p,g,v)=>(Xn=t.dynCall_viijji=z.ig)(n,i,o,u,c,p,g,v),pa=t.dynCall_iiiiiiiiiiiji=(n,i,o,u,c,p,g,v,w,$,x,P,R,I)=>(pa=t.dynCall_iiiiiiiiiiiji=z.jg)(n,i,o,u,c,p,g,v,w,$,x,P,R,I),ma=t.dynCall_viifiifijjjii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)=>(ma=t.dynCall_viifiifijjjii=z.kg)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G),ha=t.dynCall_viiiiiiiiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe)=>(ha=t.dynCall_viiiiiiiiiiiiiiiiiiii=z.lg)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe),ga=t.dynCall_viiiiifiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R)=>(ga=t.dynCall_viiiiifiiiiii=z.mg)(n,i,o,u,c,p,g,v,w,$,x,P,R),ya=t.dynCall_vijiiiiiiijjii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee)=>(ya=t.dynCall_vijiiiiiiijjii=z.ng)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee),ba=t.dynCall_viiiiiiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe)=>(ba=t.dynCall_viiiiiiiiiiiiiiiiii=z.og)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe),va=t.dynCall_viiiiiiiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye)=>(va=t.dynCall_viiiiiiiiiiiiiiiiiii=z.pg)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye),wa=t.dynCall_viiiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)=>(wa=t.dynCall_viiiiiiiiiiiiiii=z.qg)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G),_a=t.dynCall_viiiiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee)=>(_a=t.dynCall_viiiiiiiiiiiiiiii=z.rg)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee),$a=t.dynCall_viiiijjj=(n,i,o,u,c,p,g,v,w,$,x)=>($a=t.dynCall_viiiijjj=z.sg)(n,i,o,u,c,p,g,v,w,$,x),Ca=t.dynCall_iiiiid=(n,i,o,u,c,p)=>(Ca=t.dynCall_iiiiid=z.tg)(n,i,o,u,c,p),Sa=t.dynCall_viiiiiiijjj=(n,i,o,u,c,p,g,v,w,$,x,P,R,I)=>(Sa=t.dynCall_viiiiiiijjj=z.ug)(n,i,o,u,c,p,g,v,w,$,x,P,R,I),xa=t.dynCall_iiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x)=>(xa=t.dynCall_iiiiiiiiiii=z.vg)(n,i,o,u,c,p,g,v,w,$,x),Ia=t.dynCall_iiiiiiiiiiiiiiiiiifi=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye)=>(Ia=t.dynCall_iiiiiiiiiiiiiiiiiifi=z.wg)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye),Aa=t.dynCall_viiif=(n,i,o,u,c)=>(Aa=t.dynCall_viiif=z.xg)(n,i,o,u,c),Ta=t.dynCall_viiijiiiii=(n,i,o,u,c,p,g,v,w,$,x)=>(Ta=t.dynCall_viiijiiiii=z.yg)(n,i,o,u,c,p,g,v,w,$,x),Ea=t.dynCall_viiij=(n,i,o,u,c,p)=>(Ea=t.dynCall_viiij=z.zg)(n,i,o,u,c,p),Pa=t.dynCall_iijjj=(n,i,o,u,c,p,g,v)=>(Pa=t.dynCall_iijjj=z.Ag)(n,i,o,u,c,p,g,v),ka=t.dynCall_viiiiji=(n,i,o,u,c,p,g,v)=>(ka=t.dynCall_viiiiji=z.Bg)(n,i,o,u,c,p,g,v),Oa=t.dynCall_iijjji=(n,i,o,u,c,p,g,v,w)=>(Oa=t.dynCall_iijjji=z.Cg)(n,i,o,u,c,p,g,v,w),Ra=t.dynCall_ijijji=(n,i,o,u,c,p,g,v,w)=>(Ra=t.dynCall_ijijji=z.Dg)(n,i,o,u,c,p,g,v,w),Ba=t.dynCall_viiijjiii=(n,i,o,u,c,p,g,v,w,$,x)=>(Ba=t.dynCall_viiijjiii=z.Eg)(n,i,o,u,c,p,g,v,w,$,x),Da=t.dynCall_iiiiijji=(n,i,o,u,c,p,g,v,w,$)=>(Da=t.dynCall_iiiiijji=z.Fg)(n,i,o,u,c,p,g,v,w,$),Ma=t.dynCall_iiiifi=(n,i,o,u,c,p)=>(Ma=t.dynCall_iiiifi=z.Gg)(n,i,o,u,c,p),za=t.dynCall_iiijii=(n,i,o,u,c,p,g)=>(za=t.dynCall_iiijii=z.Hg)(n,i,o,u,c,p,g),Ua=t.dynCall_iiiiiiiiijii=(n,i,o,u,c,p,g,v,w,$,x,P,R)=>(Ua=t.dynCall_iiiiiiiiijii=z.Ig)(n,i,o,u,c,p,g,v,w,$,x,P,R),ja=t.dynCall_iiiijjii=(n,i,o,u,c,p,g,v,w,$)=>(ja=t.dynCall_iiiijjii=z.Jg)(n,i,o,u,c,p,g,v,w,$),Va=t.dynCall_iiiiiijjjii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I)=>(Va=t.dynCall_iiiiiijjjii=z.Kg)(n,i,o,u,c,p,g,v,w,$,x,P,R,I),Na=t.dynCall_iiijiii=(n,i,o,u,c,p,g,v)=>(Na=t.dynCall_iiijiii=z.Lg)(n,i,o,u,c,p,g,v),Wa=t.dynCall_iiiiiiiijjjfi=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)=>(Wa=t.dynCall_iiiiiiiijjjfi=z.Mg)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G),Ga=t.dynCall_iijiiii=(n,i,o,u,c,p,g,v)=>(Ga=t.dynCall_iijiiii=z.Ng)(n,i,o,u,c,p,g,v),Ha=t.dynCall_iijjjii=(n,i,o,u,c,p,g,v,w,$)=>(Ha=t.dynCall_iijjjii=z.Og)(n,i,o,u,c,p,g,v,w,$),La=t.dynCall_jij=(n,i,o,u)=>(La=t.dynCall_jij=z.Pg)(n,i,o,u),Fa=t.dynCall_iiji=(n,i,o,u,c)=>(Fa=t.dynCall_iiji=z.Qg)(n,i,o,u,c),qa=t.dynCall_iiif=(n,i,o,u)=>(qa=t.dynCall_iiif=z.Rg)(n,i,o,u),Ka=t.dynCall_vidi=(n,i,o,u)=>(Ka=t.dynCall_vidi=z.Sg)(n,i,o,u),Ja=t.dynCall_vjiii=(n,i,o,u,c,p)=>(Ja=t.dynCall_vjiii=z.Tg)(n,i,o,u,c,p),Ya=t.dynCall_iiiij=(n,i,o,u,c,p)=>(Ya=t.dynCall_iiiij=z.Ug)(n,i,o,u,c,p),Za=t.dynCall_viiijii=(n,i,o,u,c,p,g,v)=>(Za=t.dynCall_viiijii=z.Vg)(n,i,o,u,c,p,g,v),Xa=t.dynCall_viijiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I)=>(Xa=t.dynCall_viijiiiiiiiii=z.Wg)(n,i,o,u,c,p,g,v,w,$,x,P,R,I),Qa=t.dynCall_fiiii=(n,i,o,u,c)=>(Qa=t.dynCall_fiiii=z.Xg)(n,i,o,u,c),es=t.dynCall_jfi=(n,i,o)=>(es=t.dynCall_jfi=z.Yg)(n,i,o),ts=t.dynCall_viiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)=>(ts=t.dynCall_viiiiiiiiiiiiii=z.Zg)(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U),rs=t.dynCall_jiij=(n,i,o,u,c)=>(rs=t.dynCall_jiij=z._g)(n,i,o,u,c),ns=n=>(ns=z.$g)(n),is=()=>(is=z.ah)(),os=n=>(os=z.bh)(n),as=()=>(as=z.ch)();t.___start_em_js=1380903,t.___stop_em_js=1381064;function Ec(n,i,o,u){var c=L();try{return un(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Pc(n,i,o){var u=L();try{return ln(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function kc(n,i,o){var u=L();try{sn(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function Oc(n,i){var o=L();try{return dn(n,i)}catch(u){if(F(o),u!==u+0)throw u;H(1,0)}}function Rc(n,i){var o=L();try{Ar(n,i)}catch(u){if(F(o),u!==u+0)throw u;H(1,0)}}function Bc(n){var i=L();try{Tr(n)}catch(o){if(F(i),o!==o+0)throw o;H(1,0)}}function Dc(n,i,o,u,c,p,g){var v=L();try{return wt(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Mc(n,i,o,u,c,p){var g=L();try{return gi(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function zc(n,i,o,u,c){var p=L();try{return yi(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Uc(n,i,o,u){var c=L();try{kt(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function jc(n,i,o,u,c){var p=L();try{fn(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Vc(n,i,o,u,c,p){var g=L();try{cn(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Nc(n,i,o,u,c,p,g){var v=L();try{yt(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Wc(n,i,o,u,c,p,g,v,w,$,x,P){var R=L();try{dt(n,i,o,u,c,p,g,v,w,$,x,P)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function Gc(n,i,o){var u=L();try{return bi(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function Hc(n,i,o){var u=L();try{return vi(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function Lc(n,i,o,u,c,p,g,v,w){var $=L();try{_i(n,i,o,u,c,p,g,v,w)}catch(x){if(F($),x!==x+0)throw x;H(1,0)}}function Fc(n){var i=L();try{return wi(n)}catch(o){if(F(i),o!==o+0)throw o;H(1,0)}}function qc(n,i,o,u,c,p,g,v){var w=L();try{return Ii(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Kc(n,i,o,u,c,p,g,v){var w=L();try{Bt(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Jc(n,i,o,u,c,p,g,v,w,$,x,P){var R=L();try{return xi(n,i,o,u,c,p,g,v,w,$,x,P)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function Yc(n,i,o,u,c,p,g,v,w,$,x,P,R,I){var U=L();try{yn(n,i,o,u,c,p,g,v,w,$,x,P,R,I)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function Zc(n,i,o,u,c,p,g,v,w,$){var x=L();try{hn(n,i,o,u,c,p,g,v,w,$)}catch(P){if(F(x),P!==P+0)throw P;H(1,0)}}function Xc(n,i,o,u,c,p,g,v,w){var $=L();try{return lr(n,i,o,u,c,p,g,v,w)}catch(x){if(F($),x!==x+0)throw x;H(1,0)}}function Qc(n,i){var o=L();try{return Ai(n,i)}catch(u){if(F(o),u!==u+0)throw u;H(1,0)}}function ef(n,i){var o=L();try{return Ti(n,i)}catch(u){if(F(o),u!==u+0)throw u;H(1,0)}}function tf(n,i,o,u,c,p,g,v,w,$){var x=L();try{return ki(n,i,o,u,c,p,g,v,w,$)}catch(P){if(F(x),P!==P+0)throw P;H(1,0)}}function rf(n,i,o,u){var c=L();try{wn(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function nf(n,i,o,u,c,p,g){var v=L();try{dr(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function of(n,i,o,u,c,p,g){var v=L();try{Ri(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function af(n,i,o,u,c,p,g,v,w,$,x){var P=L();try{Br(n,i,o,u,c,p,g,v,w,$,x)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function sf(n,i,o,u,c){var p=L();try{$n(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function uf(n,i,o,u,c,p,g,v,w,$,x,P,R,I){var U=L();try{On(n,i,o,u,c,p,g,v,w,$,x,P,R,I)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function lf(n,i,o,u,c){var p=L();try{En(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function df(n,i,o,u,c,p,g){var v=L();try{zr(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function cf(n,i,o,u,c){var p=L();try{kn(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function ff(n,i,o,u,c,p,g,v){var w=L();try{Pn(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function pf(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee){var ae=L();try{return Bn(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee)}catch(fe){if(F(ae),fe!==fe+0)throw fe;H(1,0)}}function mf(n,i,o,u,c,p,g,v,w,$,x,P,R){var I=L();try{zi(n,i,o,u,c,p,g,v,w,$,x,P,R)}catch(U){if(F(I),U!==U+0)throw U;H(1,0)}}function hf(n,i,o,u,c){var p=L();try{return Qa(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function gf(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye){var xe=L();try{return Dn(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye)}catch(Ae){if(F(xe),Ae!==Ae+0)throw Ae;H(1,0)}}function yf(n,i,o,u,c,p,g,v,w,$,x){var P=L();try{Ui(n,i,o,u,c,p,g,v,w,$,x)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function bf(n,i,o,u,c,p,g){var v=L();try{return Un(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function vf(n,i,o,u,c){var p=L();try{Hn(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function wf(n,i,o,u,c,p,g){var v=L();try{Y(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function _f(n,i,o,u,c,p,g,v,w,$,x,P){var R=L();try{re(n,i,o,u,c,p,g,v,w,$,x,P)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function $f(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U){var G=L();try{ts(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Cf(n,i,o){var u=L();try{Pe(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function Sf(n,i,o,u){var c=L();try{return K(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function xf(n,i,o,u){var c=L();try{return $e(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function If(n,i,o,u,c,p,g,v,w,$){var x=L();try{Ue(n,i,o,u,c,p,g,v,w,$)}catch(P){if(F(x),P!==P+0)throw P;H(1,0)}}function Af(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe){var Ae=L();try{ha(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe)}catch(je){if(F(Ae),je!==je+0)throw je;H(1,0)}}function Tf(n,i,o,u,c,p,g,v,w,$,x,P,R){var I=L();try{ga(n,i,o,u,c,p,g,v,w,$,x,P,R)}catch(U){if(F(I),U!==U+0)throw U;H(1,0)}}function Ef(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye){var xe=L();try{va(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye)}catch(Ae){if(F(xe),Ae!==Ae+0)throw Ae;H(1,0)}}function Pf(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee){var ae=L();try{_a(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee)}catch(fe){if(F(ae),fe!==fe+0)throw fe;H(1,0)}}function kf(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe){var ye=L();try{ba(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe)}catch(xe){if(F(ye),xe!==xe+0)throw xe;H(1,0)}}function Of(n,i,o,u,c,p,g,v,w,$,x){var P=L();try{return xa(n,i,o,u,c,p,g,v,w,$,x)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function Rf(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye){var xe=L();try{return Ia(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye)}catch(Ae){if(F(xe),Ae!==Ae+0)throw Ae;H(1,0)}}function Bf(n,i,o,u,c){var p=L();try{Aa(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Df(n,i,o,u,c,p,g,v,w,$,x,P){var R=L();try{_n(n,i,o,u,c,p,g,v,w,$,x,P)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function Mf(n,i,o,u){var c=L();try{Ne(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function zf(n,i,o,u,c,p){var g=L();try{return Ma(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Uf(n,i,o,u){var c=L();try{Ka(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function jf(n,i,o,u){var c=L();try{return qa(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Vf(n,i,o,u,c,p){var g=L();try{return Ca(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Nf(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G){var ee=L();try{wa(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)}catch(ae){if(F(ee),ae!==ae+0)throw ae;H(1,0)}}function Wf(n,i,o){var u=L();try{return Rr(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function Gf(n,i,o){var u=L();try{return Ei(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function Hf(n,i,o,u,c){var p=L();try{return Rt(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Lf(n,i,o,u){var c=L();try{return pn(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Ff(n,i,o){var u=L();try{return mn(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function qf(n,i,o,u){var c=L();try{Or(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Kf(n,i,o,u,c,p){var g=L();try{Er(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Jf(n,i,o,u,c,p,g,v){var w=L();try{$i(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Yf(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U){var G=L();try{gn(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Zf(n,i,o,u,c,p,g,v,w,$,x,P,R){var I=L();try{ur(n,i,o,u,c,p,g,v,w,$,x,P,R)}catch(U){if(F(I),U!==U+0)throw U;H(1,0)}}function Xf(n,i,o,u,c,p,g,v,w,$,x,P){var R=L();try{return bn(n,i,o,u,c,p,g,v,w,$,x,P)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function Qf(n,i,o,u,c,p,g,v,w,$,x,P,R){var I=L();try{vn(n,i,o,u,c,p,g,v,w,$,x,P,R)}catch(U){if(F(I),U!==U+0)throw U;H(1,0)}}function ep(n,i,o,u,c){var p=L();try{Si(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function tp(n,i){var o=L();try{return Ci(n,i)}catch(u){if(F(o),u!==u+0)throw u;H(1,0)}}function rp(n,i,o,u,c,p){var g=L();try{Pi(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function np(n,i,o,u,c,p,g,v){var w=L();try{Za(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function ip(n,i,o,u,c,p,g){var v=L();try{Wi(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function op(n,i,o,u,c,p,g,v){var w=L();try{Oi(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function ap(n,i,o,u,c,p,g,v,w,$){var x=L();try{return xt(n,i,o,u,c,p,g,v,w,$)}catch(P){if(F(x),P!==P+0)throw P;H(1,0)}}function sp(n,i,o,u,c,p,g,v,w,$,x,P){var R=L();try{_t(n,i,o,u,c,p,g,v,w,$,x,P)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function up(n,i,o,u){var c=L();try{return Bi(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function lp(n,i,o,u,c,p,g,v,w){var $=L();try{Di(n,i,o,u,c,p,g,v,w)}catch(x){if(F($),x!==x+0)throw x;H(1,0)}}function dp(n,i,o,u,c){var p=L();try{Kt(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function cp(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot,ct,bt){var hr=L();try{Cn(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot,ct,bt)}catch(Jt){if(F(hr),Jt!==Jt+0)throw Jt;H(1,0)}}function fp(n,i,o,u,c,p,g){var v=L();try{Sn(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function pp(n,i,o,u,c,p,g,v,w,$,x,P,R){var I=L();try{xn(n,i,o,u,c,p,g,v,w,$,x,P,R)}catch(U){if(F(I),U!==U+0)throw U;H(1,0)}}function mp(n,i,o,u,c,p){var g=L();try{return In(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function hp(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U){var G=L();try{return An(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function gp(n,i,o){var u=L();try{Dr(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function yp(n,i,o,u,c){var p=L();try{return Tn(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function bp(n,i,o,u,c,p,g,v,w,$,x){var P=L();try{return Mr(n,i,o,u,c,p,g,v,w,$,x)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function vp(n,i,o,u,c,p,g,v,w,$,x,P,R){var I=L();try{Rn(n,i,o,u,c,p,g,v,w,$,x,P,R)}catch(U){if(F(I),U!==U+0)throw U;H(1,0)}}function wp(n,i,o){var u=L();try{return Pr(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function _p(n,i,o,u,c,p,g,v,w,$,x,P){var R=L();try{Mn(n,i,o,u,c,p,g,v,w,$,x,P)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function $p(n,i,o,u,c,p,g,v,w,$){var x=L();try{return zn(n,i,o,u,c,p,g,v,w,$)}catch(P){if(F(x),P!==P+0)throw P;H(1,0)}}function Cp(n,i,o,u,c,p,g,v,w){var $=L();try{return ji(n,i,o,u,c,p,g,v,w)}catch(x){if(F($),x!==x+0)throw x;H(1,0)}}function Sp(n,i,o,u,c,p,g){var v=L();try{jn(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function xp(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U){var G=L();try{cr(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Ip(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze){var Xe=L();try{Vi(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze)}catch(ot){if(F(Xe),ot!==ot+0)throw ot;H(1,0)}}function Ap(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae){var fe=L();try{Ni(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae)}catch(ye){if(F(fe),ye!==ye+0)throw ye;H(1,0)}}function Tp(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee){var ae=L();try{me(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee)}catch(fe){if(F(ae),fe!==fe+0)throw fe;H(1,0)}}function Ep(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G){var ee=L();try{Vn(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)}catch(ae){if(F(ee),ae!==ae+0)throw ae;H(1,0)}}function Pp(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot,ct,bt){var hr=L();try{fr(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot,ct,bt)}catch(Jt){if(F(hr),Jt!==Jt+0)throw Jt;H(1,0)}}function kp(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe){var ot=L();try{er(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe)}catch(ct){if(F(ot),ct!==ct+0)throw ct;H(1,0)}}function Op(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke){var Ze=L();try{It(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke)}catch(Xe){if(F(Ze),Xe!==Xe+0)throw Xe;H(1,0)}}function Rp(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot,ct,bt,hr){var Jt=L();try{Nn(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot,ct,bt,hr)}catch(Co){if(F(Jt),Co!==Co+0)throw Co;H(1,0)}}function Bp(n,i,o,u,c,p,g,v,w,$,x,P){var R=L();try{Wn(n,i,o,u,c,p,g,v,w,$,x,P)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function Dp(n,i,o,u,c,p,g,v,w,$,x,P,R,I){var U=L();try{Gn(n,i,o,u,c,p,g,v,w,$,x,P,R,I)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function Mp(n,i,o,u,c,p,g,v,w,$,x,P,R,I){var U=L();try{Ur(n,i,o,u,c,p,g,v,w,$,x,P,R,I)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function zp(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe){var Ae=L();try{jr(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe)}catch(je){if(F(Ae),je!==je+0)throw je;H(1,0)}}function Up(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U){var G=L();try{Ln(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function jp(n,i,o,u,c,p,g,v,w,$,x,P,R){var I=L();try{Vr(n,i,o,u,c,p,g,v,w,$,x,P,R)}catch(U){if(F(I),U!==U+0)throw U;H(1,0)}}function Vp(n,i,o){var u=L();try{return es(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function Np(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U){var G=L();try{pr(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Wp(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U){var G=L();try{Fn(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Gp(n,i,o,u,c,p,g,v){var w=L();try{return qn(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Hp(n,i,o,u,c,p,g){var v=L();try{return Kn(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Lp(n,i,o,u,c,p,g,v,w,$,x,P,R,I){var U=L();try{Jn(n,i,o,u,c,p,g,v,w,$,x,P,R,I)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function Fp(n,i,o,u,c,p,g,v){var w=L();try{Nr(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function qp(n,i,o,u,c,p,g,v,w,$,x,P){var R=L();try{Yn(n,i,o,u,c,p,g,v,w,$,x,P)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function Kp(n,i,o,u,c,p,g,v,w){var $=L();try{mr(n,i,o,u,c,p,g,v,w)}catch(x){if(F($),x!==x+0)throw x;H(1,0)}}function Jp(n,i,o,u,c,p,g,v,w,$){var x=L();try{Zn(n,i,o,u,c,p,g,v,w,$)}catch(P){if(F(x),P!==P+0)throw P;H(1,0)}}function Yp(n,i,o,u,c){var p=L();try{return a(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Zp(n,i,o,u,c,p,g,v,w,$,x,P,R){var I=L();try{h(n,i,o,u,c,p,g,v,w,$,x,P,R)}catch(U){if(F(I),U!==U+0)throw U;H(1,0)}}function Xp(n,i,o,u,c,p,g,v,w,$,x,P,R,I){var U=L();try{_(n,i,o,u,c,p,g,v,w,$,x,P,R,I)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function Qp(n,i,o,u,c,p,g,v,w,$,x){var P=L();try{A(n,i,o,u,c,p,g,v,w,$,x)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function em(n,i,o,u,c,p,g,v,w,$,x,P){var R=L();try{D(n,i,o,u,c,p,g,v,w,$,x,P)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function tm(n,i,o,u,c,p,g){var v=L();try{N(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function rm(n,i,o,u,c,p,g,v,w){var $=L();try{return ce(n,i,o,u,c,p,g,v,w)}catch(x){if(F($),x!==x+0)throw x;H(1,0)}}function nm(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G){var ee=L();try{le(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)}catch(ae){if(F(ee),ae!==ae+0)throw ae;H(1,0)}}function im(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G){var ee=L();try{_e(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)}catch(ae){if(F(ee),ae!==ae+0)throw ae;H(1,0)}}function om(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot){var ct=L();try{jt(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee,ae,fe,ye,xe,Ae,je,Ke,Ze,Xe,ot)}catch(bt){if(F(ct),bt!==bt+0)throw bt;H(1,0)}}function am(n,i,o,u,c,p,g,v){var w=L();try{Xn(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function sm(n,i,o,u,c,p,g,v,w,$,x,P,R,I){var U=L();try{return pa(n,i,o,u,c,p,g,v,w,$,x,P,R,I)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function um(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G){var ee=L();try{ma(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)}catch(ae){if(F(ee),ae!==ae+0)throw ae;H(1,0)}}function lm(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee){var ae=L();try{ya(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G,ee)}catch(fe){if(F(ae),fe!==fe+0)throw fe;H(1,0)}}function dm(n,i,o,u,c,p,g,v,w,$,x){var P=L();try{$a(n,i,o,u,c,p,g,v,w,$,x)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function cm(n,i,o,u,c,p,g,v,w,$,x,P,R,I){var U=L();try{Sa(n,i,o,u,c,p,g,v,w,$,x,P,R,I)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function fm(n,i,o,u,c,p,g,v,w,$,x){var P=L();try{Ta(n,i,o,u,c,p,g,v,w,$,x)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function pm(n,i,o,u,c,p){var g=L();try{Ea(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function mm(n,i,o,u,c,p,g,v,w,$,x,P,R,I){var U=L();try{Xa(n,i,o,u,c,p,g,v,w,$,x,P,R,I)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function hm(n,i,o,u,c,p,g,v){var w=L();try{return Pa(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function gm(n,i,o,u,c){var p=L();try{return rs(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function ym(n,i,o,u,c,p,g,v){var w=L();try{ka(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function bm(n,i,o,u,c,p,g,v,w){var $=L();try{return Oa(n,i,o,u,c,p,g,v,w)}catch(x){if(F($),x!==x+0)throw x;H(1,0)}}function vm(n,i,o,u,c,p,g,v,w){var $=L();try{return Ra(n,i,o,u,c,p,g,v,w)}catch(x){if(F($),x!==x+0)throw x;H(1,0)}}function wm(n,i,o,u,c,p,g,v,w,$,x){var P=L();try{Ba(n,i,o,u,c,p,g,v,w,$,x)}catch(R){if(F(P),R!==R+0)throw R;H(1,0)}}function _m(n,i,o,u,c,p,g,v,w,$){var x=L();try{return Da(n,i,o,u,c,p,g,v,w,$)}catch(P){if(F(x),P!==P+0)throw P;H(1,0)}}function $m(n,i,o,u,c,p,g){var v=L();try{return za(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Cm(n,i,o,u,c,p,g,v,w,$,x,P,R){var I=L();try{return Ua(n,i,o,u,c,p,g,v,w,$,x,P,R)}catch(U){if(F(I),U!==U+0)throw U;H(1,0)}}function Sm(n,i,o,u,c,p,g,v,w,$){var x=L();try{return ja(n,i,o,u,c,p,g,v,w,$)}catch(P){if(F(x),P!==P+0)throw P;H(1,0)}}function xm(n,i,o,u,c,p,g,v,w,$,x,P,R,I){var U=L();try{return Va(n,i,o,u,c,p,g,v,w,$,x,P,R,I)}catch(G){if(F(U),G!==G+0)throw G;H(1,0)}}function Im(n,i,o,u,c,p,g,v){var w=L();try{return Na(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Am(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G){var ee=L();try{return Wa(n,i,o,u,c,p,g,v,w,$,x,P,R,I,U,G)}catch(ae){if(F(ee),ae!==ae+0)throw ae;H(1,0)}}function Tm(n,i,o,u,c,p,g,v){var w=L();try{return Ga(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Em(n,i,o,u,c,p,g,v,w,$){var x=L();try{return Ha(n,i,o,u,c,p,g,v,w,$)}catch(P){if(F(x),P!==P+0)throw P;H(1,0)}}function Pm(n,i,o,u){var c=L();try{return La(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function km(n,i,o,u,c){var p=L();try{return Fa(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Om(n,i,o,u,c,p){var g=L();try{Ja(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Rm(n,i,o,u,c,p,g,v,w,$,x,P,R){var I=L();try{Mi(n,i,o,u,c,p,g,v,w,$,x,P,R)}catch(U){if(F(I),U!==U+0)throw U;H(1,0)}}function Bm(n,i,o,u,c,p){var g=L();try{return Ya(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Dm(n){var i=L();try{return kr(n)}catch(o){if(F(i),o!==o+0)throw o;H(1,0)}}function Mm(n,i,o,u,c,p,g){var v=L();try{return sr(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function zm(){var n=z;n=Object.assign({},n);var i=u=>()=>u()>>>0,o=u=>c=>u(c)>>>0;return n.Gd=i(n.Gd),n.Hd=o(n.Hd),n.Md=i(n.Md),n.Od=o(n.Od),n}t.stackAlloc=tn,t.stackSave=L,t.stackRestore=F,t.UTF8ToString=it,t.stringToUTF8=(n,i,o)=>Qt(n,oe,i,o),t.lengthBytesUTF8=vr;var Gi;Se=function n(){Gi||ss(),Gi||(Se=n)};function ss(){if(!(0<Le)){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;){var n=t.preRun.shift();Ve.unshift(n)}for(;0<Ve.length;)Ve.shift()(t);if(!(0<Le||Gi||(Gi=!0,t.calledRun=!0,q))){for(;0<Te.length;)Te.shift()(t);for(s(t);0<pe.length;)pe.shift()(t)}}}return ss(),r.ready}})();typeof ds=="object"&&typeof Eo=="object"?Eo.exports=ls:typeof define=="function"&&define.amd&&define([],()=>ls)});var fs=Qn(()=>{});var ps=Qn(()=>{});var ms={};Hi(ms,{cpus:()=>Lm});var Lm,hs=ue(()=>{Lm=void 0});var bs=Qn((ys,Po)=>{"use strict";var gs=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(r={}){function t(){return pe.buffer!=ge.buffer&&pt(),ge}function s(){return pe.buffer!=ge.buffer&&pt(),ve}function l(){return pe.buffer!=ge.buffer&&pt(),ze}function f(){return pe.buffer!=ge.buffer&&pt(),rt}function d(){return pe.buffer!=ge.buffer&&pt(),ne}function y(){return pe.buffer!=ge.buffer&&pt(),he}function b(){return pe.buffer!=ge.buffer&&pt(),Ee}function C(){return pe.buffer!=ge.buffer&&pt(),lt}var m=r,S,T;m.ready=new Promise((a,h)=>{S=a,T=h}),m.mountExternalData=(a,h)=>{(m.Fb||(m.Fb=new Map)).set(a,h)},m.unmountExternalData=()=>{delete m.Fb};let O=()=>{let a=(_,A,D)=>(...N)=>{let Y=xt,re=A?.();N=_(...N);let ce=A?.();return re!==ce&&(_=ce,D(re),A=D=null),xt!=Y?Ei():N},h=_=>async(...A)=>{try{if(m.Eb)throw Error("Session already started");let D=m.Eb={kc:A[0],errors:[]},N=await _(...A);if(m.Eb!==D)throw Error("Session mismatch");m.Ob?.flush();let Y=D.errors;if(0<Y.length){let re=await Promise.all(Y);if(re=re.filter(ce=>ce),0<re.length)throw Error(re.join(`\n`))}return N}finally{m.Eb=null}};m._OrtCreateSession=a(m._OrtCreateSession,()=>m._OrtCreateSession,_=>m._OrtCreateSession=_),m._OrtRun=h(a(m._OrtRun,()=>m._OrtRun,_=>m._OrtRun=_)),m._OrtRunWithBinding=h(a(m._OrtRunWithBinding,()=>m._OrtRunWithBinding,_=>m._OrtRunWithBinding=_)),m._OrtBindInput=a(m._OrtBindInput,()=>m._OrtBindInput,_=>m._OrtBindInput=_),O=void 0};m.jsepInit=(a,h)=>{if(O?.(),a==="webgpu"){[m.Ob,m.ac,m.ec,m.Pb,m.dc,m.eb,m.fc,m.ic,m.bc,m.cc,m.hc]=h;let _=m.Ob;m.jsepRegisterBuffer=(A,D,N,Y)=>_.registerBuffer(A,D,N,Y),m.jsepGetBuffer=A=>_.getBuffer(A),m.jsepCreateDownloader=(A,D,N)=>_.createDownloader(A,D,N),m.jsepOnReleaseSession=A=>{_.onReleaseSession(A)},m.jsepOnRunStart=A=>_.onRunStart(A)}};var E=Object.assign({},m),k="./this.program",j=(a,h)=>{throw h},V=typeof window=="object",B=typeof importScripts=="function",W=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",M=m.ENVIRONMENT_IS_PTHREAD||!1,q="";function Q(a){return m.locateFile?m.locateFile(a,q):q+a}var te,oe,J;if(W){var ie=(Io(),Wr(xo)),be=(To(),Wr(Ao));q=B?be.dirname(q)+"/":__dirname+"/",te=(h,_)=>(h=Qt(h)?new URL(h):be.normalize(h),ie.readFileSync(h,_?void 0:"utf8")),J=h=>(h=te(h,!0),h.buffer||(h=new Uint8Array(h)),h),oe=(h,_,A,D=!0)=>{h=Qt(h)?new URL(h):be.normalize(h),ie.readFile(h,D?void 0:"utf8",(N,Y)=>{N?A(N):_(D?Y.buffer:Y)})},!m.thisProgram&&1<process.argv.length&&(k=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),j=(h,_)=>{throw process.exitCode=h,_},m.inspect=()=>"[Emscripten Module object]";let a;try{a=fs()}catch(h){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),h}global.Worker=a.Worker}else(V||B)&&(B?q=self.location.href:typeof document<"u"&&document.currentScript&&(q=document.currentScript.src),typeof e<"u"&&e&&(q=e),q.indexOf("blob:")!==0?q=q.substr(0,q.replace(/[?#].*/,"").lastIndexOf("/")+1):q="",W||(te=a=>{var h=new XMLHttpRequest;return h.open("GET",a,!1),h.send(null),h.responseText},B&&(J=a=>{var h=new XMLHttpRequest;return h.open("GET",a,!1),h.responseType="arraybuffer",h.send(null),new Uint8Array(h.response)}),oe=(a,h,_)=>{var A=new XMLHttpRequest;A.open("GET",a,!0),A.responseType="arraybuffer",A.onload=()=>{A.status==200||A.status==0&&A.response?h(A.response):_()},A.onerror=_,A.send(null)}));W&&typeof performance>"u"&&(global.performance=ps().performance);var De=console.log.bind(console),qe=console.error.bind(console);W&&(De=(...a)=>ie.writeSync(1,a.join(" ")+`\n`),qe=(...a)=>ie.writeSync(2,a.join(" ")+`\n`));var Ve=De,Te=qe;Object.assign(m,E),E=null,typeof WebAssembly!="object"&&it("no native wasm support detected");var pe,Le,Me=!1,Se,ge,ve,ze,rt,ne,he,Ee,Qe,st,lt;function pt(){var a=pe.buffer;m.HEAP8=ge=new Int8Array(a),m.HEAP16=ze=new Int16Array(a),m.HEAPU8=ve=new Uint8Array(a),m.HEAPU16=rt=new Uint16Array(a),m.HEAP32=ne=new Int32Array(a),m.HEAPU32=he=new Uint32Array(a),m.HEAPF32=Ee=new Float32Array(a),m.HEAPF64=lt=new Float64Array(a),m.HEAP64=Qe=new BigInt64Array(a),m.HEAPU64=st=new BigUint64Array(a)}var at=16777216;if(M)pe=m.wasmMemory;else if(m.wasmMemory)pe=m.wasmMemory;else if(pe=new WebAssembly.Memory({initial:at/65536,maximum:65536,shared:!0}),!(pe.buffer instanceof SharedArrayBuffer))throw Te("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),W&&Te("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");pt(),at=pe.buffer.byteLength;var nt=[],gt=[],St=[],Tt=0,Zt=null,Xt=null;function Jr(){if(Tt--,Tt==0&&(Zt!==null&&(clearInterval(Zt),Zt=null),Xt)){var a=Xt;Xt=null,a()}}function it(a){throw a="Aborted("+a+")",Te(a),Me=!0,Se=1,a=new WebAssembly.RuntimeError(a+". Build with -sASSERTIONS for more info."),T(a),a}var vr=a=>a.startsWith("data:application/octet-stream;base64,"),Qt=a=>a.startsWith("file://"),Et;Et="ort-wasm-simd-threaded.wasm",vr(Et)||(Et=Q(Et));function Yr(a){if(J)return J(a);throw"both async and sync fetching of the wasm failed"}function si(a){if(V||B){if(typeof fetch=="function"&&!Qt(a))return fetch(a,{credentials:"same-origin"}).then(h=>{if(!h.ok)throw"failed to load wasm binary file at \'"+a+"\'";return h.arrayBuffer()}).catch(()=>Yr(a));if(oe)return new Promise((h,_)=>{oe(a,A=>h(new Uint8Array(A)),_)})}return Promise.resolve().then(()=>Yr(a))}function Zr(a,h,_){return si(a).then(A=>WebAssembly.instantiate(A,h)).then(A=>A).then(_,A=>{Te(`failed to asynchronously prepare wasm: ${A}`),it(A)})}function Xr(a,h){var _=Et;return typeof WebAssembly.instantiateStreaming!="function"||vr(_)||Qt(_)||W||typeof fetch!="function"?Zr(_,a,h):fetch(_,{credentials:"same-origin"}).then(A=>WebAssembly.instantiateStreaming(A,a).then(h,function(D){return Te(`wasm streaming compile failed: ${D}`),Te("falling back to ArrayBuffer instantiation"),Zr(_,a,h)}))}var wr={949692:(a,h,_,A)=>{if(typeof m>"u"||!m.Fb)return 1;if(a=ut(a>>>0),a.startsWith("./")&&(a=a.substring(2)),a=m.Fb.get(a),!a)return 2;if(h>>>=0,_>>>=0,A>>>=0,h+_>a.byteLength)return 3;try{return s().set(a.subarray(h,h+_),A>>>0),0}catch{return 4}},950193:()=>{m.bc()},950224:()=>{m.cc()},950253:()=>{m.hc()},950278:a=>m.ac(a),950311:a=>m.ec(a),950343:(a,h,_)=>{m.Pb(a,h,_,!0)},950382:(a,h,_)=>{m.Pb(a,h,_)},950415:a=>{m.eb("Abs",a,void 0)},950466:a=>{m.eb("Neg",a,void 0)},950517:a=>{m.eb("Floor",a,void 0)},950570:a=>{m.eb("Ceil",a,void 0)},950622:a=>{m.eb("Reciprocal",a,void 0)},950680:a=>{m.eb("Sqrt",a,void 0)},950732:a=>{m.eb("Exp",a,void 0)},950783:a=>{m.eb("Erf",a,void 0)},950834:a=>{m.eb("Sigmoid",a,void 0)},950889:(a,h,_)=>{m.eb("HardSigmoid",a,{alpha:h,beta:_})},950968:a=>{m.eb("Log",a,void 0)},951019:a=>{m.eb("Sin",a,void 0)},951070:a=>{m.eb("Cos",a,void 0)},951121:a=>{m.eb("Tan",a,void 0)},951172:a=>{m.eb("Asin",a,void 0)},951224:a=>{m.eb("Acos",a,void 0)},951276:a=>{m.eb("Atan",a,void 0)},951328:a=>{m.eb("Sinh",a,void 0)},951380:a=>{m.eb("Cosh",a,void 0)},951432:a=>{m.eb("Asinh",a,void 0)},951485:a=>{m.eb("Acosh",a,void 0)},951538:a=>{m.eb("Atanh",a,void 0)},951591:a=>{m.eb("Tanh",a,void 0)},951643:a=>{m.eb("Not",a,void 0)},951694:(a,h,_)=>{m.eb("Clip",a,{min:h,max:_})},951763:a=>{m.eb("Clip",a,void 0)},951815:(a,h)=>{m.eb("Elu",a,{alpha:h})},951873:a=>{m.eb("Relu",a,void 0)},951925:(a,h)=>{m.eb("LeakyRelu",a,{alpha:h})},951989:(a,h)=>{m.eb("ThresholdedRelu",a,{alpha:h})},952059:(a,h)=>{m.eb("Cast",a,{to:h})},952117:a=>{m.eb("Add",a,void 0)},952168:a=>{m.eb("Sub",a,void 0)},952219:a=>{m.eb("Mul",a,void 0)},952270:a=>{m.eb("Div",a,void 0)},952321:a=>{m.eb("Pow",a,void 0)},952372:a=>{m.eb("Equal",a,void 0)},952425:a=>{m.eb("Greater",a,void 0)},952480:a=>{m.eb("GreaterOrEqual",a,void 0)},952542:a=>{m.eb("Less",a,void 0)},952594:a=>{m.eb("LessOrEqual",a,void 0)},952653:(a,h,_,A,D)=>{m.eb("ReduceMean",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:A?Array.from(d().subarray(A>>>0,D>>>0)):[]})},952812:(a,h,_,A,D)=>{m.eb("ReduceMax",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:A?Array.from(d().subarray(A>>>0,D>>>0)):[]})},952970:(a,h,_,A,D)=>{m.eb("ReduceMin",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:A?Array.from(d().subarray(A>>>0,D>>>0)):[]})},953128:(a,h,_,A,D)=>{m.eb("ReduceProd",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:A?Array.from(d().subarray(A>>>0,D>>>0)):[]})},953287:(a,h,_,A,D)=>{m.eb("ReduceSum",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:A?Array.from(d().subarray(A>>>0,D>>>0)):[]})},953445:(a,h,_,A,D)=>{m.eb("ReduceL1",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:A?Array.from(d().subarray(A>>>0,D>>>0)):[]})},953602:(a,h,_,A,D)=>{m.eb("ReduceL2",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:A?Array.from(d().subarray(A>>>0,D>>>0)):[]})},953759:(a,h,_,A,D)=>{m.eb("ReduceLogSum",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:A?Array.from(d().subarray(A>>>0,D>>>0)):[]})},953920:(a,h,_,A,D)=>{m.eb("ReduceSumSquare",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:A?Array.from(d().subarray(A>>>0,D>>>0)):[]})},954084:(a,h,_,A,D)=>{m.eb("ReduceLogSumExp",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:A?Array.from(d().subarray(A>>>0,D>>>0)):[]})},954248:a=>{m.eb("Where",a,void 0)},954301:(a,h,_)=>{m.eb("Transpose",a,{perm:h?Array.from(d().subarray(h>>>0,_>>>0)):[]})},954409:(a,h,_,A,D,N,Y,re,ce,le,_e,Pe,Ne,K,$e)=>{m.eb("ConvTranspose",a,{format:ce?"NHWC":"NCHW",autoPad:h,dilations:[_],group:A,kernel_shape:[D],pads:[N,Y],strides:[re],wIsConst:()=>!!t()[le>>>0],outputPadding:_e?Array.from(d().subarray(_e>>>0,Pe>>>0)):[],outputShape:Ne?Array.from(d().subarray(Ne>>>0,K>>>0)):[],activation:ut($e)})},954811:(a,h,_,A,D,N,Y,re,ce,le,_e,Pe,Ne,K)=>{m.eb("ConvTranspose",a,{format:re?"NHWC":"NCHW",autoPad:h,dilations:Array.from(d().subarray(_>>>0,(_>>>0)+2>>>0)),group:A,kernelShape:Array.from(d().subarray(D>>>0,(D>>>0)+2>>>0)),pads:Array.from(d().subarray(N>>>0,(N>>>0)+4>>>0)),strides:Array.from(d().subarray(Y>>>0,(Y>>>0)+2>>>0)),wIsConst:()=>!!t()[ce>>>0],outputPadding:le?Array.from(d().subarray(le>>>0,_e>>>0)):[],outputShape:Pe?Array.from(d().subarray(Pe>>>0,Ne>>>0)):[],activation:ut(K)})},955376:(a,h,_,A,D,N,Y,re,ce,le,_e,Pe,Ne,K,$e)=>{m.eb("ConvTranspose",a,{format:ce?"NHWC":"NCHW",autoPad:h,dilations:[_],group:A,kernel_shape:[D],pads:[N,Y],strides:[re],wIsConst:()=>!!t()[le>>>0],outputPadding:_e?Array.from(d().subarray(_e>>>0,Pe>>>0)):[],outputShape:Ne?Array.from(d().subarray(Ne>>>0,K>>>0)):[],activation:ut($e)})},955778:(a,h,_,A,D,N,Y,re,ce,le,_e,Pe,Ne,K)=>{m.eb("ConvTranspose",a,{format:re?"NHWC":"NCHW",autoPad:h,dilations:Array.from(d().subarray(_>>>0,(_>>>0)+2>>>0)),group:A,kernelShape:Array.from(d().subarray(D>>>0,(D>>>0)+2>>>0)),pads:Array.from(d().subarray(N>>>0,(N>>>0)+4>>>0)),strides:Array.from(d().subarray(Y>>>0,(Y>>>0)+2>>>0)),wIsConst:()=>!!t()[ce>>>0],outputPadding:le?Array.from(d().subarray(le>>>0,_e>>>0)):[],outputShape:Pe?Array.from(d().subarray(Pe>>>0,Ne>>>0)):[],activation:ut(K)})},956343:(a,h)=>{m.eb("GlobalAveragePool",a,{format:h?"NHWC":"NCHW"})},956434:(a,h,_,A,D,N,Y,re,ce,le,_e,Pe,Ne,K,$e,Ue)=>{m.eb("AveragePool",a,{format:Ue?"NHWC":"NCHW",auto_pad:h,ceil_mode:_,count_include_pad:A,storage_order:D,dilations:[N,Y],kernel_shape:[re,ce],pads:[le,_e,Pe,Ne],strides:[K,$e]})},956718:(a,h)=>{m.eb("GlobalAveragePool",a,{format:h?"NHWC":"NCHW"})},956809:(a,h,_,A,D,N,Y,re,ce,le,_e,Pe,Ne,K,$e,Ue)=>{m.eb("AveragePool",a,{format:Ue?"NHWC":"NCHW",auto_pad:h,ceil_mode:_,count_include_pad:A,storage_order:D,dilations:[N,Y],kernel_shape:[re,ce],pads:[le,_e,Pe,Ne],strides:[K,$e]})},957093:(a,h)=>{m.eb("GlobalMaxPool",a,{format:h?"NHWC":"NCHW"})},957180:(a,h,_,A,D,N,Y,re,ce,le,_e,Pe,Ne,K,$e,Ue)=>{m.eb("MaxPool",a,{format:Ue?"NHWC":"NCHW",auto_pad:h,ceil_mode:_,count_include_pad:A,storage_order:D,dilations:[N,Y],kernel_shape:[re,ce],pads:[le,_e,Pe,Ne],strides:[K,$e]})},957460:(a,h)=>{m.eb("GlobalMaxPool",a,{format:h?"NHWC":"NCHW"})},957547:(a,h,_,A,D,N,Y,re,ce,le,_e,Pe,Ne,K,$e,Ue)=>{m.eb("MaxPool",a,{format:Ue?"NHWC":"NCHW",auto_pad:h,ceil_mode:_,count_include_pad:A,storage_order:D,dilations:[N,Y],kernel_shape:[re,ce],pads:[le,_e,Pe,Ne],strides:[K,$e]})},957827:(a,h,_,A,D)=>{m.eb("Gemm",a,{alpha:h,beta:_,transA:A,transB:D})},957931:a=>{m.eb("MatMul",a,void 0)},957985:(a,h,_,A)=>{m.eb("ArgMax",a,{keepDims:!!h,selectLastIndex:!!_,axis:A})},958093:(a,h,_,A)=>{m.eb("ArgMin",a,{keepDims:!!h,selectLastIndex:!!_,axis:A})},958201:(a,h)=>{m.eb("Softmax",a,{axis:h})},958264:(a,h)=>{m.eb("Concat",a,{axis:h})},958324:(a,h,_,A,D)=>{m.eb("Split",a,{axis:h,numOutputs:_,splitSizes:A?Array.from(d().subarray(A>>>0,D>>>0)):[]})},958464:a=>{m.eb("Expand",a,void 0)},958518:(a,h)=>{m.eb("Gather",a,{axis:Number(h)})},958589:(a,h)=>{m.eb("GatherElements",a,{axis:Number(h)})},958668:(a,h,_,A,D,N,Y,re,ce,le,_e)=>{m.eb("Resize",a,{antialias:h,axes:_?Array.from(d().subarray(_>>>0,A>>>0)):[],coordinateTransformMode:ut(D),cubicCoeffA:N,excludeOutside:Y,extrapolationValue:re,keepAspectRatioPolicy:ut(ce),mode:ut(le),nearestMode:ut(_e)})},959014:(a,h,_,A,D,N,Y)=>{m.eb("Slice",a,{starts:h?Array.from(d().subarray(h>>>0,_>>>0)):[],ends:A?Array.from(d().subarray(A>>>0,D>>>0)):[],axes:N?Array.from(d().subarray(N>>>0,Y>>>0)):[]})},959230:a=>{m.eb("Tile",a,void 0)},959282:(a,h,_)=>{m.eb("LayerNormalization",a,{axis:Number(h),epsilon:Number(_)})},959389:(a,h,_)=>{m.eb("InstanceNormalization",a,{epsilon:h,format:_?"NHWC":"NCHW"})},959503:(a,h,_)=>{m.eb("InstanceNormalization",a,{epsilon:h,format:_?"NHWC":"NCHW"})},959617:a=>{m.eb("Range",a,void 0)},959670:(a,h)=>{m.eb("Einsum",a,{equation:ut(h)})},959751:(a,h,_,A,D)=>{m.eb("Pad",a,{mode:h,value:_,pads:A?Array.from(d().subarray(A>>>0,D>>>0)):[]})},959878:(a,h,_,A,D,N)=>{m.eb("BatchNormalization",a,{epsilon:h,momentum:_,spatial:!!D,trainingMode:!!A,format:N?"NHWC":"NCHW"})},960047:(a,h,_,A,D,N)=>{m.eb("BatchNormalization",a,{epsilon:h,momentum:_,spatial:!!D,trainingMode:!!A,format:N?"NHWC":"NCHW"})},960216:(a,h,_)=>{m.eb("CumSum",a,{exclusive:Number(h),reverse:Number(_)})},960313:(a,h,_,A,D,N,Y,re,ce)=>{m.eb("Attention",a,{numHeads:h,isUnidirectional:_,maskFilterValue:A,scale:D,doRotary:N,qkvHiddenSizes:Y?Array.from(d().subarray(Number(re)>>>0,Number(re)+Y>>>0)):[],pastPresentShareBuffer:!!ce})},960585:a=>{m.eb("BiasAdd",a,void 0)},960640:a=>{m.eb("BiasSplitGelu",a,void 0)},960701:a=>{m.eb("FastGelu",a,void 0)},960757:(a,h,_,A,D,N,Y,re,ce,le,_e,Pe,Ne)=>{m.eb("Conv",a,{format:ce?"NHWC":"NCHW",auto_pad:h,dilations:[_],group:A,kernel_shape:[D],pads:N?Array.from(d().subarray(N>>>0,Y>>>0)):[],strides:[re],w_is_const:()=>!!t()[le>>>0],activation:ut(_e),activation_params:Pe?Array.from(b().subarray(Pe>>>0,Ne>>>0)):[]})},961127:(a,h,_,A,D,N,Y,re,ce,le,_e,Pe,Ne,K,$e,Ue)=>{m.eb("Conv",a,{format:Pe?"NHWC":"NCHW",auto_pad:h,dilations:[_,A],group:D,kernel_shape:[N,Y],pads:re?Array.from(d().subarray(re>>>0,ce>>>0)):[],strides:[le,_e],w_is_const:()=>!!t()[Ne>>>0],activation:ut(K),activation_params:$e?Array.from(b().subarray($e>>>0,Ue>>>0)):[]})},961518:a=>{m.eb("Gelu",a,void 0)},961570:(a,h,_,A,D,N)=>{m.eb("MatMulNBits",a,{k:h,n:_,accuracyLevel:A,bits:D,blockSize:N})},961697:(a,h,_,A,D,N)=>{m.eb("MultiHeadAttention",a,{numHeads:h,isUnidirectional:_,maskFilterValue:A,scale:D,doRotary:N})},961856:(a,h)=>{m.eb("SkipLayerNormalization",a,{epsilon:h})},961937:a=>{m.fc(a)},961971:(a,h)=>m.ic(a,h,m.Eb.kc,m.Eb.errors)};function ir(a){this.name="ExitStatus",this.message=`Program terminated with exit(${a})`,this.status=a}var _r=a=>{a.terminate(),a.onmessage=()=>{}},$r=a=>{we.yb.length==0&&(or(),we.Qb(we.yb[0]));var h=we.yb.pop();if(!h)return 6;we.zb.push(h),we.pb[a.xb]=h,h.xb=a.xb;var _={cmd:"run",start_routine:a.lc,arg:a.Wb,pthread_ptr:a.xb};return W&&h.unref(),h.postMessage(_,a.rc),0},Ft=0,Qr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,en=(a,h,_)=>{h>>>=0;var A=h+_;for(_=h;a[_]&&!(_>=A);)++_;if(16<_-h&&a.buffer&&Qr)return Qr.decode(a.buffer instanceof SharedArrayBuffer?a.slice(h,_):a.subarray(h,_));for(A="";h<_;){var D=a[h++];if(D&128){var N=a[h++]&63;if((D&224)==192)A+=String.fromCharCode((D&31)<<6|N);else{var Y=a[h++]&63;D=(D&240)==224?(D&15)<<12|N<<6|Y:(D&7)<<18|N<<12|Y<<6|a[h++]&63,65536>D?A+=String.fromCharCode(D):(D-=65536,A+=String.fromCharCode(55296|D>>10,56320|D&1023))}}else A+=String.fromCharCode(D)}return A},ut=(a,h)=>(a>>>=0)?en(s(),a,h):"",ui=a=>{var h=Vr();return a=a(),pr(h),a};function Fe(a,h){var _=arguments.length-2,A=arguments;return ui(()=>{for(var D=2*_,N=Nr(8*D),Y=N>>>3,re=0;re<_;re++){var ce=A[2+re];typeof ce=="bigint"?(Qe[Y+2*re]=1n,Qe[Y+2*re+1]=ce):(Qe[Y+2*re]=0n,C()[Y+2*re+1>>>0]=ce)}return Gn(a,D,N,h)})}function li(a){if(M)return Fe(0,1,a);Se=a,0<Ft||(we.mc(),m.onExit?.(a),Me=!0),j(a,new ir(a))}var Pt=a=>{if(Se=a,M)throw Sr(a),"unwind";li(a)},vt=a=>{a instanceof ir||a=="unwind"||j(1,a)};function di(){for(var a=m.numThreads;a--;)or();nt.unshift(()=>{Tt++,ci(()=>Jr())})}function or(){var a=Q("ort-wasm-simd-threaded.worker.js");a=new Worker(a),we.yb.push(a)}function ci(a){M?a():Promise.all(we.yb.map(we.Qb)).then(a)}var we={yb:[],zb:[],Vb:[],pb:{},Ib(){M?(we.receiveObjectTransfer=we.jc,we.threadInitTLS=we.Ub,we.setExitStatus=we.Tb):di()},Tb:a=>Se=a,vc:["$terminateWorker"],mc:()=>{for(var a of we.zb)_r(a);for(a of we.yb)_r(a);we.yb=[],we.zb=[],we.pb=[]},Sb:a=>{var h=a.xb;delete we.pb[h],we.yb.push(a),we.zb.splice(we.zb.indexOf(a),1),a.xb=0,Ur(h)},jc(){},Ub(){we.Vb.forEach(a=>a())},Qb:a=>new Promise(h=>{a.onmessage=N=>{N=N.data;var Y=N.cmd;if(N.targetThread&&N.targetThread!=fr()){var re=we.pb[N.targetThread];re?re.postMessage(N,N.transferList):Te(`Internal error! Worker sent a message "${Y}" to target pthread ${N.targetThread}, but that thread no longer exists!`)}else Y==="checkMailbox"?sr():Y==="spawnThread"?$r(N):Y==="cleanupThread"?we.Sb(we.pb[N.thread]):Y==="killThread"?(N=N.thread,Y=we.pb[N],delete we.pb[N],_r(Y),Ur(N),we.zb.splice(we.zb.indexOf(Y),1),Y.xb=0):Y==="cancelThread"?we.pb[N.thread].postMessage({cmd:"cancel"}):Y==="loaded"?(a.loaded=!0,W&&!a.xb&&a.unref(),h(a)):Y==="alert"?alert(`Thread ${N.threadId}: ${N.text}`):N.target==="setimmediate"?a.postMessage(N):Y==="callHandler"?m[N.handler](...N.args):Y&&Te(`worker sent an unknown command ${Y}`)},a.onerror=N=>{throw Te(`worker sent an error! ${N.filename}:${N.lineno}: ${N.message}`),N},W&&(a.on("message",N=>a.onmessage({data:N})),a.on("error",N=>a.onerror(N)));var _=[],A=["onExit"],D;for(D of A)m.hasOwnProperty(D)&&_.push(D);a.postMessage({cmd:"load",handlers:_,urlOrBlob:m.mainScriptUrlOrBlob||e,wasmMemory:pe,wasmModule:Le})})};m.PThread=we;var Cr=a=>{for(;0<a.length;)a.shift()(m)};m.establishStackSpace=()=>{var a=fr(),h=y()[a+52>>>2>>>0];a=y()[a+56>>>2>>>0],Ln(h,h-a),pr(h)};function Sr(a){if(M)return Fe(1,0,a);Pt(a)}m.invokeEntryPoint=(a,h)=>{a=Fn.apply(null,[a,h]),0<Ft?we.Tb(a):jr(a)};function _o(a){this.Db=a-24,this.tc=function(h){y()[this.Db+4>>>2>>>0]=h},this.Mb=function(h){y()[this.Db+8>>>2>>>0]=h},this.Ib=function(h,_){this.Kb(),this.tc(h),this.Mb(_)},this.Kb=function(){y()[this.Db+16>>>2>>>0]=0}}var fi=0,$o=0;function pi(a,h,_,A){return M?Fe(2,1,a,h,_,A):mi(a,h,_,A)}function mi(a,h,_,A){if(a>>>=0,h>>>=0,_>>>=0,A>>>=0,typeof SharedArrayBuffer>"u")return Te("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var D=[];return M&&D.length===0?pi(a,h,_,A):(a={lc:_,xb:a,Wb:A,rc:D},M?(a.uc="spawnThread",postMessage(a,D),0):$r(a))}function hi(a,h,_){return M?Fe(3,1,a,h,_):0}function z(a,h){if(M)return Fe(4,1,a,h)}var ar=a=>{for(var h=0,_=0;_<a.length;++_){var A=a.charCodeAt(_);127>=A?h++:2047>=A?h+=2:55296<=A&&57343>=A?(h+=4,++_):h+=3}return h},xr=(a,h,_,A)=>{if(_>>>=0,!(0<A))return 0;var D=_;A=_+A-1;for(var N=0;N<a.length;++N){var Y=a.charCodeAt(N);if(55296<=Y&&57343>=Y){var re=a.charCodeAt(++N);Y=65536+((Y&1023)<<10)|re&1023}if(127>=Y){if(_>=A)break;h[_++>>>0]=Y}else{if(2047>=Y){if(_+1>=A)break;h[_++>>>0]=192|Y>>6}else{if(65535>=Y){if(_+2>=A)break;h[_++>>>0]=224|Y>>12}else{if(_+3>=A)break;h[_++>>>0]=240|Y>>18,h[_++>>>0]=128|Y>>12&63}h[_++>>>0]=128|Y>>6&63}h[_++>>>0]=128|Y&63}}return h[_>>>0]=0,_-D},Ir=(a,h,_)=>xr(a,s(),h,_);function H(a,h){if(M)return Fe(5,1,a,h)}function qt(a,h,_){if(M)return Fe(6,1,a,h,_)}function L(a,h,_){return M?Fe(7,1,a,h,_):0}function F(a,h){if(M)return Fe(8,1,a,h)}function tn(a,h,_){if(M)return Fe(9,1,a,h,_)}function rn(a,h,_,A){if(M)return Fe(10,1,a,h,_,A)}function nn(a,h,_,A){if(M)return Fe(11,1,a,h,_,A)}function on(a,h,_,A){if(M)return Fe(12,1,a,h,_,A)}function an(a){if(M)return Fe(13,1,a)}function sn(a,h){if(M)return Fe(14,1,a,h)}function un(a,h,_){if(M)return Fe(15,1,a,h,_)}var ln=a=>{if(a===null)return"null";var h=typeof a;return h==="object"||h==="array"||h==="function"?a.toString():""+a},dn,wt=a=>{for(var h="";s()[a>>>0];)h+=dn[s()[a++>>>0]];return h},Ar={},Tr={},gi={},Rt;function yi(a,h,_={}){var A=h.name;if(!a)throw new Rt(`type "${A}" must have a positive integer typeid pointer`);if(Tr.hasOwnProperty(a)){if(_.Zb)return;throw new Rt(`Cannot register type \'${A}\' twice`)}Tr[a]=h,delete gi[a],Ar.hasOwnProperty(a)&&(h=Ar[a],delete Ar[a],h.forEach(D=>D()))}function kt(a,h,_={}){if(!("argPackAdvance"in h))throw new TypeError("registerType registeredInstance requires argPackAdvance");yi(a,h,_)}var cn=(a,h,_)=>{switch(h){case 1:return _?A=>t()[A>>>0>>>0]:A=>s()[A>>>0>>>0];case 2:return _?A=>l()[A>>>1>>>0]:A=>f()[A>>>1>>>0];case 4:return _?A=>d()[A>>>2>>>0]:A=>y()[A>>>2>>>0];case 8:return _?A=>Qe[A>>>3]:A=>st[A>>>3];default:throw new TypeError(`invalid integer width (${h}): ${a}`)}};function fn(){this.wb=[void 0],this.Nb=[]}var yt=new fn;function Er(a){a>>>=0,a>=yt.Db&&--yt.get(a).Rb===0&&yt.Mb(a)}var dt=a=>{if(!a)throw new Rt("Cannot use deleted val. handle = "+a);return yt.get(a).value},_t=a=>{switch(a){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return yt.Kb({Rb:1,value:a})}};function pn(a){return this.fromWireType(d()[a>>>2>>>0])}var bi=(a,h)=>{switch(h){case 4:return function(_){return this.fromWireType(b()[_>>>2>>>0])};case 8:return function(_){return this.fromWireType(C()[_>>>3>>>0])};default:throw new TypeError(`invalid float width (${h}): ${a}`)}};function vi(a){return this.fromWireType(y()[a>>>2>>>0])}var mn=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,wi=(a,h)=>{for(var _=a>>1,A=_+h/2;!(_>=A)&&f()[_>>>0];)++_;if(_<<=1,32<_-a&&mn)return mn.decode(s().slice(a,_));for(_="",A=0;!(A>=h/2);++A){var D=l()[a+2*A>>>1>>>0];if(D==0)break;_+=String.fromCharCode(D)}return _},_i=(a,h,_)=>{if(_??=2147483647,2>_)return 0;_-=2;var A=h;_=_<2*a.length?_/2:a.length;for(var D=0;D<_;++D){var N=a.charCodeAt(D);l()[h>>>1>>>0]=N,h+=2}return l()[h>>>1>>>0]=0,h-A},$i=a=>2*a.length,Ci=(a,h)=>{for(var _=0,A="";!(_>=h/4);){var D=d()[a+4*_>>>2>>>0];if(D==0)break;++_,65536<=D?(D-=65536,A+=String.fromCharCode(55296|D>>10,56320|D&1023)):A+=String.fromCharCode(D)}return A},Si=(a,h,_)=>{if(h>>>=0,_??=2147483647,4>_)return 0;var A=h;_=A+_-4;for(var D=0;D<a.length;++D){var N=a.charCodeAt(D);if(55296<=N&&57343>=N){var Y=a.charCodeAt(++D);N=65536+((N&1023)<<10)|Y&1023}if(d()[h>>>2>>>0]=N,h+=4,h+4>_)break}return d()[h>>>2>>>0]=0,h-A},xi=a=>{for(var h=0,_=0;_<a.length;++_){var A=a.charCodeAt(_);55296<=A&&57343>=A&&++_,h+=4}return h},hn=()=>{if(!(0<Ft))try{M?jr(Se):Pt(Se)}catch(a){vt(a)}};function Pr(a){a>>>=0,typeof Atomics.sc=="function"&&(Atomics.sc(d(),a>>>2,a).value.then(sr),a+=128,Atomics.store(d(),a>>>2,1))}m.__emscripten_thread_mailbox_await=Pr;var sr=()=>{var a=fr();if(a&&(Pr(a),!Me))try{Hn(),hn()}catch(h){vt(h)}};m.checkMailbox=sr;var kr=[],Or=(a,h)=>{var _=Tr[a];if(_===void 0)throw a=Nn(a),_=wt(a),It(a),new Rt(h+" has unknown type "+_);return _},gn=(a,h,_)=>{var A=[];return a=a.toWireType(A,_),A.length&&(y()[h>>>2>>>0]=_t(A)),a},ur=a=>{try{a()}catch(h){it(h)}};function Ii(){var a=me,h={};for(let[_,A]of Object.entries(a))h[_]=typeof A=="function"?function(){lr.push(_);try{return A.apply(null,arguments)}finally{Me||(lr.pop(),xt&&Bt===1&&lr.length===0&&(Bt=0,Ft+=1,ur(Kn),typeof Fibers<"u"&&Fibers.xc()))}}:A;return h}var Bt=0,xt=null,yn=0,lr=[],bn={},vn={},Ai=0,Rr=null,Ti=[];function Ei(){return new Promise((a,h)=>{Rr={resolve:a,reject:h}})}function Pi(){var a=er(65548),h=a+12;y()[a>>>2>>>0]=h,y()[a+4>>>2>>>0]=h+65536,h=lr[0];var _=bn[h];return _===void 0&&(_=Ai++,bn[h]=_,vn[_]=h),h=_,d()[a+8>>>2>>>0]=h,a}function ki(){var a=d()[xt+8>>>2>>>0];return a=me[vn[a]],--Ft,a()}function Oi(a){if(!Me){if(Bt===0){var h=!1,_=!1;a((A=0)=>{if(!Me&&(yn=A,h=!0,_)){Bt=2,ur(()=>Jn(xt)),typeof Browser<"u"&&Browser.Jb.Yb&&Browser.Jb.resume(),A=!1;try{var D=ki()}catch(re){D=re,A=!0}var N=!1;if(!xt){var Y=Rr;Y&&(Rr=null,(A?Y.reject:Y.resolve)(D),N=!0)}if(A&&!N)throw D}}),_=!0,h||(Bt=1,xt=Pi(),typeof Browser<"u"&&Browser.Jb.Yb&&Browser.Jb.pause(),ur(()=>qn(xt)))}else Bt===2?(Bt=0,ur(Yn),It(xt),xt=null,Ti.forEach(A=>{if(!Me)try{A(),hn()}catch(D){vt(D)}})):it(`invalid state: ${Bt}`);return yn}}function wn(a){return Oi(h=>{a().then(h)})}var dr=[],Ri={},Br=a=>{var h=Ri[a];return h===void 0?wt(a):h},_n=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Bi=a=>{var h=dr.length;return dr.push(a),h},Di=(a,h)=>{for(var _=Array(a),A=0;A<a;++A)_[A]=Or(y()[h+4*A>>>2>>>0],"parameter "+A);return _},$n=(a,h)=>Object.defineProperty(h,"name",{value:a});function Mi(a){var h=Function;if(!(h instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof h} which is not a function`);var _=$n(h.name||"unknownFunctionName",function(){});return _.prototype=h.prototype,_=new _,a=h.apply(_,a),a instanceof Object?a:_}var Kt=a=>a%4===0&&(a%100!==0||a%400===0),Cn=[0,31,60,91,121,152,182,213,244,274,305,335],Sn=[0,31,59,90,120,151,181,212,243,273,304,334];function xn(a,h,_,A,D,N,Y){return M?Fe(16,1,a,h,_,A,D,N,Y):-52}function In(a,h,_,A,D,N){if(M)return Fe(17,1,a,h,_,A,D,N)}var An=a=>{var h=ar(a)+1,_=er(h);return _&&Ir(a,_,h),_},Dr=[],Tn=(a,h)=>{Dr.length=0;for(var _;_=s()[a++>>>0];){var A=_!=105;A&=_!=112,h+=A&&h%8?4:0,Dr.push(_==112?y()[h>>>2>>>0]:_==106?Qe[h>>>3]:_==105?d()[h>>>2>>>0]:C()[h>>>3>>>0]),h+=A?8:4}return Dr},Mr={},En=()=>{if(!zr){var a={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:k||"./this.program"},h;for(h in Mr)Mr[h]===void 0?delete a[h]:a[h]=Mr[h];var _=[];for(h in a)_.push(`${h}=${a[h]}`);zr=_}return zr},zr;function Pn(a,h){if(M)return Fe(18,1,a,h);a>>>=0,h>>>=0;var _=0;return En().forEach((A,D)=>{var N=h+_;for(D=y()[a+4*D>>>2>>>0]=N,N=0;N<A.length;++N)t()[D++>>>0>>>0]=A.charCodeAt(N);t()[D>>>0>>>0]=0,_+=A.length+1}),0}function kn(a,h){if(M)return Fe(19,1,a,h);a>>>=0,h>>>=0;var _=En();y()[a>>>2>>>0]=_.length;var A=0;return _.forEach(D=>A+=D.length+1),y()[h>>>2>>>0]=A,0}function On(a){return M?Fe(20,1,a):52}function Rn(a,h,_,A){return M?Fe(21,1,a,h,_,A):52}function Bn(a,h,_,A){return M?Fe(22,1,a,h,_,A):70}var zi=[null,[],[]];function Dn(a,h,_,A){if(M)return Fe(23,1,a,h,_,A);h>>>=0,_>>>=0,A>>>=0;for(var D=0,N=0;N<_;N++){var Y=y()[h>>>2>>>0],re=y()[h+4>>>2>>>0];h+=8;for(var ce=0;ce<re;ce++){var le=s()[Y+ce>>>0],_e=zi[a];le===0||le===10?((a===1?Ve:Te)(en(_e,0)),_e.length=0):_e.push(le)}D+=re}return y()[A>>>2>>>0]=D,0}var Mn=[31,29,31,30,31,30,31,31,30,31,30,31],zn=[31,28,31,30,31,30,31,31,30,31,30,31];function Ui(a){var h=Array(ar(a)+1);return xr(a,h,0,h.length),h}var ji=(a,h)=>{t().set(a,h>>>0)};function Un(a,h,_,A){function D(K,$e,Ue){for(K=typeof K=="number"?K.toString():K||"";K.length<$e;)K=Ue[0]+K;return K}function N(K,$e){return D(K,$e,"0")}function Y(K,$e){function Ue(Xn){return 0>Xn?-1:0<Xn?1:0}var jt;return(jt=Ue(K.getFullYear()-$e.getFullYear()))===0&&(jt=Ue(K.getMonth()-$e.getMonth()))===0&&(jt=Ue(K.getDate()-$e.getDate())),jt}function re(K){switch(K.getDay()){case 0:return new Date(K.getFullYear()-1,11,29);case 1:return K;case 2:return new Date(K.getFullYear(),0,3);case 3:return new Date(K.getFullYear(),0,2);case 4:return new Date(K.getFullYear(),0,1);case 5:return new Date(K.getFullYear()-1,11,31);case 6:return new Date(K.getFullYear()-1,11,30)}}function ce(K){var $e=K.Ab;for(K=new Date(new Date(K.Bb+1900,0,1).getTime());0<$e;){var Ue=K.getMonth(),jt=(Kt(K.getFullYear())?Mn:zn)[Ue];if($e>jt-K.getDate())$e-=jt-K.getDate()+1,K.setDate(1),11>Ue?K.setMonth(Ue+1):(K.setMonth(0),K.setFullYear(K.getFullYear()+1));else{K.setDate(K.getDate()+$e);break}}return Ue=new Date(K.getFullYear()+1,0,4),$e=re(new Date(K.getFullYear(),0,4)),Ue=re(Ue),0>=Y($e,K)?0>=Y(Ue,K)?K.getFullYear()+1:K.getFullYear():K.getFullYear()-1}a>>>=0,h>>>=0,_>>>=0,A>>>=0;var le=y()[A+40>>>2>>>0];A={pc:d()[A>>>2>>>0],oc:d()[A+4>>>2>>>0],Gb:d()[A+8>>>2>>>0],Lb:d()[A+12>>>2>>>0],Hb:d()[A+16>>>2>>>0],Bb:d()[A+20>>>2>>>0],vb:d()[A+24>>>2>>>0],Ab:d()[A+28>>>2>>>0],wc:d()[A+32>>>2>>>0],nc:d()[A+36>>>2>>>0],qc:le?ut(le):""},_=ut(_),le={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var _e in le)_=_.replace(new RegExp(_e,"g"),le[_e]);var Pe="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ne="January February March April May June July August September October November December".split(" ");le={"%a":K=>Pe[K.vb].substring(0,3),"%A":K=>Pe[K.vb],"%b":K=>Ne[K.Hb].substring(0,3),"%B":K=>Ne[K.Hb],"%C":K=>N((K.Bb+1900)/100|0,2),"%d":K=>N(K.Lb,2),"%e":K=>D(K.Lb,2," "),"%g":K=>ce(K).toString().substring(2),"%G":K=>ce(K),"%H":K=>N(K.Gb,2),"%I":K=>(K=K.Gb,K==0?K=12:12<K&&(K-=12),N(K,2)),"%j":K=>{for(var $e=0,Ue=0;Ue<=K.Hb-1;$e+=(Kt(K.Bb+1900)?Mn:zn)[Ue++]);return N(K.Lb+$e,3)},"%m":K=>N(K.Hb+1,2),"%M":K=>N(K.oc,2),"%n":()=>`\n`,"%p":K=>0<=K.Gb&&12>K.Gb?"AM":"PM","%S":K=>N(K.pc,2),"%t":()=>"	","%u":K=>K.vb||7,"%U":K=>N(Math.floor((K.Ab+7-K.vb)/7),2),"%V":K=>{var $e=Math.floor((K.Ab+7-(K.vb+6)%7)/7);if(2>=(K.vb+371-K.Ab-2)%7&&$e++,$e)$e==53&&(Ue=(K.vb+371-K.Ab)%7,Ue==4||Ue==3&&Kt(K.Bb)||($e=1));else{$e=52;var Ue=(K.vb+7-K.Ab-1)%7;(Ue==4||Ue==5&&Kt(K.Bb%400-1))&&$e++}return N($e,2)},"%w":K=>K.vb,"%W":K=>N(Math.floor((K.Ab+7-(K.vb+6)%7)/7),2),"%y":K=>(K.Bb+1900).toString().substring(2),"%Y":K=>K.Bb+1900,"%z":K=>{K=K.nc;var $e=0<=K;return K=Math.abs(K)/60,($e?"+":"-")+("0000"+(K/60*100+K%60)).slice(-4)},"%Z":K=>K.qc,"%%":()=>"%"},_=_.replace(/%%/g,"\\0\\0");for(_e in le)_.includes(_e)&&(_=_.replace(new RegExp(_e,"g"),le[_e](A)));return _=_.replace(/\\0\\0/g,"%"),_e=Ui(_),_e.length>h?0:(ji(_e,a),_e.length-1)}we.Ib();for(var jn=Array(256),cr=0;256>cr;++cr)jn[cr]=String.fromCharCode(cr);dn=jn,Rt=m.BindingError=class extends Error{constructor(a){super(a),this.name="BindingError"}},m.InternalError=class extends Error{constructor(a){super(a),this.name="InternalError"}},Object.assign(fn.prototype,{get(a){return this.wb[a]},has(a){return this.wb[a]!==void 0},Kb(a){var h=this.Nb.pop()||this.wb.length;return this.wb[h]=a,h},Mb(a){this.wb[a]=void 0,this.Nb.push(a)}}),yt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),yt.Db=yt.wb.length,m.count_emval_handles=()=>{for(var a=0,h=yt.Db;h<yt.wb.length;++h)yt.wb[h]!==void 0&&++a;return a};var Vi=[li,Sr,pi,hi,z,H,qt,L,F,tn,rn,nn,on,an,sn,un,xn,In,Pn,kn,On,Rn,Bn,Dn],Ni={ua:function(a,h,_){return wn(async()=>{await m.dc(a,h,_)})},b:function(a,h,_){throw a>>>=0,new _o(a).Ib(h>>>0,_>>>0),fi=a,$o++,fi},fa:function(a){Wn(a>>>0,!B,1,!V,131072,!1),we.Ub()},D:function(a){a>>>=0,M?postMessage({cmd:"cleanupThread",thread:a}):we.Sb(we.pb[a])},X:mi,z:hi,la:z,T:H,V:qt,ma:L,ja:F,ca:tn,ia:rn,H:nn,U:on,R:an,ka:sn,S:un,K:function(a,h,_,A,D){a>>>=0,h>>>=0,_>>>=0,h=wt(h);var N=h.indexOf("u")!=-1;N&&(D=(1n<<64n)-1n),kt(a,{name:h,fromWireType:Y=>Y,toWireType:function(Y,re){if(typeof re!="bigint"&&typeof re!="number")throw new TypeError(`Cannot convert "${ln(re)}" to ${this.name}`);if(re<A||re>D)throw new TypeError(`Passing a number "${ln(re)}" from JS side to C/C++ side to an argument of type "${h}", which is outside the valid range [${A}, ${D}]!`);return re},argPackAdvance:8,readValueFromPointer:cn(h,_,!N),Cb:null})},sa:function(a,h,_,A){a>>>=0,h=wt(h>>>0),kt(a,{name:h,fromWireType:function(D){return!!D},toWireType:function(D,N){return N?_:A},argPackAdvance:8,readValueFromPointer:function(D){return this.fromWireType(s()[D>>>0])},Cb:null})},ra:function(a,h){a>>>=0,h=wt(h>>>0),kt(a,{name:h,fromWireType:_=>{var A=dt(_);return Er(_),A},toWireType:(_,A)=>_t(A),argPackAdvance:8,readValueFromPointer:pn,Cb:null})},J:function(a,h,_){a>>>=0,_>>>=0,h=wt(h>>>0),kt(a,{name:h,fromWireType:A=>A,toWireType:(A,D)=>D,argPackAdvance:8,readValueFromPointer:bi(h,_),Cb:null})},v:function(a,h,_,A,D){if(a>>>=0,_>>>=0,h=wt(h>>>0),D===-1&&(D=4294967295),D=re=>re,A===0){var N=32-8*_;D=re=>re<<N>>>N}var Y=h.includes("unsigned")?function(re,ce){return ce>>>0}:function(re,ce){return ce};kt(a,{name:h,fromWireType:D,toWireType:Y,argPackAdvance:8,readValueFromPointer:cn(h,_,A!==0),Cb:null})},o:function(a,h,_){function A(N){var Y=y()[N>>>2>>>0];return N=y()[N+4>>>2>>>0],new D(t().buffer,N,Y)}a>>>=0;var D=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][h];_=wt(_>>>0),kt(a,{name:_,fromWireType:A,argPackAdvance:8,readValueFromPointer:A},{Zb:!0})},L:function(a,h){a>>>=0,h=wt(h>>>0);var _=h==="std::string";kt(a,{name:h,fromWireType:function(A){var D=y()[A>>>2>>>0],N=A+4;if(_)for(var Y=N,re=0;re<=D;++re){var ce=N+re;if(re==D||s()[ce>>>0]==0){if(Y=ut(Y,ce-Y),le===void 0)var le=Y;else le+=String.fromCharCode(0),le+=Y;Y=ce+1}}else{for(le=Array(D),re=0;re<D;++re)le[re]=String.fromCharCode(s()[N+re>>>0]);le=le.join("")}return It(A),le},toWireType:function(A,D){D instanceof ArrayBuffer&&(D=new Uint8Array(D));var N=typeof D=="string";if(!(N||D instanceof Uint8Array||D instanceof Uint8ClampedArray||D instanceof Int8Array))throw new Rt("Cannot pass non-string to std::string");var Y=_&&N?ar(D):D.length,re=er(4+Y+1),ce=re+4;if(y()[re>>>2>>>0]=Y,_&&N)Ir(D,ce,Y+1);else if(N)for(N=0;N<Y;++N){var le=D.charCodeAt(N);if(255<le)throw It(ce),new Rt("String has UTF-16 code units that do not fit in 8 bits");s()[ce+N>>>0]=le}else for(N=0;N<Y;++N)s()[ce+N>>>0]=D[N];return A!==null&&A.push(It,re),re},argPackAdvance:8,readValueFromPointer:vi,Cb(A){It(A)}})},B:function(a,h,_){if(a>>>=0,h>>>=0,_>>>=0,_=wt(_),h===2)var A=wi,D=_i,N=$i,Y=()=>f(),re=1;else h===4&&(A=Ci,D=Si,N=xi,Y=()=>y(),re=2);kt(a,{name:_,fromWireType:ce=>{for(var le=y()[ce>>>2>>>0],_e=Y(),Pe,Ne=ce+4,K=0;K<=le;++K){var $e=ce+4+K*h;(K==le||_e[$e>>>re]==0)&&(Ne=A(Ne,$e-Ne),Pe===void 0?Pe=Ne:(Pe+=String.fromCharCode(0),Pe+=Ne),Ne=$e+h)}return It(ce),Pe},toWireType:(ce,le)=>{if(typeof le!="string")throw new Rt(`Cannot pass non-string to C++ string type ${_}`);var _e=N(le),Pe=er(4+_e+h);return y()[Pe>>>2]=_e>>re,D(le,Pe+4,_e+h),ce!==null&&ce.push(It,Pe),Pe},argPackAdvance:8,readValueFromPointer:pn,Cb(ce){It(ce)}})},ta:function(a,h){a>>>=0,h=wt(h>>>0),kt(a,{$b:!0,name:h,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,P:function(a,h){a>>>=0,a==h>>>0?setTimeout(()=>sr()):M?postMessage({targetThread:a,cmd:"checkMailbox"}):(a=we.pb[a])&&a.postMessage({cmd:"checkMailbox"})},Y:function(a,h,_,A){h>>>=0,_/=2,kr.length=_,A=A>>>0>>>3;for(var D=0;D<_;D++)kr[D]=Qe[A+2*D]?Qe[A+2*D+1]:C()[A+2*D+1>>>0];return a=0>a?wr[-a-1]:Vi[a],we.Xb=h,h=a.apply(null,kr),we.Xb=0,h},ea:Pr,pa:function(a){W&&we.pb[a>>>0].ref()},t:function(a,h,_){return h>>>=0,_>>>=0,a=dt(a>>>0),h=Or(h,"emval::as"),gn(h,_,a)},y:function(a){return a>>>=0,wn(()=>(a=dt(a),a.then(_t)))},p:function(a,h,_,A){return _>>>=0,A>>>=0,a=dr[a>>>0],h=dt(h>>>0),a(null,h,_,A)},k:function(a,h,_,A,D){return _>>>=0,A>>>=0,D>>>=0,a=dr[a>>>0],h=dt(h>>>0),_=Br(_),a(h,h[_],A,D)},c:Er,C:function(a,h){return h>>>=0,a=dt(a>>>0),h=dt(h),a==h},n:function(a){return a>>>=0,a===0?_t(_n()):(a=Br(a),_t(_n()[a]))},j:function(a,h,_){h=Di(a,h>>>0);var A=h.shift();a--;var D=`return function (obj, func, destructorsRef, args) {\n`,N=0,Y=[];_===0&&Y.push("obj");for(var re=["retType"],ce=[A],le=0;le<a;++le)Y.push("arg"+le),re.push("argType"+le),ce.push(h[le]),D+=`  var arg${le} = argType${le}.readValueFromPointer(args${N?"+"+N:""});\n`,N+=h[le].argPackAdvance;for(D+=`  var rv = ${_===1?"new func":"func.call"}(${Y.join(", ")});\n`,le=0;le<a;++le)h[le].deleteObject&&(D+=`  argType${le}.deleteObject(arg${le});\n`);return A.$b||(re.push("emval_returnValue"),ce.push(gn),D+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),re.push(D+`};\n`),a=Mi(re).apply(null,ce),_=`methodCaller<(${h.map(_e=>_e.name).join(", ")}) => ${A.name}>`,Bi($n(_,a))},s:function(a,h){return h>>>=0,a=dt(a>>>0),h=dt(h),_t(a[h])},e:function(a){a>>>=0,4<a&&(yt.get(a).Rb+=1)},w:function(){return _t([])},m:function(a){a=dt(a>>>0);for(var h=Array(a.length),_=0;_<a.length;_++)h[_]=a[_];return _t(h)},g:function(a){return _t(Br(a>>>0))},l:function(){return _t({})},i:function(a){a>>>=0;for(var h=dt(a);h.length;){var _=h.pop();h.pop()(_)}Er(a)},h:function(a,h,_){h>>>=0,_>>>=0,a=dt(a>>>0),h=dt(h),_=dt(_),a[h]=_},d:function(a,h){return h>>>=0,a=Or(a>>>0,"_emval_take_value"),a=a.readValueFromPointer(h),_t(a)},$:function(a,h){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),h>>>=0,a=new Date(1e3*a),d()[h>>>2>>>0]=a.getUTCSeconds(),d()[h+4>>>2>>>0]=a.getUTCMinutes(),d()[h+8>>>2>>>0]=a.getUTCHours(),d()[h+12>>>2>>>0]=a.getUTCDate(),d()[h+16>>>2>>>0]=a.getUTCMonth(),d()[h+20>>>2>>>0]=a.getUTCFullYear()-1900,d()[h+24>>>2>>>0]=a.getUTCDay(),a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,d()[h+28>>>2>>>0]=a},aa:function(a,h){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),h>>>=0,a=new Date(1e3*a),d()[h>>>2>>>0]=a.getSeconds(),d()[h+4>>>2>>>0]=a.getMinutes(),d()[h+8>>>2>>>0]=a.getHours(),d()[h+12>>>2>>>0]=a.getDate(),d()[h+16>>>2>>>0]=a.getMonth(),d()[h+20>>>2>>>0]=a.getFullYear()-1900,d()[h+24>>>2>>>0]=a.getDay();var _=(Kt(a.getFullYear())?Cn:Sn)[a.getMonth()]+a.getDate()-1|0;d()[h+28>>>2>>>0]=_,d()[h+36>>>2>>>0]=-(60*a.getTimezoneOffset()),_=new Date(a.getFullYear(),6,1).getTimezoneOffset();var A=new Date(a.getFullYear(),0,1).getTimezoneOffset();a=(_!=A&&a.getTimezoneOffset()==Math.min(A,_))|0,d()[h+32>>>2>>>0]=a},ba:function(a){a>>>=0;var h=new Date(d()[a+20>>>2>>>0]+1900,d()[a+16>>>2>>>0],d()[a+12>>>2>>>0],d()[a+8>>>2>>>0],d()[a+4>>>2>>>0],d()[a>>>2>>>0],0),_=d()[a+32>>>2>>>0],A=h.getTimezoneOffset(),D=new Date(h.getFullYear(),6,1).getTimezoneOffset(),N=new Date(h.getFullYear(),0,1).getTimezoneOffset(),Y=Math.min(N,D);return 0>_?d()[a+32>>>2>>>0]=+(D!=N&&Y==A):0<_!=(Y==A)&&(D=Math.max(N,D),h.setTime(h.getTime()+6e4*((0<_?Y:D)-A))),d()[a+24>>>2>>>0]=h.getDay(),_=(Kt(h.getFullYear())?Cn:Sn)[h.getMonth()]+h.getDate()-1|0,d()[a+28>>>2>>>0]=_,d()[a>>>2>>>0]=h.getSeconds(),d()[a+4>>>2>>>0]=h.getMinutes(),d()[a+8>>>2>>>0]=h.getHours(),d()[a+12>>>2>>>0]=h.getDate(),d()[a+16>>>2>>>0]=h.getMonth(),d()[a+20>>>2>>>0]=h.getYear(),a=h.getTime(),isNaN(a)?(d()[Vn()>>>2>>>0]=61,a=-1):a/=1e3,BigInt(a)},Z:xn,_:In,O:function(a,h,_){function A(le){return(le=le.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?le[1]:"GMT"}a>>>=0,h>>>=0,_>>>=0;var D=new Date().getFullYear(),N=new Date(D,0,1),Y=new Date(D,6,1);D=N.getTimezoneOffset();var re=Y.getTimezoneOffset(),ce=Math.max(D,re);y()[a>>>2>>>0]=60*ce,d()[h>>>2>>>0]=+(D!=re),a=A(N),h=A(Y),a=An(a),h=An(h),re<D?(y()[_>>>2>>>0]=a,y()[_+4>>>2>>>0]=h):(y()[_>>>2>>>0]=h,y()[_+4>>>2>>>0]=a)},q:()=>{it("")},f:function(a,h,_){return a>>>=0,h=Tn(h>>>0,_>>>0),wr[a].apply(null,h)},M:function(a,h,_){return a>>>=0,h=Tn(h>>>0,_>>>0),wr[a].apply(null,h)},E:()=>{},I:()=>Date.now(),oa:()=>{throw Ft+=1,"unwind"},Q:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>W?(hs(),Wr(ms)).cpus().length:navigator.hardwareConcurrency,N:function(a){a>>>=0;var h=s().length;if(a<=h||4294901760<a)return!1;for(var _=1;4>=_;_*=2){var A=h*(1+.2/_);A=Math.min(A,a+100663296);var D=Math;A=Math.max(a,A);e:{D=(D.min.call(D,4294901760,A+(65536-A%65536)%65536)-pe.buffer.byteLength+65535)/65536;try{pe.grow(D),pt();var N=1;break e}catch{}N=void 0}if(N)return!0}return!1},ga:Pn,ha:kn,W:Pt,A:On,G:Rn,da:Bn,F:Dn,a:pe||m.wasmMemory,na:Un,r:function(a,h,_,A){return Un(a>>>0,h>>>0,_>>>0,A>>>0)}},me=function(){function a(_,A){return me=_.exports,me=Ii(),me=Wi(),we.Vb.push(me.bb),gt.unshift(me.va),Le=A,Jr(),me}var h={a:Ni};if(Tt++,m.instantiateWasm)try{return m.instantiateWasm(h,a)}catch(_){Te(`Module.instantiateWasm callback failed with error: ${_}`),T(_)}return Xr(h,function(_){a(_.instance,_.module)}).catch(T),{}}();m._OrtInit=(a,h)=>(m._OrtInit=me.wa)(a,h),m._OrtGetLastError=(a,h)=>(m._OrtGetLastError=me.xa)(a,h),m._OrtCreateSessionOptions=(a,h,_,A,D,N,Y,re,ce,le)=>(m._OrtCreateSessionOptions=me.ya)(a,h,_,A,D,N,Y,re,ce,le),m._OrtAppendExecutionProvider=(a,h)=>(m._OrtAppendExecutionProvider=me.za)(a,h),m._OrtAddFreeDimensionOverride=(a,h,_)=>(m._OrtAddFreeDimensionOverride=me.Aa)(a,h,_),m._OrtAddSessionConfigEntry=(a,h,_)=>(m._OrtAddSessionConfigEntry=me.Ba)(a,h,_),m._OrtReleaseSessionOptions=a=>(m._OrtReleaseSessionOptions=me.Ca)(a),m._OrtCreateSession=(a,h,_)=>(m._OrtCreateSession=me.Da)(a,h,_),m._OrtReleaseSession=a=>(m._OrtReleaseSession=me.Ea)(a),m._OrtGetInputOutputCount=(a,h,_)=>(m._OrtGetInputOutputCount=me.Fa)(a,h,_),m._OrtGetInputName=(a,h)=>(m._OrtGetInputName=me.Ga)(a,h),m._OrtGetOutputName=(a,h)=>(m._OrtGetOutputName=me.Ha)(a,h),m._OrtFree=a=>(m._OrtFree=me.Ia)(a),m._OrtCreateTensor=(a,h,_,A,D,N)=>(m._OrtCreateTensor=me.Ja)(a,h,_,A,D,N),m._OrtGetTensorData=(a,h,_,A,D)=>(m._OrtGetTensorData=me.Ka)(a,h,_,A,D),m._OrtReleaseTensor=a=>(m._OrtReleaseTensor=me.La)(a),m._OrtCreateRunOptions=(a,h,_,A)=>(m._OrtCreateRunOptions=me.Ma)(a,h,_,A),m._OrtAddRunConfigEntry=(a,h,_)=>(m._OrtAddRunConfigEntry=me.Na)(a,h,_),m._OrtReleaseRunOptions=a=>(m._OrtReleaseRunOptions=me.Oa)(a),m._OrtCreateBinding=a=>(m._OrtCreateBinding=me.Pa)(a),m._OrtBindInput=(a,h,_)=>(m._OrtBindInput=me.Qa)(a,h,_),m._OrtBindOutput=(a,h,_,A)=>(m._OrtBindOutput=me.Ra)(a,h,_,A),m._OrtClearBoundOutputs=a=>(m._OrtClearBoundOutputs=me.Sa)(a),m._OrtReleaseBinding=a=>(m._OrtReleaseBinding=me.Ta)(a),m._OrtRunWithBinding=(a,h,_,A,D)=>(m._OrtRunWithBinding=me.Ua)(a,h,_,A,D),m._OrtRun=(a,h,_,A,D,N,Y,re)=>(m._OrtRun=me.Va)(a,h,_,A,D,N,Y,re),m._OrtEndProfiling=a=>(m._OrtEndProfiling=me.Wa)(a),m._JsepOutput=(a,h,_)=>(m._JsepOutput=me.Xa)(a,h,_),m._JsepGetNodeName=a=>(m._JsepGetNodeName=me.Ya)(a);var Vn=()=>(Vn=me.Za)(),fr=m._pthread_self=()=>(fr=m._pthread_self=me._a)(),er=m._malloc=a=>(er=m._malloc=me.$a)(a),It=m._free=a=>(It=m._free=me.ab)(a);m.__emscripten_tls_init=()=>(m.__emscripten_tls_init=me.bb)();var Nn=a=>(Nn=me.cb)(a);m.__embind_initialize_bindings=()=>(m.__embind_initialize_bindings=me.db)();var Wn=m.__emscripten_thread_init=(a,h,_,A,D,N)=>(Wn=m.__emscripten_thread_init=me.fb)(a,h,_,A,D,N);m.__emscripten_thread_crashed=()=>(m.__emscripten_thread_crashed=me.gb)();var Gn=(a,h,_,A)=>(Gn=me.hb)(a,h,_,A),Ur=a=>(Ur=me.ib)(a),jr=m.__emscripten_thread_exit=a=>(jr=m.__emscripten_thread_exit=me.jb)(a),Hn=()=>(Hn=me.kb)(),Ln=(a,h)=>(Ln=me.lb)(a,h),Vr=()=>(Vr=me.mb)(),pr=a=>(pr=me.nb)(a),Nr=a=>(Nr=me.ob)(a),Fn=m.dynCall_ii=(a,h)=>(Fn=m.dynCall_ii=me.qb)(a,h),qn=a=>(qn=me.rb)(a),Kn=()=>(Kn=me.sb)(),Jn=a=>(Jn=me.tb)(a),Yn=()=>(Yn=me.ub)();m.___start_em_js=962083,m.___stop_em_js=962244;function Wi(){var a=me;a=Object.assign({},a);var h=A=>()=>A()>>>0,_=A=>D=>A(D)>>>0;return a.Za=h(a.Za),a._a=h(a._a),a.$a=_(a.$a),a.cb=_(a.cb),a.emscripten_main_runtime_thread_id=h(a.emscripten_main_runtime_thread_id),a.mb=h(a.mb),a.ob=_(a.ob),a}m.wasmMemory=pe,m.stackAlloc=Nr,m.stackSave=Vr,m.stackRestore=pr,m.keepRuntimeAlive=()=>0<Ft,m.UTF8ToString=ut,m.stringToUTF8=Ir,m.lengthBytesUTF8=ar,m.ExitStatus=ir,m.PThread=we;var mr;Xt=function a(){mr||Zn(),mr||(Xt=a)};function Zn(){if(!(0<Tt))if(M)S(m),M||Cr(gt),startWorker(m);else{if(m.preRun)for(typeof m.preRun=="function"&&(m.preRun=[m.preRun]);m.preRun.length;)nt.unshift(m.preRun.shift());Cr(nt),0<Tt||mr||(mr=!0,m.calledRun=!0,Me||(M||Cr(gt),S(m),M||Cr(St)))}}return Zn(),r.ready}})();typeof ys=="object"&&typeof Po=="object"?Po.exports=gs:typeof define=="function"&&define.amd&&define([],()=>gs)});var vs=Qn((Ly,Fm)=>{Fm.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\\n\'});var Ro,tr,ti,Fi,ri,xs,Bo,Ie=ue(()=>{"use strict";Ro=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},tr=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},ti=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Fi=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},ri=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},xs=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",Bo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var qi=ue(()=>{"use strict"});var As=ue(()=>{"use strict";qi()});var Ts,Es=ue(()=>{"use strict";Ts="1.18.0"});var Ps,At,Do=ue(()=>{"use strict";Es();Ps="warning",At={wasm:{},webgl:{},webgpu:{},versions:{common:Ts},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ps=e}},get logLevel(){return Ps}};Object.defineProperty(At,"logLevel",{enumerable:!0})});var Gr,ks=ue(()=>{"use strict";Do();Gr=At});var Os=ue(()=>{"use strict"});var Rs=ue(()=>{"use strict";Ki()});var Ds=ue(()=>{"use strict"});var Ms=ue(()=>{"use strict";Ki()});var Ki=ue(()=>{"use strict";Os();Rs();Ds();Ms()});var Ji=ue(()=>{"use strict";Ki()});var Mo,zs,gr,rr,zo=ue(()=>{"use strict";Do();Mo=(e,r)=>{(typeof At.trace>"u"?!At.wasm.trace:!At.trace)||console.timeStamp(`${e}::ORT::${r}`)},zs=(e,r)=>{let t=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],s=!1;for(let l=0;l<t.length;l++){if(s&&!t[l].includes("TRACE_FUNC")){let f=`FUNC_${e}::${t[l].trim().split(" ")[1]}`;r&&(f+=`::${r}`),Mo("CPU",f);return}t[l].includes("TRACE_FUNC")&&(s=!0)}},gr=e=>{(typeof At.trace>"u"?!At.wasm.trace:!At.trace)||zs("BEGIN",e)},rr=e=>{(typeof At.trace>"u"?!At.wasm.trace:!At.trace)||zs("END",e)}});var Us=ue(()=>{"use strict";qi();Ji();zo()});var js=ue(()=>{"use strict";Us()});var Vs=ue(()=>{"use strict"});var Ns=ue(()=>{"use strict"});var Ws=ue(()=>{"use strict"});var Gs=ue(()=>{"use strict"});var Hs=ue(()=>{"use strict";qi();Ji()});var Ls=ue(()=>{"use strict";Hs()});var Hr=ue(()=>{"use strict";As();ks();js();Ji();Vs();Ns();zo();Ws();Gs();Ls()});var nh,ih,Fs,qs,Ks,oh,We,Yt=ue(()=>{"use strict";Ie();nh=["V","I","W","E","F"],ih=(e,r)=>{console.log(`[${nh[e]},${new Date().toISOString()}]${r}`)},Ks=(e,r)=>{Fs=e,qs=r},oh=(e,r)=>{let t=ri(e),s=ri(Fs);t>=s&&ih(t,typeof r=="function"?r():r)},We=(...e)=>{qs&&oh(...e)}});var Js,Ys=ue(()=>{"use strict";Ie();Js=(e,r)=>new(Fi(r))(e)});var Yi=ue(()=>{"use strict"});var Zi,ah,Zs,jo,Uo,Qs,eu=ue(()=>{"use strict";Yt();Yi();Zi=e=>Math.ceil(e/16)*16,ah=1,Zs=()=>ah++,jo=async(e,r,t,s)=>{let l=Zi(t),f=e.device.createBuffer({size:l,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let d=e.getCommandEncoder();e.endComputePass(),d.copyBufferToBuffer(r,0,f,0,l),e.flush(),await f.mapAsync(GPUMapMode.READ);let y=f.getMappedRange();if(s){let b=s();return b.set(new Uint8Array(y,0,t)),b}else return new Uint8Array(y.slice(0,t))}finally{f.destroy()}},Uo=class{constructor(r){this.backend=r;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(r,t){let s=t.buffer,l=t.byteOffset,f=t.byteLength,d=Zi(f),y=this.storageCache.get(r);if(!y)throw new Error("gpu data for uploading does not exist");if(y.originalSize!==f)throw new Error(`inconsistent data size. gpu data size=${y.originalSize}, data size=${f}`);let b=this.backend.device.createBuffer({mappedAtCreation:!0,size:d,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),C=b.getMappedRange();new Uint8Array(C).set(new Uint8Array(s,l,f)),b.unmap();let m=this.backend.getCommandEncoder();this.backend.endComputePass(),m.copyBufferToBuffer(b,0,y.gpuData.buffer,0,d),We("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${r})`),this.buffersForUploadingPending.push(b)}memcpy(r,t){let s=this.storageCache.get(r);if(!s)throw new Error("source gpu data for memcpy does not exist");let l=this.storageCache.get(t);if(!l)throw new Error("destination gpu data for memcpy does not exist");if(s.originalSize!==l.originalSize)throw new Error("inconsistent source and destination gpu data size");let f=Zi(s.originalSize),d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(s.gpuData.buffer,0,l.gpuData.buffer,0,f)}registerExternalBuffer(r,t,s){let l;if(s){if(l=this.externalBuffers.get(s),l===void 0)throw new Error("previous buffer is not registered");if(r===s)return We("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${l}, buffer is the same, skip.`),l;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(s)}else l=Zs();return this.storageCache.set(l,{gpuData:{id:l,type:0,buffer:r},originalSize:t}),this.externalBuffers.set(r,l),We("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${l}, registered.`),l}unregisterExternalBuffer(r){let t=this.externalBuffers.get(r);t!==void 0&&(this.storageCache.delete(t),this.externalBuffers.delete(r),We("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`))}create(r,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let s=Zi(r),l,f=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,d=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(f||d){let b=f?this.freeBuffers:this.freeUniformBuffers,C=b.get(s);C||(C=[],b.set(s,C)),C.length>0?l=C.pop():l=this.backend.device.createBuffer({size:s,usage:t})}else l=this.backend.device.createBuffer({size:s,usage:t});let y={id:Zs(),type:0,buffer:l};return this.storageCache.set(y.id,{gpuData:y,originalSize:r}),We("verbose",()=>`[WebGPU] GpuDataManager.create(size=${r}) => id=${y.id}`),y}get(r){return this.storageCache.get(r)?.gpuData}release(r){let t=this.storageCache.get(r);if(!t)throw new Error("releasing data does not exist");return We("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(r,t){let s=this.storageCache.get(r);if(!s)throw new Error("data does not exist");await jo(this.backend,s.gpuData.buffer,s.originalSize,t)}refreshPendingBuffers(){for(let r of this.buffersForUploadingPending)r.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let r of this.buffersPending)(r.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(r.size).push(r):(r.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(r.size).push(r):r.destroy();this.buffersPending=[]}else{let r=this.capturedPendingBuffers.get(this.backend.currentSessionId);r||(r=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,r));for(let t of this.buffersPending)r.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(r){let t=this.capturedPendingBuffers.get(r);t&&(t.forEach(s=>{s.destroy()}),this.capturedPendingBuffers.delete(r))}},Qs=(...e)=>new Uo(...e)});var Vo,Re,ft=ue(()=>{"use strict";Vo=class{constructor(r){Object.assign(this,r)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(r=>`${this[r]}`).join(";")),this.key}},Re=e=>new Vo(e)});var No,Vt,X,yr,Xi,Qi,eo,Be=ue(()=>{"use strict";No=class{static calcMatMulShape(r,t){return r[1]!==t[0]?void 0:[r[0],t[1]]}},Vt=class{static calcShape(r,t,s=!1){let l=r.length,f=t.length;if(l===0)return t;if(f===0)return r;let d=Math.max(r.length,t.length),y=new Array(d);if(s){if(l<2||f<2)return;let b=No.calcMatMulShape([r[l-2],r[l-1]],[t[f-2],t[f-1]]);if(b===void 0)return;[y[d-2],y[d-1]]=b}for(let b=s?3:1;b<=d;b++){let C=l-b<0?1:r[l-b],m=f-b<0?1:t[f-b];if(C!==m&&C>1&&m>1)return;let S=Math.max(C,m);if(C&&m)y[d-b]=Math.max(C,m);else{if(S>1)return;y[d-b]=0}}return y}static isValidBroadcast(r,t){let s=r.length,l=t.length;if(s>l)return!1;for(let f=1;f<=s;f++)if(r[s-f]!==1&&r[s-f]!==t[l-f])return!1;return!0}},X=class e{static size(r){return e.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let s=r.length;if(s===0)return[];let l=new Array(s),f=s-1;for(;f>=0;){if(r[f]%t===0){l[f]=r[f]/t;break}if(t%r[f]!==0)throw new Error("cannot convert shape");l[f]=1,t/=r[f],f--}for(f--;f>=0;f--)l[f]=r[f];return l}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return e.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return e.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,s){let l=1;for(let f=t;f<s;f++){if(r[f]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");l*=r[f]}return l}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let s=new Array(t);s[t-1]=1,s[t-2]=r[t-1];for(let l=t-3;l>=0;--l)s[l]=s[l+1]*r[l+1];return s}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(s=>this.normalizeAxis(s,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(s=>r[s]):r.slice().reverse()}static padShape(r,t){let s=r.length;return r.map((l,f)=>l+t[f]+t[f+s])}static areEqual(r,t){return r.length!==t.length?!1:r.every((s,l)=>s===t[l])}},yr=class e{static adjustPoolAttributes(r,t,s,l,f,d){if(!r&&s.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let y=0;y<t.length-2;y++)y>=s.length?s.push(t[y+2]):s[y]=t[y+2];for(let y=0;y<s.length;y++)if(y<l.length){if(l[y]<0)throw new Error("strides should be greater than or equal to 1")}else l.push(1);for(let y=0;y<s.length;y++)if(y<f.length){if(f[y]<0)throw new Error("dilations should be greater than or equal to 1")}else f.push(1);for(let y=0;y<s.length*2;y++)if(y<d.length){if(d[y]<0)throw new Error("pad should be greater than or equal to 1")}else d.push(0);for(let y=0;y<s.length;y++){if(s[y]<=0)throw new Error("kernel shapes need to be greater than 0");if(d[y]>=s[y]||d[y+s.length]>=s[y])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,s,l,f,d,y){if(y){if(f.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(l.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let b=0;b<r.length-2;b++)e.adjustPadAndReturnShape(r[b+(d?1:2)],t[b],s[b],l[b],f,b,b+r.length-2,y)}}static computePoolOutputShape(r,t,s,l,f,d,y){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let b=[t[0],t[1]];return e.computeShapeHelper(r,t,b,s,l,f,d,y),b}static computeConvOutputShape(r,t,s,l,f,d,y){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let b=[r[0],t[0]];return e.computeShapeHelper(!1,r,b,s,l,f,d,y),b}static computeShapeHelper(r,t,s,l,f,d,y,b){if(r)for(let C=0;C<t.length-2;C++)s.push(1);else for(let C=0;C<t.length-2;C++)s.push(e.adjustPadAndReturnShape(t[C+2],l[C],f[C],d[C],y,C,C+t.length-2,b))}static adjustPadAndReturnShape(r,t,s,l,f,d,y,b){let C=s*(l-1)+1;if(b&&b!=="NOTSET")switch(b){case"VALID":return f[d]=0,f[y]=0,Math.floor((r-C)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let S=((r+t-1)/t-1)*t+l-r;return f[d]=Math.floor(b==="SAME_LOWER"?(S+1)/2:S/2),f[y]=S-f[d],Math.floor((r+S-l)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+f[d]+f[y]-C)/t+1)}},Xi=class{static getShapeOfGemmResult(r,t,s,l,f){if(r.length!==2||s.length!==2)throw new Error("shape need to be of size 2");let d,y,b;t?(d=r[1],y=r[0]):(d=r[0],y=r[1]);let C=-1;if(l?(b=s[0],C=1):(b=s[1],C=0),s[C]!==y)throw new Error("dimension mismatch");if(d<=0||b<=0||y<=0)throw new Error("invalid shape specified");if(f&&!Vt.isValidBroadcast(f,[d,b]))throw new Error("gemm: invalid bias shape for broadcast");return[d,b,y]}},Qi=-34028234663852886e22,eo=34028234663852886e22});var to,Go,Ge,$t,de,Ye,mt,Dt,Ct,Ce,Ho,Z,se,ro,Wo,tu,Lr,Oe=ue(()=>{"use strict";Ie();Be();to=64,Go=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Ge=(e,r=1)=>{let t=Go(e,r);return typeof t=="string"?t:t[0]},$t=(e,r=1)=>{let t=Go(e,r);return typeof t=="string"?t:t[1]},de=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:X.computeStrides(t)})}),r},Ye=e=>e%4===0?4:e%2===0?2:1,mt=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,Dt=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}f(${t})`,Ct=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,Ce=(e,r,t,s)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?s==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:s==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,Ho=(e,r,t,s,l)=>{let f=typeof t=="number",d=f?t:t.length,y=[...new Array(d).keys()],b=d<2?"u32":d<=4?`vec${d}<u32>`:`array<u32, ${d}>`,C=Go(r,l),m=typeof C=="string"?C:C[1],S=typeof C=="string"?C:C[0],T={indices:b,value:m,storage:S,tensor:r},O=ne=>typeof ne=="string"?ne:`${ne}u`,E={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},k=f?"uniforms.":"",j=`${k}${e}_shape`,V=`${k}${e}_strides`,B="";for(let ne=0;ne<d-1;ne++)B+=`\n    let dim${ne} = current / ${Ce(V,ne,d)};\n    let rest${ne} = current % ${Ce(V,ne,d)};\n    indices[${ne}] = dim${ne};\n    current = rest${ne};\n    `;B+=`indices[${d-1}] = current;`;let W=d<2?"":`\n  fn o2i_${e}(offset: u32) -> ${T.indices} {\n    var indices: ${T.indices};\n    var current = offset;\n    ${B}\n    return indices;\n  }`,M=ne=>(E.offsetToIndices=!0,d<2?ne:`o2i_${e}(${ne})`),q=[];if(d>=2)for(let ne=d-1;ne>=0;ne--)q.push(`${Ce(V,ne,d)} * (indices[${ne}])`);let Q=d<2?"":`\n  fn i2o_${e}(indices: ${T.indices}) -> u32 {\n    return ${q.join("+")};\n  }`,te=ne=>(E.indicesToOffset=!0,d<2?ne:`i2o_${e}(${ne})`),oe=(...ne)=>d===0?"0u":`${T.indices}(${ne.map(O).join(",")})`,J=(ne,he)=>d<2?`${ne}`:`${Ce(ne,he,d)}`,ie=(ne,he,Ee)=>d<2?`${ne}=${Ee};`:`${Ce(ne,he,d)}=${Ee};`,be={},De=(ne,he)=>{E.broadcastedIndicesToOffset=!0;let Ee=`${he.name}broadcastedIndicesTo${e}Offset`;if(Ee in be)return`${Ee}(${ne})`;let Qe=[];for(let st=d-1;st>=0;st--){let lt=he.indicesGet("outputIndices",st+he.rank-d);Qe.push(`${J(V,st)} * (${lt} % ${J(j,st)})`)}return be[Ee]=`fn ${Ee}(outputIndices: ${he.type.indices}) -> u32 {\n             return ${Qe.length>0?Qe.join("+"):"0u"};\n           }`,`${Ee}(${ne})`},qe=(ne,he)=>(()=>{if(T.storage===T.value)return`${e}[${ne}]=${he};`;if(T.storage==="vec2<u32>"&&T.value==="i32")return`${e}[${ne}]=vec2<u32>(u32(${he}), select(0u, 0xFFFFFFFFu, ${he} < 0));`;if(T.storage==="vec2<u32>"&&T.value==="u32")return`${e}[${ne}]=vec2<u32>(u32(${he}), 0u);`;if(T.storage==="u32"&&T.value==="vec4<bool>")return`${e}[${ne}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${he}));`;throw new Error(`not supported combination of storage type ${T.storage} and value type ${T.value} yet`)})(),Ve=ne=>(()=>{if(T.storage===T.value)return`${e}[${ne}]`;if(T.storage==="vec2<u32>"&&T.value==="i32")return`i32(${e}[${ne}].x)`;if(T.storage==="vec2<u32>"&&T.value==="u32")return`u32(${e}[${ne}].x)`;if(T.storage==="u32"&&T.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${ne}] & 0xFFu), bool(${e}[${ne}] & 0xFF00u), bool(${e}[${ne}] & 0xFF0000u), bool(${e}[${ne}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${T.storage} and value type ${T.value} yet`)})(),Te=d<2?"":`\n  fn get_${e}ByIndices(indices: ${T.indices}) -> ${m} {\n    return ${Ve(`i2o_${e}(indices)`)};\n  }`,pe=d<2?"":(()=>{let ne=y.map(Ee=>`d${Ee}: u32`).join(", "),he=y.map(Ee=>`d${Ee}`).join(", ");return`\n  fn get_${e}(${ne}) -> ${m} {\n    return get_${e}ByIndices(${oe(he)});\n  }`})(),Le=(...ne)=>{if(ne.length!==d)throw new Error(`indices length must be ${d}`);let he=ne.map(O).join(",");return d===0?Ve("0u"):d===1?Ve(he[0]):(E.get=!0,E.getByIndices=!0,E.indicesToOffset=!0,`get_${e}(${he})`)},Me=ne=>d<2?Ve(ne):(E.getByIndices=!0,E.indicesToOffset=!0,`get_${e}ByIndices(${ne})`),Se=d<2?"":`\n  fn set_${e}ByIndices(indices: ${T.indices}, value: ${m}) {\n    ${qe(`i2o_${e}(indices)`,"value")}\n  }`,ge=d<2?"":(()=>{let ne=y.map(Ee=>`d${Ee}: u32`).join(", "),he=y.map(Ee=>`d${Ee}`).join(", ");return`\n  fn set_${e}(${ne}, value: ${m}) {\n    set_${e}ByIndices(${oe(he)}, value);\n  }`})();return{impl:()=>{let ne=[],he=!1;return E.offsetToIndices&&(ne.push(W),he=!0),E.indicesToOffset&&(ne.push(Q),he=!0),E.broadcastedIndicesToOffset&&(Object.values(be).forEach(Ee=>ne.push(Ee)),he=!0),E.set&&(ne.push(ge),he=!0),E.setByIndices&&(ne.push(Se),he=!0),E.get&&(ne.push(pe),he=!0),E.getByIndices&&(ne.push(Te),he=!0),!f&&he&&ne.unshift(`const ${j} = ${T.indices}(${t.join(",")});`,`const ${V} = ${T.indices}(${X.computeStrides(t).join(",")});`),ne.join(`\n`)},type:T,offsetToIndices:M,indicesToOffset:te,broadcastedIndicesToOffset:De,indices:oe,indicesGet:J,indicesSet:ie,set:(...ne)=>{if(ne.length!==d+1)throw new Error(`indices length must be ${d}`);let he=ne[d];if(typeof he!="string")throw new Error("value must be string");let Ee=ne.slice(0,d).map(O).join(",");return d===0?qe("0u",he):d===1?qe(Ee[0],he):(E.set=!0,E.setByIndices=!0,E.indicesToOffset=!0,`set_${e}(${Ee}, ${he})`)},setByOffset:qe,setByIndices:(ne,he)=>d<2?qe(ne,he):(E.setByIndices=!0,E.indicesToOffset=!0,`set_${e}ByIndices(${ne}, ${he});`),get:Le,getByOffset:Ve,getByIndices:Me,usage:s,name:e,strides:V,shape:j,rank:d}},Z=(e,r,t,s=1)=>Ho(e,r,t,"input",s),se=(e,r,t,s=1)=>Ho(e,r,t,"output",s),ro=(e,r,t,s=1)=>Ho(e,r,t,"internal",s),Wo=class{constructor(r){this.normalizedDispatchGroup=r;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(r){return`if (global_idx >= ${typeof r=="number"?`${r}u`:r}) { return; }`}mainStart(r=to){let t=typeof r=="number"?r:r[0],s=typeof r=="number"?1:r[1],l=typeof r=="number"?1:r[2],f=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,d=f?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,y=f?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${t*s*l}u + local_idx;`;return`@compute @workgroup_size(${t}, ${s}, ${l})\n  fn main(${d}) {\n    ${y}\n  `}appendVariableUniforms(r){r.rank!==0&&(r.shape.startsWith("uniforms.")&&this.uniforms.push({name:r.shape.replace("uniforms.",""),type:"u32",length:r.rank}),r.strides.startsWith("uniforms.")&&this.uniforms.push({name:r.strides.replace("uniforms.",""),type:"u32",length:r.rank}))}declareVariable(r,t){if(r.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(r),this.appendVariableUniforms(r);let s=r.usage==="input"?"read":"read_write",l=r.type.storage;return`@group(0) @binding(${t}) var<storage, ${s}> ${r.name}: array<${l}>;`}declareVariables(...r){return r.map(t=>this.declareVariable(t,this.variableIndex++)).join(`\n`)}registerInternalVariable(r){if(r.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(r),this.appendVariableUniforms(r)}registerInternalVariables(...r){return r.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(r,t,s=1){return this.uniforms.push({name:r,type:t,length:s}),this}registerUniforms(r){return this.uniforms=this.uniforms.concat(r),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let r=[];for(let{name:t,type:s,length:l}of this.uniforms)if(l&&l>4)s==="f16"?r.push(`@align(16) ${t}:array<mat2x4<${s}>, ${Math.ceil(l/8)}>`):r.push(`${t}:array<vec4<${s}>, ${Math.ceil(l/4)}>`);else{let f=l==null||l===1?s:`vec${l}<${s}>`;r.push(`${t}:${f}`)}return`\n      struct Uniforms { ${r.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(r=>r.impl()).join(`\n`)+this.internalVariables.map(r=>r.impl()).join(`\n`)}},tu=e=>new Wo(e),Lr=(e,r)=>{let t=e.length,s=[];for(let l=0;l<t;l++){let f=t-1-l,d=e[f]||1;(r[r.length-1-l]||1)>1&&d===1&&s.unshift(f)}return s}});var sh,ru,uh,lh,Ot,nu,iu,Fr=ue(()=>{"use strict";Ie();Be();ft();Oe();sh=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},ru=(e,r)=>r&&r.length!==e?[...new Array(e).keys()].reverse():r,uh=(e,r)=>X.sortBasedOnPerm(e,ru(e.length,r)),lh=(e,r,t,s)=>{let l=[];l.push(`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {\n    var a: ${t.type.indices};`);for(let f=0;f<r;++f)l.push(t.indicesSet("a",e[f],`i[${f}]`));return l.push("return a;}"),l.join(`\n`)},Ot=(e,r)=>{let t=e.dataType,s=e.dims.length,l=ru(s,r),f=uh(e.dims,l),d=se("output",t,f.length),y=Z("a",t,s),b=C=>`\n  ${C.registerUniform("output_size","u32").declareVariables(y,d)}\n\n  ${lh(l,s,y,d)}\n\n  ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${d.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${d.setByOffset("global_idx",y.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:C=>{let m=X.size(f);return{outputs:[{dims:f,dataType:C[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},...de(C[0].dims,f)]}},getShaderSource:b}},nu=(e,r)=>{sh(e.inputs),e.compute(Ot(e.inputs[0],r.perm))},iu=e=>Re({perm:e.perm})});var dh,ch,fh,ph,mh,hh,gh,yh,bh,vh,Nt,ou,au,su,uu,lu,du,cu,fu,pu,mu,hu=ue(()=>{"use strict";Ie();Be();Oe();no();Fr();dh={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},ch={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},fh={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},ph={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},mh=(e,r)=>{let t=[];for(let s=r-e;s<r;++s)t.push(s);return t},hh=(e,r)=>{let t=[],s=e.length;for(let f=0;f<s;f++)r.indexOf(f)===-1&&t.push(e[f]);let l=r.map(f=>e[f]);return[t,l]},gh=(e,r)=>{let t=e.length+r.length,s=[],l=0;for(let f=0;f<t;f++)r.indexOf(f)===-1?s.push(e[l++]):s.push(1);return s},yh=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},bh=(e,r)=>{let t=[];if(!yh(e,r)){for(let s=0;s<r;++s)e.indexOf(s)===-1&&t.push(s);e.forEach(s=>t.push(s))}return t},vh=(e,r,t,s,l,f,d)=>{let y=t[0].dims,b=X.size(f),C=X.size(d),m=Z("_A",t[0].dataType,y),S=se("output",l,f),T=32,O=`\n          var<workgroup> aBestValues : array<f32, ${T}>;\n       `;return{name:e,shaderCache:r,getShaderSource:k=>`\n        ${k.registerUniform("reduceSize","u32").declareVariables(m,S)}\n        ${O}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${k.mainStart(T)}\n\n          let outputIndex = global_idx / ${T};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${fh[s]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${T}) {\n           let candidate = f32(${m.getByOffset("offset + k")});\n           bestValue = ${dh[s]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${T}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${ch[s]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${S.setByOffset("outputIndex",`${s==="mean"?`${S.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${S.type.storage}(${ph[s]})`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:f,dataType:l}],dispatchGroup:{x:b},programUniforms:[{type:12,data:C}]})}},Nt=(e,r,t,s)=>{let l=e.inputs.length===1?t:Lo(e.inputs,t),f=l.axes;f.length===0&&!l.noopWithEmptyAxes&&(f=e.inputs[0].dims.map((O,E)=>E));let d=X.normalizeAxes(f,e.inputs[0].dims.length),y=d,b=e.inputs[0],C=bh(y,e.inputs[0].dims.length);C.length>0&&(b=e.compute(Ot(e.inputs[0],C),{inputs:[0],outputs:[-1]})[0],y=mh(y.length,b.dims.length));let[m,S]=hh(b.dims,y),T=m;l.keepDims&&(T=gh(m,d)),e.compute(vh(r,{hint:l.cacheKey,inputDependencies:["type"]},[b],s,e.inputs[0].dataType,T,S),{inputs:[b]})},ou=(e,r)=>{Nt(e,"ReduceMeanShared",r,"mean")},au=(e,r)=>{Nt(e,"ReduceL1Shared",r,"l1")},su=(e,r)=>{Nt(e,"ReduceL2Shared",r,"l2")},uu=(e,r)=>{Nt(e,"ReduceLogSumExpShared",r,"logSumExp")},lu=(e,r)=>{Nt(e,"ReduceMaxShared",r,"max")},du=(e,r)=>{Nt(e,"ReduceMinShared",r,"min")},cu=(e,r)=>{Nt(e,"ReduceProdShared",r,"prod")},fu=(e,r)=>{Nt(e,"ReduceSumShared",r,"sum")},pu=(e,r)=>{Nt(e,"ReduceSumSquareShared",r,"sumSquare")},mu=(e,r)=>{Nt(e,"ReduceLogSumShared",r,"logSum")}});var Wt,wh,io,Lo,Gt,_h,$h,Ch,Sh,xh,Ih,Ah,Th,Eh,Ph,Ht,gu,yu,bu,vu,wu,_u,$u,Cu,Su,xu,no=ue(()=>{"use strict";Ie();Be();ft();Oe();hu();Wt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},wh=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],io=(e,r,t,s,l,f,d=!1,y=!1)=>{let b=[],C=t[0].dims,m=C.length,S=X.normalizeAxes(l,m),T=!y&&S.length===0;C.forEach((j,V)=>{T||S.indexOf(V)>=0?d&&b.push(1):b.push(j)});let O=b.length,E=X.size(b);return{name:e,shaderCache:r,getShaderSource:j=>{let V=[],B=Z("_A",t[0].dataType,m),W=se("output",f,O),M=s(B,W,S),q=M[2];for(let Q=0,te=0;Q<m;Q++)T||S.indexOf(Q)>=0?(d&&te++,q=`for(var j${Q}: u32 = 0; j${Q} < ${C[Q]}; j${Q}++) {\n                  ${M[2].includes("last_index")?`let last_index = j${Q};`:""}\n                  ${B.indicesSet("input_indices",Q,`j${Q}`)}\n                  ${q}\n                }`):(V.push(`${B.indicesSet("input_indices",Q,W.indicesGet("output_indices",te))};`),te++);return`\n\n        ${j.registerUniform("output_size","u32").declareVariables(B,W)}\n\n        ${j.mainStart()}\n          ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${B.type.indices};\n          let output_indices = ${W.offsetToIndices("global_idx")};\n\n          ${V.join(`\n`)}\n          ${M[0]}       // init ops for reduce max/min\n          ${M[1]}\n          ${q}\n          ${M[3]}\n          ${M.length===4?W.setByOffset("global_idx","value"):M.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:b,dataType:f}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},...de(C,b)]})}},Lo=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),Re({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},Gt=(e,r,t,s)=>{let l=e.inputs,f=l.length===1?t:Lo(l,t);e.compute(io(r,{hint:f.cacheKey,inputDependencies:["rank"]},[l[0]],f.noopWithEmptyAxes&&f.axes.length===0?wh:s,f.axes,l[0].dataType,f.keepDims,f.noopWithEmptyAxes),{inputs:[0]})},_h=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceLogSum",r,(s,l)=>[`var value = ${l.type.storage}(0);`,"",`value += ${s.getByIndices("input_indices")};`,"value = log(value);"])},$h=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceL1",r,(s,l)=>[`var value = ${l.type.storage}(0);`,"",`value += abs(${s.getByIndices("input_indices")});`,""])},Ch=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceL2",r,(s,l)=>[`var t = ${l.type.value}(0); var value = ${l.type.value}(0);`,"",`t = ${s.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Sh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceLogSumExp",r,(s,l)=>[`var value = ${l.type.storage}(0);`,"",`value += exp(${s.getByIndices("input_indices")});`,"value = log(value);"])},xh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceMax",r,(s,l,f)=>{let d=[];for(let y=0;y<s.rank;y++)(f.indexOf(y)>=0||f.length===0)&&d.push(s.indicesSet("input_indices",y,0));return[`${d.join(`\n`)}`,`var value = ${s.getByIndices("input_indices")};`,`value = max(value, ${s.getByIndices("input_indices")});`,""]})},Ih=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceMean",r,(s,l,f)=>{let d=1;for(let y=0;y<s.rank;y++)(f.indexOf(y)>=0||f.length===0)&&(d*=e.inputs[0].dims[y]);return["var sum = f32(0);","",`sum += f32(${s.getByIndices("input_indices")});`,`let value = ${l.type.value}(sum / ${d});`]})},Ah=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceMin",r,(s,l,f)=>{let d=[];for(let y=0;y<s.rank;y++)(f.indexOf(y)>=0||f.length===0)&&d.push(`input_indices[${y}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${s.getByIndices("input_indices")};`,`value = min(value, ${s.getByIndices("input_indices")});`,""]})},Th=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceProd",r,(s,l)=>[`var value = ${l.type.storage}(1);`,"",`value *= ${s.getByIndices("input_indices")};`,""])},Eh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceSum",r,(s,l)=>[`var value = ${l.type.storage}(0);`,"",`value += ${s.getByIndices("input_indices")};`,""])},Ph=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceSumSquare",r,(s,l)=>[`var t = ${l.type.value}(0); var value = ${l.type.value}(0);`,"",`t = ${s.getByIndices("input_indices")}; value += t * t;`,""])},Ht=(e,r,t)=>{if(r.length===0)return t;let s=1,l=1;for(let f=0;f<r.length;f++)r.indexOf(f)===-1?s*=e[f]:l*=e[f];return l<32&&s>1024},gu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Ih(e,r):ou(e,r)},yu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?$h(e,r):au(e,r)},bu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Ch(e,r):su(e,r)},vu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Sh(e,r):uu(e,r)},wu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?xh(e,r):lu(e,r)},_u=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Ah(e,r):du(e,r)},$u=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Th(e,r):cu(e,r)},Cu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Eh(e,r):fu(e,r)},Su=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Ph(e,r):pu(e,r)},xu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?_h(e,r):mu(e,r)}});var Iu,Au,Tu,Fo,Eu=ue(()=>{"use strict";Ie();ft();no();Iu=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Au=(e,r)=>{Iu(e.inputs);let t=(s,l,f)=>{let d=[];for(let y=0;y<s.rank;y++)(f.indexOf(y)>=0||f.length===0)&&d.push(`input_indices[${y}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${s.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {\n         value = ${s.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",l.setByOffset("global_idx","best_index")]};e.compute(io("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Tu=(e,r)=>{Iu(e.inputs);let t=(s,l,f)=>{let d=[];for(let y=0;y<s.rank;y++)(f.indexOf(y)>=0||f.length===0)&&d.push(`input_indices[${y}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${s.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {\n         value = ${s.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",l.setByOffset("global_idx","best_index")]};e.compute(io("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Fo=e=>Re(e)});var kh,Oh,Rh,Bh,oo,Dh,Pu,qo=ue(()=>{"use strict";Ie();Yi();Oe();kh=(e,r)=>{let t=e[0],s=e[1],l=e[2],f=e[3],d=e[4],y=e[5];if(d&&y)throw new Error("Attention cannot have both past and relative_position_bias");if(t.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let b=t.dims[0],C=t.dims[1],m=t.dims[2];if(l.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(s.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(s.dims[0]!==m)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(l.dims[0]!==s.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let S=l.dims[0]/3,T=S,O=T;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let W of r.qkvHiddenSizes)if(W%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");S=r.qkvHiddenSizes[0],T=r.qkvHiddenSizes[1],O=r.qkvHiddenSizes[2]}let E=C;if(S!==T)throw new Error("qkv_hidden_sizes first element should be same as the second");if(l.dims[0]!==S+T+O)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let k=0;if(d){if(T!==O)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(d.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(d.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(d.dims[1]!==b)throw new Error(\'Input "past" second dimension must be batch_size\');if(d.dims[2]!==r.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(d.dims[4]!==T/r.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');r.pastPresentShareBuffer||(k=d.dims[3])}let j=E+k,V=-1,B=0;if(f)throw new Error("Mask not supported");if(d)throw new Error("past is not supported");if(y)throw new Error("relativePositionBias is not supported");return{batchSize:b,sequenceLength:C,pastSequenceLength:k,kvSequenceLength:E,totalSequenceLength:j,maxSequenceLength:V,inputHiddenSize:m,hiddenSize:S,vHiddenSize:O,headSize:Math.floor(S/r.numHeads),vHeadSize:Math.floor(O/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:B,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Oh=(e,r,t,s)=>{let l=Ye(s),f=64,d=s/l;d<f?f=1:d/8<64&&(f=Math.ceil(d/8));let y=Math.ceil(s/l/f),b=[{type:r.dataType,data:1/s},{type:12,data:d},{type:12,data:y}],C=Ge(r.dataType,l),m=S=>{let T=se("x",r.dataType,r.dims,l),O="thread_max_vector";l===2?O="max(thread_max_vector.x, thread_max_vector.y)":l===4&&(O="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let E=$t(r.dataType),k=[{name:"d_inv",type:E},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${f}>;\n  var<workgroup> wgSum: array<f32, ${f}>;\n  ${S.registerUniforms(k).declareVariables(T)}\n  ${S.mainStart([f,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${mt("f32",l,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${Dt(E,l,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${O};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${f}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${mt("f32",l,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${Dt(E,l,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${Ct("sumVector",l)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${f}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${mt(E,l,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${Dt(E,l,"x[offset + i]")};\n        x[offset + i] = ${T.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${f};${C};${l}`},getShaderSource:m,getRunData:()=>({outputs:[],dispatchGroup:{x:t},programUniforms:b})},{inputs:[r],outputs:[]})},Rh=(e,r,t,s,l,f)=>{let d=[l.batchSize,l.numHeads,l.sequenceLength,l.kvSequenceLength+l.pastSequenceLength],y=f.scale===0?1/Math.sqrt(l.headSize):f.scale,b=Ye(l.headSize),C=l.headSize/b,m=12,S={x:Math.ceil(l.totalSequenceLength/m),y:Math.ceil(l.sequenceLength/m),z:l.batchSize*l.numHeads},T=[{type:12,data:l.sequenceLength},{type:12,data:C},{type:12,data:l.totalSequenceLength},{type:12,data:l.kvSequenceLength},{type:r.dataType,data:y}],O=[r,t],E=j=>{let V=Z("q",r.dataType,r.dims,b),B=Z("key",t.dataType,t.dims,b),W=se("output",r.dataType,d),M=Ge(r.dataType),q=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:M}];return`\n  const beta: ${M} = 1.0;\n  const TILE_SIZE = ${m}u;\n\n  var<workgroup> tileQ: array<${V.type.storage}, ${m*m}>;\n  var<workgroup> tileK: array<${V.type.storage}, ${m*m}>;\n  ${j.registerUniforms(q).declareVariables(V,B,W)}\n  ${j.mainStart([m,m,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${mt(M,b)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${Ct("value",b)} * uniforms.alpha;\n    }\n  }`},k=e.compute({name:"AttentionProbs",shaderCache:{hint:`${b}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:d,dataType:r.dataType,gpuDataType:0}],dispatchGroup:S,programUniforms:T}),getShaderSource:E},{inputs:O,outputs:[-1]})[0];return Oh(e,k,l.batchSize*l.numHeads*l.sequenceLength,l.totalSequenceLength),k},Bh=(e,r,t,s)=>{let l=[s.batchSize,s.sequenceLength,s.vHiddenSize],f=12,d={x:Math.ceil(s.vHeadSize/f),y:Math.ceil(s.sequenceLength/f),z:s.batchSize*s.numHeads},y=[{type:12,data:s.sequenceLength},{type:12,data:s.totalSequenceLength},{type:12,data:s.vHeadSize},{type:12,data:s.numHeads},{type:12,data:s.vHiddenSize}],b=C=>{let m=Z("probs",r.dataType,r.dims),S=Z("v",t.dataType,t.dims),T=se("output",r.dataType,l),O=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${f}u;\n  var<workgroup> tileQ: array<${m.type.value}, ${f*f}>;\n  var<workgroup> tileK: array<${m.type.value}, ${f*f}>;\n  ${C.registerUniforms(O).declareVariables(m,S,T)}\n  ${C.mainStart([f,f,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${m.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:l,dataType:r.dataType,gpuDataType:0}],dispatchGroup:d,programUniforms:y}),getShaderSource:b},{inputs:[r,t],outputs:[0]})[0]},oo=(e,r,t,s,l,f,d,y,b,C,m)=>{let S=Rh(e,r,t,b,C,m);Bh(e,S,s,C)},Dh=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],s=r.sequenceLength,l=r.inputHiddenSize,f=r.headSize,d=12,y={x:Math.ceil(r.headSize/d),y:Math.ceil(r.sequenceLength/d),z:r.batchSize*r.numHeads},b=[e.inputs[0],e.inputs[1],e.inputs[2]],C=[{type:12,data:s},{type:12,data:l},{type:12,data:f},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],m=S=>{let T=se("output_q",b[0].dataType,t),O=se("output_k",b[0].dataType,t),E=se("output_v",b[0].dataType,t),k=Z("input",b[0].dataType,b[0].dims),j=Z("weight",b[1].dataType,b[1].dims),V=Z("bias",b[2].dataType,b[2].dims),B=k.type.storage,W=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${d}u;\n  var<workgroup> tileInput: array<${B}, ${d*d}>;\n  var<workgroup> tileWeightQ: array<${B}, ${d*d}>;\n  var<workgroup> tileWeightK: array<${B}, ${d*d}>;\n  var<workgroup> tileWeightV: array<${B}, ${d*d}>;\n  ${S.registerUniforms(W).declareVariables(k,j,V,T,O,E)}\n  ${S.mainStart([d,d,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${B}(0);\n    var valueK = ${B}(0);\n    var valueV = ${B}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:y,programUniforms:C}),getShaderSource:m},{inputs:b,outputs:[-1,-1,-1]})},Pu=(e,r)=>{let t=kh(e.inputs,r),[s,l,f]=Dh(e,t);return oo(e,s,l,f,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t,r)}});var Mh,zh,Uh,ku,Ou=ue(()=>{"use strict";Hr();Ie();Be();ft();Oe();Mh=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(s,l,f)=>{let d=l.length;if(d!==s.length)throw new Error(`${f}: num dimensions != ${d}`);l.forEach((y,b)=>{if(y!==s[b])throw new Error(`${f}: dim[${b}] do not match`)})};if(e[0].dims.length>1){let s=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,s,"Invalid input scale"),t(e[2].dims,s,"Invalid input B"),t(e[3].dims,s,"Invalid input mean"),t(e[4].dims,s,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},zh=(e,r)=>{let{epsilon:t,spatial:s,format:l}=r,f=e[0].dims,d=s?Ye(f[f.length-1]):1,y=l==="NHWC"&&f.length>1?d:1,b=X.size(f)/d,C=s,m=C?f.length:f,S=Z("x",e[0].dataType,e[0].dims,d),T=Z("scale",e[1].dataType,e[1].dims,y),O=Z("bias",e[2].dataType,e[2].dims,y),E=Z("inputMean",e[3].dataType,e[3].dims,y),k=Z("inputVar",e[4].dataType,e[4].dims,y),j=se("y",e[0].dataType,m,d),V=()=>{let W="";if(s)W=`let cOffset = ${f.length===1?"0u":l==="NHWC"?`outputIndices[${f.length-1}] / ${d}`:"outputIndices[1]"};`;else if(l==="NCHW")W=`\n            ${j.indicesSet("outputIndices","0","0")}\n            let cOffset = ${j.indicesToOffset("outputIndices")};`;else{W=`var cIndices = ${T.type.indices}(0);\n                       cIndices[0] = outputIndices[${f.length-1}];`;for(let M=1;M<T.rank;M++)W+=`cIndices[${M}] = outputIndices[${M}];`;W+=`let cOffset = ${T.indicesToOffset("cIndices")};`}return W},B=W=>`\n  const epsilon = ${t};\n  ${W.registerUniform("outputSize","u32").declareVariables(S,T,O,E,k,j)}\n  ${W.mainStart()}\n  ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${j.offsetToIndices(`global_idx * ${d}`)};\n    ${V()}\n    let scale = ${T.getByOffset("cOffset")};\n    let bias = ${O.getByOffset("cOffset")};\n    let inputMean = ${E.getByOffset("cOffset")};\n    let inputVar = ${k.getByOffset("cOffset")};\n    let x = ${S.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${j.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${s}_${d}`,inputDependencies:C?["rank","type","type","type","type"]:void 0},getShaderSource:B,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:C?[{type:12,data:b},...de(f)]:[{type:12,data:b}]})}},Uh=e=>Re(e),ku=(e,r)=>{let{inputs:t,outputCount:s}=e,l=Uh({...r,outputCount:s});if(Gr.webgpu.validateInputContent&&Mh(t,l),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(zh(t,l))}});var jh,Vh,Ru,Bu=ue(()=>{"use strict";Be();Oe();jh=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Vh=e=>{let r=e[0].dims,t=e[0].dims[2],s=X.size(r)/4,l=e[0].dataType,f=Z("input",l,r,4),d=Z("bias",l,[t],4),y=Z("residual",l,r,4),b=se("output",l,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:m=>`\n  const channels = ${t}u / 4;\n  ${m.declareVariables(f,d,y,b)}\n\n  ${m.mainStart()}\n    ${m.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n    let value = ${f.getByOffset("global_idx")}\n      + ${d.getByOffset("global_idx % channels")} + ${y.getByOffset("global_idx")};\n    ${b.setByOffset("global_idx","value")}\n  }`}},Ru=e=>{jh(e.inputs),e.compute(Vh(e.inputs))}});var Nh,He,Du,Mu,zu,Uu,ju,Vu,Nu,Wu,Gu,Wh,Hu,Lu,Fu,qu,ao,Ku,so,Ju,Yu,Zu,Xu,Qu,el,tl,rl,nl,il,ol,al,sl,ul,ll,dl,cl,fl,Ko,Jo,pl,ml,hl,uo=ue(()=>{"use strict";Ie();Be();ft();Oe();Nh=(e,r,t,s,l,f)=>{let d=Math.ceil(r/4),y="";typeof l=="string"?y=`${l}(a)`:y=l("a");let b=Z("inputData",t,[d],4),C=se("outputData",s,[d],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(b,C)}\n\n  ${f??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${b.getByOffset("global_idx")};\n    ${C.setByOffset("global_idx",y)}\n  }`},He=(e,r,t,s,l,f=e.dataType)=>({name:r,shaderCache:{hint:l,inputDependencies:["type"]},getShaderSource:d=>Nh(d,X.size(e.dims),e.dataType,f,t,s),getRunData:d=>({outputs:[{dims:e.dims,dataType:f}],dispatchGroup:{x:Math.ceil(X.size(d[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(X.size(e.dims)/4)}]})}),Du=e=>{e.compute(He(e.inputs[0],"Abs","abs"))},Mu=e=>{e.compute(He(e.inputs[0],"Acos","acos"))},zu=e=>{e.compute(He(e.inputs[0],"Acosh","acosh"))},Uu=e=>{e.compute(He(e.inputs[0],"Asin","asin"))},ju=e=>{e.compute(He(e.inputs[0],"Asinh","asinh"))},Vu=e=>{e.compute(He(e.inputs[0],"Atan","atan"))},Nu=e=>{e.compute(He(e.inputs[0],"Atanh","atanh"))},Wu=e=>Re(e),Gu=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${r.to}`)}e.compute(He(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},Wh=e=>{let r=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:Qi,t=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:eo;return Re({min:r,max:t})},Hu=(e,r)=>{let t=e.inputs.length===1?r:Wh(e.inputs),s=$t(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Clip",l=>`clamp(${l}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${s}> = vec4(${s}(${t.min}));\n    const clip_max_: vec4<${s}> = vec4(${s}(${t.max}));\n`,t.cacheKey),{inputs:[0]})},Lu=e=>{e.compute(He(e.inputs[0],"Ceil","ceil"))},Fu=e=>{e.compute(He(e.inputs[0],"Cos","cos"))},qu=e=>{e.compute(He(e.inputs[0],"Cosh","cosh"))},ao=e=>Re(e),Ku=(e,r)=>{let t=$t(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`\n  const elu_alpha_ = ${t}(${r.alpha});\n\n  fn elu_f32(a: ${t}) -> ${t} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,r.cacheKey))},so=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,Ju=e=>{let r=$t(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,so(r)))},Yu=e=>{e.compute(He(e.inputs[0],"Exp","exp"))},Zu=e=>{e.compute(He(e.inputs[0],"Floor","floor"))},Xu=e=>{let r=$t(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,so(r)))},Qu=(e,r)=>{let t=$t(e.inputs[0].dataType);e.compute(He(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},el=e=>{e.compute(He(e.inputs[0],"Not",r=>`!${r}`))},tl=e=>{e.compute(He(e.inputs[0],"Neg",r=>`-${r}`))},rl=e=>{e.compute(He(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},nl=e=>{let r=$t(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},il=e=>{e.compute(He(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},ol=e=>Re(e),al=(e,r)=>{let t=$t(e.inputs[0].dataType);e.compute(He(e.inputs[0],"HardSigmoid",s=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${s} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},sl=e=>{e.compute(He(e.inputs[0],"Sin","sin"))},ul=e=>{e.compute(He(e.inputs[0],"Sinh","sinh"))},ll=e=>{e.compute(He(e.inputs[0],"Sqrt","sqrt"))},dl=e=>{e.compute(He(e.inputs[0],"Tan","tan"))},cl=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,fl=e=>{e.compute(He(e.inputs[0],"Tanh",cl))},Ko=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${cl("v")};\n}\n`,Jo=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,pl=e=>{let r=$t(e.inputs[0].dataType);e.compute(He(e.inputs[0],"FastGelu",Jo,Ko(r),void 0,e.inputs[0].dataType))},ml=(e,r)=>{let t=$t(e.inputs[0].dataType);return e.compute(He(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},hl=e=>{e.compute(He(e.inputs[0],"Log","log"))}});var Gh,Hh,yl,bl=ue(()=>{"use strict";Be();Oe();uo();Gh=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Hh=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=Z("input",e[0].dataType,e[0].dims,4),s=Z("bias",e[0].dataType,[e[0].dims[2]],4),l=se("output",e[0].dataType,r,4),f=X.size(r)/4,d=Ge(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)}}),getShaderSource:b=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${b.declareVariables(t,s,l)}\n\n  ${so(d)}\n\n  ${b.mainStart()}\n    ${b.guardAgainstOutOfBoundsWorkgroupSizes(f)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${l.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},yl=e=>{Gh(e.inputs),e.compute(Hh(e.inputs))}});var Lh,Fh,Lt,vl,wl,_l,$l,Cl,Sl,xl,Il,Al,Tl,El=ue(()=>{"use strict";Ie();Be();Oe();Lh=(e,r,t,s,l,f,d,y,b,C,m,S)=>{let T,O;typeof y=="string"?T=O=(B,W)=>`${y}((${B}),(${W}))`:typeof y=="function"?T=O=y:(T=y.scalar,O=y.vector);let E=se("outputData",m,s.length,4),k=Z("aData",b,r.length,4),j=Z("bData",C,t.length,4),V;if(l)if(f){let B=X.size(r)===1,W=X.size(t)===1,M=r.length>0&&r[r.length-1]%4===0,q=t.length>0&&t[t.length-1]%4===0;B||W?V=E.setByOffset("global_idx",O(B?`${k.type.value}(${k.getByOffset("0")}.x)`:k.getByOffset("global_idx"),W?`${j.type.value}(${j.getByOffset("0")}.x)`:j.getByOffset("global_idx"))):V=`\n            let outputIndices = ${E.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${k.broadcastedIndicesToOffset("outputIndices",E)};\n            let offsetB = ${j.broadcastedIndicesToOffset("outputIndices",E)};\n            ${E.setByOffset("global_idx",O(d||M?k.getByOffset("offsetA / 4u"):`${k.type.value}(${k.getByOffset("offsetA / 4u")}[offsetA % 4u])`,d||q?j.getByOffset("offsetB / 4u"):`${j.type.value}(${j.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else V=E.setByOffset("global_idx",O(k.getByOffset("global_idx"),j.getByOffset("global_idx")));else{if(!f)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let B=(W,M,q="")=>{let Q=`aData[indexA${M}][componentA${M}]`,te=`bData[indexB${M}][componentB${M}]`;return`\n            let outputIndices${M} = ${E.offsetToIndices(`global_idx * 4u + ${M}u`)};\n            let offsetA${M} = ${k.broadcastedIndicesToOffset(`outputIndices${M}`,E)};\n            let offsetB${M} = ${j.broadcastedIndicesToOffset(`outputIndices${M}`,E)};\n            let indexA${M} = offsetA${M} / 4u;\n            let indexB${M} = offsetB${M} / 4u;\n            let componentA${M} = offsetA${M} % 4u;\n            let componentB${M} = offsetB${M} % 4u;\n            ${W}[${M}] = ${q}(${T(Q,te)});\n          `};m===9?V=`\n            var data = vec4<u32>(0);\n            ${B("data",0,"u32")}\n            ${B("data",1,"u32")}\n            ${B("data",2,"u32")}\n            ${B("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:V=`\n            ${B("outputData[global_idx]",0)}\n            ${B("outputData[global_idx]",1)}\n            ${B("outputData[global_idx]",2)}\n            ${B("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(k,j,E)}\n\n        ${S??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${V}\n      }`},Fh=(e,r,t,s,l,f,d=t.dataType)=>{let y=!X.areEqual(t.dims,s.dims),b=t.dims,C=X.size(t.dims),m=!1,S=!1,T=[y];if(y){let O=Vt.calcShape(t.dims,s.dims,!1);if(!O)throw new Error("Can\'t perform binary op on the given tensors");b=O,C=X.size(b);let E=X.size(t.dims)===1,k=X.size(s.dims)===1,j=t.dims.length>0&&t.dims[t.dims.length-1]%4===0,V=s.dims.length>0&&s.dims[s.dims.length-1]%4===0;T.push(E),T.push(k),T.push(j),T.push(V);let B=1;for(let W=1;W<b.length;W++){let M=t.dims[t.dims.length-W]??1,q=s.dims[s.dims.length-W]??1;if(M===q)B*=M;else break}B%4===0?(S=!0,m=!0):(E||k||j||V)&&(m=!0)}else m=!0;return T.push(m),{name:e,shaderCache:{hint:r+T.map(O=>O.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:O=>Lh(O,t.dims,s.dims,b,m,y,S,l,t.dataType,s.dataType,d,f),getRunData:()=>({outputs:[{dims:b,dataType:d}],dispatchGroup:{x:Math.ceil(C/64/4)},programUniforms:[{type:12,data:Math.ceil(X.size(b)/4)},...de(t.dims,s.dims,b)]})}},Lt=(e,r,t,s,l,f)=>{e.compute(Fh(r,l??"",e.inputs[0],e.inputs[1],t,s,f))},vl=e=>{Lt(e,"Add",(r,t)=>`${r}+${t}`)},wl=e=>{Lt(e,"Div",(r,t)=>`${r}/${t}`)},_l=e=>{Lt(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},$l=e=>{Lt(e,"Mul",(r,t)=>`${r}*${t}`)},Cl=e=>{let r=Z("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Lt(e,"Pow",{scalar:(s,l)=>`pow_custom(${s},${l})`,vector:(s,l)=>`pow_vector_custom(${s},${l})`},`\n    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {\n      if (b == ${r}(0.0)) {\n        return ${r}(1.0);\n      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {\n        return ${r}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {\n      // TODO: implement vectorized pow\n      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},Sl=e=>{Lt(e,"Sub",(r,t)=>`${r}-${t}`)},xl=e=>{Lt(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},Il=e=>{Lt(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},Al=e=>{Lt(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},Tl=e=>{Lt(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}});var Kh,Jh,Yh,Zh,Pl,kl,Ol=ue(()=>{"use strict";Ie();Be();ft();Oe();Kh=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,s=e[t],l=s.dataType,f=s.dims.length;e.forEach((d,y)=>{if(y!==t){if(d.dataType!==l)throw new Error("input tensors should be one type");if(d.dims.length!==f)throw new Error("input tensors should have the same shape");d.dims.forEach((b,C)=>{if(C!==r&&b!==s.dims[C])throw new Error("non concat dimensions must match")})}})},Jh=(e,r)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${r});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Yh=(e,r)=>{let t=e.length,s=[];for(let l=0;l<t;++l){let f=r.setByOffset("global_idx",e[l].getByIndices("indices"));t===1?s.push(f):l===0?s.push(`if (inputIndex == ${l}u) { ${f} }`):l===t-1?s.push(`else { ${f} }`):s.push(`else if (inputIndex == ${l}) { ${f} }`)}return s.join(`\n`)},Zh=(e,r,t,s)=>{let l=X.size(t),f=new Array(e.length),d=new Array(e.length),y=0,b=[],C=[],m=[{type:12,data:l}];for(let k=0;k<e.length;++k)y+=e[k].dims[r],f[k]=y,C.push(e[k].dims.length),d[k]=Z(`input${k}`,s,C[k]),b.push("rank"),m.push({type:12,data:f[k]});for(let k=0;k<e.length;++k)m.push(...de(e[k].dims));m.push(...de(t));let S=se("output",s,t.length),T=S.indicesGet("indices",r),O=Array.from(Array(f.length).keys()).map(k=>`uniforms.sizeInConcatAxis${k}`).join(","),E=k=>`\n\n  ${(()=>{k.registerUniform("outputSize","u32");for(let j=0;j<e.length;j++)k.registerUniform(`sizeInConcatAxis${j}`,"u32");return k.declareVariables(...d,S)})()}\n\n  ${Jh(f.length,O)}\n\n  ${k.mainStart()}\n    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${S.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${T});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${f.length}u>(${O});\n      ${T} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Yh(d,S)}\n  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:b},getRunData:()=>({outputs:[{dims:t,dataType:s}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:m}),getShaderSource:E}},Pl=(e,r)=>{let t=e.inputs,s=t[0].dims,l=X.normalizeAxis(r.axis,s.length);Kh(t,l);let f=s.slice();f[l]=t.reduce((y,b)=>y+(b.dims.length>l?b.dims[l]:0),0);let d=t.filter(y=>X.size(y.dims)>0);e.compute(Zh(d,l,f,t[0].dataType),{inputs:d})},kl=e=>Re({axis:e.axis})});var Mt,zt,Ut,lo,nr=ue(()=>{"use strict";Ie();Be();Mt=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},zt=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},Ut=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},lo=e=>{let r=e?.activation||"";if(r==="HardSigmoid"){let[t,s]=e?.activation_params||[.2,.5];return{activation:r,alpha:t,beta:s}}else if(r==="Clip"){let[t,s]=e?.activation_params||[Qi,eo];return{activation:r,clipMax:s,clipMin:t}}else if(r==="LeakyRelu"){let[t]=e?.activation_params||[.01];return{activation:r,alpha:t}}return{activation:r}}});var ht,co,fo=ue(()=>{"use strict";ht=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},co=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var po,Yo=ue(()=>{"use strict";po=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var Rl,Xh,qr,Zo=ue(()=>{"use strict";Rl=(e,r,t,s,l)=>{if(r)throw new Error("getAVec4DataSnippet currently not implemented for transposed A.");{let f=`mm_readA(i32(batch), i32(outputRowInGlobalBase + (${t})), i32(sharedDimBase / innerDimPackedSize + (${s}))${l?", batchIndices":""})`;return e==="f16"?`bitcast<vec2<u32>>(${f})`:`${f}`}},Xh=(e,r,t=4,s=1,l=1)=>{let f=4,d=r/f,y=(V,B)=>B<<1|(V&2)>>1,b=(V,B)=>V&1;for(var C="",m=[],S=[],T=0;T<d;T=T+1)for(var O=0;O<4;O=O+1){m.push(`\n          let BCached${O}_k${T} = mm_Bsub[${T*f+O}][colTileIdInWorkgroup];\n  `);for(var E="",k=0;k<t;k=k+1){let V=y(k,T),B=e==="f32"?`subgroupBroadcast(distributedACache[${b(k,T)}].${"xyzw"[O]}, ${V})`:`bitcast<vec4<f16>>(subgroupBroadcast(distributedACache[${b(k,T)}], ${V})).${"xyzw"[O]}`;E=E+`\nacc[${k}] = BCached${O}_k${T} * ${B} + acc[${k}];`}S.push(E)}C="";for(var k=0;k<l;k++)for(var j=0;j<s;j++)C=C+m[k*s+j];for(var k=0;k<m.length/s;k++){for(var j=0;j<s;j++)C=C+(m[(k+l)*s+j]??"");for(var j=0;j<s;j++)C=C+S[k*s+j];C=C+`\n\n`}return C},qr=(e,r,t="f32",s,l=!1,f=32,d=!1,y=32,b=1,C=1)=>{let[m,S]=e,[T,O]=r,E=O*S,j=l?E:f;if(T!==16)throw new Error("makeMatMulPackedVec4WithSubgroupSource currently only support workgroupSize.x (i.e. colTileNumberInWorkgroup) == 16.");if(S!==4)throw new Error("makeMatMulPackedVec4WithSubgroupSource currently only support workPerThread[1] (i.e. rowPerThread) == 4.");if(m!==4)throw new Error(`colPerThread ${e[0]} must be 4.`);if(l)throw new Error("makeMatMulPackedVec4WithSubgroupSource currently not implemented for transposed A.");if(f!==32)throw new Error("makeMatMulPackedVec4WithSubgroupSource currently only support sharedDimTileStep == 32.");if(d||y!==32)throw new Error("makeMatMulPackedVec4WithSubgroupSource currently not support splitK.");if(t!=="f32"&&t!=="f16")throw new Error("makeMatMulPackedVec4WithSubgroupSource currently only support f32 and f16 type.");if(f%O!==0)throw new Error(`sharedDimTileStep (${f}) must be a multiple of rowTileNumberInWorkgroup (${O}).`);if(j%T!==0)throw new Error(`tileAWidth ${j} must be divisible by colTileNumberInWorkgroup (workgroupSize[0], ${r[0]}).`);if(f%O!==0)throw new Error(`tileInner ${f} must be divisible by rowTileNumberInWorkgroup (workgroupSize[1], ${r[1]}).`);let V=t==="f32"?"vec4<f32>":"vec2<u32>";return`\nconst rowPerThread = ${S}u;\nconst colPerThread = ${m}u;\nconst innerDimPackedSize = 4u; // Vec4\n\nconst rowTileNumberInWorkgroup = ${O}u;\nconst colTileNumberInWorkgroup = ${T}u;\n\nconst sharedDimTileStep = ${f}u;\nconst bRowLoadedPerThread = sharedDimTileStep / rowTileNumberInWorkgroup;\n\n// Shader compute sliced matrix multiplication on Slice MxKxN\nconst sliceShapeM = rowTileNumberInWorkgroup * rowPerThread;\nconst sliceShapeK = sharedDimTileStep;\nconst sliceShapeKInVec4 = sliceShapeK / 4u;\nconst sliceShapeN = colTileNumberInWorkgroup * colPerThread;\nconst sliceShapeNInVec4 = sliceShapeN / 4u;\n\nvar<workgroup> mm_Bsub: array<array<vec4<${t}>, sliceShapeNInVec4>, sliceShapeK>;\n\n@compute @workgroup_size(colTileNumberInWorkgroup, rowTileNumberInWorkgroup, 1)\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n    @builtin(global_invocation_id) globalId : vec3<u32>,\n    @builtin(workgroup_id) workgroupId : vec3<u32>,\n    @builtin(subgroup_size) subgroupSize: u32,\n    @builtin(subgroup_invocation_id) subgroupId: u32) {\n    let rowTileIdInWorkgroup = localId.y;\n    let outputRowInWorkgroupBase = rowTileIdInWorkgroup * rowPerThread;\n    let colTileIdInWorkgroup = localId.x;\n\n    let outputRowInGlobalBase = globalId.y * rowPerThread;\n    let outputColInGlobalVec4 = globalId.x;\n    let batch = ${d?"0":"i32(globalId.z)"};\n    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}\n\n    // Each thread output rowPerThread*4 results\n    var acc: array<vec4<${t}>, rowPerThread>;\n\n    // Distributed A cache.\n    // Accessing pattern: A[outputRowInGlobalBase + i][k], first i [0..rowPerThread(4)], then k [0..sliceShapeKInVec4(8)]\n    //                    subgroups only access 4*8 vec4, each thread 2 vec4 for 16 threads in a subgroup\n    // Mapped:\n    //          A subgroup slice [rowPerThread(R,4), sliceShapeKInVec4(C_packed,8)] of vec4\n    //          mapped to           16(subgroupId)*2(j) of distributed A cache, R first map to j.\n    //                subgroupId j\n    //          bits     3 2 1 0 0\n    //          ---------------------\n    //          bits     2 1 0 1 0\n    //                       C   R\n    //          subgroup[subgroupId(0..15)].distributedACache[j(0..1)] = A slice[R:((subgroupId&1u)<<1|j)][C:(subgroupId>>1)]\n    //          A slice[R(0..rowPerThread-1)][C(0..C_packed-1)] = subgroup[C<<1|((R&2u)>>1)].distributedACache[(R&1u)]\n    var distributedACache: array<${V}, 2>;\n\n    // Loop over shared dimension.\n    let bRowLoadingThreadBias = rowTileIdInWorkgroup * bRowLoadedPerThread;\n    let sharedDimSize = u32(uniforms.dim_inner);\n    for (var sharedDimBase = 0u; sharedDimBase < sharedDimSize; sharedDimBase = sharedDimBase + sharedDimTileStep) {\n        // Load one tile of A into local register.\n        // subgroup[i(0..15)].distributedACache[j(0..1)] = A slice[R:((subgroupId&1u)<<1|j)][C:(subgroupId>>1)]\n        //   = mm_readA(i32(batch), i32(outputRowInGlobalBase + ((i&1u)<<1|j)), i32(sharedDimBase / innerDimPackedSize + (i>>1)))\n        distributedACache[0] = ${Rl(t,l,"((subgroupId&1u)<<1)|0","subgroupId>>1",s)};\n        distributedACache[1] = ${Rl(t,l,"((subgroupId&1u)<<1)|1","subgroupId>>1",s)};\n\n        // workgroupBarrier();\n\n        // Load one tile of B into shared local memory.\n        for (var innerRow = 0u; innerRow < bRowLoadedPerThread; innerRow = innerRow + 1) {\n            let inputRow = bRowLoadingThreadBias + innerRow;\n\n            if (sliceShapeNInVec4 <= colTileNumberInWorkgroup) {\n                let inputColInVec4 = colTileIdInWorkgroup;\n                if (inputColInVec4 < sliceShapeNInVec4) {\n                    mm_Bsub[inputRow][inputColInVec4] = mm_readB(i32(batch), i32(sharedDimBase + inputRow), i32(outputColInGlobalVec4)${s?", batchIndices":""});\n                }\n            } else {\n                for (var inputColInVec4Base = 0u;\n                     inputColInVec4Base < sliceShapeNInVec4;\n                     inputColInVec4Base = inputColInVec4Base + colTileNumberInWorkgroup) {\n                    let inputColInVec4 = inputColInVec4Base + colTileIdInWorkgroup;\n                    if (inputColInVec4 < sliceShapeNInVec4) {\n                        mm_Bsub[inputRow][inputColInVec4] = mm_readB(i32(batch), i32(sharedDimBase + inputRow), i32(outputColInGlobalVec4)${s?", batchIndices":""});\n                    }\n                }\n            }\n        }\n\n        workgroupBarrier();\n\n        // Unrolled computation code\n        {\n${Xh(t,f,S,b,C)}\n        }\n\n        workgroupBarrier();\n    }\n\n    for (var innerRow = 0u; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(i32(batch), i32(outputRowInGlobalBase + innerRow), i32(outputColInGlobalVec4), acc[innerRow]);\n    }\n}\n`}});var Qh,eg,ni,Bl,tg,ii,rg,Kr,mo,oi=ue(()=>{"use strict";Ie();Yt();Be();Oe();nr();fo();Zo();Qh=(e,r)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${r?", batchIndices":""});\n        `,eg=(e,r)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,ni=(e,r,t="f32",s,l=!1,f=32,d=!1,y=32)=>{let b=r[1]*e[1],C=r[0]*e[0],m=l?b:f,S=l?f:b,T=m/r[0],O=f/r[1];if(!((l&&T===4&&e[1]===4||!l&&(T===3||T===4))&&m%r[0]===0&&f%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${l} is true, innerElementSize ${T} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${T} must be 3 or 4.\n  tileAWidth ${m} must be divisible by workgroupSize[0]${r[0]}. tileInner ${f} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${T}<${t}>, ${m/T}>, ${S}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${t}>, ${C/e[0]}>, ${f}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${T};\nconst tileInner = ${f};\n\n@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow = i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${d?"0":"i32(globalId.z)"};\n  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${b};\n\n  let num_tiles = ${d?`${Math.ceil(y/f)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${d?`i32(globalId.z) * ${y}`:"0"};\n\n  var acc: array<vec4<${t}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${O};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Qh(l,s)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${O}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${T===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${eg(l,T)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Bl=(e,r)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${r?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${r?", batchIndices":""});\n            `,tg=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ii=(e,r,t="f32",s,l=!1,f=32,d=!1,y=32,b=!1)=>{let C=e[1]*r[1],m=e[0]*r[0],S=l?C:f,T=l?f:C;if(!(T%r[1]===0&&S%r[0]===0&&f%r[1]===0))throw new Error(`tileAHight ${T} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${S} must be divisible by workgroupSize[0]${r[0]}, tileInner ${f} must be divisible by workgroupSize[1]${r[1]}`);let O=T/r[1],E=S/r[0],k=f/r[1],j=b?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${C};\n    let globalColStart = i32(workgroupId.x) * ${m};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${T}; inputRow = inputRow + ${r[1]}) {\n        for (var inputCol = localCol; inputCol < ${S}; inputCol = inputCol + ${r[0]}) {\n          ${Bl(l,s)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${f}; inputRow = inputRow + ${r[1]}) {\n            for (var inputCol = localCol; inputCol < ${m}; inputCol = inputCol + ${r[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${s?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${t}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${l?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${r[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${r[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${C};\n\nlet tileRowA = i32(localId.y) * ${O};\nlet tileColA = i32(localId.x) * ${E};\nlet tileRowB = i32(localId.y) * ${k};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${O}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${E}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Bl(l,s)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${k}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${s?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${t}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${tg(l)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${t}, ${S}>, ${T}>;\n  var<workgroup> mm_Bsub : array<array<${t}, ${m}>, ${f}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${f};\n\n@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${d?"0":"i32(globalId.z)"};\n    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${d?`${Math.ceil(y/f)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${d?`i32(globalId.z) * ${y}`:"0"};\n\n    var acc : array<array<${t}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${j}\n  }\n`},rg=(e,r,t,s,l,f=!1)=>{let[d,y,b]=l,[C,m,S,T]=s,O=Lr(d,b),E=Lr(y,b),k=Ge(s[0].type.tensor),j=()=>{let W=m.rank,M=C.rank,q=`var aIndices: ${m.type.indices};`;for(let Q=W-2-1,te=M-1;Q>=0;Q--,te--)q+=`\naIndices[${Q}] = ${M>1?`batchIndices[${te}]`:"batchIndices"};`;return O.forEach(Q=>{q+=`\naIndices[${Q}] = 0;`}),q+=`\naIndices[${W-2}] = u32(row);\n                   aIndices[${W-1}] = u32(colIn);`,q},V=()=>{let W=S.rank,M=C.rank,q=`var bIndices: ${S.type.indices};`;for(let Q=W-2-1,te=M-1;Q>=0;Q--,te--)q+=`\nbIndices[${Q}] = ${M>1?`batchIndices[${te}]`:"batchIndices"};`;return E.forEach(Q=>{q+=`\nbIndices[${Q}] = 0;`}),q+=`\nbIndices[${W-2}] = u32(row);\n                   bIndices[${W-1}] = u32(colIn);`,q};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${C.type.indices}) -> ${ht(e,k)} {\n      var value = ${ht(e,k)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${j()}\n        value = ${m.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${C.type.indices}) -> ${ht(e,k)} {\n      var value = ${ht(e,k)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${V()}\n        value = ${S.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${ht(e,k)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${r?`value = value + ${f?"bias[colIn]":`${ht(e,k)}(bias[row])`};`:""}\n        ${t}\n        ${T.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},Kr=(e,r)=>(e%r===0?0:1-e%r/r)/Math.ceil(e/r),mo=(e,r,t,s,l=!1)=>{let f=e[0].dims,d=e[1].dims,y=f.slice(0,-2),b=d.slice(0,-2),C=s?s.slice(0,-2):t.slice(0,-2),m=X.size(C),S=f[f.length-2],T=f[f.length-1],O=d[d.length-1],E=T%4===0&&O%4===0,k=E?4:1,j=Ge(e[0].dataType),V=32,B=E&&(Kr(S,32)<.2&&Kr(T,32)<.2&&Kr(O,64)<.2||(1-Kr(S,32))*(1-Kr(T,32))*(1-Kr(O,64))>.7);We("info",()=>`[matmul_packed_webgpu createMatmulProgramInfo] tryUsingSubgroup: ${B} (isVec4 ${E}, dimAOuter ${S}, dimInner ${T}, dimBOuter ${O})`);var W=[8,8,1],M=[4,4,1],q=!1;if(B)try{W=[16,8,1],M=[4,4,1],qr(M,W,j,void 0,!1,V),q=!0,We("info",()=>`[matmul_packed_webgpu createMatmulProgramInfo] try using subgroup succeed: ${B} (isVec4 ${E})`)}catch(pe){We("warning",()=>`[matmul_packed_webgpu createMatmulProgramInfo] try using subgroup failed: ${pe}`),q=!1}q||(W=[8,8,1],M=S<=8?[4,1,1]:[4,4,1]);let Q=[Math.ceil(O/W[0]/M[0]),Math.ceil(S/W[1]/M[1]),Math.ceil(m/W[2]/M[2])],te=[...y,S,T/k],oe=te.length,J=[...b,T,O/k],ie=J.length,be=[m,S,O/k],De=[{type:6,data:S},{type:6,data:O},{type:6,data:T}];zt(r,De),De.push(...de(C,te,J));let qe=["rank","rank"],Ve=e.length>2;Ve&&(De.push(...de(e[2].dims)),qe.push("rank")),De.push(...de(be));let Te=pe=>{let Le=C.length,Me=ro("batchDims",e[0].dataType,Le,1),Se=Ge(e[0].dataType),ge=Z("a",e[0].dataType,oe,k),ve=Z("b",e[1].dataType,ie,k),ze=se("result",e[0].dataType,be.length,k),rt=[ge,ve];if(Ve){let st=l?k:1;rt.push(Z("bias",e[2].dataType,e[2].dims.length,st))}let ne=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ut(r,ne);let he=Ge(ze.type.tensor),Ee=Mt(r,ze.type.value,he),Qe=rg(k,Ve,Ee,[Me,ge,ve,ze],[y,b,C],l);return`\n  ${pe.registerUniforms(ne).registerInternalVariables(Me).declareVariables(...rt,ze)}\n  ${Qe}\n  ${q?qr(M,W,Se,Me,!1,V):E?ni(M,W,Se,Me):ii(M,W,Se,Me)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${M};${r.activation};${E};${l};${q}`,inputDependencies:qe},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Q[0],y:Q[1],z:Q[2]},programUniforms:De}),getShaderSource:Te}}});var ng,Dl,Ml=ue(()=>{"use strict";Ie();Yt();Oe();nr();fo();Yo();oi();Zo();ng=(e,r,t,s,l=!1,f,d=4,y=4,b=4,C="f32")=>{let m=ie=>{switch(ie){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${C}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${ie} is not supported.`)}},S=ie=>{switch(ie){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${ie} is not supported.`)}},T=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,O=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,E=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",k=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",j=e?"row":"col",V=e?"col":"row",B=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${j} / outWidth;\n    let outCol = ${j} % outWidth;\n\n    let WRow = ${V} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${V} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${V} % inChannels;\n    var resData = ${ht(d,C)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${E} && xCol >= 0 && xCol < ${k}) {\n      ${T}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${m(d)}\n    }\n    return resData;`,W=e?r&&s?`\n    let col = colIn * ${d};\n    ${B}`:`\n    let col = colIn * ${d};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${B}\n    }\n    return ${ht(d,C)}(0.0);`:s&&t?`\n    let col = colIn * ${d};\n    ${B}`:`\n    let col = colIn * ${d};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${B}\n    }\n    return ${ht(d,C)}(0.0);`,M=`${S(y)}`,q=ht(b,C),Q=e?ht(d,C):ht(y,C),te=e?ht(y,C):ht(d,C),oe=Mt(f,q,C);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Q} {\n      ${e?W:M}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${te} {\n      ${e?M:W}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${q}) {\n      let col = colIn * ${b};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${O}\n      ${co(l)}\n      ${oe}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Dl=(e,r,t,s,l,f,d,y)=>{let b=r.format==="NHWC",C=b?e[0].dims[3]:e[0].dims[1],m=t[0],S=b?t[2]:t[3],T=b?t[1]:t[2],O=b?t[3]:t[1],E=b&&(C%4===0||C%3===0)&&O%4===0,k=E?b&&C%4!==0?3:4:1,j=32,V=E&&k===4;We("info",()=>`[conv2d_mm_webgpu subgroup] try using subgroup? ${V} (isVec4 ${E}, innerElementSize ${k})`);let B=b?O:S*T,W=b?S*T:O;var M=[8,8,1],q=[4,4,1],Q=!1;if(V)try{M=[16,8,1],q=[4,4,1];let Me=Ge(e[0].dataType);qr(q,M,Me,void 0,!b,j),Q=!0,We("info",()=>"[conv2d_mm_webgpu subgroup] try using subgroup succeed.")}catch(Me){We("warning",()=>`[conv2d_mm_webgpu] try using subgroup failed: ${Me}`),Q=!1}Q||(M=[8,8,1],q=s<=8?[4,1,1]:[4,4,1]);let te=[Math.ceil(B/M[0]/q[0]),Math.ceil(W/M[1]/q[1]),Math.ceil(m/M[2]/q[2])];We("info",()=>`[conv2d_mm_webgpu] dispatch = ${te}`);let oe=M[1]*q[1],J=M[0]*q[0],ie=Math.max(M[0]*k,M[1]),be=s%oe===0,De=l%J===0,qe=f%ie===0,Ve=E?[k,4,4]:[1,1,1],Te=[{type:6,data:s},{type:6,data:l},{type:6,data:f},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];zt(r,Te),Te.push(...de(e[0].dims,e[1].dims));let pe=["rank","rank"];d&&(Te.push(...de(e[2].dims)),pe.push("rank")),Te.push(...de(t));let Le=Me=>{let Se=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ut(r,Se);let ge=E?4:1,ve=Ge(e[0].dataType),ze=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${E?`vec4<${ve}>`:ve}) {\n        result[flatIndex] = ${E?`vec4<${ve}>`:ve}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${E?`vec4<${ve}>`:ve}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${E?"/ 4":""}, value);\n      }`,rt=Z("x",e[0].dataType,e[0].dims.length,k===3?1:k),ne=Z("w",e[1].dataType,e[1].dims.length,ge),he=[rt,ne],Ee=se("result",e[0].dataType,t.length,ge);if(d){let Qe=Z("bias",e[2].dataType,e[2].dims.length,ge);he.push(Qe),ze+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${E?`vec4<${ve}>`:ve} {\n          return bias[coords.${b?"w":"y"}${E?"/ 4":""}];\n        }`}return`\n        ${po("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${Me.registerUniforms(Se).declareVariables(...he,Ee)}\n        ${ze}\n        ${ng(b,be,De,qe,d,r,Ve[0],Ve[1],Ve[2],ve)}\n        ${Q?qr(q,M,ve,void 0,!b,j):E?ni(q,M,ve,void 0,!b,ie):ii(q,M,ve,void 0,!b,ie,!1,void 0,y)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${k};${E};${be};${De};${qe};${oe};${J};${ie};${Q}`,inputDependencies:pe},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:te[0],y:te[1],z:te[2]},programUniforms:Te}),getShaderSource:Le}}});var Xo,zl,Ul=ue(()=>{"use strict";Ie();Be();Oe();Qo();nr();Xo=(e,r,t)=>{let s=e.length>2,l=s?"value += b[output_channel];":"",f=e[0].dims,d=e[1].dims,y=d[0]/r.group,b=r.format==="NHWC",C=ho(f,d,r.dilations,r.pads,r.strides,b),m=X.size(C),S=[{type:12,data:m},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:y}];zt(r,S),S.push(...de(f,d,C));let T=["rank","rank"];s&&(S.push(...de(e[2].dims)),T.push("rank")),S.push(...de(C));let O=E=>{let k=se("output",e[0].dataType,C.length),j=Ge(k.type.tensor),V=Mt(r,k.type.value,j),B=Z("x",e[0].dataType,f.length),W=Z("w",e[1].dataType,d.length),M=[B,W];s&&M.push(Z("b",e[2].dataType,e[2].dims));let q=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Ut(r,q),`\n  ${E.registerUniforms(q).declareVariables(...M,k)}\n\n  ${E.mainStart()}\n    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${k.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${b?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${b?1:2}], outputIndices[${b?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${k.type.value} = ${k.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${b?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${b?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${b?B.get("batch","xHeight","xWidth","input_channel"):B.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${W.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${l}\n    ${V}\n    ${k.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:r.cacheKey,inputDependencies:T},getRunData:()=>({outputs:[{dims:t?t(C):C,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:S}),getShaderSource:O}},zl=(e,r,t)=>{let s=e.length>2,l=Ye(t[3]),f=Ye(t[2]),d=X.size(t)/l/f,y=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/l],b=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/l],C=[t[0],t[1],t[2],t[3]/l],m=[{type:12,data:d},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];zt(r,m),m.push(...de(y,b,C));let S=(f-1)*r.strides[1]+b[1],T=O=>{let E=se("output",e[0].dataType,C.length,l),k=Ge(E.type.tensor),j=Mt(r,E.type.value,k),V=Z("x",e[0].dataType,y.length,l),B=Z("w",e[1].dataType,b.length,l),W=[V,B];s&&W.push(Z("b",e[2].dataType,e[2].dims,l));let M=s?"value += b[output_channel];":"",q=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Ut(r,q),`\n  ${O.registerUniforms(q).declareVariables(...W,E)}\n  ${O.mainStart()}\n    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${f}u;\n    let col = (index1 % width1) * ${f}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${V.type.value}, ${S}>;\n    var values: array<${E.type.value}, ${f}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w\'s height/width.\n    for (var w_height: u32 = 0u; w_height < ${b[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${S}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${V.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${V.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${b[1]}; w_width++) {\n          let w_val = ${B.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${f}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${f}u; i++) {\n      var value = values[i];\n      ${M}\n      ${j}\n      ${E.set("batch","row","col + i","output_channel","value")};\n    }\n  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${l};${f};${S};${b[0]};${b[1]}`,inputDependencies:s?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:m}),getShaderSource:T}}});var ea,ig,jl,ta=ue(()=>{"use strict";Ie();Be();oi();Oe();nr();ea=(e,r,t,s,l=!1)=>{let f=e[0].dims,d=e[1].dims,y=f[f.length-2],b=d[d.length-1],C=f[f.length-1],m=Ye(b),S=Ye(C),T=Ye(y),O=X.size(t)/m/T,E=e.length>2,k=s?s.slice(0,-2):t.slice(0,-2),V=[X.size(k),y,b],B=[{type:12,data:O},{type:12,data:y},{type:12,data:b},{type:12,data:C}];zt(r,B),B.push(...de(k,f,d)),E&&B.push(...de(e[2].dims)),B.push(...de(V));let W=M=>{let q=ro("batch_dims",e[0].dataType,k.length),Q=Z("a",e[0].dataType,f.length,S),te=Z("b",e[1].dataType,d.length,m),oe=se("output",e[0].dataType,V.length,m),J=Ge(oe.type.tensor),ie=Mt(r,oe.type.value,J),be=[Q,te],De="";if(E){let ge=l?m:1;be.push(Z("bias",e[2].dataType,e[2].dims.length,ge)),De=`${l?`value += bias[col / ${ge}];`:`value += ${oe.type.value}(bias[row + i]);`}`}let qe=f.slice(0,-2),Ve=d.slice(0,-2),Te=Lr(qe,k),pe=Lr(Ve,k),Le=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ut(r,Le);let Me=(ge,ve)=>{let ze=ge.rank,rt=ge.name;if(ze===2)return`var ${rt}_indices = ${ge.type.indices}(0u, 0u);`;let ne=q.rank,he=`var ${rt}_indices: ${ge.type.indices};`;for(let Ee=ze-2-1,Qe=ne-1;Ee>=0;Ee--,Qe--)he+=`\n${rt}_indices[${Ee}] = ${ne>1?`batch_indices[${Qe}]`:"batch_indices"};`;return ve.forEach(Ee=>{he+=`\n${rt}_indices[${Ee}] = 0;`}),he+=`${rt}_indices[${ze-2}] = 0u;\n                     ${rt}_indices[${ze-1}] = 0u;`,he},Se=()=>{let ge=`var a_data: ${Q.type.value};`;for(let ve=0;ve<S;ve++)ge+=`\n              let b_data${ve} = b[(b_offset + (k + ${ve}) * uniforms.N + col) / ${m}];`;for(let ve=0;ve<T;ve++){ge+=`a_data = a[(a_offset + (row + ${ve}) * uniforms.K + k) / ${S}];`;for(let ze=0;ze<S;ze++)ge+=`\n            values[${ve}] = fma(${te.type.value}(a_data${S===1?"":`[${ze}]`}), b_data${ze}, values[${ve}]);\n`}return ge};return`\n  ${M.registerUniforms(Le).registerInternalVariables(q).declareVariables(...be,oe)}\n  ${M.mainStart()}\n    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${m})) * ${m};\n    var index1 = global_idx / (uniforms.N / ${m});\n    let stride1 = uniforms.M / ${T};\n    let row = (index1 % stride1) * ${T};\n    let batch = index1 / stride1;\n\n    ${t.length===2?"":`let batch_indices = ${q.offsetToIndices("batch")};`}\n    ${Me(Q,Te)}\n    let a_offset = ${Q.indicesToOffset("a_indices")};\n    ${Me(te,pe)}\n    let b_offset = ${te.indicesToOffset("b_indices")};\n    var values: array<${oe.type.value}, ${T}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${S}) {\n      ${Se()}\n    }\n    for (var i = 0u; i < ${T}u; i++) {\n      var value = values[i];\n      ${De}\n      ${ie}\n      let cur_indices = ${oe.type.indices}(batch, row + i, col);\n      let offset = ${oe.indicesToOffset("cur_indices")};\n      ${oe.setByOffset(`offset / ${m}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${m};${S};${T};${l}`,inputDependencies:E?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(O/64)},programUniforms:B}),getShaderSource:W}},ig=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},jl=e=>{ig(e.inputs);let r=Vt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can\'t use matmul on the given tensors");let t=r[r.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];t<8&&s<8?e.compute(ea(e.inputs,{activation:""},r)):e.compute(mo(e.inputs,{activation:""},r))}});var ho,ra,og,Vl,na,ag,sg,ia,Qo=ue(()=>{"use strict";Be();Ml();oi();Ul();nr();ta();Fr();ho=(e,r,t,s,l,f)=>{let d=e[0],y=e.slice(f?1:2,f?3:4),b=y.length,C=r[0],S=r.slice(2).map((E,k)=>E+(E-1)*(t[k]-1)),O=y.map((E,k)=>E+s[k]+s[k+b]).map((E,k)=>Math.floor((E-S[k]+l[k])/l[k]));return O.splice(0,0,d),O.splice(f?3:1,0,C),O},ra=[2,3,1,0],og=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[1]*r.group;if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let l=e[0].dims.length-2;if(r.dilations.length!==l)throw new Error(`dilations should be ${l}D`);if(r.strides.length!==l)throw new Error(`strides should be ${l}D`);if(r.pads.length!==l*2)throw new Error(`pads should be ${l*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Vl=(e,r)=>{let t=e.kernelShape.slice();for(let f=2;f<r[1].dims.length;++f)t[f-2]===0&&(t[f-2]=r[1].dims[f]);let s=e.pads.slice();yr.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,s,e.format==="NHWC",e.autoPad);let l=Object.assign({},e);return Object.assign(l,{kernelShape:t,pads:s}),l},na=e=>{let r=lo(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],l=e.dilations,f=e.group,d=e.kernel_shape,y=e.pads,b=e.strides,C=e.w_is_const();return{autoPad:s,format:t,dilations:l,group:f,kernelShape:d,pads:y,strides:b,wIsConst:C,...r,cacheKey:`${e.format};${r.activation};`}},ag=(e,r,t)=>{let s=Vl(t,r),l=t.format==="NHWC";if(t.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&l&&r[1].dims[0]===t.group&&r[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1){let oe=ho(r[0].dims,r[1].dims,t.dilations,s.pads,t.strides,l),J=e.kernelCustomData.wT??e.compute(Ot(r[1],ra),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=J);let ie=[r[0],J];r.length===3&&ie.push(r[2]),e.compute(zl(ie,s,oe),{inputs:ie})}else e.compute(Xo(r,s));return}let f=r.length===3,d=r[0].dims[l?1:2],y=r[0].dims[l?2:3],b=r[0].dims[l?3:1],C=r[1].dims[2],m=r[1].dims[3],S=ho(r[0].dims,r[1].dims,t.dilations,s.pads,t.strides,l),T=S[l?1:2],O=S[l?2:3],E=S[l?3:1],k=l&&C===d&&m===y&&t.pads[0]===0&&t.pads[1]===0,j=C===1&&m===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0;if(k||j){let te=S[0],oe,J,ie,be=[];if(l){let Ve=e.kernelCustomData.wT??e.compute(Ot(r[1],ra),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Ve),k){let Te=d*y*b;oe=r[0].reshape([1,te,Te]),J=Ve.reshape([1,Te,E]),ie=[1,te,E]}else oe=r[0].reshape([te,d*y,b]),J=Ve.reshape([1,b,E]),ie=[te,T*O,E];be.push(oe),be.push(J)}else oe=r[0].reshape([te,b,d*y]),J=r[1].reshape([1,E,b]),ie=[te,E,T*O],be.push(J),be.push(oe);f&&be.push(r[2]);let De=ie[2],qe=be[0].dims[be[0].dims.length-1];De<8&&qe<8?e.compute(ea(be,s,S,ie,l),{inputs:be}):e.compute(mo(be,s,S,ie,l),{inputs:be});return}let V=!0,B=e.kernelCustomData.wT??e.compute(Ot(r[1],ra),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=B);let W=[r[0],B];f&&W.push(r[2]);let M=l?T*O:E,q=l?E:T*O,Q=C*m*b;e.compute(Dl(W,s,S,M,q,Q,f,V),{inputs:W})},sg=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let l=[0,r.pads[0],0,r.pads[1]],f=[1].concat(r.strides),d=[1].concat(r.dilations),y=[1].concat(r.kernelShape),b=Vl({...r,pads:l,strides:f,dilations:d,kernelShape:y},s);e.compute(Xo(s,b,C=>t?[C[0],C[2],C[3]]:[]))},ia=(e,r)=>{og(e.inputs,r),e.inputs[0].dims.length===3?sg(e,r):ag(e,e.inputs,r)}});var ug,Nl,Wl=ue(()=>{"use strict";Ie();Yt();Oe();nr();fo();Yo();oi();ug=(e,r=!1,t,s,l=4)=>{let f=V=>{switch(V){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${s}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${V} is not supported.`)}},d=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,y=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,b=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",C=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",m=e?"row":"col",S=e?"col":"row",T=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${m} / outWidth;\n      let outCol = ${m} % outWidth;\n\n      let WRow = ${S} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${S} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${b}) || fract(xR) > 0.0) {\n        return ${s}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${C}) || fract(xC) > 0.0) {\n        return ${s}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${S} % inChannels;\n      ${d}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${l}];`,O=e?`\n      let col = colIn * ${l};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${T}\n      }\n      return ${s}(0.0);`:`\n      let col = colIn * ${l};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${T}\n      }\n      return ${s}(0.0);`,E=`\n      let col = colIn * ${l};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${f(l)}\n      }\n      return ${s}(0.0);\n      `,k=Mt(t,s);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?O:E}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?E:O}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${s}) {\n    let col = colIn * ${l};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${y}\n      ${co(r)}\n      ${k}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${l}] = value;\n    }\n  }`},Nl=(e,r,t,s,l,f,d,y)=>{let b=r.format==="NHWC",C=b?e[0].dims[3]:e[0].dims[1],m=t[0],S=b?t[2]:t[3],T=b?t[1]:t[2],O=b?t[3]:t[1],E=b?C%4===0&&O%4===0:S%4===0&&O%4===0,k=b?O:S*T,j=b?S*T:O,V=E?[8,8,1]:[k<=4||j<=4?4:16,k>4&&j<=4?4:16,1],B=E?[4,4,1]:[k<=4?1:4,k>4&&j<=4?1:4,1],W=[Math.ceil(k/V[0]/B[0]),Math.ceil(j/V[1]/B[1]),Math.ceil(m/V[2]/B[2])];We("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${W}`);let M=E?4:1,q=Math.max(V[0]*M,V[1]),Q=E?4:1,te=[r.kernelShape[b?1:2],r.kernelShape[b?2:3]],oe=[te[0]+(r.dilations[0]<=1?0:(te[0]-1)*(r.dilations[0]-1)),te[1]+(r.dilations[1]<=1?0:(te[1]-1)*(r.dilations[1]-1))],J=[oe[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),oe[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],ie=[{type:6,data:s},{type:6,data:l},{type:6,data:f},{type:6,data:r.strides},{type:6,data:r.dilations},{type:6,data:te},{type:6,data:J}];zt(r,ie),ie.push(...de(e[0].dims,e[1].dims));let be=["rank","rank"];d&&(ie.push(...de(e[2].dims)),be.push("rank")),ie.push(...de(t));let De=qe=>{let Ve=Z("x",e[0].dataType,e[0].dims.length,Q),Te=Z("w",e[1].dataType,e[1].dims.length,1),pe=se("result",e[0].dataType,t.length,Q),Le=[Ve,Te],Me="";if(d){let ve=Z("bias",e[2].dataType,e[2].dims.length,Q);Le.push(ve),Me+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${ve.type.value} {\n            return bias[coords.${b?"w":"y"}${E?"/ 4":""}];\n          }`}let Se=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:te.length},{name:"pads",type:"i32",length:J.length}];Ut(r,Se);let ge=Ge(e[0].dataType,1);if(ge!=="f16"&&ge!=="f32")throw new Error(`elemType ${ge} is not supported.`);return`\n        ${po("uniforms.result_strides")}\n        ${qe.registerUniforms(Se).declareVariables(...Le,pe)};\n        ${Me}\n        ${ug(b,d,r,Ve.type.value,M)}\n        ${E?ni(B,V,ge,void 0,!b,q):ii(B,V,ge,void 0,!b,q,!1,void 0,y)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${r.cacheKey};${B};${V};${E}`,inputDependencies:be},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]},programUniforms:ie}),getShaderSource:De}}});var lg,oa,Gl=ue(()=>{"use strict";Ie();Yt();Be();Oe();lg=(e,r,t,s,l,f=!1,d,y,b=!1)=>{let C=b?1:2,m=b?2:3,S=b?3:1,T=f?2:1,O=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${f?`vec4<${d}>`:d}) {\n    result[flatIndex] = ${f?`vec4<${d}>`:d}(value);\n  }`;s&&(O+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${f?`vec4<${d}>`:d} {\n      return bias[coords.${b?"w":"y"}${f?"/ 4":""}];\n    }`);let E=f?4:1,k=Z("W",r[1].dataType,r[1].dims.length,E),j=Z("Dy",r[0].dataType,r[0].dims.length,E),V=[j,k];s&&V.push(Z("bias",r[2].dataType,[t[S]].length,E));let B=se("result",r[0].dataType,t.length,E),W=`{\n        let batch: u32 = ${l?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${l?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${l?"global_id.y":"workgroup_id.y"} * ${T};\n        let d1: u32 = ${l?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${d}>, ${T}>;\n        for (var i = 0; i < ${T}; i++) {\n          dotProd[i] = vec4<${d}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${d}(dyCorner.x) + ${d}(wR)) / ${d}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${d}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${d}(dyCorner.y) + ${d}(wC)) / ${d}(uniforms.strides.y);\n            let dyC2 = (${d}(dyCorner.y) + 1.0 + ${d}(wC)) / ${d}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${d}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${d}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${j.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${j.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${d}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${S}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${j.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${j.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${T}; i = i + 1) {\n          let value = dotProd[i] + ${s?"bias[c+i]":`vec4<${d}>(0.0)`};\n          ${B.set("batch","r","c + i","d1","value")};\n        }\n      }`,M=`\n          let outputIndices = ${B.offsetToIndices("global_idx")};\n          let batch = ${B.indicesGet("outputIndices",0)};\n          let d1 = ${B.indicesGet("outputIndices",S)};\n          let r = ${B.indicesGet("outputIndices",C)};\n          let c = ${B.indicesGet("outputIndices",m)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${d}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${d}(dyRCorner) + ${d}(wR)) / ${d}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${d}(uniforms.Dy_shape[${C}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${d}(dyCCorner) + ${d}(wC)) / ${d}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${d}(uniforms.Dy_shape[${m}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${b?j.get("batch","idyR","idyC","inputChannel"):j.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${k.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${s?"bias[d1]":`${d}(0.0)`};\n          ${B.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(y).declareVariables(...V,B)}\n  ${O}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${f?W:M}}`},oa=(e,r,t)=>{let s=e.length>2,l=r.outputShape,f=X.size(l),d=[Math.ceil(f/64),1,1];We("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${d}`);let y=r.format==="NHWC",b=["rank","rank"],C=[r.strides[0],r.strides[1]],m=[r.kernelShape[y?1:2],r.kernelShape[y?2:3]],S=[r.dilations[0],r.dilations[1]],T=[m[0]+(r.dilations[0]<=1?0:(r.kernelShape[y?1:2]-1)*(r.dilations[0]-1)),m[1]+(r.dilations[1]<=1?0:(r.kernelShape[y?2:3]-1)*(r.dilations[1]-1))],O=[T[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),T[1]-1-Math.floor(r.pads[1]+r.pads[3])/2],E=!1,k=r.group,j=e[1].dims,V=j[0]/k,B=j[1],W=[{type:6,data:f},{type:12,data:C},{type:12,data:m},{type:12,data:S},{type:12,data:T},{type:6,data:O},{type:12,data:V},{type:12,data:B},...de(e[0].dims,e[1].dims)];s&&(W.push(...de(e[2].dims)),b.push("rank")),W.push(...de(l));let M=d[1]===1&&d[2]===1,q=Q=>{let te=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:C.length},{name:"filter_dims",type:"u32",length:m.length},{name:"dilations",type:"u32",length:m.length},{name:"effective_filter_dims",type:"u32",length:T.length},{name:"pads",type:"i32",length:O.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],oe=Ge(e[0].dataType);return`${lg(Q,e,l,s,M,E,oe,te,y)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};`,inputDependencies:b},getRunData:()=>({dispatchGroup:{x:d[0],y:d[1],z:d[2]},outputs:[{dims:t?t(l):l,dataType:e[0].dataType}],programUniforms:W}),getShaderSource:q}}});var dg,cg,fg,Hl,Ll,pg,mg,hg,gg,Fl,ql=ue(()=>{"use strict";Wl();Gl();nr();Fr();dg=(e,r,t,s,l,f)=>(e-1)*r+t+(s-1)*l+1-f,cg=(e,r,t,s,l)=>{let f=Math.floor(e/2);r==="SAME_UPPER"?(t[s]=f,t[l]=e-f):r==="SAME_LOWER"&&(t[s]=e-f,t[l]=f)},fg=(e,r,t,s,l,f,d,y,b,C)=>{let m=e.length-2,S=C.length===0;if(b.length===0)for(let E=0;E<m;++E)b.push(0);let T=e[0],O=r[y?3:1]*l;for(let E=0,k=e.length-m-(y?1:0);E<m;++E,++k){let j=e[k],V=S?j*d[E]:C[E],B=dg(j,d[E],f[E],r[k],t[E],V);cg(B,s,f,E,E+m),S&&C.push(d[E]*(j-1)+b[E]+(r[k]-1)*t[E]+1-f[E]-f[E+m])}C.splice(0,0,T),C.splice(y?3:1,0,O)},Hl=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((S,T)=>S*T,1)===0){t.length=0;for(let S=2;S<r[1].dims.length;++S)t.push(r[1].dims[S])}let s=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(s?3:1,0,r[1].dims[1]);let l=e.pads.slice(),f=e.outputShape.slice(),d=e.outputPadding.slice(),y=r[0].dims,b=e.dilations.slice();if(b.reduce((S,T)=>S+T,0)===0){let S=r[0].dims.length-2;b=new Array(S).fill(1)}let C=e.strides.slice();if(C.reduce((S,T)=>S+T,0)===0){let S=r[0].dims.length-2;C=new Array(S).fill(1)}fg(y,t,b,e.autoPad,e.group,l,C,s,d,f);let m=Object.assign({},e);return Object.assign(m,{kernelShape:t,pads:l,outputPadding:d,outputShape:f,dilations:b,strides:C}),m},Ll=e=>{let r=lo(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],l=e.dilations,f=e.group,d=e.kernelShape,y=e.pads,b=e.strides,C=e.wIsConst(),m=e.outputPadding,S=e.outputShape;return{autoPad:s,format:t,dilations:l,group:f,kernelShape:d,outputPadding:m,outputShape:S,pads:y,strides:b,wIsConst:C,...r,cacheKey:`${e.format};${r.activation};`}},pg=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[0];if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let l=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==l))throw new Error("invalid bias");let f=e[0].dims.length-2;if(r.dilations.reduce((m,S)=>m+S,0)>0&&r.dilations.length!==f)throw new Error(`dilations should be ${f}D`);if(r.strides.reduce((m,S)=>m+S,0)>0&&r.strides.length!==f)throw new Error(`strides should be ${f}D`);if(r.pads.reduce((m,S)=>m+S,0)>0&&r.pads.length!==f*2)throw new Error(`pads should be ${f*2}D`);if(r.outputPadding.length!==f&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${f}D`);if(r.kernelShape.reduce((m,S)=>m+S,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},mg=[2,3,1,0],hg=(e,r,t)=>{let s=Hl(t,r),l=t.format==="NHWC",f=s.outputShape,d=f[l?3:1],y=r[0].dims[l?3:1];if(s.group!==1||d===1&&y===1){e.compute(oa(r,s));return}let b=f[l?1:2],C=f[l?2:3],m=r[1].dims[2],S=r[1].dims[3],T=l?b*C:d,O=l?d:b*C,E=m*S*y,k=!0,j=e.kernelCustomData.wT??e.compute(Ot(r[1],mg),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=j);let V=[r[0],j],B=r.length===3;B&&(!l&&r[2].dims.length===1?V.push(r[2].reshape([r[2].dims[0],1,1])):V.push(r[2])),e.compute(Nl(V,s,f,T,O,E,B,k),{inputs:V})},gg=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];s.length===3&&s.push(e.inputs[2]);let l=r.kernelShape;(l.length===0||l[0]===0)&&(l=[e.inputs[1].dims[2]]);let f=r.dilations;(f.length===0||f[0]===0)&&(f=[1]);let d=r.strides;(d.length===0||d[0]===0)&&(d=[1]);let y=r.pads;y.length===0&&(y=[0,0]),y=[0,y[0],0,y[1]],d=[1].concat(d),f=[1].concat(f),l=[1].concat(l);let b=Hl({...r,pads:y,strides:d,dilations:f,kernelShape:l},s);e.compute(oa(s,b,C=>t?[C[0],C[2],C[3]]:[C[0],C[1],C[3]]))},Fl=(e,r)=>{pg(e.inputs,r),e.inputs[0].dims.length===3?gg(e,r):hg(e,e.inputs,r)}});var yg,Kl,Jl,Yl=ue(()=>{"use strict";Ie();Be();ft();Oe();yg=(e,r,t,s)=>{let l=X.size(r),f=r.length,d=Z("input",e,f),y=se("output",e,f),b=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),C=X.normalizeAxis(b,f),m=S=>{let T=` i32(${d.indicesGet("inputIndices","uniforms.axis")}) `,O=Ce("uniforms.input_shape","uniforms.axis",f),E=s.reverse?T+(s.exclusive?" + 1":""):"0",k=s.reverse?O:T+(s.exclusive?"":" + 1");return`\n                ${S.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(d,y)}\n                ${S.mainStart()}\n                  ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${y.offsetToIndices("global_idx")};\n                  var sum = ${y.type.value}(0);\n                  let first : i32 = ${E};\n                  let last : i32 = ${k};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${d.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${d.getByIndices("inputIndices")};\n                  }\n                  ${y.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},{type:6,data:C},...de(r,r)]}),getShaderSource:m}},Kl=(e,r)=>{let t=e.inputs[0].dims,s=e.inputs[0].dataType,l=e.inputs[1];e.compute(yg(s,t,l,r),{inputs:[0]})},Jl=e=>{let r=e.exclusive===1,t=e.reverse===1;return Re({exclusive:r,reverse:t})}});var aa,go,Zl,bg,vg,sa,ua,Xl,wg,Ql,ed,td=ue(()=>{"use strict";Ie();Be();ft();Oe();aa="[a-zA-Z]|\\\\.\\\\.\\\\.",go="("+aa+")+",Zl="^"+go+"$",bg="("+go+",)*"+go,vg="^"+bg+"$",sa=class{constructor(r=-1){this.symbolToIndices=new Map,this.inputIndex=r}addSymbol(r,t){let s=this.symbolToIndices.get(r);s===void 0?s=[t]:s.push(t),this.symbolToIndices.set(r,s)}},ua=class{constructor(r,t){this.equation=t;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[s,l]=t.includes("->")?t.split("->",2):[t,""];if(!s.match(RegExp(vg)))throw new Error("Invalid LHS term");if(s.split(",").forEach((y,b)=>{let C=r[b].dims.slice();if(!y.match(RegExp(Zl)))throw new Error("Invalid LHS term");let m=this.processTerm(y,!0,C,b);this.lhs.push(m)}),l==="")l+=[...this.symbolToInfo.entries()].filter(([y,b])=>b.count===1||y==="...").map(([y])=>y).join("");else if(!l.match(RegExp(go)))throw new Error("Invalid RHS");l.match(RegExp(aa,"g"))?.forEach(y=>{if(y==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let b=this.symbolToInfo.get(y);if(b===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(b.dimValue)}}),this.rhs=this.processTerm(l,!1,this.outputDims)}addSymbol(r,t,s){let l=this.symbolToInfo.get(r);if(l!==void 0){if(l.dimValue!==t&&l.count!==1)throw new Error("Dimension mismatch");l.count++,l.inputIndices.push(s)}else l={count:1,dimValue:t,inputIndices:[s]};this.symbolToInfo.set(r,l)}processTerm(r,t,s,l=-1){let f=s.length,d=!1,y=[],b=0;if(!r.match(RegExp(Zl))&&!t&&r!=="")throw new Error("Invalid LHS term");let C=r.match(RegExp(aa,"g")),m=new sa(l);return C?.forEach((S,T)=>{if(S==="..."){if(d)throw new Error("Only one ellipsis is allowed per input term");d=!0;let O=f-C.length+1;if(O<0)throw new Error("Ellipsis out of bounds");if(y=s.slice(b,b+O),this.hasEllipsis){if(this.ellipsisDims.length!==y.length||this.ellipsisDims.toString()!==y.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=y;else throw new Error("Ellipsis must be specified in the LHS");for(let E=0;E<y.length;E++){let k=String.fromCharCode("0".charCodeAt(0)+E);m.addSymbol(k,T+E),this.addSymbol(k,s[b++],l)}}else m.addSymbol(S,T+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(S,s[b++],l)}),m}},Xl=e=>e+"_max",wg=(e,r,t,s)=>{let f=e.map(m=>m.length).map((m,S)=>Z(`input${S}`,r,m)),d=X.size(s),y=se("output",r,s.length),b=[...t.symbolToInfo.keys()].filter(m=>!t.rhs.symbolToIndices.has(m)),C=m=>{let S=[],T="var prod = 1.0;",O="var sum = 0.0;",E="sum += prod;",k=[],j=[],V=[],B=[],W=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((q,Q)=>{if(t.rhs.symbolToIndices.has(Q)){let te=t.rhs.symbolToIndices.get(Q)?.[0];te!==void 0&&t.lhs.forEach((oe,J)=>{if(q.inputIndices.includes(J)){let ie=oe.symbolToIndices.get(Q);if(ie===void 0)throw new Error("Invalid symbol error");ie.forEach(be=>{S.push(`${f[J].indicesSet(`input${J}Indices`,be,y.indicesGet("outputIndices",te))}`)})}})}else t.lhs.forEach((te,oe)=>{if(q.inputIndices.includes(oe)){let J=te.symbolToIndices.get(Q);if(J===void 0)throw new Error("Invalid symbol error");J.forEach(ie=>{k.push(`${f[oe].indicesSet(`input${oe}Indices`,ie,`${Q}`)}`)}),B.push(`prod *= ${f[oe].getByIndices(`input${oe}Indices`)};`)}}),j.push(`for(var ${Q}: u32 = 0; ${Q} < uniforms.${Xl(Q)}; ${Q}++) {`),V.push("}")});let M=W?[...S,`let sum = ${f.map((q,Q)=>q.getByIndices(`input${Q}Indices`)).join(" * ")};`]:[...S,O,...j,...k,T,...B,E,...V];return`\n            ${m.registerUniforms(b.map(q=>({name:`${Xl(q)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...f,y)}\n\n            ${m.mainStart()}\n            ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${y.offsetToIndices("global_idx")};\n            ${f.map((q,Q)=>`var input${Q}Indices: ${f[Q].type.indices};`).join(`\n`)}\n            ${M.join(`\n`)};\n            ${y.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let m=b.filter(T=>t.symbolToInfo.has(T)).map(T=>({type:12,data:t.symbolToInfo.get(T)?.dimValue||0}));m.push({type:12,data:d});let S=e.map((T,O)=>[...de(T)]).reduce((T,O)=>T.concat(O),m);return S.push(...de(s)),{outputs:[{dims:s,dataType:r}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:S}},getShaderSource:C}},Ql=(e,r)=>{let t=new ua(e.inputs,r.equation),s=t.outputDims,l=e.inputs.map((f,d)=>f.dims);e.compute(wg(l,e.inputs[0].dataType,t,s))},ed=e=>{let r=e.equation.replace(/\\s+/g,"");return Re({equation:r})}});var _g,rd,$g,Cg,nd,id=ue(()=>{"use strict";Ie();Be();Oe();_g=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=t.length<r.length?0:t.length-r.length,l=r.length<t.length?0:r.length-t.length;for(;s<t.length&&l<r.length;++s,++l)if(t[s]!==r[l]&&t[s]!==1&&r[l]!==1)throw new Error("Expand requires shape to be broadcastable to input")},rd=(e,r)=>{let t=e.length-r.length,s=[];for(let l=0;l<t;++l)s.push(e[l]);for(let l=0;l<r.length;++l)s.push(r[l]===1?e[l+t]:r[l]);return s},$g=(e,r)=>e.length>r.length?rd(e,r):rd(r,e),Cg=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=$g(r,t),l=e[0].dataType,f=l===9?4:1,d=Math.ceil(X.size(s)/f),y=C=>{let m=Z("input",l,r.length,f),S=se("output",l,s.length,f),T;if(l===9){let O=(E,k,j="")=>`\n          let outputIndices${k} = ${S.offsetToIndices(`outputOffset + ${k}u`)};\n          let offset${k} = ${m.broadcastedIndicesToOffset(`outputIndices${k}`,S)};\n          let index${k} = offset${k} / 4u;\n          let component${k} = offset${k} % 4u;\n          ${E}[${k}] = ${j}(${m.getByOffset(`index${k}`)}[component${k}]);\n        `;T=`\n        let outputOffset = global_idx * ${f};\n        var data = vec4<u32>(0);\n        ${O("data",0,"u32")}\n        ${O("data",1,"u32")}\n        ${O("data",2,"u32")}\n        ${O("data",3,"u32")}\n        ${S.setByOffset("global_idx","data")}\n      }`}else T=`\n        let outputIndices = ${S.offsetToIndices("global_idx")};\n        let inputOffset = ${m.broadcastedIndicesToOffset("outputIndices",S)};\n        ${S.setByOffset("global_idx",m.getByOffset("inputOffset"))}\n      }`;return`\n    ${C.registerUniform("vec_size","u32").declareVariables(m,S)}\n    ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${T}`},b=[{type:12,data:d},...de(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length}`,inputDependencies:["rank"]},getShaderSource:y,getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:b})}},nd=e=>{_g(e.inputs),e.compute(Cg(e.inputs),{inputs:[0]})}});var Sg,od,ad=ue(()=>{"use strict";Ie();Be();Oe();uo();Sg=e=>{let r=e[0].dataType,t=X.size(e[0].dims),s=X.size(e[1].dims),l=s%4===0,f=d=>{let y=Z("x",r,[1],4),b=Z("bias",r,[1],4),C=se("y",r,[1],4),m=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],S=O=>`\n      let bias${O}_offset: u32 = (global_idx * 4 + ${O}) % uniforms.bias_size;\n      let bias${O} = ${b.getByOffset(`bias${O}_offset / 4`)}[bias${O}_offset % 4];`,T=l?`\n      let bias = ${b.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${S(0)}${S(1)}${S(2)}${S(3)}\n      let bias = ${y.type.value}(bias0, bias1, bias2, bias3);`;return`${d.registerUniforms(m).declareVariables(y,b,C)}\n\n    ${Ko($t(r))}\n\n    ${d.mainStart(to)}\n      ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${y.getByOffset("global_idx")};\n      ${T}\n      let x_in = x + bias;\n      ${C.setByOffset("global_idx",Jo("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getShaderSource:f,getRunData:d=>({outputs:[{dims:d[0].dims,dataType:d[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(t/to/4)}})}},od=e=>{e.inputs.length<2||X.size(e.inputs[1].dims)===0?pl(e):e.compute(Sg(e.inputs))}});var xg,Ig,sd,ud,ld=ue(()=>{"use strict";Ie();Be();ft();Oe();xg=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Ig=(e,r)=>{let t=e[0].dims,s=e[1].dims,l=t.length,f=X.normalizeAxis(r.axis,l),d=t.slice(0);d.splice(f,1,...s);let y=t[f],b=e[0].dataType===9?4:1,C=Math.ceil(X.size(d)/b),m=[{type:12,data:C},{type:6,data:y},{type:12,data:f},...de(e[0].dims,e[1].dims,d)],S=T=>{let O=Z("data",e[0].dataType,e[0].dims.length,b),E=Z("inputIndices",e[1].dataType,e[1].dims.length),k=se("output",e[0].dataType,d.length,b),j=B=>{let W=s.length,M=`var indicesIndices${B}  = ${E.type.indices}(0);`;for(let q=0;q<W;q++)M+=`${W>1?`indicesIndices${B}[${q}]`:`indicesIndices${B}`} = ${d.length>1?`outputIndices${B}[uniforms.axis + ${q}]`:`outputIndices${B}`};`;M+=`\n          var idx${B} = ${E.getByIndices(`indicesIndices${B}`)};\n          if (idx${B} < 0) {\n            idx${B} = idx${B} + uniforms.axisDimLimit;\n          }\n          var dataIndices${B} : ${O.type.indices};\n        `;for(let q=0,Q=0;q<l;q++)q===f?(M+=`${l>1?`dataIndices${B}[${q}]`:`dataIndices${B}`} = u32(idx${B});`,Q+=W):(M+=`${l>1?`dataIndices${B}[${q}]`:`dataIndices${B}`} = ${d.length>1?`outputIndices${B}[${Q}]`:`outputIndices${B}`};`,Q++);return M},V;if(e[0].dataType===9){let B=(W,M,q="")=>`\n          let outputIndices${M} = ${k.offsetToIndices(`outputOffset + ${M}u`)};\n          ${j(M)};\n          let offset${M} = ${O.indicesToOffset(`dataIndices${M}`)};\n          let index${M} = offset${M} / 4u;\n          let component${M} = offset${M} % 4u;\n          ${W}[${M}] = ${q}(${O.getByOffset(`index${M}`)}[component${M}]);\n        `;V=`\n        let outputOffset = global_idx * ${b};\n        var value = vec4<u32>(0);\n        ${B("value",0,"u32")}\n        ${B("value",1,"u32")}\n        ${B("value",2,"u32")}\n        ${B("value",3,"u32")}\n        ${k.setByOffset("global_idx","value")}\n      `}else V=`\n      let outputIndices = ${k.offsetToIndices("global_idx")};\n      ${j("")};\n      let value = ${O.getByIndices("dataIndices")};\n      ${k.setByOffset("global_idx","value")};\n      `;return`\n      ${T.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(O,E,k)}\n      ${T.mainStart()}\n        ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${V}\n      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:m}),getShaderSource:S}},sd=e=>Re({axis:e.axis}),ud=(e,r)=>{let t=e.inputs;xg(t),e.compute(Ig(e.inputs,r))}});var Ag,Tg,dd,cd,fd=ue(()=>{"use strict";Ie();Be();ft();Oe();Ag=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Tg=(e,r)=>{let t=e[0].dims,s=e[0].dataType,l=t.length,f=e[1].dims,d=e[1].dataType,y=X.normalizeAxis(r.axis,l),b=t[y],C=f.slice(0),m=X.size(C),S=Z("input",s,l),T=Z("indicesInput",d,f.length),O=se("output",s,C.length),E=[{type:12,data:m},{type:6,data:b},{type:12,data:y}];return E.push(...de(t,f,C)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:C,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:E}),getShaderSource:V=>`\n      ${V.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(S,T,O)}\n      ${V.mainStart()}\n      ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${O.offsetToIndices("global_idx")};\n\n      var idx = ${T.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${S.type.indices}(outputIndices);\n      ${S.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${S.getByIndices("inputIndices")};\n\n      ${O.setByOffset("global_idx","value")};\n  }`}},dd=e=>Re({axis:e.axis}),cd=(e,r)=>{let t=e.inputs;Ag(t),e.compute(Tg(e.inputs,r))}});var Eg,Pg,pd,md,hd=ue(()=>{"use strict";Ie();Be();Oe();Eg=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Pg=(e,r)=>{let t=e[0].dims.slice(),s=e[1].dims.slice(),[l,f,d]=Xi.getShapeOfGemmResult(t,r.transA,s,r.transB,e.length===3?e[2].dims:void 0),y=[l,f];if(!y)throw new Error("Can\'t use gemm on the given tensors");let b=X.size(y),C=[{type:12,data:b},{type:12,data:l},{type:12,data:f},{type:12,data:d},{type:1,data:r.alpha},{type:1,data:r.beta}],m=["type","type"];e.length===3&&(C.push(...de(e[2].dims)),m.push("rank")),C.push(...de(y));let S=T=>{let O="";r.transA&&r.transB?O="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?O="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?O="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(O="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let E=r.alpha===1?"":"value *= uniforms.alpha;",k=Z("a",e[0].dataType,e[0].dims),j=Z("b",e[1].dataType,e[1].dims),V=k.type.value,B=null,W=[k,j];e.length===3&&(B=Z("c",e[2].dataType,e[2].dims.length),W.push(B));let M=se("output",e[0].dataType,y.length);W.push(M);let q=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${T.registerUniforms(q).declareVariables(...W)}\n\n  ${T.mainStart()}\n    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${V}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${O}\n    }\n\n    ${E}\n    ${(()=>B!=null?`let cOffset = ${B.broadcastedIndicesToOffset("vec2(m, n)",M)}; value += ${V}(uniforms.beta) * ${B.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:y,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:C}),getShaderSource:S}},pd=e=>{let r=e.transA,t=e.transB,s=e.alpha,l=e.beta;return{transA:r,transB:t,alpha:s,beta:l,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},md=(e,r)=>{Eg(e.inputs),e.compute(Pg(e.inputs,r))}});var kg,Og,Rg,gd,yd=ue(()=>{"use strict";Ie();Be();Oe();kg=(e,r)=>{let t=e[0].dims,s=t,l=2,f=X.sizeToDimension(t,l),d=X.sizeFromDimension(t,l),y=Ye(d),b=d/y,C=[t[0],t[1],b],m=["rank","type","type"],S=[{type:12,data:d},{type:12,data:b}];S.push(...de(C,C));let T=O=>{let E=Z("x",e[0].dataType,C.length,y),k=Z("scale",e[1].dataType,e[1].dims),j=Z("bias",e[2].dataType,e[2].dims),V=se("output",e[0].dataType,C.length,y),B=[E,k,j,V],W=E.type.value,M=y===1?"f32":`vec${y}<f32>`,q=64,Q=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${M}, ${q}>;\n  const workgroupSize = ${q}u;\n  ${O.registerUniforms(Q).declareVariables(...B)}\n  ${O.mainStart(q)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${M}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${M}(${E.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${Ct("workgroupShared[0]",y)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${M}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${M}(${E.get("batch","channel","h")}) - ${M}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${Ct("workgroupShared[0]",y)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${r.epsilon}));\n    let channelScale = invStdDev * f32(${k.getByOffset("channel")});\n    let channelShift = f32(${j.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${E.get("batch","channel","h")} * ${W}(${M}(channelScale)) + ${W}(${M}(channelShift));\n      ${V.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${r.epsilon};${y}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:f},programUniforms:S}),getShaderSource:T}},Og=(e,r,t,s,l,f,d,y)=>{let b=Ye(d),C=64,m=b===1?"vec2f":`mat2x${b}f`,S=b===1?"f32":`vec${b}f`,T=(Q,te)=>`${m}(${Q}, ${te})`,O=l*d/b,E=Math.ceil(f/C),k=["type"],j=[{type:12,data:E},{type:12,data:f},{type:12,data:Math.floor(d/b)},{type:12,data:Math.floor(f*d/b)}],V=Q=>{let te=Z("input",r.dataType,r.dims,b);return`\n  ${Q.declareVariables(te)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${m}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${Q.mainStart(C)}\n    let currentImageNumber = global_idx / ${C} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${C}) % uniforms.C;\n    let wgId = global_idx % ${C};\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${mt("f32",b)};\n    var squaredSum = ${mt("f32",b)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${S}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${T("sum","squaredSum")};\n  }`},B=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${b}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:[l,d,C,2],dataType:1}],dispatchGroup:{x:l*d/b},programUniforms:j}),getShaderSource:V},{inputs:[r],outputs:[-1]})[0],W=[{type:12,data:O},{type:12,data:f},{type:12,data:Math.floor(d/b)},{type:12,data:Math.floor(C*d/b)}],M=["type","type","type"],q=Q=>{let te=Z("scale",t.dataType,t.dims,b),oe=Z("bias",s.dataType,s.dims,b);return`\n  @group(0) @binding(0) var<storage, read> input : array<${m}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${te.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${oe.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${m}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${Q.mainStart()}\n    ${Q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${mt("f32",b)};\n    var squaredSum = ${mt("f32",b)};\n    for (var i: u32 = 0; i < min(${C}, uniforms.H); i++) {\n        let value = input[offset + i + currentChannelNumber * ${C}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${y}));\n    let channelScale = invStdDev * ${S}(scale[currentChannelNumber]);\n    let channelShift = ${S}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${T("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${b};${y}`,inputDependencies:M},getRunData:()=>({outputs:[{dims:[l,d,2],dataType:1}],dispatchGroup:{x:Math.ceil(O/64)},programUniforms:W}),getShaderSource:q},{inputs:[B,t,s],outputs:[-1]})[0]},Rg=(e,r,t)=>{let s=r[0].dims,l=s,f=s[0],d=s[s.length-1],y=X.sizeFromDimension(s,1)/d,b=Ye(d),C=X.size(l)/b,m=[{type:12,data:y},{type:12,data:Math.floor(d/b)}],S=["type","type"],T=Og(e,r[0],r[1],r[2],f,y,d,t.epsilon),O=E=>{let k=Ge(r[0].dataType),j=b===1?"vec2f":`mat2x${b}f`,V=b===1?k:`vec${b}<${k}>`,B=Z("input",r[0].dataType,r[0].dims,b),W=se("output",r[0].dataType,l,b);return`\n  @group(0) @binding(0) var<storage, read> input : array<${B.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${j}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${W.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${E.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${V}(scale[0]), ${V}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${b}`,inputDependencies:S},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:m}),getShaderSource:O},{inputs:[r[0],T]})},gd=(e,r)=>{r.format==="NHWC"?Rg(e,e.inputs,r):e.compute(kg(e.inputs,r))}});var Bg,Dg,bd,vd=ue(()=>{"use strict";Ie();Be();Oe();Bg=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Dg=(e,r,t)=>{let s=e[0].dims,l=e[1],f=e[2],d=s,y=X.normalizeAxis(r.axis,s.length),b=X.sizeToDimension(s,y),C=X.sizeFromDimension(s,y),m=X.size(l.dims),S=f?X.size(f.dims):0;if(m!==C||f&&S!==C)throw new Error(`Size of X.shape()[axis:] == ${C}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${m} and bias size of ${S}`);let T=[];for(let M=0;M<s.length;++M)M<y?T.push(s[M]):T.push(1);let O=Ye(C),E=["type","type"],k=[{type:12,data:b},{type:1,data:C},{type:12,data:Math.floor(C/O)},{type:1,data:r.epsilon}];f&&E.push("type");let j=t>1,V=t>2,B=M=>{let q=Ge(e[0].dataType),Q=[Z("x",e[0].dataType,e[0].dims,O),Z("scale",l.dataType,l.dims,O)];f&&Q.push(Z("bias",f.dataType,f.dims,O)),Q.push(se("output",e[0].dataType,d,O)),j&&Q.push(se("mean_data_output",1,T)),V&&Q.push(se("inv_std_output",1,T));let te=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${M.registerUniforms(te).declareVariables(...Q)}\n  ${M.mainStart()}\n    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${mt("f32",O)};\n    var mean_square_vector = ${mt("f32",O)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${Dt(q,O,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${Ct("mean_vector",O)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${Ct("mean_square_vector",O)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${Dt(q,O,"x[j + offset]")};\n      let f32scale = ${Dt(q,O,"scale[j]")};\n      output[j + offset] = ${Q[0].type.value}((f32input - mean) * inv_std_dev * f32scale\n        ${f?`+ ${Dt(q,O,"bias[j]")}`:""}\n      );\n    }\n\n    ${j?"mean_data_output[global_idx] = mean":""};\n    ${V?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`},W=[{dims:d,dataType:e[0].dataType}];return j&&W.push({dims:T,dataType:1}),V&&W.push({dims:T,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${O};${t}`,inputDependencies:E},getRunData:()=>({outputs:W,dispatchGroup:{x:Math.ceil(b/64)},programUniforms:k}),getShaderSource:B}},bd=(e,r)=>{Bg(e.inputs),e.compute(Dg(e.inputs,r,e.outputCount))}});var Mg,zg,wd,_d,$d=ue(()=>{"use strict";Ie();Be();ft();Oe();Mg=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],s=t.dims.length;if(t.dims[s-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let l=Math.floor((r.k+r.blockSize-1)/r.blockSize),f=r.blockSize/8*r.bits,d=e[1];if(!X.areEqual(d.dims,[r.n,l,f]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let b=e[2].dims;if(X.size(b)!==r.n*l)throw new Error("scales input size error.");if(e.length===4){let m=e[3].dims,S=r.bits>4?r.n*l:r.n*Math.floor((l+1)/2);if(X.size(m)!==S)throw new Error("zeroPoints input size error.")}},zg=(e,r)=>{let t=e[0].dims,s=t.length,l=t.slice(0,s-1).concat(r.n),f=t[s-2],y=r.blockSize/8*r.bits/4,b=Ye(f),C=Ye(r.n),m=Ye(r.k),S=Ye(y),T=X.size(l)/C/b,O=[{type:12,data:T},{type:12,data:r.k},{type:12,data:r.n},{type:12,data:r.accuracyLevel},{type:12,data:r.bits},{type:12,data:r.blockSize}],E=t.slice();E.splice(-1,1,r.k/m);let k=X.convertShape(e[1].dims).slice();k.splice(-1,1,y/S),O.push(...de(E)),O.push(...de(k)),O.push(...de(e[2].dims)),e.length===4&&O.push(...de(X.convertShape(e[3].dims)));let j=l.slice();j.splice(-1,1,r.n/C),O.push(...de(j));let V=B=>{let W=Z("a",e[0].dataType,E.length,m),M=Z("b",12,k.length,S),q=Z("scales",e[2].dataType,e[2].dims.length),Q=[W,M,q],te=e.length===4?Z("zero_points",12,e[3].dims.length):void 0;te&&Q.push(te);let oe=se("output",e[0].dataType,l.length,C),J=[{name:"output_size",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}],ie=Math.floor((r.k+r.blockSize-1)/r.blockSize),be=Ge(e[0].dataType),De=(()=>{switch(m){case 1:return`array<${be}, 8>`;case 2:return`mat4x2<${be}>`;case 4:return`mat2x4<${be}>`;default:throw new Error(`${m}-component is not supported.`)}})(),qe=`\n        fn dequantize(quantized: ${De}, zero_point: ${be}, scale: ${be}) -> ${De} {\n          ${(()=>m===1?`var dequantized = ${De}(${Array.from({length:8},(pe,Le)=>`(quantized[${Le}] - zero_point) * scale`).join(", ")});\n              return dequantized;`:`var zero_points: ${De} = ${De}(${Array(8).fill("zero_point").join(",")});\n              return (quantized - zero_points) * scale;`)()}\n        }`,Ve=`\n        fn ortUnpack8x4snorm(value: u32) -> ${De} {\n          var quantized: ${De};\n          var offset: u32 = 0;\n          let count: u32 = 4;\n          for (var i: u32 = 0; i < 8u; i++) {\n            var result = ${be}(extractBits(value, offset, count));\n            ${(()=>{switch(m){case 1:return"quantized[i] = result;";case 2:return"quantized[i / 2][i % 2] = result;";case 4:return"quantized[i / 4][i % 4] = result;";default:throw new Error(`${m}-component is not supported.`)}})()}\n            offset += count;\n          }\n          return quantized;\n        }`,Te=te?`\n          zero_point_offset += 4;\n          if (zero_point_offset == 32) {\n            zero_point_offset = 0;\n            zero_point_index++;\n            zero_point_word = ${te.getByOffset("zero_point_index")};\n          }`:"";return`\n        ${qe};\n        ${Ve};\n        ${B.registerUniforms(J).declareVariables(...Q,oe)}\n        ${B.mainStart()}\n          ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var output_values: array<${oe.type.value}, ${b}>;\n          var output_indices = ${oe.offsetToIndices("global_idx")};\n          var n = ${oe.indicesGet("output_indices",s-1)};\n          var m = ${oe.indicesGet("output_indices",s-2)};\n          var a_indices: ${W.type.indices} = output_indices;\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${te?`\n          var zero_point_index: u32 = n * ${C} * ((${ie} + 1) / 2) / 4;\n          var zero_point_word: u32 = ${te.getByOffset("zero_point_index")};\n          var zero_point_offset: u32 = 0;`:""}\n          var scale_index = n * ${ie*C};\n          var b_indices: ${M.type.indices};\n          for (var c: u32 = 0; c < ${C}; c++) {\n            ${M.indicesSet("b_indices","0",`n * ${C} + c`)};\n            var block_offset: u32 = 0;\n            for (var block: u32 = 0; block < ${ie}; block++) {\n              // The scale and zero points are computed per block.\n              let scale = ${q.getByOffset("scale_index")};\n              // The default zero point is 8 for unsigned 4-bit quantization.\n              let zero_point = ${be}(${te?"extractBits(zero_point_word, zero_point_offset, 4)":8});\n              ${M.indicesSet("b_indices","1","block")};\n              var word_offset: u32 = block_offset;\n              for (var word: u32 = 0; word < ${y}; word += ${S}) {\n                ${M.indicesSet("b_indices","2","word")};\n                let b_data = ${M.getByIndices("b_indices")};\n                for (var i: u32 = 0; i < ${S}; i++) {\n                  let b_value = ${S===1?"b_data":"b_data[word + i]"};\n                  let b_quantized_values: ${De} = ortUnpack8x4snorm(b_value);\n                  let b_dequantized_values = dequantize(b_quantized_values, zero_point, scale);\n                  // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n                  var offset: u32 = word_offset;\n                  for (var j: u32 = 0; j < 8/${m}; j++) {\n                    ${W.indicesSet("a_indices",s-1,`offset/${m}`)};\n                    for (var k: u32 = 0; k < ${b}u; k++) {\n                      ${W.indicesSet("a_indices",s-2,`m * ${b} + k`)};\n                      let a_data = ${W.getByIndices("a_indices")};\n                      output_values[k]${C>1?"[c]":""} += ${m===1?"a_data * b_dequantized_values[j]":"dot(a_data, b_dequantized_values[j])"};\n                    }\n                    offset += ${m};\n                  }\n                  word_offset += 8;\n                }\n              }\n              scale_index++;\n              ${Te}\n              block_offset += uniforms.block_size;\n            }\n            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.\n            ${te?`if (zero_point_offset % 8 > 0) {\n                ${Te}\n              }`:""}\n            }\n            for (var k: u32 = 0u; k < ${b}u; k++) {\n              ${oe.indicesSet("output_indices",s-2,`${b+" * m + k"}`)};\n              ${oe.setByIndices("output_indices","output_values[k]")}\n            }\n        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.cacheKey};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:l,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(T/64)},programUniforms:O}),getShaderSource:V}},wd=(e,r)=>{Mg(e.inputs,r),e.compute(zg(e.inputs,r))},_d=e=>Re(e)});var Ug,Sd,Cd,jg,la,xd,Id=ue(()=>{"use strict";Ie();Be();ft();Yi();qo();Oe();Fr();Ug=(e,r)=>{let t=e[0],s=e[1],l=e[2],f=e[3],d=e[4],y=e[5],b=e[6],C=e[7];if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let m=!1,S=t.dims[0],T=t.dims[1],O=t.dims.length===3?m?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],E=T,k=0,j=0,V=Math.floor(O/r.numHeads);if(b&&C){if(b.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(C.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');k=b.dims[2],j=b.dims[2]}else if(b||C)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let B;if(s){if(t.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(s.dims.length<3||s.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(t.dims[0]!==s.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(s.dims.length===3){if(s.dims[2]!==t.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');B=2,E=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==V)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(l)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');B=5,E=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==V)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');B=0,E=s.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');B=3}if(f){if(f.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(l&&t.dims.length===5&&t.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let W=0;if(d){W=8;let oe=d.dims;throw oe.length===1?oe[0]===S?W=1:oe[0]===3*S+2&&(W=3):oe.length===2&&oe[0]===S&&oe[1]===E&&(W=5),W===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let M=!1,q=O;if(l){if(l.dims.length!==3&&l.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(t.dims[0]!==l.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(l.dims.length===3){if(E!==l.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');q=l.dims[2]}else{if(E!==l.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');q=l.dims[1]*l.dims[3],M=!0}}let Q=k+E,te=!1;if(d)throw new Error("Key padding mask is not supported");if(y)throw new Error("extraAddQk is not supported");if(b)throw new Error("pastKey is not supported");if(C)throw new Error("pastValue is not supported");return{batchSize:S,sequenceLength:T,pastSequenceLength:k,kvSequenceLength:E,totalSequenceLength:Q,maxSequenceLength:j,inputHiddenSize:0,hiddenSize:O,vHiddenSize:q,headSize:V,vHeadSize:Math.floor(q/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:W,scale:r.scale,broadcastResPosBias:te,passPastInKv:M,qkvFormat:B}},Sd=e=>Re({...e}),Cd=Re({perm:[0,2,1,3]}),jg=(e,r,t,s,l,f,d)=>{let y=[s,l,f],b=X.size(y),C=[{type:12,data:b},{type:12,data:d},{type:12,data:f}],m=S=>{let T=se("qkv_with_bias",r.dataType,y),O=Z("qkv",r.dataType,y),E=Z("bias",t.dataType,y),k=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${S.registerUniforms(k).declareVariables(O,E,T)}\n  ${S.mainStart()}\n    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:y,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:C}),getShaderSource:m},{inputs:[r,t],outputs:[-1]})[0]},la=(e,r,t,s,l,f,d,y)=>{let b=f;if(d){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return b=jg(e,f,d,r,s,t*l,y),b=b.reshape([r,s,t,l]),e.compute(Ot(b,Cd.perm),{inputs:[b],outputs:[-1]})[0]}else return f.dims.length===3&&(b=f.reshape([r,s,t,l])),e.compute(Ot(b,Cd.perm),{inputs:[b],outputs:[-1]})[0]},xd=(e,r)=>{let t=Ug(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let s=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,l=la(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,e.inputs[0],e.inputs[3],0);if(s)return oo(e,l,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],t,r);let f=la(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,e.inputs[1],e.inputs[3],t.hiddenSize),d=la(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,e.inputs[2],e.inputs[3],2*t.hiddenSize);oo(e,l,f,d,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],t,r)}});var Vg,Ng,Wg,Gg,Hg,Lg,Fg,qg,Ad,Td=ue(()=>{"use strict";Ie();Be();Oe();Vg=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Ng=(e,r,t)=>{let s="";for(let l=r-1;l>=0;--l)s+=`\n            k = i32(${e.indicesGet("indices",l)}) - ${Ce("uniforms.pads",l,t)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${Ce("uniforms.x_shape",l,r)})) {\n              break;\n            }\n            offset += k * i32(${Ce("uniforms.x_strides",l,r)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${s}\n            value = x[offset];\n          }\n      `},Wg=(e,r,t)=>{let s="";for(let l=r-1;l>=0;--l)s+=`\n                k = i32(${e.indicesGet("indices",l)}) - ${Ce("uniforms.pads",l,t)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${Ce("uniforms.x_shape",l,r)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${Ce("uniforms.x_shape",l,r)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${Ce("uniforms.x_strides",l,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${s}\n              value = x[offset];\n          `},Gg=(e,r,t)=>{let s="";for(let l=r-1;l>=0;--l)s+=`\n                k = i32(${e.indicesGet("indices",l)}) - ${Ce("uniforms.pads",l,t)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${Ce("uniforms.x_shape",l,r)})) {\n                  k = i32(${Ce("uniforms.x_shape",l,r)}) - 1;\n                }\n                offset += k * i32(${Ce("uniforms.x_strides",l,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${s}\n              value = x[offset];\n          `},Hg=(e,r,t)=>{let s="";for(let l=r-1;l>=0;--l)s+=`\n                k = i32(${e.indicesGet("indices",l)}) - ${Ce("uniforms.pads",l,t)};\n                if (k < 0)  {\n                  k += i32(${Ce("uniforms.x_shape",l,r)}]);\n                }\n                if (k >= i32(${Ce("uniforms.x_shape",l,r)})) {\n                  k -= i32(${Ce("uniforms.x_shape",l,r)});\n                }\n                offset += k * i32(${Ce("uniforms.x_strides",l,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${s}\n              value = x[offset];\n          `},Lg=(e,r,t)=>{switch(t.mode){case 0:return Ng(e,r,t.pads.length);case 1:return Wg(e,r,t.pads.length);case 2:return Gg(e,r,t.pads.length);case 3:return Hg(e,r,t.pads.length);default:throw new Error("Invalid mode")}},Fg=(e,r)=>{let t=X.padShape(e[0].dims.slice(),r.pads),s=e[0].dims,l=X.size(t),f=[{type:12,data:l},{type:12,data:r.pads}];r.mode===0&&f.push({type:e[0].dataType,data:r.value}),f.push(...de(e[0].dims,t));let d=["rank"],y=b=>{let C=se("output",e[0].dataType,t.length),m=Z("x",e[0].dataType,s.length),S=m.type.value,T=Lg(C,s.length,r),O=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&O.push({name:"constant_value",type:S}),`\n            ${b.registerUniforms(O).declareVariables(m,C)}\n            ${b.mainStart()}\n            ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${C.offsetToIndices("global_idx")};\n\n            var value = ${S}(0);\n            ${T}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(X.size(t)/64)},programUniforms:f}),getShaderSource:y}},qg=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,l=e[0].dims.length,f=new Int32Array(2*l).fill(0);if(e.length>=4){let y=e[3].getBigInt64Array();for(let b=0;b<y.length;b++)f[Number(y[b])]=Number(t[b]),f[Number(y[b])+l]=Number(t[b+y.length])}else t.forEach((y,b)=>f[Number(b)]=Number(y));let d=[];return f.forEach(y=>d.push(y)),{mode:r.mode,value:s,pads:d}}else return r},Ad=(e,r)=>{Vg(e.inputs);let t=qg(e.inputs,r);e.compute(Fg(e.inputs,t),{inputs:[0]})}});var yo,Ed,Pd,kd,Od,Kg,Jg,Rd,Bd,Dd,Md,zd,Ud,jd,Vd,Nd,Wd,Gd,Hd,Ld=ue(()=>{"use strict";Hr();Ie();Be();Oe();yo=e=>{if(Gr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},Ed=(e,r,t)=>{let s=r.format==="NHWC",l=e.dims.slice();s&&l.splice(1,0,l.pop());let f=Object.hasOwnProperty.call(r,"dilations"),d=r.kernelShape.slice(),y=r.strides.slice(),b=f?r.dilations.slice():[],C=r.pads.slice();yr.adjustPoolAttributes(t,l,d,y,b,C);let m=yr.computePoolOutputShape(t,l,y,b,d,C,r.autoPad),S=Object.assign({},r);f?Object.assign(S,{kernelShape:d,strides:y,pads:C,dilations:b,cacheKey:r.cacheKey}):Object.assign(S,{kernelShape:d,strides:y,pads:C,cacheKey:r.cacheKey});let T=m.slice();return T.push(T.splice(1,1)[0]),[S,s?T:m]},Pd=(e,r)=>{let t=r.format==="NHWC",s=X.size(e),l=X.size(r.kernelShape),f=[{type:12,data:s},{type:12,data:l}],d=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let y=r.kernelShape[r.kernelShape.length-1],b=r.strides[r.strides.length-1],C=r.pads[r.pads.length/2-1],m=r.pads[r.pads.length-1],S=!!(C+m);f.push({type:12,data:y},{type:12,data:b},{type:12,data:C},{type:12,data:m}),d.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let T=!1;if(r.kernelShape.length===2){let O=r.kernelShape[r.kernelShape.length-2],E=r.strides[r.strides.length-2],k=r.pads[r.pads.length/2-2],j=r.pads[r.pads.length-2];T=!!(k+j),f.push({type:12,data:O},{type:12,data:E},{type:12,data:k},{type:12,data:j}),d.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[f,d,!0,S,T]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let y=X.computeStrides(r.kernelShape);f.push({type:12,data:y},{type:12,data:r.pads},{type:12,data:r.strides}),d.push({name:"kernelStrides",type:"u32",length:y.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let b=r.pads.reduce((C,m)=>C+m);return[f,d,!!b,!1,!1]}},kd=(e,r,t,s,l,f,d,y,b,C,m,S)=>{let T=l.format==="NHWC",O=r.type.value,E=se("output",r.type.tensor,s);if(l.kernelShape.length<=2){let k="",j="",V="",B=t-(T?2:1);if(m?k=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${B}] = indices[${B}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${B}] < 0 || xIndices[${B}]\n                      >= uniforms.x_shape[${B}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${r.indicesToOffset("xIndices")}];\n                  ${f}\n                }`:k=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${B}] = indices[${B}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${r.indicesToOffset("xIndices")}];\n                  ${f}\n                }`,l.kernelShape.length===2){let M=t-(T?3:2);S?j=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${M}] = indices[${M}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${M}] < 0 || xIndices[${M}] >= uniforms.x_shape[${M}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:j=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${M}] = indices[${M}] * uniforms.sh - uniforms.phStart + j;\n                `,V=`\n              }\n            `}return`\n            ${e.registerUniforms(b).declareVariables(r,E)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${E.offsetToIndices("global_idx")};\n              var xIndices = ${E.offsetToIndices("global_idx")};\n\n              var value = ${O}(${y});\n              var pad = 0;\n              ${j}\n              ${k}\n              ${V}\n              ${d}\n\n              output[global_idx] = value;\n            }`}else{if(T)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let k=l.kernelShape.length,j=l.pads.length,V="";return C?V=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${r.indicesToOffset("xIndices")}];\n                ${f}\n              }`:V=`\n              }\n              let x_val = x[${r.indicesToOffset("xIndices")}];\n              ${f}\n            `,`\n            ${e.registerUniforms(b).declareVariables(r,E)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${E.offsetToIndices("global_idx")};\n              var xIndices = ${E.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${k}>;\n\n              var value = ${O}(${y});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${k-1}u; j++) {\n                  offsets[j] = offset / ${Ce("uniforms.kernelStrides","j",k)};\n                  offset -= offsets[j] * ${Ce("uniforms.kernelStrides","j",k)};\n                }\n                offsets[${k-1}] = offset;\n\n                isPad = false;\n                for (var j = ${t-k}u; j < ${t}u; j++) {\n                  xIndices[j] = indices[j] * ${Ce("uniforms.strides",`j - ${t-k}u`,k)}\n                    + offsets[j - ${t-k}u] - ${Ce("uniforms.pads","j - 2u",j)};\n                  ${V}\n              }\n              ${d}\n\n              output[global_idx] = value;\n            }`}},Od=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Kg=e=>`${Od(e)};${e.countIncludePad}`,Jg=e=>`${Od(e)};${e.storageOrder};${e.dilations}`,Rd=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Bd=(e,r,t,s)=>{let[l,f]=Ed(r,s,t),d=Z("x",r.dataType,r.dims.length),y=d.type.value,b="value += x_val;",C="";l.countIncludePad?C+=`value /= ${y}(uniforms.kernelSize);`:C+=`value /= ${y}(i32(uniforms.kernelSize) - pad);`;let[m,S,T,O,E]=Pd(f,l);m.push(...de(r.dims,f));let k=["rank"];return{name:e,shaderCache:{hint:`${s.cacheKey};${T};${O};${E}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:f,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(X.size(f)/64)},programUniforms:m}),getShaderSource:j=>kd(j,d,r.dims.length,f.length,l,b,C,0,S,T,O,E)}},Dd=e=>{let r=e.count_include_pad!==0,t=Rd(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:r,...t,cacheKey:""};return{...s,cacheKey:Kg(s)}},Md=(e,r)=>{yo(e.inputs),e.compute(Bd("AveragePool",e.inputs[0],!1,r))},zd={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Ud=e=>{let r=e.format;return{format:r,...zd,cacheKey:r}},jd=(e,r)=>{yo(e.inputs),e.compute(Bd("GlobalAveragePool",e.inputs[0],!0,r))},Vd=(e,r,t,s)=>{let[l,f]=Ed(r,s,t),d=`\n      value = max(x_val, value);\n    `,y="",b=Z("x",r.dataType,r.dims.length),C=["rank"],[m,S,T,O,E]=Pd(f,l);return m.push(...de(r.dims,f)),{name:e,shaderCache:{hint:`${s.cacheKey};${T};${O};${E}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:f,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(X.size(f)/64)},programUniforms:m}),getShaderSource:k=>kd(k,b,r.dims.length,f.length,l,d,y,r.dataType===10?-65504:-1e5,S,T,O,E)}},Nd=(e,r)=>{yo(e.inputs),e.compute(Vd("MaxPool",e.inputs[0],!1,r))},Wd=e=>{let r=e.storage_order,t=e.dilations,s=Rd(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let l={storageOrder:r,dilations:t,...s,cacheKey:""};return{...l,cacheKey:Jg(l)}},Gd=e=>{let r=e.format;return{format:r,...zd,cacheKey:r}},Hd=(e,r)=>{yo(e.inputs),e.compute(Vd("GlobalMaxPool",e.inputs[0],!0,r))}});var Zg,Xg,Fd,qd=ue(()=>{"use strict";Hr();Ie();Oe();Zg=(e,r,t)=>{let s=e===r,l=e<r&&t<0,f=e>r&&t>0;if(s||l||f)throw new Error("Range these inputs\' contents are invalid.")},Xg=(e,r,t,s)=>{let l=Math.abs(Math.ceil((r-e)/t)),f=[l],d=l,y=[{type:12,data:d},{type:s,data:e},{type:s,data:t},...de(f)],b=C=>{let m=se("output",s,f.length),S=m.type.value,T=[{name:"outputSize",type:"u32"},{name:"start",type:S},{name:"delta",type:S}];return`\n        ${C.registerUniforms(T).declareVariables(m)}\n        ${C.mainStart()}\n        ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${S}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:b,getRunData:()=>({outputs:[{dims:f,dataType:s}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y})}},Fd=e=>{let r=0,t=0,s=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),Gr.webgpu.validateInputContent&&Zg(r,t,s),e.compute(Xg(r,t,s,e.inputs[0].dataType),{inputs:[]})}});var Qg,ey,ty,ry,ny,iy,oy,ay,sy,uy,ly,Kd,dy,cy,fy,py,my,Jd,Yd,Zd=ue(()=>{"use strict";Ie();Be();ft();Oe();Qg=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},ey=(e,r,t)=>{r.every(l=>l>=0&&l<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(t).fill(1);return r.forEach((l,f)=>s[l]=e[f]),s},ty=(e,r,t,s,l,f)=>{let[d,y,b]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],C=e[0].dims.length;if(d>0&&e.length>d&&e[d].dims.length>0)e[d].getFloat32Array().forEach(m=>f.push(m));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(y>0&&e.length>y&&e[y].dims.length>0){if(e[y].getFloat32Array().forEach(m=>s.push(m)),s.length!==0&&s.length!==C&&t>=18&&s.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Qg(s,r),r.axes.length>0&&ey(s,r.axes,C).forEach((m,S)=>s[S]=m)}if(b>0&&e.length>b&&(e[b].getBigInt64Array().forEach(m=>l.push(Number(m))),l.length!==C||t>=18&&l.length===r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(s.length!==r.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(l.length!==r.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof s<"u"&&typeof l<"u"&&s.length>0&&l.length>C)throw new Error("Resize requires only of scales or sizes to be specified")},ry=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`return ${r}(xResized) / ${r}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${r}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${r}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${r}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +\n                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /\n                        ${r}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);\n                  const adjustment = ${r}(lengthResized) / outputWidth;\n                  const center = ${r}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",ny=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",iy=(e,r,t)=>{let s=new Array(t).fill(0).concat(new Array(t).fill(1)),l=e.length===0?s:e.slice();return r.length>0?(r.forEach((f,d)=>{s[f]=l[d],s[d+t]=l[r.length+d]}),s):l},oy=(e,r,t,s)=>{let l=[];if(t.length>0)if(s.length>0){if(e.forEach(f=>l.push(f)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((f,d)=>l[f]=t[d])}else t.forEach(f=>l.push(f));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");l=e.map((f,d)=>Math.round(f*r[d]))}return l},ay=(e,r,t)=>{let s=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(f=>r[f]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(f=>r[f]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let l=e.slice();return t.axes.length>0?(t.axes.forEach(f=>r[f]=s),t.axes.forEach(f=>l[f]=Math.round(e[f]*r[f]))):(r.fill(s,0,r.length),l.forEach((f,d)=>l[d]=Math.round(f*r[d]))),l},sy=(e,r,t,s,l)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {\n      var original_indices: array<${e.type.value}, ${t.length}>;\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${Ce("uniforms.scales","i",s)};\n        var roi_low = ${Ce("uniforms.roi","i",l)};\n        var roi_hi = ${Ce("uniforms.roi",`i + ${r.length}`,l)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${Ce("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${Ce("uniforms.output_shape","i",t.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,uy=(e,r,t,s,l,f,d)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${s.length}; i++) {\n        var output_index = ${r.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${Ce("uniforms.scales","i",l)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${Ce("uniforms.roi","i",f)};\n          var roi_hi = ${Ce("uniforms.roi",`i + ${t.length}`,f)};\n          var input_shape_i = ${Ce("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${Ce("uniforms.output_shape","i",s.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${d} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,ly=(e,r)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${Ce("uniforms.input_shape","i",r.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Kd=(e,r,t,s)=>e.rank>s?`\n    ${e.indicesSet("input_indices",r,"channel")};\n    ${e.indicesSet("input_indices",t,"batch")};\n`:"",dy=(e,r,t,s,l)=>{let[d,y,b,C]=t.length===2?[-1,0,1,-1]:[0,2,3,1],m=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${m} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",y,`max(0, min(row, ${t[y]} - 1))`)};\n      ${e.indicesSet("input_indices",b,`max(0, min(col, ${t[b]} - 1))`)};\n      ${Kd(e,C,d,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${m} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${m} = originalIndices[${y}];\n      var col:${m} = originalIndices[${b}];\n      ${s?`if (row < 0 || row > (${t[y]} - 1) || col < 0 || col > (${t[b]} - 1)) {\n        return ${l};\n      }`:""};\n      row = max(0, min(row, ${t[y]} - 1));\n      col = max(0, min(col, ${t[b]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${t.length>2?`u32(originalIndices[${C}])`:"0"};\n      var batch: u32 =  ${t.length>2?`u32(originalIndices[${d}])`:"0"};\n      var x11: ${m} = getInputValue(batch, channel, row1, col1);\n      var x12: ${m} = getInputValue(batch, channel, row1, col2);\n      var x21: ${m} = getInputValue(batch, channel, row2, col1);\n      var x22: ${m} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${m} = abs(row - ${m}(row1));\n      var dx2: ${m} = abs(${m}(row2) - row);\n      var dy1: ${m} = abs(col - ${m}(col1));\n      var dy2: ${m} = abs(${m}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},cy=(e,r,t,s,l,f,d,y,b,C)=>{let m=t.length===2,S=!0,[T,O]=m?[0,1]:S?[2,3]:[1,2],E=e.type.value,k=j=>{let V=j===T?"row":"col";return`\n      fn ${V}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${E} {\n        var output_index = ${r.indicesGet("output_indices",j)};\n        var originalIdx: ${E} = getOriginalCoordinateFromResizedCoordinate(output_index, ${l[j]},\n        ${s[j]}, ${t[j]}, ${f[j]}, ${f[j]} + ${t.length});\n        var fractOriginalIdx: ${E} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${y} && (originalIdx < 0 || originalIdx > (${t[j]} - 1))) {\n          return ${b};\n        }\n        var data: array<${E}, 4> = array<${E}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${V}: ${E} = originalIdx + ${E}(i);\n          if (${V} < 0 || ${V} >= ${t[j]}) {\n            ${(()=>C?`coefs[i + 1] = 0.0;\n                        continue;`:y?`return ${b};`:`${V} = max(0, min(${V}, ${t[j]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",j,`u32(${V})`)};\n          data[i + 1] = ${j===T?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${k(T)};\n    ${k(O)};\n  fn getCubicInterpolationCoefs(s: ${E}) -> array<${E}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${E}, 4> = array<${E}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${E} = 1.0 - absS;\n    var twoMinusAbsS: ${E} = 2.0 - absS;\n    var onePlusAbsS: ${E} = 1.0 + absS;\n    coeffs[0] = ((${d} * onePlusAbsS - 5 * ${d}) * onePlusAbsS + 8 * ${d}) * onePlusAbsS - 4 * ${d};\n    coeffs[1] = ((${d} + 2) * absS - (${d} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${d} + 2) * oneMinusAbsS - (${d} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${d} * twoMinusAbsS - 5 * ${d}) * twoMinusAbsS + 8 * ${d}) * twoMinusAbsS - 4 * ${d};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${E}, 4>, coefs: array<${E}, 4>) -> ${E} {\n    var coefsSum: ${E} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${E} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},fy=(e,r,t,s,l)=>{let[d,y,b,C,m]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],S=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${S} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",y,`max(0, min(depth, ${t[y]} - 1))`)};\n      ${e.indicesSet("input_indices",b,`max(0, min(height, ${t[b]} - 1))`)};\n      ${e.indicesSet("input_indices",C,`max(0, min(width, ${t[C]} - 1))`)};\n      ${Kd(e,m,d,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${S} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${S} = originalIndices[${y}];\n      var height:${S} = originalIndices[${b}];\n      var width:${S} = originalIndices[${C}];\n      ${s?`if (depth < 0 || depth > (${t[y]} - 1) || height < 0 || height > (${t[b]} - 1) || width < 0 || (width > ${t[C]} - 1)) {\n      return ${l};\n        }`:""};\n\n    depth = max(0, min(depth, ${t[y]} - 1));\n      height = max(0, min(height, ${t[b]} - 1));\n      width = max(0, min(width, ${t[C]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${t.length>3?`u32(originalIndices[${m}])`:"0"};\n      var batch: u32 =  ${t.length>3?`u32(originalIndices[${d}])`:"0"};\n\n      var x111: ${S} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${S} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${S} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${S} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${S} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${S} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${S} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${S} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${S} = abs(depth - ${S}(depth1));\n      var dx2: ${S} = abs(${S}(depth2) - depth);\n      var dy1: ${S} = abs(height - ${S}(height1));\n      var dy2: ${S} = abs(${S}(height2) - height);\n      var dz1: ${S} = abs(width - ${S}(width1));\n      var dz2: ${S} = abs(${S}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},py=(e,r,t,s,l,f)=>{let d=e.dims,y=iy(f,r.axes,d.length),b=oy(d,s,l,r.axes),C=s.slice();s.length===0&&(C=d.map((B,W)=>B===0?1:b[W]/B),r.keepAspectRatioPolicy!=="stretch"&&(b=ay(d,C,r)));let m=se("output",e.dataType,b.length),S=Z("input",e.dataType,d.length),T=X.size(b),O=d.length===b.length&&d.every((B,W)=>B===b[W]),E=r.coordinateTransformMode==="tf_crop_and_resize",k=r.extrapolationValue,j=S.type.value,V=B=>`\n      ${O?"":`\n      ${ry(r.coordinateTransformMode,j)};\n      ${(()=>{switch(r.mode){case"nearest":return`\n              ${ly(S,d)};\n              ${ny(r.nearestMode,t,j)};\n              ${uy(S,m,d,b,C.length,y.length,E)};\n              `;case"linear":return`\n              ${sy(m,d,b,C.length,y.length)};\n              ${(()=>{if(d.length===2||d.length===4)return`${dy(S,m,d,E,k)}`;if(d.length===3||d.length===5)return`${fy(S,m,d,E,k)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(d.length===2||d.length===4)return`${cy(S,m,d,b,C,y,r.cubicCoeffA,E,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${B.registerUniform("output_size","u32").registerUniform("scales","f32",C.length).registerUniform("roi","f32",y.length).declareVariables(S,m)}\n      ${B.mainStart()}\n        ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${O?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${m.offsetToIndices("global_idx")};\n        var input_indices: ${S.type.indices};\n        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${S.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${r.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${d.length===2||d.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${C.length>0?C:""}|${l.length>0?l:""}|${y.length>0?y:""}|${O}|${d}`,inputDependencies:["rank"]},getShaderSource:V,getRunData:()=>({outputs:[{dims:b,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(T/64)},programUniforms:[{type:12,data:T},{type:1,data:C},{type:1,data:y},...de(d,b)]})}},my=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},Jd=(e,r)=>{let t=[],s=[],l=[],f=my(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");ty(e.inputs,r,f,t,s,l),e.compute(py(e.inputs[0],r,f,t,s,l),{inputs:[0]})},Yd=e=>{let r=e.antialias,t=e.axes,s=e.coordinateTransformMode,l=e.cubicCoeffA,f=e.excludeOutside!==0,d=e.extrapolationValue,y=e.keepAspectRatioPolicy,b=e.mode,C=e.nearestMode===""?"simple":e.nearestMode;return Re({antialias:r,axes:t,coordinateTransformMode:s,cubicCoeffA:l,excludeOutside:f,extrapolationValue:d,keepAspectRatioPolicy:y,mode:b,nearestMode:C})}});var hy,gy,Xd,Qd=ue(()=>{"use strict";Ie();Be();Oe();hy=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],s=e[2];if(r.dataType!==t.dataType||r.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let l=r.dims[r.dims.length-1],f=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==l)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==f)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==l)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let d=e[3];if(d.dims.length!==1)throw new Error("Beta must be 1D");if(d.dims[d.dims.length-1]!==l)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let d=e[4];if(d.dims.length!==1)throw new Error("Bias must be 1D");if(d.dims[d.dims.length-1]!==l)throw new Error("Bias must have the same hidden size as input")}},gy=(e,r,t,s)=>{let l=e[0].dims,f=X.size(l),d=l,y=f,b=l.slice(-1)[0],C=s?l.slice(0,-1).concat(1):[],m=e.length>3,S=e.length>4,T=s&&t>1,O=s&&t>2,E=t>3,k=Ye(b),j=[{type:12,data:y},{type:12,data:k},{type:12,data:b},{type:1,data:r.epsilon}],V=W=>{let M=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],q=[Z("x",e[0].dataType,e[0].dims,k),Z("skip",e[1].dataType,e[1].dims,k),Z("gamma",e[2].dataType,e[2].dims,k)];m&&q.push(Z("beta",e[3].dataType,e[3].dims,k)),S&&q.push(Z("bias",e[4].dataType,e[4].dims,k)),q.push(se("output",e[0].dataType,d,k)),T&&q.push(se("mean_output",1,C)),O&&q.push(se("inv_std_output",1,C)),E&&q.push(se("input_skip_bias_sum",e[0].dataType,d,k));let Q=Ge(e[0].dataType);return`\n\n      ${W.registerUniforms(M).declareVariables(...q)}\n\n      ${W.mainStart()}\n        ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${mt("f32",k)};\n        var squareSum = ${mt("f32",k)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${S?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${E?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${Dt(Q,k,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${Ct("sum",k)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${Ct("squareSum",k)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${T?"mean_output[global_idx] = mean;":""}\n        ${O?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${Q}(mean)) * ${Q}(inv_std_dev) * gamma[i] + ${m?"beta[i]":"0.0"};\n        }\n      }`},B=[{dims:d,dataType:e[0].dataType}];return t>1&&B.push({dims:C,dataType:1}),t>2&&B.push({dims:C,dataType:1}),t>3&&B.push({dims:l,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${k};${T};${O};${E}`,inputDependencies:e.map((W,M)=>"type")},getShaderSource:V,getRunData:()=>({outputs:B,dispatchGroup:{x:Math.ceil(y/b/64)},programUniforms:j})}},Xd=(e,r)=>{hy(e.inputs);let s=[0];e.outputCount>1&&s.push(-3),e.outputCount>2&&s.push(-3),e.outputCount>3&&s.push(3),e.compute(gy(e.inputs,r,e.outputCount,!1),{outputs:s})}});var yy,bo,by,ec,vy,wy,tc,rc,nc=ue(()=>{"use strict";Ie();Be();ft();Oe();yy=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},bo=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(s=>t.push(Number(s)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(s=>t.push(Number(s)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},by=(e,r)=>{if(e.length>1){let t=bo(e,1),s=bo(e,2),l=bo(e,3);return l.length===0&&(l=[...Array(e[0].dims.length).keys()]),Re({starts:t,ends:s,axes:l})}else return r},ec=(e,r,t,s,l)=>{let f=e;return e<0&&(f+=t[s[r]]),l[r]<0?Math.max(0,Math.min(f,t[s[r]]-1)):Math.max(0,Math.min(f,t[s[r]]))},vy=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${t.length}; i >= 0; i--) {\n            let input_shape_i = ${Ce("uniforms.input_shape","i",t.length)};\n            let steps_i = ${Ce("uniforms.steps","i",t.length)};\n            let signs_i = ${Ce("uniforms.signs","i",t.length)};\n            let starts_i = ${Ce("uniforms.starts","i",t.length)};\n            var output_index = ${r.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,wy=(e,r)=>{let t=e[0].dims,s=X.size(t),l=r.axes.length>0?X.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],f=bo(e,4);f.forEach(V=>V!==0||(()=>{throw new Error("step cannot be 0")})),f.length===0&&(f=Array(l.length).fill(1));let d=r.starts.map((V,B)=>ec(V,B,t,l,f)),y=r.ends.map((V,B)=>ec(V,B,t,l,f));if(l.length!==d.length||l.length!==y.length)throw new Error("start, ends and axes should have the same number of elements");if(l.length!==t.length)for(let V=0;V<t.length;++V)l.includes(V)||(d.splice(V,0,0),y.splice(V,0,t[V]),f.splice(V,0,1));let b=f.map(V=>Math.sign(V));f.forEach((V,B,W)=>{if(V<0){let M=(y[B]-d[B])/V,q=d[B],Q=q+M*f[B];d[B]=Q,y[B]=q,W[B]=-V}});let C=t.slice(0);l.forEach((V,B)=>{C[V]=Math.ceil((y[V]-d[V])/f[V])});let m={dims:C,dataType:e[0].dataType},S=se("output",e[0].dataType,C.length),T=Z("input",e[0].dataType,e[0].dims.length),O=X.size(C),E=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:d.length},{name:"signs",type:"i32",length:b.length},{name:"steps",type:"u32",length:f.length}],k=[{type:12,data:O},{type:12,data:d},{type:6,data:b},{type:12,data:f},...de(e[0].dims,C)],j=V=>`\n      ${V.registerUniforms(E).declareVariables(T,S)}\n        ${vy(T,S,t)}\n        ${V.mainStart()}\n          ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${S.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${S.setByOffset("global_idx",T.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${b.length}_${d.length}_${f.length}`,inputDependencies:["rank"]},getShaderSource:j,getRunData:()=>({outputs:[m],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:k})}},tc=(e,r)=>{yy(e.inputs,r);let t=by(e.inputs,r);e.compute(wy(e.inputs,t),{inputs:[0]})},rc=e=>{let r=e.starts,t=e.ends,s=e.axes;return Re({starts:r,ends:t,axes:s})}});var _y,$y,ic,oc,ac=ue(()=>{"use strict";Ie();Be();ft();Oe();_y=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},$y=(e,r)=>{let t=e.dims,s=X.size(t),l=64,f=r.axis;if(f<0&&(f=t.length+f),f<t.length-1)throw new Error("softmax only supports last axis for now.");let d=t[f],y=s/d,b=Ye(d),C=d/b,m=(j,V)=>V===4?`max(max(${j}.x, ${j}.y), max(${j}.z, ${j}.w))`:V===2?`max(${j}.x, ${j}.y)`:V===3?`max(max(${j}.x, ${j}.y), ${j}.z)`:j,S=Z("x",e.dataType,e.dims,b),T=se("result",e.dataType,e.dims,b),O=S.type.value,E=Ge(e.dataType)==="f32"?`var threadMax = ${O}(-3.402823e+38f);`:`var threadMax = ${O}(-65504.0h);`,k=j=>`\n      var<workgroup> rowMaxShared : ${O};\n      var<workgroup> rowSumShared : ${O};\n      var<workgroup> threadShared : array<${O}, ${l}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${O} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${O}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${j.registerUniform("packedCols","i32").declareVariables(S,T)}\n      ${j.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${l};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${E}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${O}(${m("threadShared[0]",b)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${O}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${O}(${Ct("threadShared[0]",b)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${b}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.dataType}],dispatchGroup:{x:y},programUniforms:[{type:12,data:C}]}),getShaderSource:k}},ic=(e,r)=>{_y(e.inputs),e.compute($y(e.inputs[0],r))},oc=e=>Re({axis:e.axis})});var Cy,Sy,xy,Iy,Ay,sc,uc,lc=ue(()=>{"use strict";Ie();Be();ft();Oe();Cy=e=>{if(!e||e.length<1)throw new Error("too few inputs")},Sy=(e,r)=>{let t=[],s=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(l=>t.push(Number(l))),s=t.length),Re({numOutputs:s,axis:r.axis,splitSizes:t})},xy=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${Ce("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,Iy=e=>{let r=e.length,t=[];for(let s=0;s<r;++s){let l=e[s].setByIndices("indices","input[global_idx]");r===1?t.push(l):s===0?t.push(`if (output_number == ${s}u) { ${l} }`):s===r-1?t.push(`else { ${l} }`):t.push(`else if (output_number == ${s}) { ${l} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${t.join(`\n`)}\n      }`},Ay=(e,r)=>{let t=e[0].dims,s=X.size(t),l=e[0].dataType,f=X.normalizeAxis(r.axis,t.length),d=new Array(r.numOutputs),y=Z("input",l,t.length),b=new Array(r.numOutputs),C=[],m=[],S=0,T=[{type:12,data:s}];for(let E=0;E<r.numOutputs;E++){S+=r.splitSizes[E],b[E]=S;let k=t.slice();k[r.axis]=r.splitSizes[E],m.push(k),d[E]=se(`output${E}`,l,k.length),C.push({dims:m[E],dataType:e[0].dataType})}T.push({type:12,data:b},...de(t,...m));let O=E=>`\n  ${E.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",b.length).declareVariables(y,...d)}\n  ${xy(b.length)}\n  ${Iy(d)}\n\n  ${E.mainStart()}\n    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${y.offsetToIndices("global_idx")};\n    var index = ${y.indicesGet("indices",f)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${Ce("uniforms.size_in_split_axis","output_number - 1u",b.length)};\n      ${y.indicesSet("indices",f,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:O,getRunData:()=>({outputs:C,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:T})}},sc=(e,r)=>{Cy(e.inputs);let t=e.inputs.length===1?r:Sy(e.inputs,r);e.compute(Ay(e.inputs,t),{inputs:[0]})},uc=e=>{let r=e.axis,t=e.splitSizes,s=e.numOutputs<0?t.length:e.numOutputs;if(s!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Re({axis:r,numOutputs:s,splitSizes:t})}});var dc,Ty,Ey,Py,cc,fc=ue(()=>{"use strict";Ie();Be();Oe();dc=e=>Array.from(e.getBigInt64Array(),Number),Ty=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(dc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Ey=(e,r)=>{let t=[];for(let s=0;s<e.length;++s)t.push(e[s]*r[s]);return t},Py=e=>{let r=e[0].dims,t=dc(e[1]),s=Ey(r,t),l=X.size(s),f=e[0].dataType,d=Z("input",f,r.length),y=se("output",f,s.length),b=C=>`\n      const inputShape = ${d.indices(...r)};\n      ${C.registerUniform("output_size","u32").declareVariables(d,y)}\n      ${C.mainStart()}\n      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${y.offsetToIndices("global_idx")};\n      var input_indices: ${d.type.indices};\n      for (var i = 0; i < ${r.length}; i++) {\n        let input_dim_i = ${d.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${y.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${d.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${y.setByOffset("global_idx",d.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},...de(e[0].dims,s)]}),getShaderSource:b}},cc=e=>{Ty(e.inputs),e.compute(Py(e.inputs),{inputs:[0]})}});var ky,Oy,pc,mc=ue(()=>{"use strict";Ie();Be();Oe();ky=(e,r,t,s,l)=>{let f=se("output_data",l,t.length,4),d=Z("a_data",r[1].dataType,r[1].dims.length,4),y=Z("b_data",r[2].dataType,r[2].dims.length,4),b=Z("c_data",r[0].dataType,r[0].dims.length,4),C,m=(S,T,O)=>`select(${T}, ${S}, ${O})`;if(!s)C=f.setByOffset("global_idx",m(d.getByOffset("global_idx"),y.getByOffset("global_idx"),b.getByOffset("global_idx")));else{let S=(T,O,E="")=>{let k=`a_data[index_a${O}][component_a${O}]`,j=`b_data[index_b${O}][component_b${O}]`,V=`bool(c_data[index_c${O}] & (0xffu << (component_c${O} * 8)))`;return`\n            let output_indices${O} = ${f.offsetToIndices(`global_idx * 4u + ${O}u`)};\n            let offset_a${O} = ${d.broadcastedIndicesToOffset(`output_indices${O}`,f)};\n            let offset_b${O} = ${y.broadcastedIndicesToOffset(`output_indices${O}`,f)};\n            let offset_c${O} = ${b.broadcastedIndicesToOffset(`output_indices${O}`,f)};\n            let index_a${O} = offset_a${O} / 4u;\n            let index_b${O} = offset_b${O} / 4u;\n            let index_c${O} = offset_c${O} / 4u;\n            let component_a${O} = offset_a${O} % 4u;\n            let component_b${O} = offset_b${O} % 4u;\n            let component_c${O} = offset_c${O} % 4u;\n            ${T}[${O}] = ${E}(${m(k,j,V)});\n          `};l===9?C=`\n            var data = vec4<u32>(0);\n            ${S("data",0,"u32")}\n            ${S("data",1,"u32")}\n            ${S("data",2,"u32")}\n            ${S("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:C=`\n            ${S("output_data[global_idx]",0)}\n            ${S("output_data[global_idx]",1)}\n            ${S("output_data[global_idx]",2)}\n            ${S("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(b,d,y,f)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${C}\n      }`},Oy=e=>{let r=e[1].dims,t=e[2].dims,s=e[0].dims,l=e[1].dataType,f=!(X.areEqual(r,t)&&X.areEqual(t,s)),d=r,y=X.size(r);if(f){let C=Vt.calcShape(Vt.calcShape(r,t,!1),s,!1);if(!C)throw new Error("Can\'t perform where op on the given tensors");d=C,y=X.size(d)}let b=Math.ceil(y/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:C=>ky(C,e,d,f,l),getRunData:()=>({outputs:[{dims:d,dataType:l}],dispatchGroup:{x:Math.ceil(y/64/4)},programUniforms:[{type:12,data:b},...de(s,r,t,d)]})}},pc=e=>{e.compute(Oy(e.inputs))}});var hc,gc=ue(()=>{"use strict";Eu();qo();Ou();Bu();bl();El();Ol();Qo();ql();Yl();td();id();ad();ld();fd();hd();yd();vd();ta();$d();Id();Td();Ld();qd();no();Zd();Qd();nc();ac();lc();fc();Fr();uo();mc();hc=new Map([["Abs",[Du]],["Acos",[Mu]],["Acosh",[zu]],["Add",[vl]],["ArgMax",[Tu,Fo]],["ArgMin",[Au,Fo]],["Asin",[Uu]],["Asinh",[ju]],["Atan",[Vu]],["Atanh",[Nu]],["Attention",[Pu]],["AveragePool",[Md,Dd]],["BatchNormalization",[ku]],["BiasAdd",[Ru]],["BiasSplitGelu",[yl]],["Cast",[Gu,Wu]],["Ceil",[Lu]],["Clip",[Hu]],["Concat",[Pl,kl]],["Conv",[ia,na]],["ConvTranspose",[Fl,Ll]],["Cos",[Fu]],["Cosh",[qu]],["CumSum",[Kl,Jl]],["Div",[wl]],["Einsum",[Ql,ed]],["Elu",[Ku,ao]],["Equal",[_l]],["Erf",[Ju]],["Exp",[Yu]],["Expand",[nd]],["FastGelu",[od]],["Floor",[Zu]],["FusedConv",[ia,na]],["Gather",[ud,sd]],["GatherElements",[cd,dd]],["Gelu",[Xu]],["Gemm",[md,pd]],["GlobalAveragePool",[jd,Ud]],["GlobalMaxPool",[Hd,Gd]],["Greater",[xl]],["GreaterOrEqual",[Al]],["HardSigmoid",[al,ol]],["InstanceNormalization",[gd]],["LayerNormalization",[bd]],["LeakyRelu",[Qu,ao]],["Less",[Il]],["LessOrEqual",[Tl]],["Log",[hl]],["MatMul",[jl]],["MatMulNBits",[wd,_d]],["MaxPool",[Nd,Wd]],["Mul",[$l]],["MultiHeadAttention",[xd,Sd]],["Neg",[tl]],["Not",[el]],["Pad",[Ad]],["Pow",[Cl]],["Range",[Fd]],["Reciprocal",[rl]],["ReduceMin",[_u]],["ReduceMean",[gu]],["ReduceMax",[wu]],["ReduceSum",[Cu]],["ReduceProd",[$u]],["ReduceL1",[yu]],["ReduceL2",[bu]],["ReduceLogSum",[xu]],["ReduceLogSumExp",[vu]],["ReduceSumSquare",[Su]],["Relu",[nl]],["Resize",[Jd,Yd]],["Sigmoid",[il]],["Sin",[sl]],["Sinh",[ul]],["Slice",[tc,rc]],["SkipLayerNormalization",[Xd]],["Split",[sc,uc]],["Sqrt",[ll]],["Softmax",[ic,oc]],["Sub",[Sl]],["Tan",[dl]],["Tanh",[fl]],["ThresholdedRelu",[ml,ao]],["Tile",[cc]],["Transpose",[nu,iu]],["Where",[pc]]])});var vo,yc=ue(()=>{"use strict";Hr();Yt();Oe();vo=class{constructor(r){this.backend=r;this.repo=new Map,this.attributesBound=!1}getArtifact(r){return this.repo.get(r)}setArtifact(r,t){this.repo.set(r,t)}run(r,t,s,l,f){gr(r.programInfo.name);let d=this.backend.device,y=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let b=[];for(let m of t)b.push({binding:b.length,resource:{buffer:m.buffer}});for(let m of s)b.push({binding:b.length,resource:{buffer:m.buffer}});f&&b.push({binding:b.length,resource:f});let C=d.createBindGroup({layout:r.computePipeline.getBindGroupLayout(0),entries:b,label:r.programInfo.name});if(this.backend.sessionStatus==="capturing"){let m={kernelId:this.backend.currentKernelId,computePipeline:r.computePipeline,bindGroup:C,dispatchGroup:l};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(m)}y.setPipeline(r.computePipeline),y.setBindGroup(0,C),y.dispatchWorkgroups(...l),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),rr(r.programInfo.name)}dispose(){}build(r,t){gr(r.name);let s=this.backend.device,l=[];s.features.has("shader-f16")&&l.push("enable f16;"),s.features.has("chromium-experimental-subgroups")&&l.push("enable chromium_experimental_subgroups;");let f=tu(t),d=r.getShaderSource(f),y=`${l.join(`\n`)}\n${f.additionalImplementations}\n${d}`,b=s.createShaderModule({code:y,label:r.name});We("verbose",()=>`[WebGPU] ${r.name} shader code: ${y}`);let C=s.createComputePipeline({compute:{module:b,entryPoint:"main"},layout:"auto",label:r.name});return rr(r.name),{programInfo:r,computePipeline:C}}normalizeDispatchGroupSize(r){let t=typeof r=="number"?r:r.x,s=typeof r=="number"?1:r.y||1,l=typeof r=="number"?1:r.z||1,f=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=f&&s<=f&&l<=f)return[t,s,l];let d=t*s*l,y=Math.ceil(Math.sqrt(d));if(y>f){if(y=Math.ceil(Math.cbrt(d)),y>f)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[y,y,y]}else return[y,y,1]}}});var Ry,By,da,wo,bc=ue(()=>{"use strict";Hr();Ie();Yt();Ys();eu();gc();yc();Ry=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let s=0;s<e.length;++s){let l=e[s].dataType;switch(r[s]){case"none":{t.push("");break}case"type":{t.push(`${l}`);break}case"rank":{let f=e[s].dims.length;t.push(`${l};${f}`);break}case"dims":{let f=e[s].dims.join(",");t.push(`${l};${f}`);break}default:throw new Error(`unsupported input dependency: ${r[s]}`)}}return t.join("|")},By=(e,r,t)=>{let s=e.name;return e.shaderCache?.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+t+`:${Ry(r,e.shaderCache?.inputDependencies??new Array(r.length).fill("dims"))}`,s},da=class{constructor(r){r&&(this.architecture=r.architecture,this.vendor=r.vendor)}isArchitecture(r){return this.architecture===r}isVendor(r){return this.vendor===r}},wo=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16*8;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let r=this.kernelCustomData.get(this.currentKernelId);return r||(r={},this.kernelCustomData.set(this.currentKernelId,r)),r}async initialize(r,t){this.env=r;let s=[],l={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:s};t.features.has("chromium-experimental-timestamp-query-inside-passes")?s.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&s.push("timestamp-query"),t.features.has("shader-f16")&&s.push("shader-f16"),t.features.has("chromium-experimental-subgroups")&&s.push("chromium-experimental-subgroups"),this.device=await t.requestDevice(l),this.adapterInfo=new da(await t.requestAdapterInfo()),this.gpuDataManager=Qs(this),this.programManager=new vo(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Ks(r.logLevel,!!r.debug),this.device.onuncapturederror=f=>{f.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${f.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:t,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let r=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=r.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;gr(),this.endComputePass();let r;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),r=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(r,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,r,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&r.mapAsync(GPUMapMode.READ).then(()=>{let t=new BigUint64Array(r.getMappedRange()),s=this.pendingQueries.get(r);for(let l=0;l<t.length/2;l++){let f=s[l],d=f.kernelId,y=this.kernels.get(d),b=y.kernelType,C=y.kernelName,m=f.programName,S=f.inputTensorViews,T=f.outputTensorViews,O=t[l*2],E=t[l*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=O);let k=Number(O-this.queryTimeBase),j=Number(E-this.queryTimeBase);if(!Number.isSafeInteger(k)||!Number.isSafeInteger(j))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:S.map(V=>({dims:V.dims,dataType:tr(V.dataType)})),outputsMetadata:T.map(V=>({dims:V.dims,dataType:tr(V.dataType)})),kernelId:d,kernelType:b,kernelName:C,programName:m,startTime:k,endTime:j});else{let V="";S.forEach((W,M)=>{V+=`input[${M}]: [${W.dims}] | ${tr(W.dataType)}, `});let B="";T.forEach((W,M)=>{B+=`output[${M}]: [${W.dims}] | ${tr(W.dataType)}, `}),console.log(`[profiling] kernel "${d}|${b}|${C}|${m}" ${V}${B}execution time: ${j-k} ns`)}Mo("GPU",`${m}::${O}::${E}`)}r.unmap(),this.pendingQueries.delete(r)}),rr()}run(r,t,s,l,f){gr(r.name);let d=[];for(let B=0;B<t.length;++B){let W=t[B].data;if(W===0)continue;let M=this.gpuDataManager.get(W);if(!M)throw new Error(`no GPU data for input: ${W}`);d.push(M)}let{outputs:y,dispatchGroup:b,programUniforms:C}=r.getRunData(t),m=s.length===0?y.map((B,W)=>W):s;if(m.length!==y.length)throw new Error(`Output size ${m.length} must be equal to ${y.length}.`);let S=[],T=[];for(let B=0;B<y.length;++B){if(!Number.isInteger(m[B])||m[B]<-3||m[B]>=y.length)throw new Error(`Invalid output index: ${m[B]}`);if(m[B]===-3)continue;let W=m[B]===-1,M=m[B]===-2,q=W||M?f(y[B].dataType,y[B].dims):l(m[B],y[B].dataType,y[B].dims);if(S.push(q),q.data===0)continue;let Q=this.gpuDataManager.get(q.data);if(!Q)throw new Error(`no GPU data for output: ${q.data}`);if(W&&this.temporaryData.push(Q),M){let te=this.kernelPersistentData.get(this.currentKernelId);te||(te=[],this.kernelPersistentData.set(this.currentKernelId,te)),te.push(Q)}T.push(Q)}if(d.length!==t.length||T.length!==S.length){if(T.length===0)return rr(r.name),S;throw new Error(`Program ${r.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let O;if(C){let B=0,W=[];C.forEach(te=>{let oe=typeof te.data=="number"?[te.data]:te.data;if(oe.length===0)return;let J=te.type===10?2:4,ie,be;te.type===10?(be=oe.length>4?16:oe.length>2?8:oe.length*J,ie=oe.length>4?16:J*oe.length):(be=oe.length<=2?oe.length*J:16,ie=16),B=Math.ceil(B/be)*be,W.push(B);let De=te.type===10?8:4;B+=oe.length>4?Math.ceil(oe.length/De)*ie:oe.length*J});let M=16;B=Math.ceil(B/M)*M;let q=new ArrayBuffer(B);C.forEach((te,oe)=>{let J=W[oe],ie=typeof te.data=="number"?[te.data]:te.data;if(te.type===6)new Int32Array(q,J,ie.length).set(ie);else if(te.type===12)new Uint32Array(q,J,ie.length).set(ie);else if(te.type===10)new Uint16Array(q,J,ie.length).set(ie);else if(te.type===1)new Float32Array(q,J,ie.length).set(ie);else throw new Error(`Unsupported uniform type: ${tr(te.type)}`)});let Q=this.gpuDataManager.create(B,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Q.buffer,0,q,0,B),this.gpuDataManager.release(Q.id),O={offset:0,size:B,buffer:Q.buffer}}let E=this.programManager.normalizeDispatchGroupSize(b),k=E[1]===1&&E[2]===1,j=By(r,t,k),V=this.programManager.getArtifact(j);if(V||(V=this.programManager.build(r,E),this.programManager.setArtifact(j,V),We("info",()=>`[artifact] key: ${j}, programName: ${r.name}`)),We("info",()=>`[ProgramManager] run "${r.name}" (key=${j}) with ${E[0]}x${E[1]}x${E[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let B={kernelId:this.currentKernelId,programName:V.programInfo.name,inputTensorViews:t,outputTensorViews:S};this.pendingKernels.push(B),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(B)}return this.programManager.run(V,d,T,E,O),rr(r.name),S}upload(r,t){this.gpuDataManager.upload(r,t)}memcpy(r,t){this.gpuDataManager.memcpy(r,t)}async download(r,t){await this.gpuDataManager.download(r,t)}alloc(r){return this.gpuDataManager.create(r).id}free(r){return this.gpuDataManager.release(r)}createKernel(r,t,s,l){let f=hc.get(r);if(!f)throw new Error(`kernel not implemented: ${r}`);let d={kernelType:r,kernelName:l,kernelEntry:f[0],attributes:[f[1],s]};this.kernels.set(t,d)}releaseKernel(r){let t=this.kernelPersistentData.get(r);if(t){for(let s of t)this.gpuDataManager.release(s.id);this.kernelPersistentData.delete(r)}this.kernelCustomData.delete(r),this.kernels.delete(r)}computeKernel(r,t,s){let l=this.kernels.get(r);if(!l)throw new Error(`kernel not created: ${r}`);let f=l.kernelType,d=l.kernelName,y=l.kernelEntry,b=l.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${f}] ${d}" is not allowed to be called recursively`);this.currentKernelId=r,b[0]&&(b[1]=b[0](b[1]),b[0]=void 0),We("info",()=>`[WebGPU] Start to run kernel "[${f}] ${d}"...`);let C=this.env.debug;this.temporaryData=[];try{return C&&this.device.pushErrorScope("validation"),y(t,b[1]),0}catch(m){return s.push(Promise.resolve(`[WebGPU] Kernel "[${f}] ${d}" failed. ${m}`)),1}finally{C&&s.push(this.device.popErrorScope().then(m=>m?`GPU validation error for kernel "[${f}] ${d}": ${m.message}`:null));for(let m of this.temporaryData)this.gpuDataManager.release(m.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(r,t,s,l){let f=this.sessionExternalDataMapping.get(r);f||(f=new Map,this.sessionExternalDataMapping.set(r,f));let d=f.get(t),y=this.gpuDataManager.registerExternalBuffer(s,l,d?.[1]);return f.set(t,[y,s]),y}unregisterBuffers(r){let t=this.sessionExternalDataMapping.get(r);t&&(t.forEach(s=>this.gpuDataManager.unregisterExternalBuffer(s[1])),this.sessionExternalDataMapping.delete(r))}getBuffer(r){let t=this.gpuDataManager.get(r);if(!t)throw new Error(`no GPU data for buffer: ${r}`);return t.buffer}createDownloader(r,t,s){return async()=>{let l=await jo(this,r,t);return Js(l.buffer,s)}}writeTimestamp(r){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,r)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){We("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){We("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){We("info","replay"),this.sessionStatus="replaying";let r=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),s=r.length;this.pendingKernels=[];for(let l=0;l<s;l++){let f=this.getComputePassEncoder(),d=r[l];this.writeTimestamp(this.pendingDispatchNumber*2),f.setPipeline(d.computePipeline),f.setBindGroup(0,d.bindGroup),f.dispatchWorkgroups(...d.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[l]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(r){this.unregisterBuffers(r),this.capturedCommandList.has(r)&&this.capturedCommandList.delete(r),this.capturedPendingKernels.has(r)&&this.capturedPendingKernels.delete(r),this.gpuDataManager.onReleaseSession(r)}onRunStart(r){this.currentSessionId=r,this.setQueryType()}}});var vc={};Hi(vc,{init:()=>Dy});var ai,ca,Dy,wc=ue(()=>{"use strict";Ie();bc();Yt();Be();ai=class e{constructor(r,t,s,l){this.module=r;this.dataType=t;this.data=s;this.dims=l}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=X.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=X.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=X.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(X.size(r)!==X.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,r)}},ca=class{constructor(r,t,s){this.module=r;this.backend=t;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=t.adapterInfo;let l=r.HEAPU32,f=s>>>2;this.opKernelContext=l[f++];let d=l[f++];this.outputCount=l[f++],this.customDataOffset=l[f++],this.customDataSize=l[f++];let y=[];for(let b=0;b<d;b++){let C=l[f++],m=l[f++],S=l[f++],T=[];for(let O=0;O<S;O++)T.push(l[f++]);y.push(new ai(r,C,m,T))}this.inputs=y}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(r,t){let s=t?.inputs?.map(y=>typeof y=="number"?this.inputs[y]:y)??this.inputs,l=t?.outputs??[],f=(y,b,C)=>new ai(this.module,b,this.output(y,C),C),d=(y,b)=>{let C=ti(y);if(!C)throw new Error(`Unsupported data type: ${y}`);let m=C*X.size(b),S=m>0?this.backend.gpuDataManager.create(m).id:0;return new ai(this.module,y,S,b)};return this.backend.run(r,s,l,f,d)}output(r,t){let s=this.module.stackSave();try{let l=this.module.stackAlloc((1+t.length)*4),f=l>>2;this.module.HEAPU32[f++]=t.length;for(let d=0;d<t.length;d++)this.module.HEAPU32[f++]=t[d];return this.module._JsepOutput(this.opKernelContext,r,l)}catch(l){throw new Error(`Failed to generate kernel\'s output[${r}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${l}`)}finally{this.module.stackRestore(s)}}},Dy=async(e,r,t,s)=>{let l=r.jsepInit;if(!l)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let f=new wo;await f.initialize(t,s),l("webgpu",[f,d=>f.alloc(d),d=>f.free(d),(d,y,b,C=!1)=>{if(C)We("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${d}, dst=${y}, size=${b}`),f.memcpy(d,y);else{We("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${d}, gpuDataId=${y}, size=${b}`);let m=r.HEAPU8.subarray(d>>>0,(d>>>0)+b);f.upload(y,m)}},async(d,y,b)=>{We("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${d}, dataOffset=${y}, size=${b}`),await f.download(d,()=>r.HEAPU8.subarray(y>>>0,(y>>>0)+b))},(d,y,b)=>f.createKernel(d,y,b,r.UTF8ToString(r._JsepGetNodeName(y))),d=>f.releaseKernel(d),(d,y,b,C)=>{We("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${b}, kernel=${d}, contextDataOffset=${y}`);let m=new ca(r,f,y);return f.computeKernel(d,m,C)},()=>f.captureBegin(),()=>f.captureEnd(),()=>f.replay()])}else l("webnn")}});var _s;_s=cs();var qm=bs(),ko,Oo=!1,Li=!1,ws=!1,Km=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Jm=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Ym=(e,r)=>e?r?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":r?"ort-wasm-threaded.wasm":"ort-wasm.wasm",$s=async e=>{if(Oo)return Promise.resolve();if(Li)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(ws)throw new Error("previous call to \'initializeWebAssembly()\' failed.");Li=!0;let r=e.initTimeout,t=e.numThreads,s=e.simd,l=Km(t),f=s&&Jm(),d=e.wasmPaths,y=typeof d=="string"?d:void 0,b=Ym(f,l),C=typeof d=="object"?d[b]:void 0,m=!1,S=[];if(r>0&&S.push(new Promise(T=>{setTimeout(()=>{m=!0,T()},r)})),S.push(new Promise((T,O)=>{let E=l?qm:_s,k={locateFile:(j,V)=>{if(l&&j.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([vs()],{type:"text/javascript"}));if(j.endsWith(".wasm")){if(C)return C;let B=y??V;return b==="ort-wasm-simd.wasm"?B+"ort-wasm-simd.jsep.wasm":b==="ort-wasm-simd-threaded.wasm"?B+"ort-wasm-simd-threaded.jsep.wasm":B+b}return V+j}};if(l)if(k.numThreads=t,typeof Blob>"u")k.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let j=`var ortWasmThreaded=${E.toString()};`;k.mainScriptUrlOrBlob=new Blob([j],{type:"text/javascript"})}E(k).then(j=>{Li=!1,Oo=!0,ko=j,T()},j=>{Li=!1,ws=!0,O(j)})})),await Promise.race(S),m)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},et=()=>{if(Oo&&ko)return ko;throw new Error("WebAssembly is not initialized yet.")};var tt=(e,r)=>{let t=et(),s=t.lengthBytesUTF8(e)+1,l=t._malloc(s);return t.stringToUTF8(e,l,s),r.push(l),l},ei=(e,r,t,s)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([l,f])=>{let d=r?r+l:l;if(typeof f=="object")ei(f,d+".",t,s);else if(typeof f=="string"||typeof f=="number")s(d,f.toString());else if(typeof f=="boolean")s(d,f?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof f}`)})},Je=e=>{let r=et(),t=r.stackSave();try{let s=r.stackAlloc(8);r._OrtGetLastError(s,s+4);let l=r.HEAP32[s/4],f=r.HEAPU32[s/4+1],d=f?r.UTF8ToString(f):"";throw new Error(`${e} ERROR_CODE: ${l}, ERROR_MESSAGE: ${d}`)}finally{r.stackRestore(t)}};var Cs=e=>{let r=et(),t=0,s=[],l=e||{};try{if(e?.logSeverityLevel===void 0)l.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)l.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(l.terminate=!1);let f=0;return e?.tag!==void 0&&(f=tt(e.tag,s)),t=r._OrtCreateRunOptions(l.logSeverityLevel,l.logVerbosityLevel,!!l.terminate,f),t===0&&Je("Can\'t create run options."),e?.extra!==void 0&&ei(e.extra,"",new WeakSet,(d,y)=>{let b=tt(d,s),C=tt(y,s);r._OrtAddRunConfigEntry(t,b,C)!==0&&Je(`Can\'t set a run config entry: ${d} - ${y}.`)}),[t,s]}catch(f){throw t!==0&&r._OrtReleaseRunOptions(t),s.forEach(d=>r._free(d)),f}};var Zm=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Xm=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Qm=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},eh=(e,r,t)=>{for(let s of r){let l=typeof s=="string"?s:s.name;switch(l){case"webnn":if(l="WEBNN",typeof s!="string"){let d=s;if(d?.deviceType){let y=tt("deviceType",t),b=tt(d.deviceType,t);et()._OrtAddSessionConfigEntry(e,y,b)!==0&&Je(`Can\'t set a session config entry: \'deviceType\' - ${d.deviceType}.`)}if(d?.numThreads){let y=d.numThreads;(typeof y!="number"||!Number.isInteger(y)||y<0)&&(y=0);let b=tt("numThreads",t),C=tt(y.toString(),t);et()._OrtAddSessionConfigEntry(e,b,C)!==0&&Je(`Can\'t set a session config entry: \'numThreads\' - ${d.numThreads}.`)}if(d?.powerPreference){let y=tt("powerPreference",t),b=tt(d.powerPreference,t);et()._OrtAddSessionConfigEntry(e,y,b)!==0&&Je(`Can\'t set a session config entry: \'powerPreference\' - ${d.powerPreference}.`)}}break;case"webgpu":if(l="JS",typeof s!="string"){let d=s;if(d?.preferredLayout){if(d.preferredLayout!=="NCHW"&&d.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${d.preferredLayout}`);let y=tt("preferredLayout",t),b=tt(d.preferredLayout,t);et()._OrtAddSessionConfigEntry(e,y,b)!==0&&Je(`Can\'t set a session config entry: \'preferredLayout\' - ${d.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${l}`)}let f=tt(l,t);et()._OrtAppendExecutionProvider(e,f)!==0&&Je(`Can\'t append execution provider: ${l}.`)}},Ss=e=>{let r=et(),t=0,s=[],l=e||{};Qm(l);try{let f=Zm(l.graphOptimizationLevel??"all"),d=Xm(l.executionMode??"sequential"),y=typeof l.logId=="string"?tt(l.logId,s):0,b=l.logSeverityLevel??2;if(!Number.isInteger(b)||b<0||b>4)throw new Error(`log serverity level is not valid: ${b}`);let C=l.logVerbosityLevel??0;if(!Number.isInteger(C)||C<0||C>4)throw new Error(`log verbosity level is not valid: ${C}`);let m=typeof l.optimizedModelFilePath=="string"?tt(l.optimizedModelFilePath,s):0;if(t=r._OrtCreateSessionOptions(f,!!l.enableCpuMemArena,!!l.enableMemPattern,d,!!l.enableProfiling,0,y,b,C,m),t===0&&Je("Can\'t create session options."),l.executionProviders&&eh(t,l.executionProviders,s),l.enableGraphCapture!==void 0){if(typeof l.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${l.enableGraphCapture}`);let S=tt("enableGraphCapture",s),T=tt(l.enableGraphCapture.toString(),s);r._OrtAddSessionConfigEntry(t,S,T)!==0&&Je(`Can\'t set a session config entry: \'enableGraphCapture\' - ${l.enableGraphCapture}.`)}if(l.freeDimensionOverrides)for(let[S,T]of Object.entries(l.freeDimensionOverrides)){if(typeof S!="string")throw new Error(`free dimension override name must be a string: ${S}`);if(typeof T!="number"||!Number.isInteger(T)||T<0)throw new Error(`free dimension override value must be a non-negative integer: ${T}`);let O=tt(S,s);r._OrtAddFreeDimensionOverride(t,O,T)!==0&&Je(`Can\'t set a free dimension override: ${S} - ${T}.`)}return l.extra!==void 0&&ei(l.extra,"",new WeakSet,(S,T)=>{let O=tt(S,s),E=tt(T,s);r._OrtAddSessionConfigEntry(t,O,E)!==0&&Je(`Can\'t set a session config entry: ${S} - ${T}.`)}),[t,s]}catch(f){throw t!==0&&r._OrtReleaseSessionOptions(t),s.forEach(d=>r._free(d)),f}};Ie();var Is=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(r){if(r.code==="ERR_FS_FILE_TOO_LARGE"){let t=(void 0)(e),s=[];for await(let l of t)s.push(l);return new Uint8Array(Buffer.concat(s))}throw r}else{let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),s=t?parseInt(t,10):0;if(s<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let l=r.body.getReader(),f;try{f=new ArrayBuffer(s)}catch(y){if(y instanceof RangeError){let b=Math.ceil(s/65536);f=new WebAssembly.Memory({initial:b,maximum:b}).buffer}else throw y}let d=0;for(;;){let{done:y,value:b}=await l.read();if(y)break;let C=b.byteLength;new Uint8Array(f,d,C).set(b),d+=C}return new Uint8Array(f,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var My=(e,r)=>{et()._OrtInit(e,r)!==0&&Je("Can\'t initialize onnxruntime.")},$c=async e=>{My(e.wasm.numThreads,ri(e.logLevel))},Cc=async(e,r)=>{{let t=(wc(),Wr(vc)).init;if(r==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let s=e.webgpu.adapter;if(s){if(typeof s.limits!="object"||typeof s.features!="object"||typeof s.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let l=e.webgpu.powerPreference;if(l!==void 0&&l!=="low-power"&&l!=="high-performance")throw new Error(`Invalid powerPreference setting: "${l}"`);let f=e.webgpu.forceFallbackAdapter;if(f!==void 0&&typeof f!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${f}"`);if(s=await navigator.gpu.requestAdapter({powerPreference:l,forceFallbackAdapter:f}),!s)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\')}if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await t("webgpu",et(),e,s)}if(r==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await t("webnn",et(),e)}}},br=new Map,zy=e=>{let r=et(),t=r.stackSave();try{let s=r.stackAlloc(8);return r._OrtGetInputOutputCount(e,s,s+4)!==0&&Je("Can\'t get session input/output count."),[r.HEAP32[s/4],r.HEAP32[s/4+1]]}finally{r.stackRestore(t)}},fa=e=>{let r=et(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},Sc=async(e,r)=>{let t,s,l=et();Array.isArray(e)?[t,s]=e:e.buffer===l.HEAPU8.buffer?[t,s]=[e.byteOffset,e.byteLength]:[t,s]=fa(e);let f=0,d=0,y=0,b=[],C=[],m=[];try{if([d,b]=Ss(r),r?.externalData&&l.mountExternalData){let B=[];for(let W of r.externalData){let M=typeof W=="string"?W:W.path;B.push(Is(typeof W=="string"?W:W.data).then(q=>{l.mountExternalData(M,q)}))}await Promise.all(B)}f=await l._OrtCreateSession(t,s,d),f===0&&Je("Can\'t create a session.");let[S,T]=zy(f),O=!!r?.enableGraphCapture,E=[],k=[],j=[];for(let B=0;B<S;B++){let W=l._OrtGetInputName(f,B);W===0&&Je("Can\'t get an input name."),C.push(W),E.push(l.UTF8ToString(W))}for(let B=0;B<T;B++){let W=l._OrtGetOutputName(f,B);W===0&&Je("Can\'t get an output name."),m.push(W);let M=l.UTF8ToString(W);k.push(M);{if(O&&r?.preferredOutputLocation===void 0){j.push("gpu-buffer");continue}let q=typeof r?.preferredOutputLocation=="string"?r.preferredOutputLocation:r?.preferredOutputLocation?.[M]??"cpu";if(q!=="cpu"&&q!=="cpu-pinned"&&q!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${q}.`);if(O&&q!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${q}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);j.push(q)}}let V=null;return j.some(B=>B==="gpu-buffer")&&(y=l._OrtCreateBinding(f),y===0&&Je("Can\'t create IO binding."),V={handle:y,outputPreferredLocations:j,outputPreferredLocationsEncoded:j.map(B=>Bo(B))}),br.set(f,[f,C,m,V,O,!1]),[f,E,k]}catch(S){throw C.forEach(T=>l._OrtFree(T)),m.forEach(T=>l._OrtFree(T)),y!==0&&l._OrtReleaseBinding(y),f!==0&&l._OrtReleaseSession(f),S}finally{l._free(t),d!==0&&l._OrtReleaseSessionOptions(d),b.forEach(S=>l._free(S)),l.unmountExternalData?.()}},xc=e=>{let r=et(),t=br.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,l,f,d,y]=t;d&&(y&&r._OrtClearBoundOutputs(d.handle),r._OrtReleaseBinding(d.handle)),r.jsepOnReleaseSession?.(e),l.forEach(b=>r._OrtFree(b)),f.forEach(b=>r._OrtFree(b)),r._OrtReleaseSession(s),br.delete(e)},_c=(e,r,t,s,l,f=!1)=>{if(!e){r.push(0);return}let d=et(),y=e[0],b=e[1],C=e[3],m,S;if(y==="string"&&C==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(f&&C!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${l} when enableGraphCapture is true.`);if(C==="gpu-buffer"){let E=e[2].gpuBuffer,k=ti(Ro(y));S=b.reduce((V,B)=>V*B,1)*k;let j=d.jsepRegisterBuffer;if(!j)throw new Error(\'Tensor location "gpu-buffer" is not supported without using WebGPU.\');m=j(s,l,E,S)}else{let E=e[2];if(Array.isArray(E)){S=4*E.length,m=d._malloc(S),t.push(m);let k=m/4;for(let j=0;j<E.length;j++){if(typeof E[j]!="string")throw new TypeError(`tensor data at index ${j} is not a string`);d.HEAPU32[k++]=tt(E[j],t)}}else S=E.byteLength,m=d._malloc(S),t.push(m),d.HEAPU8.set(new Uint8Array(E.buffer,E.byteOffset,S),m)}let T=d.stackSave(),O=d.stackAlloc(4*b.length);try{let E=O/4;b.forEach(j=>d.HEAP32[E++]=j);let k=d._OrtCreateTensor(Ro(y),m,S,O,b.length,Bo(C));k===0&&Je(`Can\'t create tensor for input/output. session=${s}, index=${l}.`),r.push(k)}finally{d.stackRestore(T)}},Ic=async(e,r,t,s,l,f)=>{let d=et(),y=br.get(e);if(!y)throw new Error(`cannot run inference. invalid session id: ${e}`);let b=y[0],C=y[1],m=y[2],S=y[3],T=y[4],O=y[5],E=r.length,k=s.length,j=0,V=[],B=[],W=[],M=[],q=d.stackSave(),Q=d.stackAlloc(E*4),te=d.stackAlloc(E*4),oe=d.stackAlloc(k*4),J=d.stackAlloc(k*4);try{[j,V]=Cs(f);for(let pe=0;pe<E;pe++)_c(t[pe],B,M,e,r[pe],T);for(let pe=0;pe<k;pe++)_c(l[pe],W,M,e,E+s[pe],T);let ie=Q/4,be=te/4,De=oe/4,qe=J/4;for(let pe=0;pe<E;pe++)d.HEAPU32[ie++]=B[pe],d.HEAPU32[be++]=C[r[pe]];for(let pe=0;pe<k;pe++)d.HEAPU32[De++]=W[pe],d.HEAPU32[qe++]=m[s[pe]];if(S&&!O){let{handle:pe,outputPreferredLocations:Le,outputPreferredLocationsEncoded:Me}=S;if(C.length!==E)throw new Error(`input count from feeds (${E}) is expected to be always equal to model\'s input count (${C.length}).`);for(let Se=0;Se<E;Se++){let ge=r[Se];await d._OrtBindInput(pe,C[ge],B[Se])!==0&&Je(`Can\'t bind input[${Se}] for session=${e}.`)}for(let Se=0;Se<k;Se++){let ge=s[Se];l[Se]?.[3]?d._OrtBindOutput(pe,m[ge],W[Se],0)!==0&&Je(`Can\'t bind pre-allocated output[${Se}] for session=${e}.`):d._OrtBindOutput(pe,m[ge],0,Me[ge])!==0&&Je(`Can\'t bind output[${Se}] to ${Le[Se]} for session=${e}.`)}br.set(e,[b,C,m,S,T,!0])}d.jsepOnRunStart?.(b);let Ve;S?Ve=await d._OrtRunWithBinding(b,S.handle,k,oe,j):Ve=await d._OrtRun(b,te,Q,E,J,k,oe,j),Ve!==0&&Je("failed to call OrtRun().");let Te=[];for(let pe=0;pe<k;pe++){let Le=d.HEAPU32[oe/4+pe];if(Le===W[pe]){Te.push(l[pe]);continue}let Me=d.stackSave(),Se=d.stackAlloc(4*4),ge=!1,ve,ze=0;try{d._OrtGetTensorData(Le,Se,Se+4,Se+8,Se+12)!==0&&Je(`Can\'t access output tensor data on index ${pe}.`);let ne=Se/4,he=d.HEAPU32[ne++];ze=d.HEAPU32[ne++];let Ee=d.HEAPU32[ne++],Qe=d.HEAPU32[ne++],st=[];for(let at=0;at<Qe;at++)st.push(d.HEAPU32[Ee/4+at]);d._OrtFree(Ee);let lt=st.reduce((at,nt)=>at*nt,1);ve=tr(he);let pt=S?.outputPreferredLocations[s[pe]];if(ve==="string"){if(pt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let at=[],nt=ze/4;for(let gt=0;gt<lt;gt++){let St=d.HEAPU32[nt++],Tt=gt===lt-1?void 0:d.HEAPU32[nt]-St;at.push(d.UTF8ToString(St,Tt))}Te.push([ve,st,at,"cpu"])}else if(pt==="gpu-buffer"&&lt>0){let at=d.jsepGetBuffer;if(!at)throw new Error(\'preferredLocation "gpu-buffer" is not supported without using WebGPU.\');let nt=at(ze),gt=ti(he);if(gt===void 0||!xs(ve))throw new Error(`Unsupported data type: ${ve}`);ge=!0,Te.push([ve,st,{gpuBuffer:nt,download:d.jsepCreateDownloader(nt,lt*gt,ve),dispose:()=>{d._OrtReleaseTensor(Le)}},"gpu-buffer"])}else{let at=Fi(ve),nt=new at(lt);new Uint8Array(nt.buffer,nt.byteOffset,nt.byteLength).set(d.HEAPU8.subarray(ze,ze+nt.byteLength)),Te.push([ve,st,nt,"cpu"])}}finally{d.stackRestore(Me),ve==="string"&&ze&&d._free(ze),ge||d._OrtReleaseTensor(Le)}}return S&&!T&&(d._OrtClearBoundOutputs(S.handle),br.set(e,[b,C,m,S,T,!1])),Te}finally{d.stackRestore(q),B.forEach(ie=>d._OrtReleaseTensor(ie)),W.forEach(ie=>d._OrtReleaseTensor(ie)),M.forEach(ie=>d._free(ie)),j!==0&&d._OrtReleaseRunOptions(j),V.forEach(ie=>d._free(ie))}},Ac=e=>{let r=et(),t=br.get(e);if(!t)throw new Error("invalid session id");let s=t[0],l=r._OrtEndProfiling(s);l===0&&Je("Can\'t get an profile file name."),r._OrtFree(l)},Tc=e=>{let r=[];for(let t of e){let s=t[2];!Array.isArray(s)&&"buffer"in s&&r.push(s.buffer)}return r};self.onmessage=e=>{let{type:r,in:t}=e.data;try{switch(r){case"init-wasm":$s(t.wasm).then(()=>{$c(t).then(()=>{postMessage({type:r})},s=>{postMessage({type:r,err:s})})},s=>{postMessage({type:r,err:s})});break;case"init-ep":{let{epName:s,env:l}=t;Cc(l,s).then(()=>{postMessage({type:r})},f=>{postMessage({type:r,err:f})});break}case"copy-from":{let{buffer:s}=t,l=fa(s);postMessage({type:r,out:l});break}case"create":{let{model:s,options:l}=t;Sc(s,l).then(f=>{postMessage({type:r,out:f})},f=>{postMessage({type:r,err:f})});break}case"release":xc(t),postMessage({type:r});break;case"run":{let{sessionId:s,inputIndices:l,inputs:f,outputIndices:d,options:y}=t;Ic(s,l,f,d,new Array(d.length).fill(null),y).then(b=>{b.some(C=>C[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:b},Tc([...f,...b]))},b=>{postMessage({type:r,err:b})});break}case"end-profiling":Ac(t),postMessage({type:r});break;default:}}catch(s){postMessage({type:r,err:s})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var Er,Ut,_n,Wa,Va,No,Wo,ai,oi,V0,Na,vp,wp,_p,$p,Cp,xp,Sp,Vo=se(()=>{"use strict";Dt();yp();ei();Er=()=>!!Ve.wasm.proxy&&typeof document<"u",_n=!1,Wa=!1,Va=!1,Wo=new Map,ai=(e,t)=>{let r=Wo.get(e);r?r.push(t):Wo.set(e,[t])},oi=()=>{if(_n||!Wa||Va||!Ut)throw new Error("worker not ready")},V0=e=>{switch(e.data.type){case"init-wasm":_n=!1,e.data.err?(Va=!0,No[1](e.data.err)):(Wa=!0,No[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=Wo.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}default:}},Na=typeof document<"u"?document?.currentScript?.src:void 0,vp=async()=>{if(!Wa){if(_n)throw new Error("multiple calls to 'initWasm()' detected.");if(Va)throw new Error("previous call to 'initWasm()' failed.");if(_n=!0,Er())return Ve.wasm.wasmPaths===void 0&&Na&&Na.indexOf("blob:")!==0&&(Ve.wasm.wasmPaths=Na.substr(0,+Na.lastIndexOf("/")+1)),new Promise((e,t)=>{Ut?.terminate();let r=URL.createObjectURL(new Blob([bp()],{type:"text/javascript"}));Ut=new Worker(r,{name:"ort-wasm-proxy-worker"}),Ut.onerror=s=>t(s),Ut.onmessage=V0,URL.revokeObjectURL(r),No=[e,t];let o={type:"init-wasm",in:Ve};Ut.postMessage(o)});try{await Eu(Ve.wasm),await dp(Ve),Wa=!0}catch(e){throw Va=!0,e}finally{_n=!1}}},wp=async e=>{if(Er())return oi(),new Promise((t,r)=>{ai("init-ep",[t,r]);let o={type:"init-ep",in:{epName:e,env:Ve}};Ut.postMessage(o)});await cp(Ve,e)},_p=async e=>Er()?(oi(),new Promise((t,r)=>{ai("copy-from",[t,r]);let o={type:"copy-from",in:{buffer:e}};Ut.postMessage(o,[e.buffer])})):Uo(e),$p=async(e,t)=>{if(Er()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return oi(),new Promise((r,o)=>{ai("create",[r,o]);let s={type:"create",in:{model:e,options:{...t}}},c=[];e instanceof Uint8Array&&c.push(e.buffer),Ut.postMessage(s,c)})}else return pp(e,t)},Cp=async e=>{if(Er())return oi(),new Promise((t,r)=>{ai("release",[t,r]);let o={type:"release",in:e};Ut.postMessage(o)});fp(e)},xp=async(e,t,r,o,s,c)=>{if(Er()){if(r.some(d=>d[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(s.some(d=>d))throw new Error("pre-allocated output tensor is not supported for proxy.");return oi(),new Promise((d,h)=>{ai("run",[d,h]);let y=r,w={type:"run",in:{sessionId:e,inputIndices:t,inputs:y,outputIndices:o,options:c}};Ut.postMessage(w,gp(y))})}else return mp(e,t,r,o,s,c)},Sp=async e=>{if(Er())return oi(),new Promise((t,r)=>{ai("end-profiling",[t,r]);let o={type:"end-profiling",in:e};Ut.postMessage(o)});hp(e)}});var Ip,G0,Ga,Tp=se(()=>{"use strict";Dt();Vo();Ie();lo();Ip=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},G0=e=>{switch(e[3]){case"cpu":return new ft(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!ha(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:o,dispose:s}=e[2];return ft.fromGpuBuffer(r,{dataType:t,dims:e[1],download:o,dispose:s})}default:throw new Error(`invalid data location: ${e[3]}`)}},Ga=class{async fetchModelAndCopyToWasmMemory(t){return _p(await gn(t))}async loadModel(t,r){It();let o;typeof t=="string"?typeof process<"u"&&process.versions&&process.versions.node?o=await gn(t):o=await this.fetchModelAndCopyToWasmMemory(t):o=t,[this.sessionId,this.inputNames,this.outputNames]=await $p(o,r),$t()}async dispose(){return Cp(this.sessionId)}async run(t,r,o){It();let s=[],c=[];Object.entries(t).forEach(S=>{let k=S[0],E=S[1],O=this.inputNames.indexOf(k);if(O===-1)throw new Error(`invalid input '${k}'`);s.push(E),c.push(O)});let d=[],h=[];Object.entries(r).forEach(S=>{let k=S[0],E=S[1],O=this.outputNames.indexOf(k);if(O===-1)throw new Error(`invalid output '${k}'`);d.push(E),h.push(O)});let y=s.map((S,k)=>Ip(S,()=>`input "${this.inputNames[c[k]]}"`)),w=d.map((S,k)=>S?Ip(S,()=>`output "${this.outputNames[h[k]]}"`):null),f=await xp(this.sessionId,c,y,h,w,o),C={};for(let S=0;S<f.length;S++)C[this.outputNames[h[S]]]=d[S]??G0(f[S]);return $t(),C}startProfiling(){}endProfiling(){Sp(this.sessionId)}}});var H0,Ha,Ap=se(()=>{"use strict";Dt();Vo();Tp();H0=()=>{if((typeof Ve.wasm.initTimeout!="number"||Ve.wasm.initTimeout<0)&&(Ve.wasm.initTimeout=0),typeof Ve.wasm.simd!="boolean"&&(Ve.wasm.simd=!0),typeof Ve.wasm.proxy!="boolean"&&(Ve.wasm.proxy=!1),typeof Ve.wasm.trace!="boolean"&&(Ve.wasm.trace=!1),typeof Ve.wasm.numThreads!="number"||!Number.isInteger(Ve.wasm.numThreads)||Ve.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(Ve.wasm.numThreads=1);let e=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;Ve.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},Ha=class{async init(t){H0(),await vp(),await wp(t)}async createInferenceSessionHandler(t,r){let o=new Ga;return await o.loadModel(t,r),Promise.resolve(o)}}});var Ep={};xr(Ep,{wasmBackend:()=>L0});var L0,kp=se(()=>{"use strict";Ap();L0=new Ha});var q0={};xr(q0,{InferenceSession:()=>au,TRACE:()=>pn,TRACE_FUNC_BEGIN:()=>It,TRACE_FUNC_END:()=>$t,Tensor:()=>ft,TrainingSession:()=>pu,default:()=>F0,env:()=>Ve,registerBackend:()=>lr});Dt();Dt();Dt();var mu="1.18.0";var F0=Qa;{let e=(kp(),ur(Ep)).wasmBackend;lr("webgpu",e,5),lr("webnn",e,5),lr("cpu",e,10),lr("wasm",e,10)}Object.defineProperty(Ve.versions,"web",{value:mu,enumerable:!0});return ur(q0);})();
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
//# sourceMappingURL=ort.webgpu.min.js.map
