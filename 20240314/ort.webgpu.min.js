/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var ort=(()=>{var La=Object.defineProperty;var Ph=Object.getOwnPropertyDescriptor;var Rh=Object.getOwnPropertyNames;var zh=Object.prototype.hasOwnProperty;var ae=(e,t)=>()=>(e&&(t=e(e=0)),t);var Qr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),xr=(e,t)=>{for(var r in t)La(e,r,{get:t[r],enumerable:!0})},Bh=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of Rh(t))!zh.call(e,s)&&s!==r&&La(e,s,{get:()=>t[s],enumerable:!(o=Ph(t,s))||o.enumerable});return e};var sr=e=>Bh(La({},"__esModule",{value:!0}),e);var ra,Sr,ur,ia,na=ae(()=>{"use strict";ra=new Map,Sr=[],ur=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let o=ra.get(e);if(o===void 0)ra.set(e,{backend:t,priority:r});else{if(o.priority>r)return;if(o.priority===r&&o.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let s=Sr.indexOf(e);s!==-1&&Sr.splice(s,1);for(let p=0;p<Sr.length;p++)if(ra.get(Sr[p]).priority<=r){Sr.splice(p,0,e);return}Sr.push(e)}return}throw new TypeError("not a valid backend")},ia=async e=>{let t=e.length===0?Sr:e,r=[];for(let o of t){let s=ra.get(o);if(s){if(s.initialized)return s.backend;if(s.aborted)continue;let p=!!s.initPromise;try{return p||(s.initPromise=s.backend.init(o)),await s.initPromise,s.initialized=!0,s.backend}catch(d){p||r.push({name:o,err:d}),s.aborted=!0}finally{delete s.initPromise}}}throw new Error(`no available backend found. ERR: ${r.map(o=>`[${o.name}] ${o.err}`).join(", ")}`)}});var zs=ae(()=>{"use strict";na()});var Bs,Ms=ae(()=>{"use strict";Bs="1.18.0"});var Ds,Pt,Fa=ae(()=>{"use strict";Ms();Ds="warning",Pt={wasm:{},webgl:{},webgpu:{},versions:{common:Bs},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Ds=e}},get logLevel(){return Ds}};Object.defineProperty(Pt,"logLevel",{enumerable:!0})});var Ge,js=ae(()=>{"use strict";Fa();Ge=Pt});var Us,Ns,Ws=ae(()=>{"use strict";Us=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let o=r.getContext("2d");if(o!=null){let s,p;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(s=e.dims[2],p=e.dims[3]):(s=e.dims[3],p=e.dims[2]);let d=t?.format!==void 0?t.format:"RGB",g=t?.norm,b,w;g===void 0||g.mean===void 0?b=[255,255,255,255]:typeof g.mean=="number"?b=[g.mean,g.mean,g.mean,g.mean]:(b=[g.mean[0],g.mean[1],g.mean[2],0],g.mean[3]!==void 0&&(b[3]=g.mean[3])),g===void 0||g.bias===void 0?w=[0,0,0,0]:typeof g.bias=="number"?w=[g.bias,g.bias,g.bias,g.bias]:(w=[g.bias[0],g.bias[1],g.bias[2],0],g.bias[3]!==void 0&&(w[3]=g.bias[3]));let f=p*s,C=0,S=f,O=f*2,E=-1;d==="RGBA"?(C=0,S=f,O=f*2,E=f*3):d==="RGB"?(C=0,S=f,O=f*2):d==="RBG"&&(C=0,O=f,S=f*2);for(let P=0;P<p;P++)for(let j=0;j<s;j++){let U=(e.data[C++]-w[0])*b[0],z=(e.data[S++]-w[1])*b[1],N=(e.data[O++]-w[2])*b[2],W=E===-1?255:(e.data[E++]-w[3])*b[3];o.fillStyle="rgba("+U+","+z+","+N+","+W+")",o.fillRect(j,P,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Ns=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),o;if(r!=null){let s,p,d;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(s=e.dims[2],p=e.dims[1],d=e.dims[3]):(s=e.dims[3],p=e.dims[2],d=e.dims[1]);let g=t!==void 0&&t.format!==void 0?t.format:"RGB",b=t?.norm,w,f;b===void 0||b.mean===void 0?w=[255,255,255,255]:typeof b.mean=="number"?w=[b.mean,b.mean,b.mean,b.mean]:(w=[b.mean[0],b.mean[1],b.mean[2],255],b.mean[3]!==void 0&&(w[3]=b.mean[3])),b===void 0||b.bias===void 0?f=[0,0,0,0]:typeof b.bias=="number"?f=[b.bias,b.bias,b.bias,b.bias]:(f=[b.bias[0],b.bias[1],b.bias[2],0],b.bias[3]!==void 0&&(f[3]=b.bias[3]));let C=p*s;if(t!==void 0&&(t.format!==void 0&&d===4&&t.format!=="RGBA"||d===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let S=4,O=0,E=1,P=2,j=3,U=0,z=C,N=C*2,W=-1;g==="RGBA"?(U=0,z=C,N=C*2,W=C*3):g==="RGB"?(U=0,z=C,N=C*2):g==="RBG"&&(U=0,N=C,z=C*2),o=r.createImageData(s,p);for(let J=0;J<p*s;O+=S,E+=S,P+=S,j+=S,J++)o.data[O]=(e.data[U++]-f[0])*w[0],o.data[E]=(e.data[z++]-f[1])*w[1],o.data[P]=(e.data[N++]-f[2])*w[2],o.data[j]=W===-1?255:(e.data[W++]-f[3])*w[3]}else throw new Error("Can not access image data");return o}});var qa,Vs,Gs,Hs,Ls,Fs=ae(()=>{"use strict";aa();qa=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:o}=t,s=t.norm??{mean:255,bias:0},p,d;typeof s.mean=="number"?p=[s.mean,s.mean,s.mean,s.mean]:p=[s.mean[0],s.mean[1],s.mean[2],s.mean[3]??255],typeof s.bias=="number"?d=[s.bias,s.bias,s.bias,s.bias]:d=[s.bias[0],s.bias[1],s.bias[2],s.bias[3]??0];let g=t.format!==void 0?t.format:"RGBA",b=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",w=r*o,f=b==="RGBA"?new Float32Array(w*4):new Float32Array(w*3),C=4,S=0,O=1,E=2,P=3,j=0,U=w,z=w*2,N=-1;g==="RGB"&&(C=3,S=0,O=1,E=2,P=-1),b==="RGBA"?N=w*3:b==="RBG"?(j=0,z=w,U=w*2):b==="BGR"&&(z=0,U=w,j=w*2);for(let J=0;J<w;J++,S+=C,E+=C,O+=C,P+=C)f[j++]=(e[S]+d[0])/p[0],f[U++]=(e[O]+d[1])/p[1],f[z++]=(e[E]+d[2])/p[2],N!==-1&&P!==-1&&(f[N++]=(e[P]+d[3])/p[3]);return b==="RGBA"?new vt("float32",f,[1,4,r,o]):new vt("float32",f,[1,3,r,o])},Vs=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,o=typeof ImageData<"u"&&e instanceof ImageData,s=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,p=typeof e=="string",d,g=t??{},b=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},w=f=>f instanceof HTMLCanvasElement||f instanceof OffscreenCanvas?f.getContext("2d"):null;if(r){let f=b();f.width=e.width,f.height=e.height;let C=w(f);if(C!=null){let S=e.height,O=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(S=t.resizedHeight,O=t.resizedWidth),t!==void 0){if(g=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");g.tensorFormat="RGBA",g.height=S,g.width=O}else g.tensorFormat="RGBA",g.height=S,g.width=O;C.drawImage(e,0,0),d=C.getImageData(0,0,O,S).data}else throw new Error("Can not access image data")}else if(o){let f,C;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(f=t.resizedHeight,C=t.resizedWidth):(f=e.height,C=e.width),t!==void 0&&(g=t),g.format="RGBA",g.height=f,g.width=C,t!==void 0){let S=b();S.width=C,S.height=f;let O=w(S);if(O!=null)O.putImageData(e,0,0),d=O.getImageData(0,0,C,f).data;else throw new Error("Can not access image data")}else d=e.data}else if(s){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let f=b();f.width=e.width,f.height=e.height;let C=w(f);if(C!=null){let S=e.height,O=e.width;return C.drawImage(e,0,0,O,S),d=C.getImageData(0,0,O,S).data,g.height=S,g.width=O,qa(d,g)}else throw new Error("Can not access image data")}else{if(p)return new Promise((f,C)=>{let S=b(),O=w(S);if(!e||!O)return C();let E=new Image;E.crossOrigin="Anonymous",E.src=e,E.onload=()=>{S.width=E.width,S.height=E.height,O.drawImage(E,0,0,S.width,S.height);let P=O.getImageData(0,0,S.width,S.height);g.height=S.height,g.width=S.width,f(qa(P.data,g))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(d!==void 0)return qa(d,g);throw new Error("Input data provided is not supported - aborted tensor creation")},Gs=(e,t)=>{let{width:r,height:o,download:s,dispose:p}=t,d=[1,o,r,4];return new vt({location:"texture",type:"float32",texture:e,dims:d,download:s,dispose:p})},Hs=(e,t)=>{let{dataType:r,dims:o,download:s,dispose:p}=t;return new vt({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:o,download:s,dispose:p})},Ls=(e,t,r)=>new vt({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})});var Ir,un,qs,Ks,Js=ae(()=>{"use strict";Ir=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),un=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),qs=!1,Ks=()=>{if(!qs){qs=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;e&&(Ir.set("int64",BigInt64Array),un.set(BigInt64Array,"int64")),t&&(Ir.set("uint64",BigUint64Array),un.set(BigUint64Array,"uint64")),r?(Ir.set("float16",Float16Array),un.set(Float16Array,"float16")):Ir.set("float16",Uint16Array)}}});var Ys,Zs,Xs=ae(()=>{"use strict";aa();Ys=e=>{let t=1;for(let r=0;r<e.length;r++){let o=e[r];if(typeof o!="number"||!Number.isSafeInteger(o))throw new TypeError(`dims[${r}] must be an integer, got: ${o}`);if(o<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${o}`);t*=o}return t},Zs=(e,t)=>{switch(e.location){case"cpu":return new vt(e.type,e.data,t);case"cpu-pinned":return new vt({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new vt({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new vt({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}});var vt,aa=ae(()=>{"use strict";Ws();Fs();Js();Xs();vt=class{constructor(t,r,o){Ks();let s,p;if(typeof t=="object"&&"location"in t)switch(this.dataLocation=t.location,s=t.type,p=t.dims,t.location){case"cpu-pinned":{let g=Ir.get(s);if(!g)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(t.data instanceof g))throw new TypeError(`buffer should be of type ${g.name}`);this.cpuData=t.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let g,b;if(typeof t=="string")if(s=t,b=o,t==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");g=r}else{let w=Ir.get(t);if(w===void 0)throw new TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r)){if(t==="float16"&&w===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");t==="uint64"||t==="int64"?g=w.from(r,BigInt):g=w.from(r)}else if(r instanceof w)g=r;else throw new TypeError(`A ${s} tensor's data must be type of ${w}`)}else if(b=r,Array.isArray(t)){if(t.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let w=typeof t[0];if(w==="string")s="string",g=t;else if(w==="boolean")s="bool",g=Uint8Array.from(t);else throw new TypeError(`Invalid element type of data array: ${w}.`)}else{let w=un.get(t.constructor);if(w===void 0)throw new TypeError(`Unsupported type for tensor data: ${t.constructor}.`);s=w,g=t}if(b===void 0)b=[g.length];else if(!Array.isArray(b))throw new TypeError("A tensor's dims must be a number array");p=b,this.cpuData=g,this.dataLocation="cpu"}let d=Ys(p);if(this.cpuData&&d!==this.cpuData.length)throw new Error(`Tensor's size(${d}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=p,this.size=d}static async fromImage(t,r){return Vs(t,r)}static fromTexture(t,r){return Gs(t,r)}static fromGpuBuffer(t,r){return Hs(t,r)}static fromPinnedBuffer(t,r,o){return Ls(t,r,o)}toDataURL(t){return Us(this,t)}toImageData(t){return Ns(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Zs(this,t)}}});var ft,oa=ae(()=>{"use strict";aa();ft=vt});var ln,Qs,St,wt,Ka=ae(()=>{"use strict";Fa();ln=(e,t)=>{(typeof Pt.trace>"u"?!Pt.wasm.trace:!Pt.trace)||console.timeStamp(`${e}::ORT::${t}`)},Qs=(e,t)=>{let r=new Error().stack?.split(/\r\n|\r|\n/g)||[],o=!1;for(let s=0;s<r.length;s++){if(o&&!r[s].includes("TRACE_FUNC")){let p=`FUNC_${e}::${r[s].trim().split(" ")[1]}`;t&&(p+=`::${t}`),ln("CPU",p);return}r[s].includes("TRACE_FUNC")&&(o=!0)}},St=e=>{(typeof Pt.trace>"u"?!Pt.wasm.trace:!Pt.trace)||Qs("BEGIN",e)},wt=e=>{(typeof Pt.trace>"u"?!Pt.wasm.trace:!Pt.trace)||Qs("END",e)}});var sa,eu=ae(()=>{"use strict";na();oa();Ka();sa=class e{constructor(t){this.handler=t}async run(t,r,o){St();let s={},p={};if(typeof t!="object"||t===null||t instanceof ft||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let d=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof ft)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");d=!1;for(let w of r){if(typeof w!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(w)===-1)throw new RangeError(`'fetches' contains invalid output name: ${w}.`);s[w]=null}if(typeof o=="object"&&o!==null)p=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else{let w=!1,f=Object.getOwnPropertyNames(r);for(let C of this.outputNames)if(f.indexOf(C)!==-1){let S=r[C];(S===null||S instanceof ft)&&(w=!0,d=!1,s[C]=S)}if(w){if(typeof o=="object"&&o!==null)p=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else p=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let w of this.inputNames)if(typeof t[w]>"u")throw new Error(`input '${w}' is missing in 'feeds'.`);if(d)for(let w of this.outputNames)s[w]=null;let g=await this.handler.run(t,s,p),b={};for(let w in g)if(Object.hasOwnProperty.call(g,w)){let f=g[w];f instanceof ft?b[w]=f:b[w]=new ft(f.type,f.data,f.dims)}return wt(),b}async release(){return this.handler.dispose()}static async create(t,r,o,s){St();let p,d={};if(typeof t=="string"){if(p=t,typeof r=="object"&&r!==null)d=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(p=t,typeof r=="object"&&r!==null)d=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let C=t,S=0,O=t.byteLength;if(typeof r=="object"&&r!==null)d=r;else if(typeof r=="number"){if(S=r,!Number.isSafeInteger(S))throw new RangeError("'byteOffset' must be an integer.");if(S<0||S>=C.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${C.byteLength}).`);if(O=t.byteLength-S,typeof o=="number"){if(O=o,!Number.isSafeInteger(O))throw new RangeError("'byteLength' must be an integer.");if(O<=0||S+O>C.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${C.byteLength-S}].`);if(typeof s=="object"&&s!==null)d=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(typeof o<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");p=new Uint8Array(C,S,O)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let b=(d.executionProviders||[]).map(C=>typeof C=="string"?C:C.name),f=await(await ia(b)).createInferenceSessionHandler(p,d);return wt(),new e(f)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var tu,ru=ae(()=>{"use strict";eu();tu=sa});var iu=ae(()=>{"use strict"});var Mh,ua,nu=ae(()=>{"use strict";na();oa();Mh="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",ua=class e{constructor(t,r,o){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=o}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,r){let o=t.evalModel||"",s=t.optimizerModel||"",p=r||{},g=(p.executionProviders||[]).map(w=>typeof w=="string"?w:w.name),b=await ia(g);if(b.createTrainingSessionHandler){let w=await b.createTrainingSessionHandler(t.checkpointState,t.trainModel,o,s,p);return new e(w,!!t.optimizerModel,!!t.evalModel)}else throw new Error(Mh)}typeNarrowingForRunStep(t,r,o,s,p){let d={},g={};if(typeof o!="object"||o===null||o instanceof ft||Array.isArray(o))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let b=!0;if(typeof s=="object"){if(s===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(s instanceof ft)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(s)){if(s.length===0)throw new TypeError("'fetches' cannot be an empty array.");b=!1;for(let w of s){if(typeof w!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(w)===-1)throw new RangeError(`'fetches' contains invalid output name: ${w}.`);d[w]=null}if(typeof p=="object"&&p!==null)g=p;else if(typeof p<"u")throw new TypeError("'options' must be an object.")}else{let w=!1,f=Object.getOwnPropertyNames(s);for(let C of r)if(f.indexOf(C)!==-1){let S=s[C];(S===null||S instanceof ft)&&(w=!0,b=!1,d[C]=S)}if(w){if(typeof p=="object"&&p!==null)g=p;else if(typeof p<"u")throw new TypeError("'options' must be an object.")}else g=s}}else if(typeof s<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let w of t)if(typeof o[w]>"u")throw new Error(`input '${w}' is missing in 'feeds'.`);if(b)for(let w of r)d[w]=null;return[d,g]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let o in t)if(Object.hasOwnProperty.call(t,o)){let s=t[o];s instanceof ft?r[o]=s:r[o]=new ft(s.type,s.data,s.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,o){let[s,p]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,o),d=await this.handler.runTrainStep(t,s,p);return this.convertHandlerReturnTypeToMapOfTensors(d)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,o){if(this.hasEvalModel){let[s,p]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,o),d=await this.handler.runEvalStep(t,s,p);return this.convertHandlerReturnTypeToMapOfTensors(d)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let o=await this.getParametersSize(r);if(t.length!==4*o)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}});var au,ou=ae(()=>{"use strict";nu();au=ua});var Ja={};xr(Ja,{InferenceSession:()=>tu,TRACE:()=>ln,TRACE_FUNC_BEGIN:()=>St,TRACE_FUNC_END:()=>wt,Tensor:()=>ft,TrainingSession:()=>au,env:()=>Ge,registerBackend:()=>ur});var Mt=ae(()=>{"use strict";zs();js();ru();oa();Ka();iu();ou()});var Ya={};xr(Ya,{createReadStream:()=>uu,readFile:()=>Dh,readFileSync:()=>jh});var Dh,jh,uu,Za=ae(()=>{Dh=void 0,jh=void 0,uu=void 0});var Xa={};xr(Xa,{join:()=>Uh});var Uh,Qa=ae(()=>{Uh=void 0});var cu=Qr((du,eo)=>{"use strict";var lu=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,s;r.ready=new Promise((i,n)=>{o=i,s=n}),r.mountExternalData=(i,n)=>{(r.jh||(r.jh=new Map)).set(i,n)},r.unmountExternalData=()=>{delete r.jh},r.jsepInit=(i,n,a,l,c,m,y,v,_,x,A)=>{r.Oh=i,r.Ah=n,r.Eh=a,r.qh=l,r.Dh=c,r.Jd=m,r.Fh=y,r.Hh=v,r.Bh=_,r.Ch=x,r.Gh=A,n=(T,R,I)=>(...B)=>{let V=$t,X=R?.();B=T(...B);let ie=R?.();return X!==ie&&(T=ie,I(X),R=I=null),$t!=V?xn():B},a=T=>async(...R)=>{try{if(r.ih)throw Error("Session already started");let I=r.ih={Jh:R[0],errors:[]},B=await T(...R);if(r.ih!==I)throw Error("Session mismatch");i.flush();let V=I.errors;if(0<V.length){let X=await Promise.all(V);if(X=X.filter(ie=>ie),0<X.length)throw Error(X.join(`
`))}return B}finally{r.ih=null}},r._OrtCreateSession=n(r._OrtCreateSession,()=>r._OrtCreateSession,T=>r._OrtCreateSession=T),r._OrtRun=a(n(r._OrtRun,()=>r._OrtRun,T=>r._OrtRun=T)),r._OrtRunWithBinding=a(n(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,T=>r._OrtRunWithBinding=T)),r._OrtBindInput=n(r._OrtBindInput,()=>r._OrtBindInput,T=>r._OrtBindInput=T),r.jsepRegisterBuffer=(T,R,I,B)=>i.registerBuffer(T,R,I,B),r.jsepGetBuffer=T=>i.getBuffer(T),r.jsepCreateDownloader=(T,R,I)=>i.createDownloader(T,R,I),r.jsepOnReleaseSession=T=>{i.onReleaseSession(T)},r.jsepOnRunStart=T=>i.onRunStart(T)};var p=Object.assign({},r),d="./this.program",g=(i,n)=>{throw n},b=typeof window=="object",w=typeof importScripts=="function",f=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",C="",S,O,E;if(f){var P=(Za(),sr(Ya)),j=(Qa(),sr(Xa));C=w?j.dirname(C)+"/":__dirname+"/",S=(i,n)=>(i=Oe(i)?new URL(i):j.normalize(i),P.readFileSync(i,n?void 0:"utf8")),E=i=>(i=S(i,!0),i.buffer||(i=new Uint8Array(i)),i),O=(i,n,a,l=!0)=>{i=Oe(i)?new URL(i):j.normalize(i),P.readFile(i,l?void 0:"utf8",(c,m)=>{c?a(c):n(l?m.buffer:m)})},!r.thisProgram&&1<process.argv.length&&(d=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),g=(i,n)=>{throw process.exitCode=i,n},r.inspect=()=>"[Emscripten Module object]"}else(b||w)&&(w?C=self.location.href:typeof document<"u"&&document.currentScript&&(C=document.currentScript.src),e&&(C=e),C.indexOf("blob:")!==0?C=C.substr(0,C.replace(/[?#].*/,"").lastIndexOf("/")+1):C="",S=i=>{var n=new XMLHttpRequest;return n.open("GET",i,!1),n.send(null),n.responseText},w&&(E=i=>{var n=new XMLHttpRequest;return n.open("GET",i,!1),n.responseType="arraybuffer",n.send(null),new Uint8Array(n.response)}),O=(i,n,a)=>{var l=new XMLHttpRequest;l.open("GET",i,!0),l.responseType="arraybuffer",l.onload=()=>{l.status==200||l.status==0&&l.response?n(l.response):a()},l.onerror=a,l.send(null)});var U=console.log.bind(console),z=console.error.bind(console);Object.assign(r,p),p=null,typeof WebAssembly!="object"&&be("no native wasm support detected");var N,W=!1,J,Y,te,q,ue,de,Pe;function Ne(){var i=N.buffer;r.HEAP8=Y=new Int8Array(i),r.HEAP16=new Int16Array(i),r.HEAPU8=te=new Uint8Array(i),r.HEAPU16=new Uint16Array(i),r.HEAP32=q=new Int32Array(i),r.HEAPU32=ue=new Uint32Array(i),r.HEAPF32=de=new Float32Array(i),r.HEAPF64=Pe=new Float64Array(i)}var qe=[],Ie=[],Te=[],ge=0,Ue=null,ke=null;function be(i){throw i="Aborted("+i+")",z(i),W=!0,J=1,i=new WebAssembly.RuntimeError(i+". Build with -sASSERTIONS for more info."),s(i),i}var Re=i=>i.startsWith("data:application/octet-stream;base64,"),Oe=i=>i.startsWith("file://"),Ve;if(Ve="ort-wasm-simd.wasm",!Re(Ve)){var ut=Ve;Ve=r.locateFile?r.locateFile(ut,C):C+ut}function ne(i){if(E)return E(i);throw"both async and sync fetching of the wasm failed"}function ve(i){if(b||w){if(typeof fetch=="function"&&!Oe(i))return fetch(i,{credentials:"same-origin"}).then(n=>{if(!n.ok)throw"failed to load wasm binary file at '"+i+"'";return n.arrayBuffer()}).catch(()=>ne(i));if(O)return new Promise((n,a)=>{O(i,l=>n(new Uint8Array(l)),a)})}return Promise.resolve().then(()=>ne(i))}function Ee(i,n,a){return ve(i).then(l=>WebAssembly.instantiate(l,n)).then(l=>l).then(a,l=>{z(`failed to asynchronously prepare wasm: ${l}`),be(l)})}function Tt(i,n){var a=Ve;return typeof WebAssembly.instantiateStreaming!="function"||Re(a)||Oe(a)||f||typeof fetch!="function"?Ee(a,i,n):fetch(a,{credentials:"same-origin"}).then(l=>WebAssembly.instantiateStreaming(l,i).then(n,function(c){return z(`wasm streaming compile failed: ${c}`),z("falling back to ArrayBuffer instantiation"),Ee(a,i,n)}))}var nt,at={1366560:(i,n,a,l)=>{if(typeof r>"u"||!r.jh)return 1;if(i=ot(i>>>0),i.startsWith("./")&&(i=i.substring(2)),i=r.jh.get(i),!i)return 2;if(n>>>=0,a>>>=0,n+a>i.byteLength)return 3;try{return te.set(i.subarray(n,n+a),l>>>0>>>0),0}catch{return 4}},1367061:()=>{r.Bh()},1367092:()=>{r.Ch()},1367121:()=>{r.Gh()},1367146:i=>r.Ah(i),1367179:i=>r.Eh(i),1367211:(i,n,a)=>{r.qh(i,n,a,!0)},1367250:(i,n,a)=>{r.qh(i,n,a)},1367283:i=>{r.Jd("Abs",i,void 0)},1367334:i=>{r.Jd("Neg",i,void 0)},1367385:i=>{r.Jd("Floor",i,void 0)},1367438:i=>{r.Jd("Ceil",i,void 0)},1367490:i=>{r.Jd("Reciprocal",i,void 0)},1367548:i=>{r.Jd("Sqrt",i,void 0)},1367600:i=>{r.Jd("Exp",i,void 0)},1367651:i=>{r.Jd("Erf",i,void 0)},1367702:i=>{r.Jd("Sigmoid",i,void 0)},1367757:(i,n,a)=>{r.Jd("HardSigmoid",i,{alpha:n,beta:a})},1367836:i=>{r.Jd("Log",i,void 0)},1367887:i=>{r.Jd("Sin",i,void 0)},1367938:i=>{r.Jd("Cos",i,void 0)},1367989:i=>{r.Jd("Tan",i,void 0)},1368040:i=>{r.Jd("Asin",i,void 0)},1368092:i=>{r.Jd("Acos",i,void 0)},1368144:i=>{r.Jd("Atan",i,void 0)},1368196:i=>{r.Jd("Sinh",i,void 0)},1368248:i=>{r.Jd("Cosh",i,void 0)},1368300:i=>{r.Jd("Asinh",i,void 0)},1368353:i=>{r.Jd("Acosh",i,void 0)},1368406:i=>{r.Jd("Atanh",i,void 0)},1368459:i=>{r.Jd("Tanh",i,void 0)},1368511:i=>{r.Jd("Not",i,void 0)},1368562:(i,n,a)=>{r.Jd("Clip",i,{min:n,max:a})},1368631:i=>{r.Jd("Clip",i,void 0)},1368683:(i,n)=>{r.Jd("Elu",i,{alpha:n})},1368741:i=>{r.Jd("Relu",i,void 0)},1368793:(i,n)=>{r.Jd("LeakyRelu",i,{alpha:n})},1368857:(i,n)=>{r.Jd("ThresholdedRelu",i,{alpha:n})},1368927:(i,n)=>{r.Jd("Cast",i,{to:n})},1368985:i=>{r.Jd("Add",i,void 0)},1369036:i=>{r.Jd("Sub",i,void 0)},1369087:i=>{r.Jd("Mul",i,void 0)},1369138:i=>{r.Jd("Div",i,void 0)},1369189:i=>{r.Jd("Pow",i,void 0)},1369240:i=>{r.Jd("Equal",i,void 0)},1369293:i=>{r.Jd("Greater",i,void 0)},1369348:i=>{r.Jd("GreaterOrEqual",i,void 0)},1369410:i=>{r.Jd("Less",i,void 0)},1369462:i=>{r.Jd("LessOrEqual",i,void 0)},1369521:(i,n,a,l,c)=>{r.Jd("ReduceMean",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(q.subarray(l>>>0,c>>>0)):[]})},1369680:(i,n,a,l,c)=>{r.Jd("ReduceMax",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(q.subarray(l>>>0,c>>>0)):[]})},1369838:(i,n,a,l,c)=>{r.Jd("ReduceMin",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(q.subarray(l>>>0,c>>>0)):[]})},1369996:(i,n,a,l,c)=>{r.Jd("ReduceProd",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(q.subarray(l>>>0,c>>>0)):[]})},1370155:(i,n,a,l,c)=>{r.Jd("ReduceSum",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(q.subarray(l>>>0,c>>>0)):[]})},1370313:(i,n,a,l,c)=>{r.Jd("ReduceL1",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(q.subarray(l>>>0,c>>>0)):[]})},1370470:(i,n,a,l,c)=>{r.Jd("ReduceL2",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(q.subarray(l>>>0,c>>>0)):[]})},1370627:(i,n,a,l,c)=>{r.Jd("ReduceLogSum",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(q.subarray(l>>>0,c>>>0)):[]})},1370788:(i,n,a,l,c)=>{r.Jd("ReduceSumSquare",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(q.subarray(l>>>0,c>>>0)):[]})},1370952:(i,n,a,l,c)=>{r.Jd("ReduceLogSumExp",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(q.subarray(l>>>0,c>>>0)):[]})},1371116:i=>{r.Jd("Where",i,void 0)},1371169:(i,n,a)=>{r.Jd("Transpose",i,{perm:n?Array.from(q.subarray(n>>>0,a>>>0)):[]})},1371277:(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)=>{r.Jd("ConvTranspose",i,{format:_?"NHWC":"NCHW",autoPad:n,dilations:[a],group:l,kernel_shape:[c],pads:[m,y],strides:[v],wIsConst:()=>!!Y[x>>>0],outputPadding:A?Array.from(q.subarray(A>>>0,T>>>0)):[],outputShape:R?Array.from(q.subarray(R>>>0,I>>>0)):[],activation:ot(B)})},1371679:(i,n,a,l,c,m,y,v,_,x,A,T,R,I)=>{r.Jd("ConvTranspose",i,{format:v?"NHWC":"NCHW",autoPad:n,dilations:Array.from(q.subarray(a>>>0,(a>>>0)+2>>>0)),group:l,kernelShape:Array.from(q.subarray(c>>>0,(c>>>0)+2>>>0)),pads:Array.from(q.subarray(m>>>0,(m>>>0)+4>>>0)),strides:Array.from(q.subarray(y>>>0,(y>>>0)+2>>>0)),wIsConst:()=>!!Y[_>>>0],outputPadding:x?Array.from(q.subarray(x>>>0,A>>>0)):[],outputShape:T?Array.from(q.subarray(T>>>0,R>>>0)):[],activation:ot(I)})},1372244:(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)=>{r.Jd("ConvTranspose",i,{format:_?"NHWC":"NCHW",autoPad:n,dilations:[a],group:l,kernel_shape:[c],pads:[m,y],strides:[v],wIsConst:()=>!!Y[x>>>0],outputPadding:A?Array.from(q.subarray(A>>>0,T>>>0)):[],outputShape:R?Array.from(q.subarray(R>>>0,I>>>0)):[],activation:ot(B)})},1372646:(i,n,a,l,c,m,y,v,_,x,A,T,R,I)=>{r.Jd("ConvTranspose",i,{format:v?"NHWC":"NCHW",autoPad:n,dilations:Array.from(q.subarray(a>>>0,(a>>>0)+2>>>0)),group:l,kernelShape:Array.from(q.subarray(c>>>0,(c>>>0)+2>>>0)),pads:Array.from(q.subarray(m>>>0,(m>>>0)+4>>>0)),strides:Array.from(q.subarray(y>>>0,(y>>>0)+2>>>0)),wIsConst:()=>!!Y[_>>>0],outputPadding:x?Array.from(q.subarray(x>>>0,A>>>0)):[],outputShape:T?Array.from(q.subarray(T>>>0,R>>>0)):[],activation:ot(I)})},1373211:(i,n)=>{r.Jd("GlobalAveragePool",i,{format:n?"NHWC":"NCHW"})},1373302:(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)=>{r.Jd("AveragePool",i,{format:V?"NHWC":"NCHW",auto_pad:n,ceil_mode:a,count_include_pad:l,storage_order:c,dilations:[m,y],kernel_shape:[v,_],pads:[x,A,T,R],strides:[I,B]})},1373586:(i,n)=>{r.Jd("GlobalAveragePool",i,{format:n?"NHWC":"NCHW"})},1373677:(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)=>{r.Jd("AveragePool",i,{format:V?"NHWC":"NCHW",auto_pad:n,ceil_mode:a,count_include_pad:l,storage_order:c,dilations:[m,y],kernel_shape:[v,_],pads:[x,A,T,R],strides:[I,B]})},1373961:(i,n)=>{r.Jd("GlobalMaxPool",i,{format:n?"NHWC":"NCHW"})},1374048:(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)=>{r.Jd("MaxPool",i,{format:V?"NHWC":"NCHW",auto_pad:n,ceil_mode:a,count_include_pad:l,storage_order:c,dilations:[m,y],kernel_shape:[v,_],pads:[x,A,T,R],strides:[I,B]})},1374328:(i,n)=>{r.Jd("GlobalMaxPool",i,{format:n?"NHWC":"NCHW"})},1374415:(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)=>{r.Jd("MaxPool",i,{format:V?"NHWC":"NCHW",auto_pad:n,ceil_mode:a,count_include_pad:l,storage_order:c,dilations:[m,y],kernel_shape:[v,_],pads:[x,A,T,R],strides:[I,B]})},1374695:(i,n,a,l,c)=>{r.Jd("Gemm",i,{alpha:n,beta:a,transA:l,transB:c})},1374799:i=>{r.Jd("MatMul",i,void 0)},1374853:(i,n,a,l)=>{r.Jd("ArgMax",i,{keepDims:!!n,selectLastIndex:!!a,axis:l})},1374961:(i,n,a,l)=>{r.Jd("ArgMin",i,{keepDims:!!n,selectLastIndex:!!a,axis:l})},1375069:(i,n)=>{r.Jd("Softmax",i,{axis:n})},1375132:(i,n)=>{r.Jd("Concat",i,{axis:n})},1375192:(i,n,a,l,c)=>{r.Jd("Split",i,{axis:n,numOutputs:a,splitSizes:l?Array.from(q.subarray(l>>>0,c>>>0)):[]})},1375332:i=>{r.Jd("Expand",i,void 0)},1375386:(i,n)=>{r.Jd("Gather",i,{axis:Number(n)})},1375457:(i,n)=>{r.Jd("GatherElements",i,{axis:Number(n)})},1375536:(i,n,a,l,c,m,y,v,_,x,A)=>{r.Jd("Resize",i,{antialias:n,axes:a?Array.from(q.subarray(a>>>0,l>>>0)):[],coordinateTransformMode:ot(c),cubicCoeffA:m,excludeOutside:y,extrapolationValue:v,keepAspectRatioPolicy:ot(_),mode:ot(x),nearestMode:ot(A)})},1375882:(i,n,a,l,c,m,y)=>{r.Jd("Slice",i,{starts:n?Array.from(q.subarray(n>>>0,a>>>0)):[],ends:l?Array.from(q.subarray(l>>>0,c>>>0)):[],axes:m?Array.from(q.subarray(m>>>0,y>>>0)):[]})},1376098:i=>{r.Jd("Tile",i,void 0)},1376150:(i,n,a)=>{r.Jd("LayerNormalization",i,{axis:Number(n),epsilon:Number(a)})},1376257:(i,n,a)=>{r.Jd("InstanceNormalization",i,{epsilon:n,format:a?"NHWC":"NCHW"})},1376371:(i,n,a)=>{r.Jd("InstanceNormalization",i,{epsilon:n,format:a?"NHWC":"NCHW"})},1376485:i=>{r.Jd("Range",i,void 0)},1376538:(i,n)=>{r.Jd("Einsum",i,{equation:ot(n)})},1376619:(i,n,a,l,c)=>{r.Jd("Pad",i,{mode:n,value:a,pads:l?Array.from(q.subarray(l>>>0,c>>>0)):[]})},1376746:(i,n,a,l,c,m)=>{r.Jd("BatchNormalization",i,{epsilon:n,momentum:a,spatial:!!c,trainingMode:!!l,format:m?"NHWC":"NCHW"})},1376915:(i,n,a,l,c,m)=>{r.Jd("BatchNormalization",i,{epsilon:n,momentum:a,spatial:!!c,trainingMode:!!l,format:m?"NHWC":"NCHW"})},1377084:(i,n,a)=>{r.Jd("CumSum",i,{exclusive:Number(n),reverse:Number(a)})},1377181:(i,n,a,l,c,m,y,v,_)=>{r.Jd("Attention",i,{numHeads:n,isUnidirectional:a,maskFilterValue:l,scale:c,doRotary:m,qkvHiddenSizes:y?Array.from(q.subarray(Number(v)>>>0,Number(v)+y>>>0)):[],pastPresentShareBuffer:!!_})},1377453:i=>{r.Jd("BiasAdd",i,void 0)},1377508:i=>{r.Jd("BiasSplitGelu",i,void 0)},1377569:i=>{r.Jd("FastGelu",i,void 0)},1377625:(i,n,a,l,c,m,y,v,_,x,A,T,R)=>{r.Jd("Conv",i,{format:_?"NHWC":"NCHW",auto_pad:n,dilations:[a],group:l,kernel_shape:[c],pads:m?Array.from(q.subarray(m>>>0,y>>>0)):[],strides:[v],w_is_const:()=>!!Y[x>>>0],activation:ot(A),activation_params:T?Array.from(de.subarray(T>>>0,R>>>0)):[]})},1377995:(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)=>{r.Jd("Conv",i,{format:T?"NHWC":"NCHW",auto_pad:n,dilations:[a,l],group:c,kernel_shape:[m,y],pads:v?Array.from(q.subarray(v>>>0,_>>>0)):[],strides:[x,A],w_is_const:()=>!!Y[R>>>0],activation:ot(I),activation_params:B?Array.from(de.subarray(B>>>0,V>>>0)):[]})},1378386:i=>{r.Jd("Gelu",i,void 0)},1378438:(i,n,a,l,c,m)=>{r.Jd("MatMulNBits",i,{k:n,n:a,accuracyLevel:l,bits:c,blockSize:m})},1378565:(i,n,a,l,c,m)=>{r.Jd("MultiHeadAttention",i,{numHeads:n,isUnidirectional:a,maskFilterValue:l,scale:c,doRotary:m})},1378724:(i,n)=>{r.Jd("SkipLayerNormalization",i,{epsilon:n})},1378805:i=>{r.Fh(i)},1378839:(i,n)=>r.Hh(i,n,r.ih.Jh,r.ih.errors)};function Qt(i){this.name="ExitStatus",this.message=`Program terminated with exit(${i})`,this.status=i}var tt=[],rt=0,_t=0;function Et(i){this.hh=i,this.dh=i-24,this.Ih=function(n){ue[this.dh+4>>>2>>>0]=n},this.oh=function(){return ue[this.dh+4>>>2>>>0]},this.zh=function(n){ue[this.dh+8>>>2>>>0]=n},this.rh=function(n){Y[this.dh+12>>>0>>>0]=n?1:0},this.wh=function(){return Y[this.dh+12>>>0>>>0]!=0},this.sh=function(n){Y[this.dh+13>>>0>>>0]=n?1:0},this.vh=function(){return Y[this.dh+13>>>0>>>0]!=0},this.yh=function(n,a){this.ph(0),this.Ih(n),this.zh(a)},this.ph=function(n){ue[this.dh+16>>>2>>>0]=n},this.th=function(){return ue[this.dh+16>>>2>>>0]},this.xh=function(){if(hi(this.oh()))return ue[this.hh>>>2>>>0];var n=this.th();return n!==0?n:this.hh}}var Lt=i=>{var n=_t;if(!n)return tr(0),0;var a=new Et(n);a.ph(n);var l=a.oh();if(!l)return tr(0),n;for(var c in i){var m=i[c];if(m===0||m===l)break;if(mi(m,l,a.dh+16))return tr(m),n}return tr(l),n},nr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,ai=(i,n,a)=>{n>>>=0;var l=n+a;for(a=n;i[a]&&!(a>=l);)++a;if(16<a-n&&i.buffer&&nr)return nr.decode(i.subarray(n,a));for(l="";n<a;){var c=i[n++];if(c&128){var m=i[n++]&63;if((c&224)==192)l+=String.fromCharCode((c&31)<<6|m);else{var y=i[n++]&63;c=(c&240)==224?(c&15)<<12|m<<6|y:(c&7)<<18|m<<12|y<<6|i[n++]&63,65536>c?l+=String.fromCharCode(c):(c-=65536,l+=String.fromCharCode(55296|c>>10,56320|c&1023))}}else l+=String.fromCharCode(c)}return l},ot=(i,n)=>(i>>>=0)?ai(te,i,n):"",kr=i=>{for(var n=0,a=0;a<i.length;++a){var l=i.charCodeAt(a);127>=l?n++:2047>=l?n+=2:55296<=l&&57343>=l?(n+=4,++a):n+=3}return n},ar=(i,n,a,l)=>{if(a>>>=0,!(0<l))return 0;var c=a;l=a+l-1;for(var m=0;m<i.length;++m){var y=i.charCodeAt(m);if(55296<=y&&57343>=y){var v=i.charCodeAt(++m);y=65536+((y&1023)<<10)|v&1023}if(127>=y){if(a>=l)break;n[a++>>>0]=y}else{if(2047>=y){if(a+1>=l)break;n[a++>>>0]=192|y>>6}else{if(65535>=y){if(a+2>=l)break;n[a++>>>0]=224|y>>12}else{if(a+3>=l)break;n[a++>>>0]=240|y>>18,n[a++>>>0]=128|y>>12&63}n[a++>>>0]=128|y>>6&63}n[a++>>>0]=128|y&63}}return n[a>>>0]=0,a-c},Rt=i=>i%4===0&&(i%100!==0||i%400===0),oi=[0,31,60,91,121,152,182,213,244,274,305,335],vn=[0,31,59,90,120,151,181,212,243,273,304,334],si=i=>{var n=kr(i)+1,a=Mr(n);return a&&ar(i,te,a,n),a},ui=[],Or=(i,n)=>{ui.length=0;for(var a;a=te[i++>>>0];){var l=a!=105;l&=a!=112,n+=l&&n%8?4:0,ui.push(a==112?ue[n>>>2>>>0]:a==105?q[n>>>2>>>0]:Pe[n>>>3>>>0]),n+=l?8:4}return ui},pr={},Pr=()=>{if(!Rr){var i={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:d||"./this.program"},n;for(n in pr)pr[n]===void 0?delete i[n]:i[n]=pr[n];var a=[];for(n in i)a.push(`${n}=${i[n]}`);Rr=a}return Rr},Rr,er=[null,[],[]],li=[31,29,31,30,31,30,31,31,30,31,30,31],di=[31,28,31,30,31,30,31,31,30,31,30,31];function lt(i){var n=Array(kr(i)+1);return ar(i,n,0,n.length),n}function wn(i,n,a,l){function c(I,B,V){for(I=typeof I=="number"?I.toString():I||"";I.length<B;)I=V[0]+I;return I}function m(I,B){return c(I,B,"0")}function y(I,B){function V(ie){return 0>ie?-1:0<ie?1:0}var X;return(X=V(I.getFullYear()-B.getFullYear()))===0&&(X=V(I.getMonth()-B.getMonth()))===0&&(X=V(I.getDate()-B.getDate())),X}function v(I){switch(I.getDay()){case 0:return new Date(I.getFullYear()-1,11,29);case 1:return I;case 2:return new Date(I.getFullYear(),0,3);case 3:return new Date(I.getFullYear(),0,2);case 4:return new Date(I.getFullYear(),0,1);case 5:return new Date(I.getFullYear()-1,11,31);case 6:return new Date(I.getFullYear()-1,11,30)}}function _(I){var B=I.fh;for(I=new Date(new Date(I.gh+1900,0,1).getTime());0<B;){var V=I.getMonth(),X=(Rt(I.getFullYear())?li:di)[V];if(B>X-I.getDate())B-=X-I.getDate()+1,I.setDate(1),11>V?I.setMonth(V+1):(I.setMonth(0),I.setFullYear(I.getFullYear()+1));else{I.setDate(I.getDate()+B);break}}return V=new Date(I.getFullYear()+1,0,4),B=v(new Date(I.getFullYear(),0,4)),V=v(V),0>=y(B,I)?0>=y(V,I)?I.getFullYear()+1:I.getFullYear():I.getFullYear()-1}i>>>=0,n>>>=0,a>>>=0,l>>>=0;var x=ue[l+40>>>2>>>0];l={Mh:q[l>>>2>>>0],Lh:q[l+4>>>2>>>0],kh:q[l+8>>>2>>>0],nh:q[l+12>>>2>>>0],lh:q[l+16>>>2>>>0],gh:q[l+20>>>2>>>0],eh:q[l+24>>>2>>>0],fh:q[l+28>>>2>>>0],Ph:q[l+32>>>2>>>0],Kh:q[l+36>>>2>>>0],Nh:x?ot(x):""},a=ot(a),x={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var A in x)a=a.replace(new RegExp(A,"g"),x[A]);var T="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),R="January February March April May June July August September October November December".split(" ");x={"%a":I=>T[I.eh].substring(0,3),"%A":I=>T[I.eh],"%b":I=>R[I.lh].substring(0,3),"%B":I=>R[I.lh],"%C":I=>m((I.gh+1900)/100|0,2),"%d":I=>m(I.nh,2),"%e":I=>c(I.nh,2," "),"%g":I=>_(I).toString().substring(2),"%G":I=>_(I),"%H":I=>m(I.kh,2),"%I":I=>(I=I.kh,I==0?I=12:12<I&&(I-=12),m(I,2)),"%j":I=>{for(var B=0,V=0;V<=I.lh-1;B+=(Rt(I.gh+1900)?li:di)[V++]);return m(I.nh+B,3)},"%m":I=>m(I.lh+1,2),"%M":I=>m(I.Lh,2),"%n":()=>`
`,"%p":I=>0<=I.kh&&12>I.kh?"AM":"PM","%S":I=>m(I.Mh,2),"%t":()=>"	","%u":I=>I.eh||7,"%U":I=>m(Math.floor((I.fh+7-I.eh)/7),2),"%V":I=>{var B=Math.floor((I.fh+7-(I.eh+6)%7)/7);if(2>=(I.eh+371-I.fh-2)%7&&B++,B)B==53&&(V=(I.eh+371-I.fh)%7,V==4||V==3&&Rt(I.gh)||(B=1));else{B=52;var V=(I.eh+7-I.fh-1)%7;(V==4||V==5&&Rt(I.gh%400-1))&&B++}return m(B,2)},"%w":I=>I.eh,"%W":I=>m(Math.floor((I.fh+7-(I.eh+6)%7)/7),2),"%y":I=>(I.gh+1900).toString().substring(2),"%Y":I=>I.gh+1900,"%z":I=>{I=I.Kh;var B=0<=I;return I=Math.abs(I)/60,(B?"+":"-")+("0000"+(I/60*100+I%60)).slice(-4)},"%Z":I=>I.Nh,"%%":()=>"%"},a=a.replace(/%%/g,"\0\0");for(A in x)a.includes(A)&&(a=a.replace(new RegExp(A,"g"),x[A](l)));return a=a.replace(/\0\0/g,"%"),A=lt(a),A.length>n?0:(Y.set(A,i>>>0),A.length-1)}var Fe=i=>{try{i()}catch(n){be(n)}};function _n(){var i=D,n={};for(let[a,l]of Object.entries(i))n[a]=typeof l=="function"?function(){fr.push(a);try{return l.apply(null,arguments)}finally{W||(fr.pop(),$t&&zt===1&&fr.length===0&&(zt=0,Fe(ks),typeof Fibers<"u"&&Fibers.Qh()))}}:l;return n}var zt=0,$t=null,$n=0,fr=[],Cn={},_e={},zr=0,Br=null,Va=[];function xn(){return new Promise((i,n)=>{Br={resolve:i,reject:n}})}function Ga(){var i=Mr(65548),n=i+12;ue[i>>>2>>>0]=n,ue[i+4>>>2>>>0]=n+65536,n=fr[0];var a=Cn[n];return a===void 0&&(a=zr++,Cn[n]=a,_e[a]=n),q[i+8>>>2>>>0]=a,i}function Sn(i){if(!W){if(zt===0){var n=!1,a=!1;i((l=0)=>{if(!W&&($n=l,n=!0,a)){zt=2,Fe(()=>Os($t)),typeof Browser<"u"&&Browser.mh.uh&&Browser.mh.resume(),l=!1;try{var c=(0,D[_e[q[$t+8>>>2>>>0]]])()}catch(v){c=v,l=!0}var m=!1;if(!$t){var y=Br;y&&(Br=null,(l?y.reject:y.resolve)(c),m=!0)}if(l&&!m)throw c}}),a=!0,n||(zt=1,$t=Ga(),typeof Browser<"u"&&Browser.mh.uh&&Browser.mh.pause(),Fe(()=>Es($t)))}else zt===2?(zt=0,Fe(Ps),Dr($t),$t=null,Va.forEach(l=>{if(!W)try{l();try{J=J=l=J,r.onExit?.(l),W=!0,g(l,new Qt(l))}catch(c){c instanceof Qt||c=="unwind"||g(1,c)}}catch(c){c instanceof Qt||c=="unwind"||g(1,c)}})):be(`invalid state: ${zt}`);return $n}}function In(i){return Sn(n=>{i().then(n)})}var An={Ia:function(i,n,a){return In(async()=>{await r.Dh(i,n,a)})},t:function(i){return i=new Et(i>>>0),i.wh()||(i.rh(!0),rt--),i.sh(!1),tt.push(i),fi(i.hh),i.xh()},C:()=>{H(0,0);var i=tt.pop();pi(i.hh),_t=0},a:function(){return Lt([])},l:function(i){return Lt([i>>>0])},w:function(i,n){return Lt([i>>>0,n>>>0])},p:function(i,n,a){return Lt([i>>>0,n>>>0,a>>>0])},pa:()=>{var i=tt.pop();i||be("no exception to throw");var n=i.hh;throw i.vh()||(tt.push(i),i.sh(!0),i.rh(!1),rt++),_t=n,_t},r:function(i,n,a){throw i>>>=0,new Et(i).yh(n>>>0,a>>>0),_t=i,rt++,_t},ca:()=>rt,f:function(i){throw _t||=i>>>0,_t},qa:function(){return 0},uc:function(){},Qa:function(){},Sa:function(){},Ka:function(){return 0},_b:function(){},_a:function(){},Pb:function(){},Ea:function(){},Ra:function(){},Oa:function(){},jc:function(){},Pa:function(){},Yc:()=>1,Uc:function(i,n,a){i=n+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*n:NaN,a>>>=0,i=new Date(1e3*i),q[a>>>2>>>0]=i.getUTCSeconds(),q[a+4>>>2>>>0]=i.getUTCMinutes(),q[a+8>>>2>>>0]=i.getUTCHours(),q[a+12>>>2>>>0]=i.getUTCDate(),q[a+16>>>2>>>0]=i.getUTCMonth(),q[a+20>>>2>>>0]=i.getUTCFullYear()-1900,q[a+24>>>2>>>0]=i.getUTCDay(),q[a+28>>>2>>>0]=(i.getTime()-Date.UTC(i.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Vc:function(i,n,a){i=n+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*n:NaN,a>>>=0,i=new Date(1e3*i),q[a>>>2>>>0]=i.getSeconds(),q[a+4>>>2>>>0]=i.getMinutes(),q[a+8>>>2>>>0]=i.getHours(),q[a+12>>>2>>>0]=i.getDate(),q[a+16>>>2>>>0]=i.getMonth(),q[a+20>>>2>>>0]=i.getFullYear()-1900,q[a+24>>>2>>>0]=i.getDay(),q[a+28>>>2>>>0]=(Rt(i.getFullYear())?oi:vn)[i.getMonth()]+i.getDate()-1|0,q[a+36>>>2>>>0]=-(60*i.getTimezoneOffset()),n=new Date(i.getFullYear(),6,1).getTimezoneOffset();var l=new Date(i.getFullYear(),0,1).getTimezoneOffset();q[a+32>>>2>>>0]=(n!=l&&i.getTimezoneOffset()==Math.min(l,n))|0},Wc:function(i){i>>>=0;var n=new Date(q[i+20>>>2>>>0]+1900,q[i+16>>>2>>>0],q[i+12>>>2>>>0],q[i+8>>>2>>>0],q[i+4>>>2>>>0],q[i>>>2>>>0],0),a=q[i+32>>>2>>>0],l=n.getTimezoneOffset(),c=new Date(n.getFullYear(),6,1).getTimezoneOffset(),m=new Date(n.getFullYear(),0,1).getTimezoneOffset(),y=Math.min(m,c);return 0>a?q[i+32>>>2>>>0]=+(c!=m&&y==l):0<a!=(y==l)&&(c=Math.max(m,c),n.setTime(n.getTime()+6e4*((0<a?y:c)-l))),q[i+24>>>2>>>0]=n.getDay(),q[i+28>>>2>>>0]=(Rt(n.getFullYear())?oi:vn)[n.getMonth()]+n.getDate()-1|0,q[i>>>2>>>0]=n.getSeconds(),q[i+4>>>2>>>0]=n.getMinutes(),q[i+8>>>2>>>0]=n.getHours(),q[i+12>>>2>>>0]=n.getDate(),q[i+16>>>2>>>0]=n.getMonth(),q[i+20>>>2>>>0]=n.getYear(),i=n.getTime(),isNaN(i)?(q[mr()>>>2>>>0]=61,i=-1):i/=1e3,tr((nt=i,1<=+Math.abs(nt)?0<nt?+Math.floor(nt/4294967296)>>>0:~~+Math.ceil((nt-+(~~nt>>>0))/4294967296)>>>0:0)),i>>>0},Sc:function(){return-52},Tc:function(){},Ma:function(i,n,a){function l(_){return(_=_.toTimeString().match(/\(([A-Za-z ]+)\)$/))?_[1]:"GMT"}a>>>=0;var c=new Date().getFullYear(),m=new Date(c,0,1),y=new Date(c,6,1);c=m.getTimezoneOffset();var v=y.getTimezoneOffset();ue[i>>>0>>>2>>>0]=60*Math.max(c,v),q[n>>>0>>>2>>>0]=+(c!=v),i=l(m),n=l(y),i=si(i),n=si(n),v<c?(ue[a>>>2>>>0]=i,ue[a+4>>>2>>>0]=n):(ue[a>>>2>>>0]=n,ue[a+4>>>2>>>0]=i)},ha:()=>{be("")},x:function(i,n,a){return i>>>=0,n=Or(n>>>0,a>>>0),at[i].apply(null,n)},za:function(i,n,a){return i>>>=0,n=Or(n>>>0,a>>>0),at[i].apply(null,n)},Ga:()=>Date.now(),Na:function(){return 4294901760},H:()=>performance.now(),Eb:function(i,n,a){return n>>>=0,te.copyWithin(i>>>0>>>0,n>>>0,n+(a>>>0)>>>0)},La:function(i){i>>>=0;var n=te.length;if(4294901760<i)return!1;for(var a=1;4>=a;a*=2){var l=n*(1+.2/a);l=Math.min(l,i+100663296);var c=Math;l=Math.max(i,l);e:{c=(c.min.call(c,4294901760,l+(65536-l%65536)%65536)-N.buffer.byteLength+65535)/65536;try{N.grow(c),Ne();var m=1;break e}catch{}m=void 0}if(m)return!0}return!1},jb:function(i,n){i>>>=0,n>>>=0;var a=0;return Pr().forEach((l,c)=>{var m=n+a;for(c=ue[i+4*c>>>2>>>0]=m,m=0;m<l.length;++m)Y[c++>>>0>>>0]=l.charCodeAt(m);Y[c>>>0>>>0]=0,a+=l.length+1}),0},ub:function(i,n){i>>>=0,n>>>=0;var a=Pr();ue[i>>>2>>>0]=a.length;var l=0;return a.forEach(c=>l+=c.length+1),ue[n>>>2>>>0]=l,0},ma:()=>52,Da:function(){return 52},Xc:function(){return 70},Ca:function(i,n,a,l){n>>>=0,a>>>=0,l>>>=0;for(var c=0,m=0;m<a;m++){var y=ue[n>>>2>>>0],v=ue[n+4>>>2>>>0];n+=8;for(var _=0;_<v;_++){var x=te[y+_>>>0],A=er[i];x===0||x===10?((i===1?U:z)(ai(A,0)),A.length=0):A.push(x)}c+=v}return ue[l>>>2>>>0]=c,0},ga:Kp,Zc:Df,la:vf,L:pf,I:qp,_c:Mf,da:bf,B:lf,z:Np,b:Ip,Ba:jp,$:Dp,g:xp,ra:Rf,h:Cp,E:Of,i:Op,$c:zf,j:kp,u:Ep,s:Wp,n:Fp,W:Jp,Q:If,J:Gp,na:sf,_:df,ja:Af,xb:th,fb:yh,Cc:em,bb:_h,db:vh,Ta:kh,Qb:Dm,Kc:Ff,hb:hh,Va:Th,Ob:jm,eb:bh,lc:gm,Rc:jf,tc:um,gb:gh,cb:wh,Bb:Ym,pc:pm,sc:lm,kc:ym,Qc:Uf,Ya:Sh,ab:$h,ob:lh,lb:ph,$a:Ch,nc:mm,Ib:Hm,kb:fh,Ua:Eh,Tb:zm,Hc:Jf,Pc:Nf,Ac:rm,nb:dh,Za:xh,qc:cm,d:Tp,X:rf,q:Ap,Y:Pf,N:yf,fa:Zp,e:Sp,Aa:Yp,F:kf,aa:af,R:ff,wb:rh,ba:Xp,c:Pp,xa:ef,ad:Tf,ua:mf,k:Rp,wa:nf,m:zp,ya:Qp,va:of,Ha:$f,o:Bp,ec:$m,fc:_m,dc:Cm,ka:wf,y:Vp,A:Up,D:Lp,Z:Ef,ta:hf,ea:tf,P:cf,K:Mp,O:uf,oa:Hp,V:gf,ia:Bf,S:xf,sa:Sf,T:Cf,U:_f,Wa:Ah,oc:fm,Xb:km,M:Xm,sb:ah,hc:vm,Sb:Bm,Db:Km,Ab:Zm,Fa:Gf,Nb:Um,zb:Qm,Fb:qm,Rb:Mm,Hb:Lm,ic:bm,mb:ch,Kb:Vm,tb:nh,qb:sh,wc:om,Fc:Zf,rb:oh,Lb:Wm,Lc:Lf,ib:mh,Bc:tm,Ic:Kf,Nc:Vf,Dc:Qf,pb:uh,Ec:Xf,yb:eh,Jb:Gm,Mc:Hf,Oc:Wf,yc:nm,Cb:Jm,Yb:Em,vb:ih,Gc:Yf,Zb:Tm,Mb:Nm,mc:hm,Jc:qf,vc:sm,Gb:Fm,Wb:Om,xc:am,rc:dm,Xa:Ih,zc:im,Ub:Rm,Vb:Pm,ac:Im,bc:Sm,gc:wm,cc:xm,$b:Am,v:function(i){return i>>>0},Ja:wn,G:function(i,n,a,l){return wn(i>>>0,n>>>0,a>>>0,l>>>0)}},D=function(){function i(a){return D=a.exports,D=_n(),D=Oh(),N=D.bd,Ne(),Ie.unshift(D.cd),ge--,ge==0&&(Ue!==null&&(clearInterval(Ue),Ue=null),ke&&(a=ke,ke=null,a())),D}var n={a:An};if(ge++,r.instantiateWasm)try{return r.instantiateWasm(n,i)}catch(a){z(`Module.instantiateWasm callback failed with error: ${a}`),s(a)}return Tt(n,function(a){i(a.instance)}).catch(s),{}}();r._OrtInit=(i,n)=>(r._OrtInit=D.dd)(i,n),r._OrtGetLastError=(i,n)=>(r._OrtGetLastError=D.ed)(i,n),r._OrtCreateSessionOptions=(i,n,a,l,c,m,y,v,_,x)=>(r._OrtCreateSessionOptions=D.fd)(i,n,a,l,c,m,y,v,_,x),r._OrtAppendExecutionProvider=(i,n)=>(r._OrtAppendExecutionProvider=D.gd)(i,n),r._OrtAddFreeDimensionOverride=(i,n,a)=>(r._OrtAddFreeDimensionOverride=D.hd)(i,n,a),r._OrtAddSessionConfigEntry=(i,n,a)=>(r._OrtAddSessionConfigEntry=D.id)(i,n,a),r._OrtReleaseSessionOptions=i=>(r._OrtReleaseSessionOptions=D.jd)(i),r._OrtCreateSession=(i,n,a)=>(r._OrtCreateSession=D.kd)(i,n,a),r._OrtReleaseSession=i=>(r._OrtReleaseSession=D.ld)(i),r._OrtGetInputOutputCount=(i,n,a)=>(r._OrtGetInputOutputCount=D.md)(i,n,a),r._OrtGetInputName=(i,n)=>(r._OrtGetInputName=D.nd)(i,n),r._OrtGetOutputName=(i,n)=>(r._OrtGetOutputName=D.od)(i,n),r._OrtFree=i=>(r._OrtFree=D.pd)(i),r._OrtCreateTensor=(i,n,a,l,c,m)=>(r._OrtCreateTensor=D.qd)(i,n,a,l,c,m),r._OrtGetTensorData=(i,n,a,l,c)=>(r._OrtGetTensorData=D.rd)(i,n,a,l,c),r._OrtReleaseTensor=i=>(r._OrtReleaseTensor=D.sd)(i),r._OrtCreateRunOptions=(i,n,a,l)=>(r._OrtCreateRunOptions=D.td)(i,n,a,l),r._OrtAddRunConfigEntry=(i,n,a)=>(r._OrtAddRunConfigEntry=D.ud)(i,n,a),r._OrtReleaseRunOptions=i=>(r._OrtReleaseRunOptions=D.vd)(i),r._OrtCreateBinding=i=>(r._OrtCreateBinding=D.wd)(i),r._OrtBindInput=(i,n,a)=>(r._OrtBindInput=D.xd)(i,n,a),r._OrtBindOutput=(i,n,a,l)=>(r._OrtBindOutput=D.yd)(i,n,a,l),r._OrtClearBoundOutputs=i=>(r._OrtClearBoundOutputs=D.zd)(i),r._OrtReleaseBinding=i=>(r._OrtReleaseBinding=D.Ad)(i),r._OrtRunWithBinding=(i,n,a,l,c)=>(r._OrtRunWithBinding=D.Bd)(i,n,a,l,c),r._OrtRun=(i,n,a,l,c,m,y,v)=>(r._OrtRun=D.Cd)(i,n,a,l,c,m,y,v),r._OrtEndProfiling=i=>(r._OrtEndProfiling=D.Dd)(i),r._JsepOutput=(i,n,a)=>(r._JsepOutput=D.Ed)(i,n,a),r._JsepGetNodeName=i=>(r._JsepGetNodeName=D.Fd)(i);var mr=()=>(mr=D.Gd)(),Mr=r._malloc=i=>(Mr=r._malloc=D.Hd)(i),Dr=r._free=i=>(Dr=r._free=D.Id)(i),H=(i,n)=>(H=D.Kd)(i,n),tr=i=>(tr=D.Ld)(i),L=()=>(L=D.Md)(),F=i=>(F=D.Nd)(i),ci=i=>(ci=D.Od)(i),pi=i=>(pi=D.Pd)(i),fi=i=>(fi=D.Qd)(i),mi=(i,n,a)=>(mi=D.Rd)(i,n,a),hi=i=>(hi=D.Sd)(i),gi=r.dynCall_vii=(i,n,a)=>(gi=r.dynCall_vii=D.Td)(i,n,a),yi=r.dynCall_iiii=(i,n,a,l)=>(yi=r.dynCall_iiii=D.Ud)(i,n,a,l),bi=r.dynCall_iii=(i,n,a)=>(bi=r.dynCall_iii=D.Vd)(i,n,a),vi=r.dynCall_ii=(i,n)=>(vi=r.dynCall_ii=D.Wd)(i,n),Ct=r.dynCall_iiiiiii=(i,n,a,l,c,m,y)=>(Ct=r.dynCall_iiiiiii=D.Xd)(i,n,a,l,c,m,y),jr=r.dynCall_vi=(i,n)=>(jr=r.dynCall_vi=D.Yd)(i,n),Ur=r.dynCall_v=i=>(Ur=r.dynCall_v=D.Zd)(i),Tn=r.dynCall_iiiiii=(i,n,a,l,c,m)=>(Tn=r.dynCall_iiiiii=D._d)(i,n,a,l,c,m),Ut=r.dynCall_iiij=(i,n,a,l,c)=>(Ut=r.dynCall_iiij=D.$d)(i,n,a,l,c),En=r.dynCall_iiiii=(i,n,a,l,c)=>(En=r.dynCall_iiiii=D.ae)(i,n,a,l,c),Bt=r.dynCall_viii=(i,n,a,l)=>(Bt=r.dynCall_viii=D.be)(i,n,a,l),wi=r.dynCall_viiiii=(i,n,a,l,c,m)=>(wi=r.dynCall_viiiii=D.ce)(i,n,a,l,c,m),_i=r.dynCall_viiii=(i,n,a,l,c)=>(_i=r.dynCall_viiii=D.de)(i,n,a,l,c),yt=r.dynCall_viiiiii=(i,n,a,l,c,m,y)=>(yt=r.dynCall_viiiiii=D.ee)(i,n,a,l,c,m,y),Nr=r.dynCall_viiji=(i,n,a,l,c,m)=>(Nr=r.dynCall_viiji=D.fe)(i,n,a,l,c,m),ct=r.dynCall_viiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T)=>(ct=r.dynCall_viiiiiiiiiii=D.ge)(i,n,a,l,c,m,y,v,_,x,A,T),xt=r.dynCall_viiijjjii=(i,n,a,l,c,m,y,v,_,x,A,T)=>(xt=r.dynCall_viiijjjii=D.he)(i,n,a,l,c,m,y,v,_,x,A,T),$i=r.dynCall_iij=(i,n,a,l)=>($i=r.dynCall_iij=D.ie)(i,n,a,l),kn=r.dynCall_iif=(i,n,a)=>(kn=r.dynCall_iif=D.je)(i,n,a),On=r.dynCall_iid=(i,n,a)=>(On=r.dynCall_iid=D.ke)(i,n,a),Ci=r.dynCall_jii=(i,n,a)=>(Ci=r.dynCall_jii=D.le)(i,n,a),Pn=r.dynCall_i=i=>(Pn=r.dynCall_i=D.me)(i),Rn=r.dynCall_viiiiiiii=(i,n,a,l,c,m,y,v,_)=>(Rn=r.dynCall_viiiiiiii=D.ne)(i,n,a,l,c,m,y,v,_),zn=r.dynCall_viiiiij=(i,n,a,l,c,m,y,v)=>(zn=r.dynCall_viiiiij=D.oe)(i,n,a,l,c,m,y,v),Bn=r.dynCall_ji=(i,n)=>(Bn=r.dynCall_ji=D.pe)(i,n),Mn=r.dynCall_viij=(i,n,a,l,c)=>(Mn=r.dynCall_viij=D.qe)(i,n,a,l,c),Dn=r.dynCall_iiiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T)=>(Dn=r.dynCall_iiiiiiiiiiii=D.re)(i,n,a,l,c,m,y,v,_,x,A,T),xi=r.dynCall_viiiiiiiii=(i,n,a,l,c,m,y,v,_,x)=>(xi=r.dynCall_viiiiiiiii=D.se)(i,n,a,l,c,m,y,v,_,x),Wr=r.dynCall_ij=(i,n,a)=>(Wr=r.dynCall_ij=D.te)(i,n,a),hr=r.dynCall_iiiiij=(i,n,a,l,c,m,y)=>(hr=r.dynCall_iiiiij=D.ue)(i,n,a,l,c,m,y),Vr=r.dynCall_j=i=>(Vr=r.dynCall_j=D.ve)(i),Gr=r.dynCall_vij=(i,n,a,l)=>(Gr=r.dynCall_vij=D.we)(i,n,a,l),Si=r.dynCall_viijjjiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)=>(Si=r.dynCall_viijjjiiiiii=D.xe)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B),gr=r.dynCall_viiijiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R)=>(gr=r.dynCall_viiijiiiiiii=D.ye)(i,n,a,l,c,m,y,v,_,x,A,T,R),jn=r.dynCall_iiiiiiii=(i,n,a,l,c,m,y,v)=>(jn=r.dynCall_iiiiiiii=D.ze)(i,n,a,l,c,m,y,v),Nt=r.dynCall_viiiiiii=(i,n,a,l,c,m,y,v)=>(Nt=r.dynCall_viiiiiii=D.Ae)(i,n,a,l,c,m,y,v),kt=r.dynCall_iiiiiiiij=(i,n,a,l,c,m,y,v,_,x)=>(kt=r.dynCall_iiiiiiiij=D.Be)(i,n,a,l,c,m,y,v,_,x),Ii=r.dynCall_viiiiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I)=>(Ii=r.dynCall_viiiiiiiiiiiii=D.Ce)(i,n,a,l,c,m,y,v,_,x,A,T,R,I),yr=r.dynCall_iiiiiiiii=(i,n,a,l,c,m,y,v,_)=>(yr=r.dynCall_iiiiiiiii=D.De)(i,n,a,l,c,m,y,v,_),Ai=r.dynCall_iiiiijiiiii=(i,n,a,l,c,m,y,v,_,x,A,T)=>(Ai=r.dynCall_iiiiijiiiii=D.Ee)(i,n,a,l,c,m,y,v,_,x,A,T),Ti=r.dynCall_vijjjiiij=(i,n,a,l,c,m,y,v,_,x,A,T,R)=>(Ti=r.dynCall_vijjjiiij=D.Fe)(i,n,a,l,c,m,y,v,_,x,A,T,R),Un=r.dynCall_fi=(i,n)=>(Un=r.dynCall_fi=D.Ge)(i,n),Hr=r.dynCall_fii=(i,n,a)=>(Hr=r.dynCall_fii=D.He)(i,n,a),Nn=r.dynCall_di=(i,n)=>(Nn=r.dynCall_di=D.Ie)(i,n),Wn=r.dynCall_dii=(i,n,a)=>(Wn=r.dynCall_dii=D.Je)(i,n,a),Vn=r.dynCall_vijj=(i,n,a,l,c,m)=>(Vn=r.dynCall_vijj=D.Ke)(i,n,a,l,c,m),Gn=r.dynCall_iiiiiiiiii=(i,n,a,l,c,m,y,v,_,x)=>(Gn=r.dynCall_iiiiiiiiii=D.Le)(i,n,a,l,c,m,y,v,_,x),Hn=r.dynCall_viijiii=(i,n,a,l,c,m,y,v)=>(Hn=r.dynCall_viijiii=D.Me)(i,n,a,l,c,m,y,v),Ei=r.dynCall_viid=(i,n,a,l)=>(Ei=r.dynCall_viid=D.Ne)(i,n,a,l),br=r.dynCall_viffiii=(i,n,a,l,c,m,y)=>(br=r.dynCall_viffiii=D.Oe)(i,n,a,l,c,m,y),Ln=r.dynCall_viifiii=(i,n,a,l,c,m,y)=>(Ln=r.dynCall_viifiii=D.Pe)(i,n,a,l,c,m,y),Lr=r.dynCall_viiiiidiidi=(i,n,a,l,c,m,y,v,_,x,A)=>(Lr=r.dynCall_viiiiidiidi=D.Qe)(i,n,a,l,c,m,y,v,_,x,A),ki=r.dynCall_viiiiiiiiidi=(i,n,a,l,c,m,y,v,_,x,A,T)=>(ki=r.dynCall_viiiiiiiiidi=D.Re)(i,n,a,l,c,m,y,v,_,x,A,T),Fn=r.dynCall_jiii=(i,n,a,l)=>(Fn=r.dynCall_jiii=D.Se)(i,n,a,l),qn=r.dynCall_vjiiiiii=(i,n,a,l,c,m,y,v,_)=>(qn=r.dynCall_vjiiiiii=D.Te)(i,n,a,l,c,m,y,v,_),Oi=r.dynCall_viiid=(i,n,a,l,c)=>(Oi=r.dynCall_viiid=D.Ue)(i,n,a,l,c),Kn=r.dynCall_viiiiiiiiiji=(i,n,a,l,c,m,y,v,_,x,A,T,R)=>(Kn=r.dynCall_viiiiiiiiiji=D.Ve)(i,n,a,l,c,m,y,v,_,x,A,T,R),rr=r.dynCall_viji=(i,n,a,l,c)=>(rr=r.dynCall_viji=D.We)(i,n,a,l,c),Pi=r.dynCall_vijjjjjjjjjjjjji=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st,pt,bt)=>(Pi=r.dynCall_vijjjjjjjjjjjjji=D.Xe)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st,pt,bt),Ri=r.dynCall_viiiji=(i,n,a,l,c,m,y)=>(Ri=r.dynCall_viiiji=D.Ye)(i,n,a,l,c,m,y),zi=r.dynCall_vijjjiiji=(i,n,a,l,c,m,y,v,_,x,A,T,R)=>(zi=r.dynCall_vijjjiiji=D.Ze)(i,n,a,l,c,m,y,v,_,x,A,T,R),Bi=r.dynCall_iiiji=(i,n,a,l,c,m)=>(Bi=r.dynCall_iiiji=D._e)(i,n,a,l,c,m),Mi=r.dynCall_iiijiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)=>(Mi=r.dynCall_iiijiiiiiiiiii=D.$e)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B),Fr=r.dynCall_vj=(i,n,a)=>(Fr=r.dynCall_vj=D.af)(i,n,a),Di=r.dynCall_jjj=(i,n,a,l,c)=>(Di=r.dynCall_jjj=D.bf)(i,n,a,l,c),qr=r.dynCall_iiijiiiiii=(i,n,a,l,c,m,y,v,_,x,A)=>(qr=r.dynCall_iiijiiiiii=D.cf)(i,n,a,l,c,m,y,v,_,x,A),ji=r.dynCall_vfiii=(i,n,a,l,c)=>(ji=r.dynCall_vfiii=D.df)(i,n,a,l,c),Kr=r.dynCall_viiiiff=(i,n,a,l,c,m,y)=>(Kr=r.dynCall_viiiiff=D.ef)(i,n,a,l,c,m,y),Ui=r.dynCall_viiiiiff=(i,n,a,l,c,m,y,v)=>(Ui=r.dynCall_viiiiiff=D.ff)(i,n,a,l,c,m,y,v),Ni=r.dynCall_viiff=(i,n,a,l,c)=>(Ni=r.dynCall_viiff=D.gf)(i,n,a,l,c),Wi=r.dynCall_viiiiiiiiifiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I)=>(Wi=r.dynCall_viiiiiiiiifiii=D.hf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I),Vi=r.dynCall_viiiiiiiijj=(i,n,a,l,c,m,y,v,_,x,A,T,R)=>(Vi=r.dynCall_viiiiiiiijj=D.jf)(i,n,a,l,c,m,y,v,_,x,A,T,R),Gi=r.dynCall_iiiiiiiiiiiiiifii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X)=>(Gi=r.dynCall_iiiiiiiiiiiiiifii=D.kf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X),Jn=r.dynCall_viiiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R)=>(Jn=r.dynCall_viiiiiiiiiiii=D.lf)(i,n,a,l,c,m,y,v,_,x,A,T,R),Hi=r.dynCall_iiiiiiiiiiiiiiiiifii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye)=>(Hi=r.dynCall_iiiiiiiiiiiiiiiiifii=D.mf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye),Li=r.dynCall_vijjiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T)=>(Li=r.dynCall_vijjiiiiii=D.nf)(i,n,a,l,c,m,y,v,_,x,A,T),Fi=r.dynCall_iiiijjj=(i,n,a,l,c,m,y,v,_,x)=>(Fi=r.dynCall_iiiijjj=D.of)(i,n,a,l,c,m,y,v,_,x),Yn=r.dynCall_viiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A)=>(Yn=r.dynCall_viiiiiiiiii=D.pf)(i,n,a,l,c,m,y,v,_,x,A),Zn=r.dynCall_iiijjj=(i,n,a,l,c,m,y,v,_)=>(Zn=r.dynCall_iiijjj=D.qf)(i,n,a,l,c,m,y,v,_),qi=r.dynCall_fffffff=(i,n,a,l,c,m,y)=>(qi=r.dynCall_fffffff=D.rf)(i,n,a,l,c,m,y),Ki=r.dynCall_viiiij=(i,n,a,l,c,m,y)=>(Ki=r.dynCall_viiiij=D.sf)(i,n,a,l,c,m,y),vr=r.dynCall_viiiiiijiifiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)=>(vr=r.dynCall_viiiiiijiifiii=D.tf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B),Xn=r.dynCall_vjjjjjjffjifiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe)=>(Xn=r.dynCall_vjjjjjjffjifiiiiii=D.uf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe),Qn=r.dynCall_viiiiiiffjifiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie)=>(Qn=r.dynCall_viiiiiiffjifiiiii=D.vf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie),fe=r.dynCall_viiiiiiffjfiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X)=>(fe=r.dynCall_viiiiiiffjfiiiii=D.wf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X),Ji=r.dynCall_viiiiiiffjiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)=>(Ji=r.dynCall_viiiiiiffjiiiii=D.xf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V),wr=r.dynCall_vjjjjjjjjfffiiifiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st,pt,bt)=>(wr=r.dynCall_vjjjjjjjjfffiiifiiiii=D.yf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st,pt,bt),or=r.dynCall_vjjjjjjfffifijiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe)=>(or=r.dynCall_vjjjjjjfffifijiiiii=D.zf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe),Ot=r.dynCall_vjjjjjjfffifiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke)=>(Ot=r.dynCall_vjjjjjjfffifiiiiii=D.Af)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke),Yi=r.dynCall_vjjjjjjjjfffjifiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st,pt,bt,Cr)=>(Yi=r.dynCall_vjjjjjjjjfffjifiiiiii=D.Bf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st,pt,bt,Cr),Zi=r.dynCall_vijjfffiii=(i,n,a,l,c,m,y,v,_,x,A,T)=>(Zi=r.dynCall_vijjfffiii=D.Cf)(i,n,a,l,c,m,y,v,_,x,A,T),Xi=r.dynCall_vijiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I)=>(Xi=r.dynCall_vijiiiiiiiiii=D.Df)(i,n,a,l,c,m,y,v,_,x,A,T,R,I),Jr=r.dynCall_viiiiiiijiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I)=>(Jr=r.dynCall_viiiiiiijiiii=D.Ef)(i,n,a,l,c,m,y,v,_,x,A,T,R,I),Yr=r.dynCall_vijjjjjjifiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe)=>(Yr=r.dynCall_vijjjjjjifiiiii=D.Ff)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe),Qi=r.dynCall_viifi=(i,n,a,l,c)=>(Qi=r.dynCall_viifi=D.Gf)(i,n,a,l,c),en=r.dynCall_vjjjjjiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)=>(en=r.dynCall_vjjjjjiiii=D.Hf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B),Zr=r.dynCall_vjjjjfiii=(i,n,a,l,c,m,y,v,_,x,A,T,R)=>(Zr=r.dynCall_vjjjjfiii=D.If)(i,n,a,l,c,m,y,v,_,x,A,T,R),_r=r.dynCall_viiiiiijiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)=>(_r=r.dynCall_viiiiiijiiiiii=D.Jf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B),Xr=r.dynCall_vijjii=(i,n,a,l,c,m,y,v)=>(Xr=r.dynCall_vijjii=D.Kf)(i,n,a,l,c,m,y,v),tn=r.dynCall_viiiiijjiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)=>(tn=r.dynCall_viiiiijjiiiii=D.Lf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B),rn=r.dynCall_iiiiiji=(i,n,a,l,c,m,y,v)=>(rn=r.dynCall_iiiiiji=D.Mf)(i,n,a,l,c,m,y,v),nn=r.dynCall_iiiiji=(i,n,a,l,c,m,y)=>(nn=r.dynCall_iiiiji=D.Nf)(i,n,a,l,c,m,y),an=r.dynCall_viiiiijiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I)=>(an=r.dynCall_viiiiijiiiiii=D.Of)(i,n,a,l,c,m,y,v,_,x,A,T,R,I),on=r.dynCall_viiijiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T)=>(on=r.dynCall_viiijiiiiii=D.Pf)(i,n,a,l,c,m,y,v,_,x,A,T),ea=r.dynCall_viijj=(i,n,a,l,c,m,y)=>(ea=r.dynCall_viijj=D.Qf)(i,n,a,l,c,m,y),$r=r.dynCall_viiiijii=(i,n,a,l,c,m,y,v,_)=>($r=r.dynCall_viiiijii=D.Rf)(i,n,a,l,c,m,y,v,_),sn=r.dynCall_viijjiii=(i,n,a,l,c,m,y,v,_,x)=>(sn=r.dynCall_viijjiii=D.Sf)(i,n,a,l,c,m,y,v,_,x),u=r.dynCall_ijii=(i,n,a,l,c)=>(u=r.dynCall_ijii=D.Tf)(i,n,a,l,c),h=r.dynCall_viiiiijjji=(i,n,a,l,c,m,y,v,_,x,A,T,R)=>(h=r.dynCall_viiiiijjji=D.Uf)(i,n,a,l,c,m,y,v,_,x,A,T,R),$=r.dynCall_vijjjjiij=(i,n,a,l,c,m,y,v,_,x,A,T,R,I)=>($=r.dynCall_vijjjjiij=D.Vf)(i,n,a,l,c,m,y,v,_,x,A,T,R,I),k=r.dynCall_viiiiijij=(i,n,a,l,c,m,y,v,_,x,A)=>(k=r.dynCall_viiiiijij=D.Wf)(i,n,a,l,c,m,y,v,_,x,A),M=r.dynCall_viiiiiijij=(i,n,a,l,c,m,y,v,_,x,A,T)=>(M=r.dynCall_viiiiiijij=D.Xf)(i,n,a,l,c,m,y,v,_,x,A,T),G=r.dynCall_vijiii=(i,n,a,l,c,m,y)=>(G=r.dynCall_vijiii=D.Yf)(i,n,a,l,c,m,y),Z=r.dynCall_viiifii=(i,n,a,l,c,m,y)=>(Z=r.dynCall_viiifii=D.Zf)(i,n,a,l,c,m,y),re=r.dynCall_viiiiiiiiifi=(i,n,a,l,c,m,y,v,_,x,A,T)=>(re=r.dynCall_viiiiiiiiifi=D._f)(i,n,a,l,c,m,y,v,_,x,A,T),ce=r.dynCall_iiijiiii=(i,n,a,l,c,m,y,v,_)=>(ce=r.dynCall_iiijiiii=D.$f)(i,n,a,l,c,m,y,v,_),se=r.dynCall_viiiiiijjiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)=>(se=r.dynCall_viiiiiijjiiiii=D.ag)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V),we=r.dynCall_viiiiiiijiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)=>(we=r.dynCall_viiiiiiijiiiiii=D.bg)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V),me=r.dynCall_vif=(i,n,a)=>(me=r.dynCall_vif=D.cg)(i,n,a),Ce=r.dynCall_viif=(i,n,a,l)=>(Ce=r.dynCall_viif=D.dg)(i,n,a,l),K=r.dynCall_fiii=(i,n,a,l)=>(K=r.dynCall_fiii=D.eg)(i,n,a,l),he=r.dynCall_diii=(i,n,a,l)=>(he=r.dynCall_diii=D.fg)(i,n,a,l),ze=r.dynCall_viiiiiifii=(i,n,a,l,c,m,y,v,_,x)=>(ze=r.dynCall_viiiiiifii=D.gg)(i,n,a,l,c,m,y,v,_,x),dt=r.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st)=>(dt=r.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=D.hg)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st),Ft=r.dynCall_viijji=(i,n,a,l,c,m,y,v)=>(Ft=r.dynCall_viijji=D.ig)(i,n,a,l,c,m,y,v),Uo=r.dynCall_iiiiiiiiiiiji=(i,n,a,l,c,m,y,v,_,x,A,T,R,I)=>(Uo=r.dynCall_iiiiiiiiiiiji=D.jg)(i,n,a,l,c,m,y,v,_,x,A,T,R,I),No=r.dynCall_viifiifijjjii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)=>(No=r.dynCall_viifiifijjjii=D.kg)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V),Wo=r.dynCall_viiiiiiiiiiiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe)=>(Wo=r.dynCall_viiiiiiiiiiiiiiiiiiii=D.lg)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe),Vo=r.dynCall_viiiiifiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R)=>(Vo=r.dynCall_viiiiifiiiiii=D.mg)(i,n,a,l,c,m,y,v,_,x,A,T,R),Go=r.dynCall_vijiiiiiiijjii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X)=>(Go=r.dynCall_vijiiiiiiijjii=D.ng)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X),Ho=r.dynCall_viiiiiiiiiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe)=>(Ho=r.dynCall_viiiiiiiiiiiiiiiiii=D.og)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe),Lo=r.dynCall_viiiiiiiiiiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye)=>(Lo=r.dynCall_viiiiiiiiiiiiiiiiiii=D.pg)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye),Fo=r.dynCall_viiiiiiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)=>(Fo=r.dynCall_viiiiiiiiiiiiiii=D.qg)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V),qo=r.dynCall_viiiiiiiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X)=>(qo=r.dynCall_viiiiiiiiiiiiiiii=D.rg)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X),Ko=r.dynCall_viiiijjj=(i,n,a,l,c,m,y,v,_,x,A)=>(Ko=r.dynCall_viiiijjj=D.sg)(i,n,a,l,c,m,y,v,_,x,A),Jo=r.dynCall_iiiiid=(i,n,a,l,c,m)=>(Jo=r.dynCall_iiiiid=D.tg)(i,n,a,l,c,m),Yo=r.dynCall_viiiiiiijjj=(i,n,a,l,c,m,y,v,_,x,A,T,R,I)=>(Yo=r.dynCall_viiiiiiijjj=D.ug)(i,n,a,l,c,m,y,v,_,x,A,T,R,I),Zo=r.dynCall_iiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A)=>(Zo=r.dynCall_iiiiiiiiiii=D.vg)(i,n,a,l,c,m,y,v,_,x,A),Xo=r.dynCall_iiiiiiiiiiiiiiiiiifi=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye)=>(Xo=r.dynCall_iiiiiiiiiiiiiiiiiifi=D.wg)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye),Qo=r.dynCall_viiif=(i,n,a,l,c)=>(Qo=r.dynCall_viiif=D.xg)(i,n,a,l,c),es=r.dynCall_viiijiiiii=(i,n,a,l,c,m,y,v,_,x,A)=>(es=r.dynCall_viiijiiiii=D.yg)(i,n,a,l,c,m,y,v,_,x,A),ts=r.dynCall_viiij=(i,n,a,l,c,m)=>(ts=r.dynCall_viiij=D.zg)(i,n,a,l,c,m),rs=r.dynCall_iijjj=(i,n,a,l,c,m,y,v)=>(rs=r.dynCall_iijjj=D.Ag)(i,n,a,l,c,m,y,v),is=r.dynCall_viiiiji=(i,n,a,l,c,m,y,v)=>(is=r.dynCall_viiiiji=D.Bg)(i,n,a,l,c,m,y,v),ns=r.dynCall_iijjji=(i,n,a,l,c,m,y,v,_)=>(ns=r.dynCall_iijjji=D.Cg)(i,n,a,l,c,m,y,v,_),as=r.dynCall_ijijji=(i,n,a,l,c,m,y,v,_)=>(as=r.dynCall_ijijji=D.Dg)(i,n,a,l,c,m,y,v,_),os=r.dynCall_viiijjiii=(i,n,a,l,c,m,y,v,_,x,A)=>(os=r.dynCall_viiijjiii=D.Eg)(i,n,a,l,c,m,y,v,_,x,A),ss=r.dynCall_iiiiijji=(i,n,a,l,c,m,y,v,_,x)=>(ss=r.dynCall_iiiiijji=D.Fg)(i,n,a,l,c,m,y,v,_,x),us=r.dynCall_iiiifi=(i,n,a,l,c,m)=>(us=r.dynCall_iiiifi=D.Gg)(i,n,a,l,c,m),ls=r.dynCall_iiijii=(i,n,a,l,c,m,y)=>(ls=r.dynCall_iiijii=D.Hg)(i,n,a,l,c,m,y),ds=r.dynCall_iiiiiiiiijii=(i,n,a,l,c,m,y,v,_,x,A,T,R)=>(ds=r.dynCall_iiiiiiiiijii=D.Ig)(i,n,a,l,c,m,y,v,_,x,A,T,R),cs=r.dynCall_iiiijjii=(i,n,a,l,c,m,y,v,_,x)=>(cs=r.dynCall_iiiijjii=D.Jg)(i,n,a,l,c,m,y,v,_,x),ps=r.dynCall_iiiiiijjjii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I)=>(ps=r.dynCall_iiiiiijjjii=D.Kg)(i,n,a,l,c,m,y,v,_,x,A,T,R,I),fs=r.dynCall_iiijiii=(i,n,a,l,c,m,y,v)=>(fs=r.dynCall_iiijiii=D.Lg)(i,n,a,l,c,m,y,v),ms=r.dynCall_iiiiiiiijjjfi=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)=>(ms=r.dynCall_iiiiiiiijjjfi=D.Mg)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V),hs=r.dynCall_iijiiii=(i,n,a,l,c,m,y,v)=>(hs=r.dynCall_iijiiii=D.Ng)(i,n,a,l,c,m,y,v),gs=r.dynCall_iijjjii=(i,n,a,l,c,m,y,v,_,x)=>(gs=r.dynCall_iijjjii=D.Og)(i,n,a,l,c,m,y,v,_,x),ys=r.dynCall_jij=(i,n,a,l)=>(ys=r.dynCall_jij=D.Pg)(i,n,a,l),bs=r.dynCall_iiji=(i,n,a,l,c)=>(bs=r.dynCall_iiji=D.Qg)(i,n,a,l,c),vs=r.dynCall_iiif=(i,n,a,l)=>(vs=r.dynCall_iiif=D.Rg)(i,n,a,l),ws=r.dynCall_vidi=(i,n,a,l)=>(ws=r.dynCall_vidi=D.Sg)(i,n,a,l),_s=r.dynCall_vjiii=(i,n,a,l,c,m)=>(_s=r.dynCall_vjiii=D.Tg)(i,n,a,l,c,m),$s=r.dynCall_iiiij=(i,n,a,l,c,m)=>($s=r.dynCall_iiiij=D.Ug)(i,n,a,l,c,m),Cs=r.dynCall_viiijii=(i,n,a,l,c,m,y,v)=>(Cs=r.dynCall_viiijii=D.Vg)(i,n,a,l,c,m,y,v),xs=r.dynCall_viijiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I)=>(xs=r.dynCall_viijiiiiiiiii=D.Wg)(i,n,a,l,c,m,y,v,_,x,A,T,R,I),Ss=r.dynCall_fiiii=(i,n,a,l,c)=>(Ss=r.dynCall_fiiii=D.Xg)(i,n,a,l,c),Is=r.dynCall_jfi=(i,n,a)=>(Is=r.dynCall_jfi=D.Yg)(i,n,a),As=r.dynCall_viiiiiiiiiiiiii=(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)=>(As=r.dynCall_viiiiiiiiiiiiii=D.Zg)(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B),Ts=r.dynCall_jiij=(i,n,a,l,c)=>(Ts=r.dynCall_jiij=D._g)(i,n,a,l,c),Es=i=>(Es=D.$g)(i),ks=()=>(ks=D.ah)(),Os=i=>(Os=D.bh)(i),Ps=()=>(Ps=D.ch)();r.___start_em_js=1378951,r.___stop_em_js=1379112;function Cp(i,n,a,l){var c=L();try{return yi(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function xp(i,n,a){var l=L();try{return bi(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function Sp(i,n,a){var l=L();try{gi(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function Ip(i,n){var a=L();try{return vi(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function Ap(i,n){var a=L();try{jr(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function Tp(i){var n=L();try{Ur(i)}catch(a){if(F(n),a!==a+0)throw a;H(1,0)}}function Ep(i,n,a,l,c,m,y){var v=L();try{return Ct(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function kp(i,n,a,l,c,m){var y=L();try{return Tn(i,n,a,l,c,m)}catch(v){if(F(y),v!==v+0)throw v;H(1,0)}}function Op(i,n,a,l,c){var m=L();try{return En(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function Pp(i,n,a,l){var c=L();try{Bt(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Rp(i,n,a,l,c){var m=L();try{_i(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function zp(i,n,a,l,c,m){var y=L();try{wi(i,n,a,l,c,m)}catch(v){if(F(y),v!==v+0)throw v;H(1,0)}}function Bp(i,n,a,l,c,m,y){var v=L();try{yt(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Mp(i,n,a,l,c,m,y,v,_,x,A,T){var R=L();try{ct(i,n,a,l,c,m,y,v,_,x,A,T)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function Dp(i,n,a){var l=L();try{return kn(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function jp(i,n,a){var l=L();try{return On(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function Up(i,n,a,l,c,m,y,v,_){var x=L();try{Rn(i,n,a,l,c,m,y,v,_)}catch(A){if(F(x),A!==A+0)throw A;H(1,0)}}function Np(i){var n=L();try{return Pn(i)}catch(a){if(F(n),a!==a+0)throw a;H(1,0)}}function Wp(i,n,a,l,c,m,y,v){var _=L();try{return jn(i,n,a,l,c,m,y,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function Vp(i,n,a,l,c,m,y,v){var _=L();try{Nt(i,n,a,l,c,m,y,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function Gp(i,n,a,l,c,m,y,v,_,x,A,T){var R=L();try{return Dn(i,n,a,l,c,m,y,v,_,x,A,T)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function Hp(i,n,a,l,c,m,y,v,_,x,A,T,R,I){var B=L();try{Ii(i,n,a,l,c,m,y,v,_,x,A,T,R,I)}catch(V){if(F(B),V!==V+0)throw V;H(1,0)}}function Lp(i,n,a,l,c,m,y,v,_,x){var A=L();try{xi(i,n,a,l,c,m,y,v,_,x)}catch(T){if(F(A),T!==T+0)throw T;H(1,0)}}function Fp(i,n,a,l,c,m,y,v,_){var x=L();try{return yr(i,n,a,l,c,m,y,v,_)}catch(A){if(F(x),A!==A+0)throw A;H(1,0)}}function qp(i,n){var a=L();try{return Un(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function Kp(i,n){var a=L();try{return Nn(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function Jp(i,n,a,l,c,m,y,v,_,x){var A=L();try{return Gn(i,n,a,l,c,m,y,v,_,x)}catch(T){if(F(A),T!==T+0)throw T;H(1,0)}}function Yp(i,n,a,l){var c=L();try{Ei(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Zp(i,n,a,l,c,m,y){var v=L();try{br(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Xp(i,n,a,l,c,m,y){var v=L();try{Ln(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Qp(i,n,a,l,c,m,y,v,_,x,A){var T=L();try{Lr(i,n,a,l,c,m,y,v,_,x,A)}catch(R){if(F(T),R!==R+0)throw R;H(1,0)}}function ef(i,n,a,l,c){var m=L();try{Oi(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function tf(i,n,a,l,c,m,y,v,_,x,A,T,R,I){var B=L();try{Wi(i,n,a,l,c,m,y,v,_,x,A,T,R,I)}catch(V){if(F(B),V!==V+0)throw V;H(1,0)}}function rf(i,n,a,l,c){var m=L();try{ji(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function nf(i,n,a,l,c,m,y){var v=L();try{Kr(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function af(i,n,a,l,c){var m=L();try{Ni(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function of(i,n,a,l,c,m,y,v){var _=L();try{Ui(i,n,a,l,c,m,y,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function sf(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X){var ie=L();try{return Gi(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X)}catch(pe){if(F(ie),pe!==pe+0)throw pe;H(1,0)}}function uf(i,n,a,l,c,m,y,v,_,x,A,T,R){var I=L();try{Jn(i,n,a,l,c,m,y,v,_,x,A,T,R)}catch(B){if(F(I),B!==B+0)throw B;H(1,0)}}function lf(i,n,a,l,c){var m=L();try{return Ss(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function df(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye){var xe=L();try{return Hi(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye)}catch(Ae){if(F(xe),Ae!==Ae+0)throw Ae;H(1,0)}}function cf(i,n,a,l,c,m,y,v,_,x,A){var T=L();try{Yn(i,n,a,l,c,m,y,v,_,x,A)}catch(R){if(F(T),R!==R+0)throw R;H(1,0)}}function pf(i,n,a,l,c,m,y){var v=L();try{return qi(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function ff(i,n,a,l,c){var m=L();try{Qi(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function mf(i,n,a,l,c,m,y){var v=L();try{Z(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function hf(i,n,a,l,c,m,y,v,_,x,A,T){var R=L();try{re(i,n,a,l,c,m,y,v,_,x,A,T)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function gf(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B){var V=L();try{As(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)}catch(X){if(F(V),X!==X+0)throw X;H(1,0)}}function yf(i,n,a){var l=L();try{me(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function bf(i,n,a,l){var c=L();try{return K(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function vf(i,n,a,l){var c=L();try{return he(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function wf(i,n,a,l,c,m,y,v,_,x){var A=L();try{ze(i,n,a,l,c,m,y,v,_,x)}catch(T){if(F(A),T!==T+0)throw T;H(1,0)}}function _f(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe){var Ae=L();try{Wo(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe)}catch(We){if(F(Ae),We!==We+0)throw We;H(1,0)}}function $f(i,n,a,l,c,m,y,v,_,x,A,T,R){var I=L();try{Vo(i,n,a,l,c,m,y,v,_,x,A,T,R)}catch(B){if(F(I),B!==B+0)throw B;H(1,0)}}function Cf(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye){var xe=L();try{Lo(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye)}catch(Ae){if(F(xe),Ae!==Ae+0)throw Ae;H(1,0)}}function xf(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X){var ie=L();try{qo(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X)}catch(pe){if(F(ie),pe!==pe+0)throw pe;H(1,0)}}function Sf(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe){var ye=L();try{Ho(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe)}catch(xe){if(F(ye),xe!==xe+0)throw xe;H(1,0)}}function If(i,n,a,l,c,m,y,v,_,x,A){var T=L();try{return Zo(i,n,a,l,c,m,y,v,_,x,A)}catch(R){if(F(T),R!==R+0)throw R;H(1,0)}}function Af(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye){var xe=L();try{return Xo(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye)}catch(Ae){if(F(xe),Ae!==Ae+0)throw Ae;H(1,0)}}function Tf(i,n,a,l,c){var m=L();try{Qo(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function Ef(i,n,a,l,c,m,y,v,_,x,A,T){var R=L();try{ki(i,n,a,l,c,m,y,v,_,x,A,T)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function kf(i,n,a,l){var c=L();try{Ce(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Of(i,n,a,l,c,m){var y=L();try{return us(i,n,a,l,c,m)}catch(v){if(F(y),v!==v+0)throw v;H(1,0)}}function Pf(i,n,a,l){var c=L();try{ws(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Rf(i,n,a,l){var c=L();try{return vs(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function zf(i,n,a,l,c,m){var y=L();try{return Jo(i,n,a,l,c,m)}catch(v){if(F(y),v!==v+0)throw v;H(1,0)}}function Bf(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V){var X=L();try{Fo(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)}catch(ie){if(F(X),ie!==ie+0)throw ie;H(1,0)}}function Mf(i,n,a){var l=L();try{return Hr(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function Df(i,n,a){var l=L();try{return Wn(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function jf(i,n,a,l,c){var m=L();try{return Ut(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function Uf(i,n,a,l){var c=L();try{return $i(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Nf(i,n,a){var l=L();try{return Ci(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function Wf(i,n,a,l){var c=L();try{Gr(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Vf(i,n,a,l,c,m){var y=L();try{Nr(i,n,a,l,c,m)}catch(v){if(F(y),v!==v+0)throw v;H(1,0)}}function Gf(i,n,a,l,c,m,y,v){var _=L();try{zn(i,n,a,l,c,m,y,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function Hf(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B){var V=L();try{Si(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)}catch(X){if(F(V),X!==X+0)throw X;H(1,0)}}function Lf(i,n,a,l,c,m,y,v,_,x,A,T,R){var I=L();try{gr(i,n,a,l,c,m,y,v,_,x,A,T,R)}catch(B){if(F(I),B!==B+0)throw B;H(1,0)}}function Ff(i,n,a,l,c,m,y,v,_,x,A,T){var R=L();try{return Ai(i,n,a,l,c,m,y,v,_,x,A,T)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function qf(i,n,a,l,c,m,y,v,_,x,A,T,R){var I=L();try{Ti(i,n,a,l,c,m,y,v,_,x,A,T,R)}catch(B){if(F(I),B!==B+0)throw B;H(1,0)}}function Kf(i,n,a,l,c){var m=L();try{Mn(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function Jf(i,n){var a=L();try{return Bn(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function Yf(i,n,a,l,c,m){var y=L();try{Vn(i,n,a,l,c,m)}catch(v){if(F(y),v!==v+0)throw v;H(1,0)}}function Zf(i,n,a,l,c,m,y,v){var _=L();try{Cs(i,n,a,l,c,m,y,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function Xf(i,n,a,l,c,m,y){var v=L();try{ea(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Qf(i,n,a,l,c,m,y,v){var _=L();try{Hn(i,n,a,l,c,m,y,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function em(i,n,a,l,c,m,y,v,_,x){var A=L();try{return kt(i,n,a,l,c,m,y,v,_,x)}catch(T){if(F(A),T!==T+0)throw T;H(1,0)}}function tm(i,n,a,l,c,m,y,v,_,x,A,T){var R=L();try{xt(i,n,a,l,c,m,y,v,_,x,A,T)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function rm(i,n,a,l){var c=L();try{return Fn(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function im(i,n,a,l,c,m,y,v,_){var x=L();try{qn(i,n,a,l,c,m,y,v,_)}catch(A){if(F(x),A!==A+0)throw A;H(1,0)}}function nm(i,n,a,l,c){var m=L();try{rr(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function am(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st,pt,bt){var Cr=L();try{Pi(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st,pt,bt)}catch(ir){if(F(Cr),ir!==ir+0)throw ir;H(1,0)}}function om(i,n,a,l,c,m,y){var v=L();try{Ri(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function sm(i,n,a,l,c,m,y,v,_,x,A,T,R){var I=L();try{zi(i,n,a,l,c,m,y,v,_,x,A,T,R)}catch(B){if(F(I),B!==B+0)throw B;H(1,0)}}function um(i,n,a,l,c,m){var y=L();try{return Bi(i,n,a,l,c,m)}catch(v){if(F(y),v!==v+0)throw v;H(1,0)}}function lm(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B){var V=L();try{return Mi(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)}catch(X){if(F(V),X!==X+0)throw X;H(1,0)}}function dm(i,n,a){var l=L();try{Fr(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function cm(i,n,a,l,c){var m=L();try{return Di(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function pm(i,n,a,l,c,m,y,v,_,x,A){var T=L();try{return qr(i,n,a,l,c,m,y,v,_,x,A)}catch(R){if(F(T),R!==R+0)throw R;H(1,0)}}function fm(i,n,a,l,c,m,y,v,_,x,A,T,R){var I=L();try{Vi(i,n,a,l,c,m,y,v,_,x,A,T,R)}catch(B){if(F(I),B!==B+0)throw B;H(1,0)}}function mm(i,n,a){var l=L();try{return Wr(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function hm(i,n,a,l,c,m,y,v,_,x,A,T){var R=L();try{Li(i,n,a,l,c,m,y,v,_,x,A,T)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function gm(i,n,a,l,c,m,y,v,_,x){var A=L();try{return Fi(i,n,a,l,c,m,y,v,_,x)}catch(T){if(F(A),T!==T+0)throw T;H(1,0)}}function ym(i,n,a,l,c,m,y,v,_){var x=L();try{return Zn(i,n,a,l,c,m,y,v,_)}catch(A){if(F(x),A!==A+0)throw A;H(1,0)}}function bm(i,n,a,l,c,m,y){var v=L();try{Ki(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function vm(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B){var V=L();try{vr(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)}catch(X){if(F(V),X!==X+0)throw X;H(1,0)}}function wm(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe){var Qe=L();try{Xn(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe)}catch(st){if(F(Qe),st!==st+0)throw st;H(1,0)}}function _m(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie){var pe=L();try{Qn(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie)}catch(ye){if(F(pe),ye!==ye+0)throw ye;H(1,0)}}function $m(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X){var ie=L();try{fe(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X)}catch(pe){if(F(ie),pe!==pe+0)throw pe;H(1,0)}}function Cm(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V){var X=L();try{Ji(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)}catch(ie){if(F(X),ie!==ie+0)throw ie;H(1,0)}}function xm(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st,pt,bt){var Cr=L();try{wr(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st,pt,bt)}catch(ir){if(F(Cr),ir!==ir+0)throw ir;H(1,0)}}function Sm(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe){var st=L();try{or(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe)}catch(pt){if(F(st),pt!==pt+0)throw pt;H(1,0)}}function Im(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke){var Xe=L();try{Ot(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke)}catch(Qe){if(F(Xe),Qe!==Qe+0)throw Qe;H(1,0)}}function Am(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st,pt,bt,Cr){var ir=L();try{Yi(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st,pt,bt,Cr)}catch(Ha){if(F(ir),Ha!==Ha+0)throw Ha;H(1,0)}}function Tm(i,n,a,l,c,m,y,v,_,x,A,T){var R=L();try{Zi(i,n,a,l,c,m,y,v,_,x,A,T)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function Em(i,n,a,l,c,m,y,v,_,x,A,T,R,I){var B=L();try{Xi(i,n,a,l,c,m,y,v,_,x,A,T,R,I)}catch(V){if(F(B),V!==V+0)throw V;H(1,0)}}function km(i,n,a,l,c,m,y,v,_,x,A,T,R,I){var B=L();try{Jr(i,n,a,l,c,m,y,v,_,x,A,T,R,I)}catch(V){if(F(B),V!==V+0)throw V;H(1,0)}}function Om(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe){var Ae=L();try{Yr(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe)}catch(We){if(F(Ae),We!==We+0)throw We;H(1,0)}}function Pm(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B){var V=L();try{en(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)}catch(X){if(F(V),X!==X+0)throw X;H(1,0)}}function Rm(i,n,a,l,c,m,y,v,_,x,A,T,R){var I=L();try{Zr(i,n,a,l,c,m,y,v,_,x,A,T,R)}catch(B){if(F(I),B!==B+0)throw B;H(1,0)}}function zm(i,n,a){var l=L();try{return Is(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function Bm(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B){var V=L();try{_r(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)}catch(X){if(F(V),X!==X+0)throw X;H(1,0)}}function Mm(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B){var V=L();try{tn(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B)}catch(X){if(F(V),X!==X+0)throw X;H(1,0)}}function Dm(i,n,a,l,c,m,y,v){var _=L();try{return rn(i,n,a,l,c,m,y,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function jm(i,n,a,l,c,m,y){var v=L();try{return nn(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Um(i,n,a,l,c,m,y,v,_,x,A,T,R,I){var B=L();try{an(i,n,a,l,c,m,y,v,_,x,A,T,R,I)}catch(V){if(F(B),V!==V+0)throw V;H(1,0)}}function Nm(i,n,a,l,c,m,y,v){var _=L();try{Xr(i,n,a,l,c,m,y,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function Wm(i,n,a,l,c,m,y,v,_,x,A,T){var R=L();try{on(i,n,a,l,c,m,y,v,_,x,A,T)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function Vm(i,n,a,l,c,m,y,v,_){var x=L();try{$r(i,n,a,l,c,m,y,v,_)}catch(A){if(F(x),A!==A+0)throw A;H(1,0)}}function Gm(i,n,a,l,c,m,y,v,_,x){var A=L();try{sn(i,n,a,l,c,m,y,v,_,x)}catch(T){if(F(A),T!==T+0)throw T;H(1,0)}}function Hm(i,n,a,l,c){var m=L();try{return u(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function Lm(i,n,a,l,c,m,y,v,_,x,A,T,R){var I=L();try{h(i,n,a,l,c,m,y,v,_,x,A,T,R)}catch(B){if(F(I),B!==B+0)throw B;H(1,0)}}function Fm(i,n,a,l,c,m,y,v,_,x,A,T,R,I){var B=L();try{$(i,n,a,l,c,m,y,v,_,x,A,T,R,I)}catch(V){if(F(B),V!==V+0)throw V;H(1,0)}}function qm(i,n,a,l,c,m,y,v,_,x,A){var T=L();try{k(i,n,a,l,c,m,y,v,_,x,A)}catch(R){if(F(T),R!==R+0)throw R;H(1,0)}}function Km(i,n,a,l,c,m,y,v,_,x,A,T){var R=L();try{M(i,n,a,l,c,m,y,v,_,x,A,T)}catch(I){if(F(R),I!==I+0)throw I;H(1,0)}}function Jm(i,n,a,l,c,m,y){var v=L();try{G(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Ym(i,n,a,l,c,m,y,v,_){var x=L();try{return ce(i,n,a,l,c,m,y,v,_)}catch(A){if(F(x),A!==A+0)throw A;H(1,0)}}function Zm(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V){var X=L();try{se(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)}catch(ie){if(F(X),ie!==ie+0)throw ie;H(1,0)}}function Xm(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V){var X=L();try{we(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)}catch(ie){if(F(X),ie!==ie+0)throw ie;H(1,0)}}function Qm(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st){var pt=L();try{dt(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X,ie,pe,ye,xe,Ae,We,Ke,Xe,Qe,st)}catch(bt){if(F(pt),bt!==bt+0)throw bt;H(1,0)}}function eh(i,n,a,l,c,m,y,v){var _=L();try{Ft(i,n,a,l,c,m,y,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function th(i,n,a,l,c,m,y,v,_,x,A,T,R,I){var B=L();try{return Uo(i,n,a,l,c,m,y,v,_,x,A,T,R,I)}catch(V){if(F(B),V!==V+0)throw V;H(1,0)}}function rh(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V){var X=L();try{No(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)}catch(ie){if(F(X),ie!==ie+0)throw ie;H(1,0)}}function ih(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X){var ie=L();try{Go(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V,X)}catch(pe){if(F(ie),pe!==pe+0)throw pe;H(1,0)}}function nh(i,n,a,l,c,m,y,v,_,x,A){var T=L();try{Ko(i,n,a,l,c,m,y,v,_,x,A)}catch(R){if(F(T),R!==R+0)throw R;H(1,0)}}function ah(i,n,a,l,c,m,y,v,_,x,A,T,R,I){var B=L();try{Yo(i,n,a,l,c,m,y,v,_,x,A,T,R,I)}catch(V){if(F(B),V!==V+0)throw V;H(1,0)}}function oh(i,n,a,l,c,m,y,v,_,x,A){var T=L();try{es(i,n,a,l,c,m,y,v,_,x,A)}catch(R){if(F(T),R!==R+0)throw R;H(1,0)}}function sh(i,n,a,l,c,m){var y=L();try{ts(i,n,a,l,c,m)}catch(v){if(F(y),v!==v+0)throw v;H(1,0)}}function uh(i,n,a,l,c,m,y,v,_,x,A,T,R,I){var B=L();try{xs(i,n,a,l,c,m,y,v,_,x,A,T,R,I)}catch(V){if(F(B),V!==V+0)throw V;H(1,0)}}function lh(i,n,a,l,c,m,y,v){var _=L();try{return rs(i,n,a,l,c,m,y,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function dh(i,n,a,l,c){var m=L();try{return Ts(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function ch(i,n,a,l,c,m,y,v){var _=L();try{is(i,n,a,l,c,m,y,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function ph(i,n,a,l,c,m,y,v,_){var x=L();try{return ns(i,n,a,l,c,m,y,v,_)}catch(A){if(F(x),A!==A+0)throw A;H(1,0)}}function fh(i,n,a,l,c,m,y,v,_){var x=L();try{return as(i,n,a,l,c,m,y,v,_)}catch(A){if(F(x),A!==A+0)throw A;H(1,0)}}function mh(i,n,a,l,c,m,y,v,_,x,A){var T=L();try{os(i,n,a,l,c,m,y,v,_,x,A)}catch(R){if(F(T),R!==R+0)throw R;H(1,0)}}function hh(i,n,a,l,c,m,y,v,_,x){var A=L();try{return ss(i,n,a,l,c,m,y,v,_,x)}catch(T){if(F(A),T!==T+0)throw T;H(1,0)}}function gh(i,n,a,l,c,m,y){var v=L();try{return ls(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function yh(i,n,a,l,c,m,y,v,_,x,A,T,R){var I=L();try{return ds(i,n,a,l,c,m,y,v,_,x,A,T,R)}catch(B){if(F(I),B!==B+0)throw B;H(1,0)}}function bh(i,n,a,l,c,m,y,v,_,x){var A=L();try{return cs(i,n,a,l,c,m,y,v,_,x)}catch(T){if(F(A),T!==T+0)throw T;H(1,0)}}function vh(i,n,a,l,c,m,y,v,_,x,A,T,R,I){var B=L();try{return ps(i,n,a,l,c,m,y,v,_,x,A,T,R,I)}catch(V){if(F(B),V!==V+0)throw V;H(1,0)}}function wh(i,n,a,l,c,m,y,v){var _=L();try{return fs(i,n,a,l,c,m,y,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function _h(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V){var X=L();try{return ms(i,n,a,l,c,m,y,v,_,x,A,T,R,I,B,V)}catch(ie){if(F(X),ie!==ie+0)throw ie;H(1,0)}}function $h(i,n,a,l,c,m,y,v){var _=L();try{return hs(i,n,a,l,c,m,y,v)}catch(x){if(F(_),x!==x+0)throw x;H(1,0)}}function Ch(i,n,a,l,c,m,y,v,_,x){var A=L();try{return gs(i,n,a,l,c,m,y,v,_,x)}catch(T){if(F(A),T!==T+0)throw T;H(1,0)}}function xh(i,n,a,l){var c=L();try{return ys(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Sh(i,n,a,l,c){var m=L();try{return bs(i,n,a,l,c)}catch(y){if(F(m),y!==y+0)throw y;H(1,0)}}function Ih(i,n,a,l,c,m){var y=L();try{_s(i,n,a,l,c,m)}catch(v){if(F(y),v!==v+0)throw v;H(1,0)}}function Ah(i,n,a,l,c,m,y,v,_,x,A,T,R){var I=L();try{Kn(i,n,a,l,c,m,y,v,_,x,A,T,R)}catch(B){if(F(I),B!==B+0)throw B;H(1,0)}}function Th(i,n,a,l,c,m){var y=L();try{return $s(i,n,a,l,c,m)}catch(v){if(F(y),v!==v+0)throw v;H(1,0)}}function Eh(i){var n=L();try{return Vr(i)}catch(a){if(F(n),a!==a+0)throw a;H(1,0)}}function kh(i,n,a,l,c,m,y){var v=L();try{return hr(i,n,a,l,c,m,y)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Oh(){var i=D;i=Object.assign({},i);var n=l=>()=>l()>>>0,a=l=>c=>l(c)>>>0;return i.Gd=n(i.Gd),i.Hd=a(i.Hd),i.Md=n(i.Md),i.Od=a(i.Od),i}r.stackAlloc=ci,r.stackSave=L,r.stackRestore=F,r.UTF8ToString=ot,r.stringToUTF8=(i,n,a)=>ar(i,te,n,a),r.lengthBytesUTF8=kr;var ta;ke=function i(){ta||Rs(),ta||(ke=i)};function Rs(){if(!(0<ge)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var i=r.preRun.shift();qe.unshift(i)}for(;0<qe.length;)qe.shift()(r);if(!(0<ge||ta||(ta=!0,r.calledRun=!0,W))){for(;0<Ie.length;)Ie.shift()(r);for(o(r);0<Te.length;)Te.shift()(r)}}}return Rs(),t.ready}})();typeof du=="object"&&typeof eo=="object"?eo.exports=lu:typeof define=="function"&&define.amd&&define([],()=>lu)});var pu=Qr(()=>{});var fu=Qr(()=>{});var mu={};xr(mu,{cpus:()=>Nh});var Nh,hu=ae(()=>{Nh=void 0});var bu=Qr((yu,to)=>{"use strict";var gu=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return Te.buffer!=be.buffer&&at(),be}function o(){return Te.buffer!=be.buffer&&at(),Re}function s(){return Te.buffer!=be.buffer&&at(),Oe}function p(){return Te.buffer!=be.buffer&&at(),Ve}function d(){return Te.buffer!=be.buffer&&at(),ut}function g(){return Te.buffer!=be.buffer&&at(),ne}function b(){return Te.buffer!=be.buffer&&at(),ve}function w(){return Te.buffer!=be.buffer&&at(),nt}var f=t,C,S;f.ready=new Promise((u,h)=>{C=u,S=h}),f.mountExternalData=(u,h)=>{(f.Fb||(f.Fb=new Map)).set(u,h)},f.unmountExternalData=()=>{delete f.Fb},f.jsepInit=(u,h,$,k,M,G,Z,re,ce,se,we)=>{f.uc=u,f.$b=h,f.dc=$,f.Ob=k,f.cc=M,f.eb=G,f.ec=Z,f.hc=re,f.ac=ce,f.bc=se,f.fc=we,h=(me,Ce,K)=>(...he)=>{let ze=kt,dt=Ce?.();he=me(...he);let Ft=Ce?.();return dt!==Ft&&(me=Ft,K(dt),Ce=K=null),kt!=ze?Wn():he},$=me=>async(...Ce)=>{try{if(f.Eb)throw Error("Session already started");let K=f.Eb={jc:Ce[0],errors:[]},he=await me(...Ce);if(f.Eb!==K)throw Error("Session mismatch");u.flush();let ze=K.errors;if(0<ze.length){let dt=await Promise.all(ze);if(dt=dt.filter(Ft=>Ft),0<dt.length)throw Error(dt.join(`
`))}return he}finally{f.Eb=null}},f._OrtCreateSession=h(f._OrtCreateSession,()=>f._OrtCreateSession,me=>f._OrtCreateSession=me),f._OrtRun=$(h(f._OrtRun,()=>f._OrtRun,me=>f._OrtRun=me)),f._OrtRunWithBinding=$(h(f._OrtRunWithBinding,()=>f._OrtRunWithBinding,me=>f._OrtRunWithBinding=me)),f._OrtBindInput=h(f._OrtBindInput,()=>f._OrtBindInput,me=>f._OrtBindInput=me),f.jsepRegisterBuffer=(me,Ce,K,he)=>u.registerBuffer(me,Ce,K,he),f.jsepGetBuffer=me=>u.getBuffer(me),f.jsepCreateDownloader=(me,Ce,K)=>u.createDownloader(me,Ce,K),f.jsepOnReleaseSession=me=>{u.onReleaseSession(me)},f.jsepOnRunStart=me=>u.onRunStart(me)};var O=Object.assign({},f),E="./this.program",P=(u,h)=>{throw h},j=typeof window=="object",U=typeof importScripts=="function",z=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",N=f.ENVIRONMENT_IS_PTHREAD||!1,W="";function J(u){return f.locateFile?f.locateFile(u,W):W+u}var Y,te,q;if(z){var ue=(Za(),sr(Ya)),de=(Qa(),sr(Xa));W=U?de.dirname(W)+"/":__dirname+"/",Y=(h,$)=>(h=ar(h)?new URL(h):de.normalize(h),ue.readFileSync(h,$?void 0:"utf8")),q=h=>(h=Y(h,!0),h.buffer||(h=new Uint8Array(h)),h),te=(h,$,k,M=!0)=>{h=ar(h)?new URL(h):de.normalize(h),ue.readFile(h,M?void 0:"utf8",(G,Z)=>{G?k(G):$(M?Z.buffer:Z)})},!f.thisProgram&&1<process.argv.length&&(E=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),P=(h,$)=>{throw process.exitCode=h,$},f.inspect=()=>"[Emscripten Module object]";let u;try{u=pu()}catch(h){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),h}global.Worker=u.Worker}else(j||U)&&(U?W=self.location.href:typeof document<"u"&&document.currentScript&&(W=document.currentScript.src),typeof e<"u"&&e&&(W=e),W.indexOf("blob:")!==0?W=W.substr(0,W.replace(/[?#].*/,"").lastIndexOf("/")+1):W="",z||(Y=u=>{var h=new XMLHttpRequest;return h.open("GET",u,!1),h.send(null),h.responseText},U&&(q=u=>{var h=new XMLHttpRequest;return h.open("GET",u,!1),h.responseType="arraybuffer",h.send(null),new Uint8Array(h.response)}),te=(u,h,$)=>{var k=new XMLHttpRequest;k.open("GET",u,!0),k.responseType="arraybuffer",k.onload=()=>{k.status==200||k.status==0&&k.response?h(k.response):$()},k.onerror=$,k.send(null)}));z&&typeof performance>"u"&&(global.performance=fu().performance);var Pe=console.log.bind(console),Ne=console.error.bind(console);z&&(Pe=(...u)=>ue.writeSync(1,u.join(" ")+`
`),Ne=(...u)=>ue.writeSync(2,u.join(" ")+`
`));var qe=Pe,Ie=Ne;Object.assign(f,O),O=null,typeof WebAssembly!="object"&&ot("no native wasm support detected");var Te,ge,Ue=!1,ke,be,Re,Oe,Ve,ut,ne,ve,Ee,Tt,nt;function at(){var u=Te.buffer;f.HEAP8=be=new Int8Array(u),f.HEAP16=Oe=new Int16Array(u),f.HEAPU8=Re=new Uint8Array(u),f.HEAPU16=Ve=new Uint16Array(u),f.HEAP32=ut=new Int32Array(u),f.HEAPU32=ne=new Uint32Array(u),f.HEAPF32=ve=new Float32Array(u),f.HEAPF64=nt=new Float64Array(u),f.HEAP64=Ee=new BigInt64Array(u),f.HEAPU64=Tt=new BigUint64Array(u)}var Qt=16777216;if(N)Te=f.wasmMemory;else if(f.wasmMemory)Te=f.wasmMemory;else if(Te=new WebAssembly.Memory({initial:Qt/65536,maximum:65536,shared:!0}),!(Te.buffer instanceof SharedArrayBuffer))throw Ie("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),z&&Ie("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");at(),Qt=Te.buffer.byteLength;var tt=[],rt=[],_t=[],Et=0,Lt=null,nr=null;function ai(){if(Et--,Et==0&&(Lt!==null&&(clearInterval(Lt),Lt=null),nr)){var u=nr;nr=null,u()}}function ot(u){throw u="Aborted("+u+")",Ie(u),Ue=!0,ke=1,u=new WebAssembly.RuntimeError(u+". Build with -sASSERTIONS for more info."),S(u),u}var kr=u=>u.startsWith("data:application/octet-stream;base64,"),ar=u=>u.startsWith("file://"),Rt;Rt="ort-wasm-simd-threaded.wasm",kr(Rt)||(Rt=J(Rt));function oi(u){if(q)return q(u);throw"both async and sync fetching of the wasm failed"}function vn(u){if(j||U){if(typeof fetch=="function"&&!ar(u))return fetch(u,{credentials:"same-origin"}).then(h=>{if(!h.ok)throw"failed to load wasm binary file at '"+u+"'";return h.arrayBuffer()}).catch(()=>oi(u));if(te)return new Promise((h,$)=>{te(u,k=>h(new Uint8Array(k)),$)})}return Promise.resolve().then(()=>oi(u))}function si(u,h,$){return vn(u).then(k=>WebAssembly.instantiate(k,h)).then(k=>k).then($,k=>{Ie(`failed to asynchronously prepare wasm: ${k}`),ot(k)})}function ui(u,h){var $=Rt;return typeof WebAssembly.instantiateStreaming!="function"||kr($)||ar($)||z||typeof fetch!="function"?si($,u,h):fetch($,{credentials:"same-origin"}).then(k=>WebAssembly.instantiateStreaming(k,u).then(h,function(M){return Ie(`wasm streaming compile failed: ${M}`),Ie("falling back to ArrayBuffer instantiation"),si($,u,h)}))}var Or={949148:(u,h,$,k)=>{if(typeof f>"u"||!f.Fb)return 1;if(u=lt(u>>>0),u.startsWith("./")&&(u=u.substring(2)),u=f.Fb.get(u),!u)return 2;if(h>>>=0,$>>>=0,k>>>=0,h+$>u.byteLength)return 3;try{return o().set(u.subarray(h,h+$),k>>>0),0}catch{return 4}},949649:()=>{f.ac()},949680:()=>{f.bc()},949709:()=>{f.fc()},949734:u=>f.$b(u),949767:u=>f.dc(u),949799:(u,h,$)=>{f.Ob(u,h,$,!0)},949838:(u,h,$)=>{f.Ob(u,h,$)},949871:u=>{f.eb("Abs",u,void 0)},949922:u=>{f.eb("Neg",u,void 0)},949973:u=>{f.eb("Floor",u,void 0)},950026:u=>{f.eb("Ceil",u,void 0)},950078:u=>{f.eb("Reciprocal",u,void 0)},950136:u=>{f.eb("Sqrt",u,void 0)},950188:u=>{f.eb("Exp",u,void 0)},950239:u=>{f.eb("Erf",u,void 0)},950290:u=>{f.eb("Sigmoid",u,void 0)},950345:(u,h,$)=>{f.eb("HardSigmoid",u,{alpha:h,beta:$})},950424:u=>{f.eb("Log",u,void 0)},950475:u=>{f.eb("Sin",u,void 0)},950526:u=>{f.eb("Cos",u,void 0)},950577:u=>{f.eb("Tan",u,void 0)},950628:u=>{f.eb("Asin",u,void 0)},950680:u=>{f.eb("Acos",u,void 0)},950732:u=>{f.eb("Atan",u,void 0)},950784:u=>{f.eb("Sinh",u,void 0)},950836:u=>{f.eb("Cosh",u,void 0)},950888:u=>{f.eb("Asinh",u,void 0)},950941:u=>{f.eb("Acosh",u,void 0)},950994:u=>{f.eb("Atanh",u,void 0)},951047:u=>{f.eb("Tanh",u,void 0)},951099:u=>{f.eb("Not",u,void 0)},951150:(u,h,$)=>{f.eb("Clip",u,{min:h,max:$})},951219:u=>{f.eb("Clip",u,void 0)},951271:(u,h)=>{f.eb("Elu",u,{alpha:h})},951329:u=>{f.eb("Relu",u,void 0)},951381:(u,h)=>{f.eb("LeakyRelu",u,{alpha:h})},951445:(u,h)=>{f.eb("ThresholdedRelu",u,{alpha:h})},951515:(u,h)=>{f.eb("Cast",u,{to:h})},951573:u=>{f.eb("Add",u,void 0)},951624:u=>{f.eb("Sub",u,void 0)},951675:u=>{f.eb("Mul",u,void 0)},951726:u=>{f.eb("Div",u,void 0)},951777:u=>{f.eb("Pow",u,void 0)},951828:u=>{f.eb("Equal",u,void 0)},951881:u=>{f.eb("Greater",u,void 0)},951936:u=>{f.eb("GreaterOrEqual",u,void 0)},951998:u=>{f.eb("Less",u,void 0)},952050:u=>{f.eb("LessOrEqual",u,void 0)},952109:(u,h,$,k,M)=>{f.eb("ReduceMean",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:k?Array.from(d().subarray(k>>>0,M>>>0)):[]})},952268:(u,h,$,k,M)=>{f.eb("ReduceMax",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:k?Array.from(d().subarray(k>>>0,M>>>0)):[]})},952426:(u,h,$,k,M)=>{f.eb("ReduceMin",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:k?Array.from(d().subarray(k>>>0,M>>>0)):[]})},952584:(u,h,$,k,M)=>{f.eb("ReduceProd",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:k?Array.from(d().subarray(k>>>0,M>>>0)):[]})},952743:(u,h,$,k,M)=>{f.eb("ReduceSum",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:k?Array.from(d().subarray(k>>>0,M>>>0)):[]})},952901:(u,h,$,k,M)=>{f.eb("ReduceL1",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:k?Array.from(d().subarray(k>>>0,M>>>0)):[]})},953058:(u,h,$,k,M)=>{f.eb("ReduceL2",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:k?Array.from(d().subarray(k>>>0,M>>>0)):[]})},953215:(u,h,$,k,M)=>{f.eb("ReduceLogSum",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:k?Array.from(d().subarray(k>>>0,M>>>0)):[]})},953376:(u,h,$,k,M)=>{f.eb("ReduceSumSquare",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:k?Array.from(d().subarray(k>>>0,M>>>0)):[]})},953540:(u,h,$,k,M)=>{f.eb("ReduceLogSumExp",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:k?Array.from(d().subarray(k>>>0,M>>>0)):[]})},953704:u=>{f.eb("Where",u,void 0)},953757:(u,h,$)=>{f.eb("Transpose",u,{perm:h?Array.from(d().subarray(h>>>0,$>>>0)):[]})},953865:(u,h,$,k,M,G,Z,re,ce,se,we,me,Ce,K,he)=>{f.eb("ConvTranspose",u,{format:ce?"NHWC":"NCHW",autoPad:h,dilations:[$],group:k,kernel_shape:[M],pads:[G,Z],strides:[re],wIsConst:()=>!!r()[se>>>0],outputPadding:we?Array.from(d().subarray(we>>>0,me>>>0)):[],outputShape:Ce?Array.from(d().subarray(Ce>>>0,K>>>0)):[],activation:lt(he)})},954267:(u,h,$,k,M,G,Z,re,ce,se,we,me,Ce,K)=>{f.eb("ConvTranspose",u,{format:re?"NHWC":"NCHW",autoPad:h,dilations:Array.from(d().subarray($>>>0,($>>>0)+2>>>0)),group:k,kernelShape:Array.from(d().subarray(M>>>0,(M>>>0)+2>>>0)),pads:Array.from(d().subarray(G>>>0,(G>>>0)+4>>>0)),strides:Array.from(d().subarray(Z>>>0,(Z>>>0)+2>>>0)),wIsConst:()=>!!r()[ce>>>0],outputPadding:se?Array.from(d().subarray(se>>>0,we>>>0)):[],outputShape:me?Array.from(d().subarray(me>>>0,Ce>>>0)):[],activation:lt(K)})},954832:(u,h,$,k,M,G,Z,re,ce,se,we,me,Ce,K,he)=>{f.eb("ConvTranspose",u,{format:ce?"NHWC":"NCHW",autoPad:h,dilations:[$],group:k,kernel_shape:[M],pads:[G,Z],strides:[re],wIsConst:()=>!!r()[se>>>0],outputPadding:we?Array.from(d().subarray(we>>>0,me>>>0)):[],outputShape:Ce?Array.from(d().subarray(Ce>>>0,K>>>0)):[],activation:lt(he)})},955234:(u,h,$,k,M,G,Z,re,ce,se,we,me,Ce,K)=>{f.eb("ConvTranspose",u,{format:re?"NHWC":"NCHW",autoPad:h,dilations:Array.from(d().subarray($>>>0,($>>>0)+2>>>0)),group:k,kernelShape:Array.from(d().subarray(M>>>0,(M>>>0)+2>>>0)),pads:Array.from(d().subarray(G>>>0,(G>>>0)+4>>>0)),strides:Array.from(d().subarray(Z>>>0,(Z>>>0)+2>>>0)),wIsConst:()=>!!r()[ce>>>0],outputPadding:se?Array.from(d().subarray(se>>>0,we>>>0)):[],outputShape:me?Array.from(d().subarray(me>>>0,Ce>>>0)):[],activation:lt(K)})},955799:(u,h)=>{f.eb("GlobalAveragePool",u,{format:h?"NHWC":"NCHW"})},955890:(u,h,$,k,M,G,Z,re,ce,se,we,me,Ce,K,he,ze)=>{f.eb("AveragePool",u,{format:ze?"NHWC":"NCHW",auto_pad:h,ceil_mode:$,count_include_pad:k,storage_order:M,dilations:[G,Z],kernel_shape:[re,ce],pads:[se,we,me,Ce],strides:[K,he]})},956174:(u,h)=>{f.eb("GlobalAveragePool",u,{format:h?"NHWC":"NCHW"})},956265:(u,h,$,k,M,G,Z,re,ce,se,we,me,Ce,K,he,ze)=>{f.eb("AveragePool",u,{format:ze?"NHWC":"NCHW",auto_pad:h,ceil_mode:$,count_include_pad:k,storage_order:M,dilations:[G,Z],kernel_shape:[re,ce],pads:[se,we,me,Ce],strides:[K,he]})},956549:(u,h)=>{f.eb("GlobalMaxPool",u,{format:h?"NHWC":"NCHW"})},956636:(u,h,$,k,M,G,Z,re,ce,se,we,me,Ce,K,he,ze)=>{f.eb("MaxPool",u,{format:ze?"NHWC":"NCHW",auto_pad:h,ceil_mode:$,count_include_pad:k,storage_order:M,dilations:[G,Z],kernel_shape:[re,ce],pads:[se,we,me,Ce],strides:[K,he]})},956916:(u,h)=>{f.eb("GlobalMaxPool",u,{format:h?"NHWC":"NCHW"})},957003:(u,h,$,k,M,G,Z,re,ce,se,we,me,Ce,K,he,ze)=>{f.eb("MaxPool",u,{format:ze?"NHWC":"NCHW",auto_pad:h,ceil_mode:$,count_include_pad:k,storage_order:M,dilations:[G,Z],kernel_shape:[re,ce],pads:[se,we,me,Ce],strides:[K,he]})},957283:(u,h,$,k,M)=>{f.eb("Gemm",u,{alpha:h,beta:$,transA:k,transB:M})},957387:u=>{f.eb("MatMul",u,void 0)},957441:(u,h,$,k)=>{f.eb("ArgMax",u,{keepDims:!!h,selectLastIndex:!!$,axis:k})},957549:(u,h,$,k)=>{f.eb("ArgMin",u,{keepDims:!!h,selectLastIndex:!!$,axis:k})},957657:(u,h)=>{f.eb("Softmax",u,{axis:h})},957720:(u,h)=>{f.eb("Concat",u,{axis:h})},957780:(u,h,$,k,M)=>{f.eb("Split",u,{axis:h,numOutputs:$,splitSizes:k?Array.from(d().subarray(k>>>0,M>>>0)):[]})},957920:u=>{f.eb("Expand",u,void 0)},957974:(u,h)=>{f.eb("Gather",u,{axis:Number(h)})},958045:(u,h)=>{f.eb("GatherElements",u,{axis:Number(h)})},958124:(u,h,$,k,M,G,Z,re,ce,se,we)=>{f.eb("Resize",u,{antialias:h,axes:$?Array.from(d().subarray($>>>0,k>>>0)):[],coordinateTransformMode:lt(M),cubicCoeffA:G,excludeOutside:Z,extrapolationValue:re,keepAspectRatioPolicy:lt(ce),mode:lt(se),nearestMode:lt(we)})},958470:(u,h,$,k,M,G,Z)=>{f.eb("Slice",u,{starts:h?Array.from(d().subarray(h>>>0,$>>>0)):[],ends:k?Array.from(d().subarray(k>>>0,M>>>0)):[],axes:G?Array.from(d().subarray(G>>>0,Z>>>0)):[]})},958686:u=>{f.eb("Tile",u,void 0)},958738:(u,h,$)=>{f.eb("LayerNormalization",u,{axis:Number(h),epsilon:Number($)})},958845:(u,h,$)=>{f.eb("InstanceNormalization",u,{epsilon:h,format:$?"NHWC":"NCHW"})},958959:(u,h,$)=>{f.eb("InstanceNormalization",u,{epsilon:h,format:$?"NHWC":"NCHW"})},959073:u=>{f.eb("Range",u,void 0)},959126:(u,h)=>{f.eb("Einsum",u,{equation:lt(h)})},959207:(u,h,$,k,M)=>{f.eb("Pad",u,{mode:h,value:$,pads:k?Array.from(d().subarray(k>>>0,M>>>0)):[]})},959334:(u,h,$,k,M,G)=>{f.eb("BatchNormalization",u,{epsilon:h,momentum:$,spatial:!!M,trainingMode:!!k,format:G?"NHWC":"NCHW"})},959503:(u,h,$,k,M,G)=>{f.eb("BatchNormalization",u,{epsilon:h,momentum:$,spatial:!!M,trainingMode:!!k,format:G?"NHWC":"NCHW"})},959672:(u,h,$)=>{f.eb("CumSum",u,{exclusive:Number(h),reverse:Number($)})},959769:(u,h,$,k,M,G,Z,re,ce)=>{f.eb("Attention",u,{numHeads:h,isUnidirectional:$,maskFilterValue:k,scale:M,doRotary:G,qkvHiddenSizes:Z?Array.from(d().subarray(Number(re)>>>0,Number(re)+Z>>>0)):[],pastPresentShareBuffer:!!ce})},960041:u=>{f.eb("BiasAdd",u,void 0)},960096:u=>{f.eb("BiasSplitGelu",u,void 0)},960157:u=>{f.eb("FastGelu",u,void 0)},960213:(u,h,$,k,M,G,Z,re,ce,se,we,me,Ce)=>{f.eb("Conv",u,{format:ce?"NHWC":"NCHW",auto_pad:h,dilations:[$],group:k,kernel_shape:[M],pads:G?Array.from(d().subarray(G>>>0,Z>>>0)):[],strides:[re],w_is_const:()=>!!r()[se>>>0],activation:lt(we),activation_params:me?Array.from(b().subarray(me>>>0,Ce>>>0)):[]})},960583:(u,h,$,k,M,G,Z,re,ce,se,we,me,Ce,K,he,ze)=>{f.eb("Conv",u,{format:me?"NHWC":"NCHW",auto_pad:h,dilations:[$,k],group:M,kernel_shape:[G,Z],pads:re?Array.from(d().subarray(re>>>0,ce>>>0)):[],strides:[se,we],w_is_const:()=>!!r()[Ce>>>0],activation:lt(K),activation_params:he?Array.from(b().subarray(he>>>0,ze>>>0)):[]})},960974:u=>{f.eb("Gelu",u,void 0)},961026:(u,h,$,k,M,G)=>{f.eb("MatMulNBits",u,{k:h,n:$,accuracyLevel:k,bits:M,blockSize:G})},961153:(u,h,$,k,M,G)=>{f.eb("MultiHeadAttention",u,{numHeads:h,isUnidirectional:$,maskFilterValue:k,scale:M,doRotary:G})},961312:(u,h)=>{f.eb("SkipLayerNormalization",u,{epsilon:h})},961393:u=>{f.ec(u)},961427:(u,h)=>f.hc(u,h,f.Eb.jc,f.Eb.errors)};function pr(u){this.name="ExitStatus",this.message=`Program terminated with exit(${u})`,this.status=u}var Pr=u=>{u.terminate(),u.onmessage=()=>{}},Rr=u=>{_e.yb.length==0&&(fr(),_e.Pb(_e.yb[0]));var h=_e.yb.pop();if(!h)return 6;_e.zb.push(h),_e.pb[u.xb]=h,h.xb=u.xb;var $={cmd:"run",start_routine:u.kc,arg:u.Vb,pthread_ptr:u.xb};return z&&h.unref(),h.postMessage($,u.qc),0},er=0,li=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,di=(u,h,$)=>{h>>>=0;var k=h+$;for($=h;u[$]&&!($>=k);)++$;if(16<$-h&&u.buffer&&li)return li.decode(u.buffer instanceof SharedArrayBuffer?u.slice(h,$):u.subarray(h,$));for(k="";h<$;){var M=u[h++];if(M&128){var G=u[h++]&63;if((M&224)==192)k+=String.fromCharCode((M&31)<<6|G);else{var Z=u[h++]&63;M=(M&240)==224?(M&15)<<12|G<<6|Z:(M&7)<<18|G<<12|Z<<6|u[h++]&63,65536>M?k+=String.fromCharCode(M):(M-=65536,k+=String.fromCharCode(55296|M>>10,56320|M&1023))}}else k+=String.fromCharCode(M)}return k},lt=(u,h)=>(u>>>=0)?di(o(),u,h):"",wn=u=>{var h=Zr();return u=u(),_r(h),u};function Fe(u,h){var $=arguments.length-2,k=arguments;return wn(()=>{for(var M=2*$,G=Xr(8*M),Z=G>>>3,re=0;re<$;re++){var ce=k[2+re];typeof ce=="bigint"?(Ee[Z+2*re]=1n,Ee[Z+2*re+1]=ce):(Ee[Z+2*re]=0n,w()[Z+2*re+1>>>0]=ce)}return Xi(u,M,G,h)})}function _n(u){if(N)return Fe(0,1,u);ke=u,0<er||(_e.lc(),f.onExit?.(u),Ue=!0),P(u,new pr(u))}var zt=u=>{if(ke=u,N)throw Br(u),"unwind";_n(u)},$t=u=>{u instanceof pr||u=="unwind"||P(1,u)};function $n(){for(var u=f.numThreads;u--;)fr();tt.unshift(()=>{Et++,Cn(()=>ai())})}function fr(){var u=J("ort-wasm-simd-threaded.worker.js");u=new Worker(u),_e.yb.push(u)}function Cn(u){N?u():Promise.all(_e.yb.map(_e.Pb)).then(u)}var _e={yb:[],zb:[],Ub:[],pb:{},Ib(){N?(_e.receiveObjectTransfer=_e.ic,_e.threadInitTLS=_e.Tb,_e.setExitStatus=_e.Sb):$n()},Sb:u=>ke=u,vc:["$terminateWorker"],lc:()=>{for(var u of _e.zb)Pr(u);for(u of _e.yb)Pr(u);_e.yb=[],_e.zb=[],_e.pb=[]},Rb:u=>{var h=u.xb;delete _e.pb[h],_e.yb.push(u),_e.zb.splice(_e.zb.indexOf(u),1),u.xb=0,Jr(h)},ic(){},Tb(){_e.Ub.forEach(u=>u())},Pb:u=>new Promise(h=>{u.onmessage=G=>{G=G.data;var Z=G.cmd;if(G.targetThread&&G.targetThread!=wr()){var re=_e.pb[G.targetThread];re?re.postMessage(G,G.transferList):Ie(`Internal error! Worker sent a message "${Z}" to target pthread ${G.targetThread}, but that thread no longer exists!`)}else Z==="checkMailbox"?hr():Z==="spawnThread"?Rr(G):Z==="cleanupThread"?_e.Rb(_e.pb[G.thread]):Z==="killThread"?(G=G.thread,Z=_e.pb[G],delete _e.pb[G],Pr(Z),Jr(G),_e.zb.splice(_e.zb.indexOf(Z),1),Z.xb=0):Z==="cancelThread"?_e.pb[G.thread].postMessage({cmd:"cancel"}):Z==="loaded"?(u.loaded=!0,z&&!u.xb&&u.unref(),h(u)):Z==="alert"?alert(`Thread ${G.threadId}: ${G.text}`):G.target==="setimmediate"?u.postMessage(G):Z==="callHandler"?f[G.handler](...G.args):Z&&Ie(`worker sent an unknown command ${Z}`)},u.onerror=G=>{throw Ie(`worker sent an error! ${G.filename}:${G.lineno}: ${G.message}`),G},z&&(u.on("message",G=>u.onmessage({data:G})),u.on("error",G=>u.onerror(G)));var $=[],k=["onExit"],M;for(M of k)f.hasOwnProperty(M)&&$.push(M);u.postMessage({cmd:"load",handlers:$,urlOrBlob:f.mainScriptUrlOrBlob||e,wasmMemory:Te,wasmModule:ge})})};f.PThread=_e;var zr=u=>{for(;0<u.length;)u.shift()(f)};f.establishStackSpace=()=>{var u=wr(),h=g()[u+52>>>2>>>0];u=g()[u+56>>>2>>>0],en(h,h-u),_r(h)};function Br(u){if(N)return Fe(1,0,u);zt(u)}f.invokeEntryPoint=(u,h)=>{u=tn.apply(null,[u,h]),0<er?_e.Sb(u):Yr(u)};function Va(u){this.Db=u-24,this.sc=function(h){g()[this.Db+4>>>2>>>0]=h},this.Mb=function(h){g()[this.Db+8>>>2>>>0]=h},this.Ib=function(h,$){this.Kb(),this.sc(h),this.Mb($)},this.Kb=function(){g()[this.Db+16>>>2>>>0]=0}}var xn=0,Ga=0;function Sn(u,h,$,k){return N?Fe(2,1,u,h,$,k):In(u,h,$,k)}function In(u,h,$,k){if(u>>>=0,h>>>=0,$>>>=0,k>>>=0,typeof SharedArrayBuffer>"u")return Ie("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var M=[];return N&&M.length===0?Sn(u,h,$,k):(u={kc:$,xb:u,Vb:k,qc:M},N?(u.tc="spawnThread",postMessage(u,M),0):Rr(u))}function An(u,h,$){return N?Fe(3,1,u,h,$):0}function D(u,h){if(N)return Fe(4,1,u,h)}var mr=u=>{for(var h=0,$=0;$<u.length;++$){var k=u.charCodeAt($);127>=k?h++:2047>=k?h+=2:55296<=k&&57343>=k?(h+=4,++$):h+=3}return h},Mr=(u,h,$,k)=>{if($>>>=0,!(0<k))return 0;var M=$;k=$+k-1;for(var G=0;G<u.length;++G){var Z=u.charCodeAt(G);if(55296<=Z&&57343>=Z){var re=u.charCodeAt(++G);Z=65536+((Z&1023)<<10)|re&1023}if(127>=Z){if($>=k)break;h[$++>>>0]=Z}else{if(2047>=Z){if($+1>=k)break;h[$++>>>0]=192|Z>>6}else{if(65535>=Z){if($+2>=k)break;h[$++>>>0]=224|Z>>12}else{if($+3>=k)break;h[$++>>>0]=240|Z>>18,h[$++>>>0]=128|Z>>12&63}h[$++>>>0]=128|Z>>6&63}h[$++>>>0]=128|Z&63}}return h[$>>>0]=0,$-M},Dr=(u,h,$)=>Mr(u,o(),h,$);function H(u,h){if(N)return Fe(5,1,u,h)}function tr(u,h,$){if(N)return Fe(6,1,u,h,$)}function L(u,h,$){return N?Fe(7,1,u,h,$):0}function F(u,h){if(N)return Fe(8,1,u,h)}function ci(u,h,$){if(N)return Fe(9,1,u,h,$)}function pi(u,h,$,k){if(N)return Fe(10,1,u,h,$,k)}function fi(u,h,$,k){if(N)return Fe(11,1,u,h,$,k)}function mi(u,h,$,k){if(N)return Fe(12,1,u,h,$,k)}function hi(u){if(N)return Fe(13,1,u)}function gi(u,h){if(N)return Fe(14,1,u,h)}function yi(u,h,$){if(N)return Fe(15,1,u,h,$)}var bi=u=>{if(u===null)return"null";var h=typeof u;return h==="object"||h==="array"||h==="function"?u.toString():""+u},vi,Ct=u=>{for(var h="";o()[u>>>0];)h+=vi[o()[u++>>>0]];return h},jr={},Ur={},Tn={},Ut;function En(u,h,$={}){var k=h.name;if(!u)throw new Ut(`type "${k}" must have a positive integer typeid pointer`);if(Ur.hasOwnProperty(u)){if($.Yb)return;throw new Ut(`Cannot register type '${k}' twice`)}Ur[u]=h,delete Tn[u],jr.hasOwnProperty(u)&&(h=jr[u],delete jr[u],h.forEach(M=>M()))}function Bt(u,h,$={}){if(!("argPackAdvance"in h))throw new TypeError("registerType registeredInstance requires argPackAdvance");En(u,h,$)}var wi=(u,h,$)=>{switch(h){case 1:return $?k=>r()[k>>>0>>>0]:k=>o()[k>>>0>>>0];case 2:return $?k=>s()[k>>>1>>>0]:k=>p()[k>>>1>>>0];case 4:return $?k=>d()[k>>>2>>>0]:k=>g()[k>>>2>>>0];case 8:return $?k=>Ee[k>>>3]:k=>Tt[k>>>3];default:throw new TypeError(`invalid integer width (${h}): ${u}`)}};function _i(){this.wb=[void 0],this.Nb=[]}var yt=new _i;function Nr(u){u>>>=0,u>=yt.Db&&--yt.get(u).Qb===0&&yt.Mb(u)}var ct=u=>{if(!u)throw new Ut("Cannot use deleted val. handle = "+u);return yt.get(u).value},xt=u=>{switch(u){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return yt.Kb({Qb:1,value:u})}};function $i(u){return this.fromWireType(d()[u>>>2>>>0])}var kn=(u,h)=>{switch(h){case 4:return function($){return this.fromWireType(b()[$>>>2>>>0])};case 8:return function($){return this.fromWireType(w()[$>>>3>>>0])};default:throw new TypeError(`invalid float width (${h}): ${u}`)}};function On(u){return this.fromWireType(g()[u>>>2>>>0])}var Ci=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Pn=(u,h)=>{for(var $=u>>1,k=$+h/2;!($>=k)&&p()[$>>>0];)++$;if($<<=1,32<$-u&&Ci)return Ci.decode(o().slice(u,$));for($="",k=0;!(k>=h/2);++k){var M=s()[u+2*k>>>1>>>0];if(M==0)break;$+=String.fromCharCode(M)}return $},Rn=(u,h,$)=>{if($??=2147483647,2>$)return 0;$-=2;var k=h;$=$<2*u.length?$/2:u.length;for(var M=0;M<$;++M){var G=u.charCodeAt(M);s()[h>>>1>>>0]=G,h+=2}return s()[h>>>1>>>0]=0,h-k},zn=u=>2*u.length,Bn=(u,h)=>{for(var $=0,k="";!($>=h/4);){var M=d()[u+4*$>>>2>>>0];if(M==0)break;++$,65536<=M?(M-=65536,k+=String.fromCharCode(55296|M>>10,56320|M&1023)):k+=String.fromCharCode(M)}return k},Mn=(u,h,$)=>{if(h>>>=0,$??=2147483647,4>$)return 0;var k=h;$=k+$-4;for(var M=0;M<u.length;++M){var G=u.charCodeAt(M);if(55296<=G&&57343>=G){var Z=u.charCodeAt(++M);G=65536+((G&1023)<<10)|Z&1023}if(d()[h>>>2>>>0]=G,h+=4,h+4>$)break}return d()[h>>>2>>>0]=0,h-k},Dn=u=>{for(var h=0,$=0;$<u.length;++$){var k=u.charCodeAt($);55296<=k&&57343>=k&&++$,h+=4}return h},xi=()=>{if(!(0<er))try{N?Yr(ke):zt(ke)}catch(u){$t(u)}};function Wr(u){u>>>=0,typeof Atomics.rc=="function"&&(Atomics.rc(d(),u>>>2,u).value.then(hr),u+=128,Atomics.store(d(),u>>>2,1))}f.__emscripten_thread_mailbox_await=Wr;var hr=()=>{var u=wr();if(u&&(Wr(u),!Ue))try{Qi(),xi()}catch(h){$t(h)}};f.checkMailbox=hr;var Vr=[],Gr=(u,h)=>{var $=Ur[u];if($===void 0)throw u=Yi(u),$=Ct(u),Ot(u),new Ut(h+" has unknown type "+$);return $},Si=(u,h,$)=>{var k=[];return u=u.toWireType(k,$),k.length&&(g()[h>>>2>>>0]=xt(k)),u},gr=u=>{try{u()}catch(h){ot(h)}};function jn(){var u=fe,h={};for(let[$,k]of Object.entries(u))h[$]=typeof k=="function"?function(){yr.push($);try{return k.apply(null,arguments)}finally{Ue||(yr.pop(),kt&&Nt===1&&yr.length===0&&(Nt=0,er+=1,gr(nn),typeof Fibers<"u"&&Fibers.xc()))}}:k;return h}var Nt=0,kt=null,Ii=0,yr=[],Ai={},Ti={},Un=0,Hr=null,Nn=[];function Wn(){return new Promise((u,h)=>{Hr={resolve:u,reject:h}})}function Vn(){var u=or(65548),h=u+12;g()[u>>>2>>>0]=h,g()[u+4>>>2>>>0]=h+65536,h=yr[0];var $=Ai[h];return $===void 0&&($=Un++,Ai[h]=$,Ti[$]=h),h=$,d()[u+8>>>2>>>0]=h,u}function Gn(){var u=d()[kt+8>>>2>>>0];return u=fe[Ti[u]],--er,u()}function Hn(u){if(!Ue){if(Nt===0){var h=!1,$=!1;u((k=0)=>{if(!Ue&&(Ii=k,h=!0,$)){Nt=2,gr(()=>an(kt)),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.resume(),k=!1;try{var M=Gn()}catch(re){M=re,k=!0}var G=!1;if(!kt){var Z=Hr;Z&&(Hr=null,(k?Z.reject:Z.resolve)(M),G=!0)}if(k&&!G)throw M}}),$=!0,h||(Nt=1,kt=Vn(),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.pause(),gr(()=>rn(kt)))}else Nt===2?(Nt=0,gr(on),Ot(kt),kt=null,Nn.forEach(k=>{if(!Ue)try{k(),xi()}catch(M){$t(M)}})):ot(`invalid state: ${Nt}`);return Ii}}function Ei(u){return Hn(h=>{u().then(h)})}var br=[],Ln={},Lr=u=>{var h=Ln[u];return h===void 0?Ct(u):h},ki=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Fn=u=>{var h=br.length;return br.push(u),h},qn=(u,h)=>{for(var $=Array(u),k=0;k<u;++k)$[k]=Gr(g()[h+4*k>>>2>>>0],"parameter "+k);return $},Oi=(u,h)=>Object.defineProperty(h,"name",{value:u});function Kn(u){var h=Function;if(!(h instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof h} which is not a function`);var $=Oi(h.name||"unknownFunctionName",function(){});return $.prototype=h.prototype,$=new $,u=h.apply($,u),u instanceof Object?u:$}var rr=u=>u%4===0&&(u%100!==0||u%400===0),Pi=[0,31,60,91,121,152,182,213,244,274,305,335],Ri=[0,31,59,90,120,151,181,212,243,273,304,334];function zi(u,h,$,k,M,G,Z){return N?Fe(16,1,u,h,$,k,M,G,Z):-52}function Bi(u,h,$,k,M,G){if(N)return Fe(17,1,u,h,$,k,M,G)}var Mi=u=>{var h=mr(u)+1,$=or(h);return $&&Dr(u,$,h),$},Fr=[],Di=(u,h)=>{Fr.length=0;for(var $;$=o()[u++>>>0];){var k=$!=105;k&=$!=112,h+=k&&h%8?4:0,Fr.push($==112?g()[h>>>2>>>0]:$==106?Ee[h>>>3]:$==105?d()[h>>>2>>>0]:w()[h>>>3>>>0]),h+=k?8:4}return Fr},qr={},ji=()=>{if(!Kr){var u={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:E||"./this.program"},h;for(h in qr)qr[h]===void 0?delete u[h]:u[h]=qr[h];var $=[];for(h in u)$.push(`${h}=${u[h]}`);Kr=$}return Kr},Kr;function Ui(u,h){if(N)return Fe(18,1,u,h);u>>>=0,h>>>=0;var $=0;return ji().forEach((k,M)=>{var G=h+$;for(M=g()[u+4*M>>>2>>>0]=G,G=0;G<k.length;++G)r()[M++>>>0>>>0]=k.charCodeAt(G);r()[M>>>0>>>0]=0,$+=k.length+1}),0}function Ni(u,h){if(N)return Fe(19,1,u,h);u>>>=0,h>>>=0;var $=ji();g()[u>>>2>>>0]=$.length;var k=0;return $.forEach(M=>k+=M.length+1),g()[h>>>2>>>0]=k,0}function Wi(u){return N?Fe(20,1,u):52}function Vi(u,h,$,k){return N?Fe(21,1,u,h,$,k):52}function Gi(u,h,$,k){return N?Fe(22,1,u,h,$,k):70}var Jn=[null,[],[]];function Hi(u,h,$,k){if(N)return Fe(23,1,u,h,$,k);h>>>=0,$>>>=0,k>>>=0;for(var M=0,G=0;G<$;G++){var Z=g()[h>>>2>>>0],re=g()[h+4>>>2>>>0];h+=8;for(var ce=0;ce<re;ce++){var se=o()[Z+ce>>>0],we=Jn[u];se===0||se===10?((u===1?qe:Ie)(di(we,0)),we.length=0):we.push(se)}M+=re}return g()[k>>>2>>>0]=M,0}var Li=[31,29,31,30,31,30,31,31,30,31,30,31],Fi=[31,28,31,30,31,30,31,31,30,31,30,31];function Yn(u){var h=Array(mr(u)+1);return Mr(u,h,0,h.length),h}var Zn=(u,h)=>{r().set(u,h>>>0)};function qi(u,h,$,k){function M(K,he,ze){for(K=typeof K=="number"?K.toString():K||"";K.length<he;)K=ze[0]+K;return K}function G(K,he){return M(K,he,"0")}function Z(K,he){function ze(Ft){return 0>Ft?-1:0<Ft?1:0}var dt;return(dt=ze(K.getFullYear()-he.getFullYear()))===0&&(dt=ze(K.getMonth()-he.getMonth()))===0&&(dt=ze(K.getDate()-he.getDate())),dt}function re(K){switch(K.getDay()){case 0:return new Date(K.getFullYear()-1,11,29);case 1:return K;case 2:return new Date(K.getFullYear(),0,3);case 3:return new Date(K.getFullYear(),0,2);case 4:return new Date(K.getFullYear(),0,1);case 5:return new Date(K.getFullYear()-1,11,31);case 6:return new Date(K.getFullYear()-1,11,30)}}function ce(K){var he=K.Ab;for(K=new Date(new Date(K.Bb+1900,0,1).getTime());0<he;){var ze=K.getMonth(),dt=(rr(K.getFullYear())?Li:Fi)[ze];if(he>dt-K.getDate())he-=dt-K.getDate()+1,K.setDate(1),11>ze?K.setMonth(ze+1):(K.setMonth(0),K.setFullYear(K.getFullYear()+1));else{K.setDate(K.getDate()+he);break}}return ze=new Date(K.getFullYear()+1,0,4),he=re(new Date(K.getFullYear(),0,4)),ze=re(ze),0>=Z(he,K)?0>=Z(ze,K)?K.getFullYear()+1:K.getFullYear():K.getFullYear()-1}u>>>=0,h>>>=0,$>>>=0,k>>>=0;var se=g()[k+40>>>2>>>0];k={oc:d()[k>>>2>>>0],nc:d()[k+4>>>2>>>0],Gb:d()[k+8>>>2>>>0],Lb:d()[k+12>>>2>>>0],Hb:d()[k+16>>>2>>>0],Bb:d()[k+20>>>2>>>0],vb:d()[k+24>>>2>>>0],Ab:d()[k+28>>>2>>>0],wc:d()[k+32>>>2>>>0],mc:d()[k+36>>>2>>>0],pc:se?lt(se):""},$=lt($),se={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var we in se)$=$.replace(new RegExp(we,"g"),se[we]);var me="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ce="January February March April May June July August September October November December".split(" ");se={"%a":K=>me[K.vb].substring(0,3),"%A":K=>me[K.vb],"%b":K=>Ce[K.Hb].substring(0,3),"%B":K=>Ce[K.Hb],"%C":K=>G((K.Bb+1900)/100|0,2),"%d":K=>G(K.Lb,2),"%e":K=>M(K.Lb,2," "),"%g":K=>ce(K).toString().substring(2),"%G":K=>ce(K),"%H":K=>G(K.Gb,2),"%I":K=>(K=K.Gb,K==0?K=12:12<K&&(K-=12),G(K,2)),"%j":K=>{for(var he=0,ze=0;ze<=K.Hb-1;he+=(rr(K.Bb+1900)?Li:Fi)[ze++]);return G(K.Lb+he,3)},"%m":K=>G(K.Hb+1,2),"%M":K=>G(K.nc,2),"%n":()=>`
`,"%p":K=>0<=K.Gb&&12>K.Gb?"AM":"PM","%S":K=>G(K.oc,2),"%t":()=>"	","%u":K=>K.vb||7,"%U":K=>G(Math.floor((K.Ab+7-K.vb)/7),2),"%V":K=>{var he=Math.floor((K.Ab+7-(K.vb+6)%7)/7);if(2>=(K.vb+371-K.Ab-2)%7&&he++,he)he==53&&(ze=(K.vb+371-K.Ab)%7,ze==4||ze==3&&rr(K.Bb)||(he=1));else{he=52;var ze=(K.vb+7-K.Ab-1)%7;(ze==4||ze==5&&rr(K.Bb%400-1))&&he++}return G(he,2)},"%w":K=>K.vb,"%W":K=>G(Math.floor((K.Ab+7-(K.vb+6)%7)/7),2),"%y":K=>(K.Bb+1900).toString().substring(2),"%Y":K=>K.Bb+1900,"%z":K=>{K=K.mc;var he=0<=K;return K=Math.abs(K)/60,(he?"+":"-")+("0000"+(K/60*100+K%60)).slice(-4)},"%Z":K=>K.pc,"%%":()=>"%"},$=$.replace(/%%/g,"\0\0");for(we in se)$.includes(we)&&($=$.replace(new RegExp(we,"g"),se[we](k)));return $=$.replace(/\0\0/g,"%"),we=Yn($),we.length>h?0:(Zn(we,u),we.length-1)}_e.Ib();for(var Ki=Array(256),vr=0;256>vr;++vr)Ki[vr]=String.fromCharCode(vr);vi=Ki,Ut=f.BindingError=class extends Error{constructor(u){super(u),this.name="BindingError"}},f.InternalError=class extends Error{constructor(u){super(u),this.name="InternalError"}},Object.assign(_i.prototype,{get(u){return this.wb[u]},has(u){return this.wb[u]!==void 0},Kb(u){var h=this.Nb.pop()||this.wb.length;return this.wb[h]=u,h},Mb(u){this.wb[u]=void 0,this.Nb.push(u)}}),yt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),yt.Db=yt.wb.length,f.count_emval_handles=()=>{for(var u=0,h=yt.Db;h<yt.wb.length;++h)yt.wb[h]!==void 0&&++u;return u};var Xn=[_n,Br,Sn,An,D,H,tr,L,F,ci,pi,fi,mi,hi,gi,yi,zi,Bi,Ui,Ni,Wi,Vi,Gi,Hi],Qn={ua:function(u,h,$){return Ei(async()=>{await f.cc(u,h,$)})},b:function(u,h,$){throw u>>>=0,new Va(u).Ib(h>>>0,$>>>0),xn=u,Ga++,xn},fa:function(u){Zi(u>>>0,!U,1,!j,131072,!1),_e.Tb()},D:function(u){u>>>=0,N?postMessage({cmd:"cleanupThread",thread:u}):_e.Rb(_e.pb[u])},X:In,z:An,la:D,T:H,V:tr,ma:L,ja:F,ca:ci,ia:pi,H:fi,U:mi,R:hi,ka:gi,S:yi,K:function(u,h,$,k,M){u>>>=0,h>>>=0,$>>>=0,h=Ct(h);var G=h.indexOf("u")!=-1;G&&(M=(1n<<64n)-1n),Bt(u,{name:h,fromWireType:Z=>Z,toWireType:function(Z,re){if(typeof re!="bigint"&&typeof re!="number")throw new TypeError(`Cannot convert "${bi(re)}" to ${this.name}`);if(re<k||re>M)throw new TypeError(`Passing a number "${bi(re)}" from JS side to C/C++ side to an argument of type "${h}", which is outside the valid range [${k}, ${M}]!`);return re},argPackAdvance:8,readValueFromPointer:wi(h,$,!G),Cb:null})},sa:function(u,h,$,k){u>>>=0,h=Ct(h>>>0),Bt(u,{name:h,fromWireType:function(M){return!!M},toWireType:function(M,G){return G?$:k},argPackAdvance:8,readValueFromPointer:function(M){return this.fromWireType(o()[M>>>0])},Cb:null})},ra:function(u,h){u>>>=0,h=Ct(h>>>0),Bt(u,{name:h,fromWireType:$=>{var k=ct($);return Nr($),k},toWireType:($,k)=>xt(k),argPackAdvance:8,readValueFromPointer:$i,Cb:null})},J:function(u,h,$){u>>>=0,$>>>=0,h=Ct(h>>>0),Bt(u,{name:h,fromWireType:k=>k,toWireType:(k,M)=>M,argPackAdvance:8,readValueFromPointer:kn(h,$),Cb:null})},v:function(u,h,$,k,M){if(u>>>=0,$>>>=0,h=Ct(h>>>0),M===-1&&(M=4294967295),M=re=>re,k===0){var G=32-8*$;M=re=>re<<G>>>G}var Z=h.includes("unsigned")?function(re,ce){return ce>>>0}:function(re,ce){return ce};Bt(u,{name:h,fromWireType:M,toWireType:Z,argPackAdvance:8,readValueFromPointer:wi(h,$,k!==0),Cb:null})},o:function(u,h,$){function k(G){var Z=g()[G>>>2>>>0];return G=g()[G+4>>>2>>>0],new M(r().buffer,G,Z)}u>>>=0;var M=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][h];$=Ct($>>>0),Bt(u,{name:$,fromWireType:k,argPackAdvance:8,readValueFromPointer:k},{Yb:!0})},L:function(u,h){u>>>=0,h=Ct(h>>>0);var $=h==="std::string";Bt(u,{name:h,fromWireType:function(k){var M=g()[k>>>2>>>0],G=k+4;if($)for(var Z=G,re=0;re<=M;++re){var ce=G+re;if(re==M||o()[ce>>>0]==0){if(Z=lt(Z,ce-Z),se===void 0)var se=Z;else se+=String.fromCharCode(0),se+=Z;Z=ce+1}}else{for(se=Array(M),re=0;re<M;++re)se[re]=String.fromCharCode(o()[G+re>>>0]);se=se.join("")}return Ot(k),se},toWireType:function(k,M){M instanceof ArrayBuffer&&(M=new Uint8Array(M));var G=typeof M=="string";if(!(G||M instanceof Uint8Array||M instanceof Uint8ClampedArray||M instanceof Int8Array))throw new Ut("Cannot pass non-string to std::string");var Z=$&&G?mr(M):M.length,re=or(4+Z+1),ce=re+4;if(g()[re>>>2>>>0]=Z,$&&G)Dr(M,ce,Z+1);else if(G)for(G=0;G<Z;++G){var se=M.charCodeAt(G);if(255<se)throw Ot(ce),new Ut("String has UTF-16 code units that do not fit in 8 bits");o()[ce+G>>>0]=se}else for(G=0;G<Z;++G)o()[ce+G>>>0]=M[G];return k!==null&&k.push(Ot,re),re},argPackAdvance:8,readValueFromPointer:On,Cb(k){Ot(k)}})},B:function(u,h,$){if(u>>>=0,h>>>=0,$>>>=0,$=Ct($),h===2)var k=Pn,M=Rn,G=zn,Z=()=>p(),re=1;else h===4&&(k=Bn,M=Mn,G=Dn,Z=()=>g(),re=2);Bt(u,{name:$,fromWireType:ce=>{for(var se=g()[ce>>>2>>>0],we=Z(),me,Ce=ce+4,K=0;K<=se;++K){var he=ce+4+K*h;(K==se||we[he>>>re]==0)&&(Ce=k(Ce,he-Ce),me===void 0?me=Ce:(me+=String.fromCharCode(0),me+=Ce),Ce=he+h)}return Ot(ce),me},toWireType:(ce,se)=>{if(typeof se!="string")throw new Ut(`Cannot pass non-string to C++ string type ${$}`);var we=G(se),me=or(4+we+h);return g()[me>>>2]=we>>re,M(se,me+4,we+h),ce!==null&&ce.push(Ot,me),me},argPackAdvance:8,readValueFromPointer:$i,Cb(ce){Ot(ce)}})},ta:function(u,h){u>>>=0,h=Ct(h>>>0),Bt(u,{Zb:!0,name:h,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,P:function(u,h){u>>>=0,u==h>>>0?setTimeout(()=>hr()):N?postMessage({targetThread:u,cmd:"checkMailbox"}):(u=_e.pb[u])&&u.postMessage({cmd:"checkMailbox"})},Y:function(u,h,$,k){h>>>=0,$/=2,Vr.length=$,k=k>>>0>>>3;for(var M=0;M<$;M++)Vr[M]=Ee[k+2*M]?Ee[k+2*M+1]:w()[k+2*M+1>>>0];return u=0>u?Or[-u-1]:Xn[u],_e.Wb=h,h=u.apply(null,Vr),_e.Wb=0,h},ea:Wr,pa:function(u){z&&_e.pb[u>>>0].ref()},t:function(u,h,$){return h>>>=0,$>>>=0,u=ct(u>>>0),h=Gr(h,"emval::as"),Si(h,$,u)},y:function(u){return u>>>=0,Ei(()=>(u=ct(u),u.then(xt)))},p:function(u,h,$,k){return $>>>=0,k>>>=0,u=br[u>>>0],h=ct(h>>>0),u(null,h,$,k)},k:function(u,h,$,k,M){return $>>>=0,k>>>=0,M>>>=0,u=br[u>>>0],h=ct(h>>>0),$=Lr($),u(h,h[$],k,M)},c:Nr,C:function(u,h){return h>>>=0,u=ct(u>>>0),h=ct(h),u==h},n:function(u){return u>>>=0,u===0?xt(ki()):(u=Lr(u),xt(ki()[u]))},j:function(u,h,$){h=qn(u,h>>>0);var k=h.shift();u--;var M=`return function (obj, func, destructorsRef, args) {
`,G=0,Z=[];$===0&&Z.push("obj");for(var re=["retType"],ce=[k],se=0;se<u;++se)Z.push("arg"+se),re.push("argType"+se),ce.push(h[se]),M+=`  var arg${se} = argType${se}.readValueFromPointer(args${G?"+"+G:""});
`,G+=h[se].argPackAdvance;for(M+=`  var rv = ${$===1?"new func":"func.call"}(${Z.join(", ")});
`,se=0;se<u;++se)h[se].deleteObject&&(M+=`  argType${se}.deleteObject(arg${se});
`);return k.Zb||(re.push("emval_returnValue"),ce.push(Si),M+=`  return emval_returnValue(retType, destructorsRef, rv);
`),re.push(M+`};
`),u=Kn(re).apply(null,ce),$=`methodCaller<(${h.map(we=>we.name).join(", ")}) => ${k.name}>`,Fn(Oi($,u))},s:function(u,h){return h>>>=0,u=ct(u>>>0),h=ct(h),xt(u[h])},e:function(u){u>>>=0,4<u&&(yt.get(u).Qb+=1)},w:function(){return xt([])},m:function(u){u=ct(u>>>0);for(var h=Array(u.length),$=0;$<u.length;$++)h[$]=u[$];return xt(h)},g:function(u){return xt(Lr(u>>>0))},l:function(){return xt({})},i:function(u){u>>>=0;for(var h=ct(u);h.length;){var $=h.pop();h.pop()($)}Nr(u)},h:function(u,h,$){h>>>=0,$>>>=0,u=ct(u>>>0),h=ct(h),$=ct($),u[h]=$},d:function(u,h){return h>>>=0,u=Gr(u>>>0,"_emval_take_value"),u=u.readValueFromPointer(h),xt(u)},$:function(u,h){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),h>>>=0,u=new Date(1e3*u),d()[h>>>2>>>0]=u.getUTCSeconds(),d()[h+4>>>2>>>0]=u.getUTCMinutes(),d()[h+8>>>2>>>0]=u.getUTCHours(),d()[h+12>>>2>>>0]=u.getUTCDate(),d()[h+16>>>2>>>0]=u.getUTCMonth(),d()[h+20>>>2>>>0]=u.getUTCFullYear()-1900,d()[h+24>>>2>>>0]=u.getUTCDay(),u=(u.getTime()-Date.UTC(u.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,d()[h+28>>>2>>>0]=u},aa:function(u,h){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),h>>>=0,u=new Date(1e3*u),d()[h>>>2>>>0]=u.getSeconds(),d()[h+4>>>2>>>0]=u.getMinutes(),d()[h+8>>>2>>>0]=u.getHours(),d()[h+12>>>2>>>0]=u.getDate(),d()[h+16>>>2>>>0]=u.getMonth(),d()[h+20>>>2>>>0]=u.getFullYear()-1900,d()[h+24>>>2>>>0]=u.getDay();var $=(rr(u.getFullYear())?Pi:Ri)[u.getMonth()]+u.getDate()-1|0;d()[h+28>>>2>>>0]=$,d()[h+36>>>2>>>0]=-(60*u.getTimezoneOffset()),$=new Date(u.getFullYear(),6,1).getTimezoneOffset();var k=new Date(u.getFullYear(),0,1).getTimezoneOffset();u=($!=k&&u.getTimezoneOffset()==Math.min(k,$))|0,d()[h+32>>>2>>>0]=u},ba:function(u){u>>>=0;var h=new Date(d()[u+20>>>2>>>0]+1900,d()[u+16>>>2>>>0],d()[u+12>>>2>>>0],d()[u+8>>>2>>>0],d()[u+4>>>2>>>0],d()[u>>>2>>>0],0),$=d()[u+32>>>2>>>0],k=h.getTimezoneOffset(),M=new Date(h.getFullYear(),6,1).getTimezoneOffset(),G=new Date(h.getFullYear(),0,1).getTimezoneOffset(),Z=Math.min(G,M);return 0>$?d()[u+32>>>2>>>0]=+(M!=G&&Z==k):0<$!=(Z==k)&&(M=Math.max(G,M),h.setTime(h.getTime()+6e4*((0<$?Z:M)-k))),d()[u+24>>>2>>>0]=h.getDay(),$=(rr(h.getFullYear())?Pi:Ri)[h.getMonth()]+h.getDate()-1|0,d()[u+28>>>2>>>0]=$,d()[u>>>2>>>0]=h.getSeconds(),d()[u+4>>>2>>>0]=h.getMinutes(),d()[u+8>>>2>>>0]=h.getHours(),d()[u+12>>>2>>>0]=h.getDate(),d()[u+16>>>2>>>0]=h.getMonth(),d()[u+20>>>2>>>0]=h.getYear(),u=h.getTime(),isNaN(u)?(d()[Ji()>>>2>>>0]=61,u=-1):u/=1e3,BigInt(u)},Z:zi,_:Bi,O:function(u,h,$){function k(se){return(se=se.toTimeString().match(/\(([A-Za-z ]+)\)$/))?se[1]:"GMT"}u>>>=0,h>>>=0,$>>>=0;var M=new Date().getFullYear(),G=new Date(M,0,1),Z=new Date(M,6,1);M=G.getTimezoneOffset();var re=Z.getTimezoneOffset(),ce=Math.max(M,re);g()[u>>>2>>>0]=60*ce,d()[h>>>2>>>0]=+(M!=re),u=k(G),h=k(Z),u=Mi(u),h=Mi(h),re<M?(g()[$>>>2>>>0]=u,g()[$+4>>>2>>>0]=h):(g()[$>>>2>>>0]=h,g()[$+4>>>2>>>0]=u)},q:()=>{ot("")},f:function(u,h,$){return u>>>=0,h=Di(h>>>0,$>>>0),Or[u].apply(null,h)},M:function(u,h,$){return u>>>=0,h=Di(h>>>0,$>>>0),Or[u].apply(null,h)},E:()=>{},I:()=>Date.now(),oa:()=>{throw er+=1,"unwind"},Q:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>z?(hu(),sr(mu)).cpus().length:navigator.hardwareConcurrency,N:function(u){u>>>=0;var h=o().length;if(u<=h||4294901760<u)return!1;for(var $=1;4>=$;$*=2){var k=h*(1+.2/$);k=Math.min(k,u+100663296);var M=Math;k=Math.max(u,k);e:{M=(M.min.call(M,4294901760,k+(65536-k%65536)%65536)-Te.buffer.byteLength+65535)/65536;try{Te.grow(M),at();var G=1;break e}catch{}G=void 0}if(G)return!0}return!1},ga:Ui,ha:Ni,W:zt,A:Wi,G:Vi,da:Gi,F:Hi,a:Te||f.wasmMemory,na:qi,r:function(u,h,$,k){return qi(u>>>0,h>>>0,$>>>0,k>>>0)}},fe=function(){function u($,k){return fe=$.exports,fe=jn(),fe=ea(),_e.Ub.push(fe.bb),rt.unshift(fe.va),ge=k,ai(),fe}var h={a:Qn};if(Et++,f.instantiateWasm)try{return f.instantiateWasm(h,u)}catch($){Ie(`Module.instantiateWasm callback failed with error: ${$}`),S($)}return ui(h,function($){u($.instance,$.module)}).catch(S),{}}();f._OrtInit=(u,h)=>(f._OrtInit=fe.wa)(u,h),f._OrtGetLastError=(u,h)=>(f._OrtGetLastError=fe.xa)(u,h),f._OrtCreateSessionOptions=(u,h,$,k,M,G,Z,re,ce,se)=>(f._OrtCreateSessionOptions=fe.ya)(u,h,$,k,M,G,Z,re,ce,se),f._OrtAppendExecutionProvider=(u,h)=>(f._OrtAppendExecutionProvider=fe.za)(u,h),f._OrtAddFreeDimensionOverride=(u,h,$)=>(f._OrtAddFreeDimensionOverride=fe.Aa)(u,h,$),f._OrtAddSessionConfigEntry=(u,h,$)=>(f._OrtAddSessionConfigEntry=fe.Ba)(u,h,$),f._OrtReleaseSessionOptions=u=>(f._OrtReleaseSessionOptions=fe.Ca)(u),f._OrtCreateSession=(u,h,$)=>(f._OrtCreateSession=fe.Da)(u,h,$),f._OrtReleaseSession=u=>(f._OrtReleaseSession=fe.Ea)(u),f._OrtGetInputOutputCount=(u,h,$)=>(f._OrtGetInputOutputCount=fe.Fa)(u,h,$),f._OrtGetInputName=(u,h)=>(f._OrtGetInputName=fe.Ga)(u,h),f._OrtGetOutputName=(u,h)=>(f._OrtGetOutputName=fe.Ha)(u,h),f._OrtFree=u=>(f._OrtFree=fe.Ia)(u),f._OrtCreateTensor=(u,h,$,k,M,G)=>(f._OrtCreateTensor=fe.Ja)(u,h,$,k,M,G),f._OrtGetTensorData=(u,h,$,k,M)=>(f._OrtGetTensorData=fe.Ka)(u,h,$,k,M),f._OrtReleaseTensor=u=>(f._OrtReleaseTensor=fe.La)(u),f._OrtCreateRunOptions=(u,h,$,k)=>(f._OrtCreateRunOptions=fe.Ma)(u,h,$,k),f._OrtAddRunConfigEntry=(u,h,$)=>(f._OrtAddRunConfigEntry=fe.Na)(u,h,$),f._OrtReleaseRunOptions=u=>(f._OrtReleaseRunOptions=fe.Oa)(u),f._OrtCreateBinding=u=>(f._OrtCreateBinding=fe.Pa)(u),f._OrtBindInput=(u,h,$)=>(f._OrtBindInput=fe.Qa)(u,h,$),f._OrtBindOutput=(u,h,$,k)=>(f._OrtBindOutput=fe.Ra)(u,h,$,k),f._OrtClearBoundOutputs=u=>(f._OrtClearBoundOutputs=fe.Sa)(u),f._OrtReleaseBinding=u=>(f._OrtReleaseBinding=fe.Ta)(u),f._OrtRunWithBinding=(u,h,$,k,M)=>(f._OrtRunWithBinding=fe.Ua)(u,h,$,k,M),f._OrtRun=(u,h,$,k,M,G,Z,re)=>(f._OrtRun=fe.Va)(u,h,$,k,M,G,Z,re),f._OrtEndProfiling=u=>(f._OrtEndProfiling=fe.Wa)(u),f._JsepOutput=(u,h,$)=>(f._JsepOutput=fe.Xa)(u,h,$),f._JsepGetNodeName=u=>(f._JsepGetNodeName=fe.Ya)(u);var Ji=()=>(Ji=fe.Za)(),wr=f._pthread_self=()=>(wr=f._pthread_self=fe._a)(),or=f._malloc=u=>(or=f._malloc=fe.$a)(u),Ot=f._free=u=>(Ot=f._free=fe.ab)(u);f.__emscripten_tls_init=()=>(f.__emscripten_tls_init=fe.bb)();var Yi=u=>(Yi=fe.cb)(u);f.__embind_initialize_bindings=()=>(f.__embind_initialize_bindings=fe.db)();var Zi=f.__emscripten_thread_init=(u,h,$,k,M,G)=>(Zi=f.__emscripten_thread_init=fe.fb)(u,h,$,k,M,G);f.__emscripten_thread_crashed=()=>(f.__emscripten_thread_crashed=fe.gb)();var Xi=(u,h,$,k)=>(Xi=fe.hb)(u,h,$,k),Jr=u=>(Jr=fe.ib)(u),Yr=f.__emscripten_thread_exit=u=>(Yr=f.__emscripten_thread_exit=fe.jb)(u),Qi=()=>(Qi=fe.kb)(),en=(u,h)=>(en=fe.lb)(u,h),Zr=()=>(Zr=fe.mb)(),_r=u=>(_r=fe.nb)(u),Xr=u=>(Xr=fe.ob)(u),tn=f.dynCall_ii=(u,h)=>(tn=f.dynCall_ii=fe.qb)(u,h),rn=u=>(rn=fe.rb)(u),nn=()=>(nn=fe.sb)(),an=u=>(an=fe.tb)(u),on=()=>(on=fe.ub)();f.___start_em_js=961539,f.___stop_em_js=961700;function ea(){var u=fe;u=Object.assign({},u);var h=k=>()=>k()>>>0,$=k=>M=>k(M)>>>0;return u.Za=h(u.Za),u._a=h(u._a),u.$a=$(u.$a),u.cb=$(u.cb),u.emscripten_main_runtime_thread_id=h(u.emscripten_main_runtime_thread_id),u.mb=h(u.mb),u.ob=$(u.ob),u}f.wasmMemory=Te,f.stackAlloc=Xr,f.stackSave=Zr,f.stackRestore=_r,f.keepRuntimeAlive=()=>0<er,f.UTF8ToString=lt,f.stringToUTF8=Dr,f.lengthBytesUTF8=mr,f.ExitStatus=pr,f.PThread=_e;var $r;nr=function u(){$r||sn(),$r||(nr=u)};function sn(){if(!(0<Et))if(N)C(f),N||zr(rt),startWorker(f);else{if(f.preRun)for(typeof f.preRun=="function"&&(f.preRun=[f.preRun]);f.preRun.length;)tt.unshift(f.preRun.shift());zr(tt),0<Et||$r||($r=!0,f.calledRun=!0,Ue||(N||zr(rt),C(f),N||zr(_t)))}}return sn(),t.ready}})();typeof yu=="object"&&typeof to=="object"?to.exports=gu:typeof define=="function"&&define.amd&&define([],()=>gu)});var vu=Qr((Rb,Wh)=>{Wh.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\n'});var _u,Vh,ro,io,la,wu,Gh,Hh,Lh,$u,it,ei=ae(()=>{"use strict";_u=cu();Vh=bu(),io=!1,la=!1,wu=!1,Gh=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Hh=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Lh=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",$u=async e=>{if(io)return Promise.resolve();if(la)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(wu)throw new Error("previous call to 'initializeWebAssembly()' failed.");la=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,s=Gh(r),p=o&&Hh(),d=e.wasmPaths,g=typeof d=="string"?d:void 0,b=Lh(p,s),w=typeof d=="object"?d[b]:void 0,f=!1,C=[];if(t>0&&C.push(new Promise(S=>{setTimeout(()=>{f=!0,S()},t)})),C.push(new Promise((S,O)=>{let E=s?Vh:_u,P={locateFile:(j,U)=>{if(s&&j.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([vu()],{type:"text/javascript"}));if(j.endsWith(".wasm")){if(w)return w;let z=g??U;return b==="ort-wasm-simd.wasm"?z+"ort-wasm-simd.jsep.wasm":b==="ort-wasm-simd-threaded.wasm"?z+"ort-wasm-simd-threaded.jsep.wasm":z+b}return U+j}};if(s)if(P.numThreads=r,typeof Blob>"u")P.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let j=`var ortWasmThreaded=${E.toString()};`;P.mainScriptUrlOrBlob=new Blob([j],{type:"text/javascript"})}E(P).then(j=>{la=!1,io=!0,ro=j,S()},j=>{la=!1,wu=!0,O(j)})})),await Promise.race(C),f)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},it=()=>{if(io&&ro)return ro;throw new Error("WebAssembly is not initialized yet.")}});var et,dn,Je,da=ae(()=>{"use strict";ei();et=(e,t)=>{let r=it(),o=r.lengthBytesUTF8(e)+1,s=r._malloc(o);return r.stringToUTF8(e,s,o),t.push(s),s},dn=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([s,p])=>{let d=t?t+s:s;if(typeof p=="object")dn(p,d+".",r,o);else if(typeof p=="string"||typeof p=="number")o(d,p.toString());else if(typeof p=="boolean")o(d,p?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof p}`)})},Je=e=>{let t=it(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let s=t.HEAP32[o/4],p=t.HEAPU32[o/4+1],d=p?t.UTF8ToString(p):"";throw new Error(`${e} ERROR_CODE: ${s}, ERROR_MESSAGE: ${d}`)}finally{t.stackRestore(r)}}});var Cu,xu=ae(()=>{"use strict";ei();da();Cu=e=>{let t=it(),r=0,o=[],s=e||{};try{if(e?.logSeverityLevel===void 0)s.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)s.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(s.terminate=!1);let p=0;return e?.tag!==void 0&&(p=et(e.tag,o)),r=t._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,p),r===0&&Je("Can't create run options."),e?.extra!==void 0&&dn(e.extra,"",new WeakSet,(d,g)=>{let b=et(d,o),w=et(g,o);t._OrtAddRunConfigEntry(r,b,w)!==0&&Je(`Can't set a run config entry: ${d} - ${g}.`)}),[r,o]}catch(p){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(d=>t._free(d)),p}}});var Fh,qh,Kh,Jh,Su,Iu=ae(()=>{"use strict";ei();da();Fh=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},qh=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Kh=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},Jh=(e,t,r)=>{for(let o of t){let s=typeof o=="string"?o:o.name;switch(s){case"webnn":if(s="WEBNN",typeof o!="string"){let d=o;if(d?.deviceType){let g=et("deviceType",r),b=et(d.deviceType,r);it()._OrtAddSessionConfigEntry(e,g,b)!==0&&Je(`Can't set a session config entry: 'deviceType' - ${d.deviceType}.`)}if(d?.numThreads){let g=d.numThreads;(typeof g!="number"||!Number.isInteger(g)||g<0)&&(g=0);let b=et("numThreads",r),w=et(g.toString(),r);it()._OrtAddSessionConfigEntry(e,b,w)!==0&&Je(`Can't set a session config entry: 'numThreads' - ${d.numThreads}.`)}if(d?.powerPreference){let g=et("powerPreference",r),b=et(d.powerPreference,r);it()._OrtAddSessionConfigEntry(e,g,b)!==0&&Je(`Can't set a session config entry: 'powerPreference' - ${d.powerPreference}.`)}}break;case"webgpu":if(s="JS",typeof o!="string"){let d=o;if(d?.preferredLayout){if(d.preferredLayout!=="NCHW"&&d.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${d.preferredLayout}`);let g=et("preferredLayout",r),b=et(d.preferredLayout,r);it()._OrtAddSessionConfigEntry(e,g,b)!==0&&Je(`Can't set a session config entry: 'preferredLayout' - ${d.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${s}`)}let p=et(s,r);it()._OrtAppendExecutionProvider(e,p)!==0&&Je(`Can't append execution provider: ${s}.`)}},Su=e=>{let t=it(),r=0,o=[],s=e||{};Kh(s);try{let p=Fh(s.graphOptimizationLevel??"all"),d=qh(s.executionMode??"sequential"),g=typeof s.logId=="string"?et(s.logId,o):0,b=s.logSeverityLevel??2;if(!Number.isInteger(b)||b<0||b>4)throw new Error(`log serverity level is not valid: ${b}`);let w=s.logVerbosityLevel??0;if(!Number.isInteger(w)||w<0||w>4)throw new Error(`log verbosity level is not valid: ${w}`);let f=typeof s.optimizedModelFilePath=="string"?et(s.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(p,!!s.enableCpuMemArena,!!s.enableMemPattern,d,!!s.enableProfiling,0,g,b,w,f),r===0&&Je("Can't create session options."),s.executionProviders&&Jh(r,s.executionProviders,o),s.enableGraphCapture!==void 0){if(typeof s.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${s.enableGraphCapture}`);let C=et("enableGraphCapture",o),S=et(s.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,C,S)!==0&&Je(`Can't set a session config entry: 'enableGraphCapture' - ${s.enableGraphCapture}.`)}if(s.freeDimensionOverrides)for(let[C,S]of Object.entries(s.freeDimensionOverrides)){if(typeof C!="string")throw new Error(`free dimension override name must be a string: ${C}`);if(typeof S!="number"||!Number.isInteger(S)||S<0)throw new Error(`free dimension override value must be a non-negative integer: ${S}`);let O=et(C,o);t._OrtAddFreeDimensionOverride(r,O,S)!==0&&Je(`Can't set a free dimension override: ${C} - ${S}.`)}return s.extra!==void 0&&dn(s.extra,"",new WeakSet,(C,S)=>{let O=et(C,o),E=et(S,o);t._OrtAddSessionConfigEntry(r,O,E)!==0&&Je(`Can't set a session config entry: ${C} - ${S}.`)}),[r,o]}catch(p){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(d=>t._free(d)),p}}});var no,lr,cn,ca,pn,pa,ao,Se=ae(()=>{"use strict";no=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},lr=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},cn=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],ca=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},pn=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},pa=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",ao=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var fn,oo=ae(()=>{"use strict";fn=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let s of r)o.push(s);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let s=t.body.getReader(),p;try{p=new ArrayBuffer(o)}catch(g){if(g instanceof RangeError){let b=Math.ceil(o/65536);p=new WebAssembly.Memory({initial:b,maximum:b}).buffer}else throw g}let d=0;for(;;){let{done:g,value:b}=await s.read();if(g)break;let w=b.byteLength;new Uint8Array(p,d,w).set(b),d+=w}return new Uint8Array(p,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}});var Yh,Zh,Au,Tu,Eu,Xh,Ye,dr=ae(()=>{"use strict";Se();Yh=["V","I","W","E","F"],Zh=(e,t)=>{console.log(`[${Yh[e]},${new Date().toISOString()}]${t}`)},Eu=(e,t)=>{Au=e,Tu=t},Xh=(e,t)=>{let r=pn(e),o=pn(Au);r>=o&&Zh(r,typeof t=="function"?t():t)},Ye=(...e)=>{Tu&&Xh(...e)}});var ku,Ou=ae(()=>{"use strict";Se();ku=(e,t)=>new(ca(t))(e)});var fa=ae(()=>{"use strict"});var ma,Qh,Pu,uo,so,zu,Bu=ae(()=>{"use strict";dr();fa();ma=e=>Math.ceil(e/16)*16,Qh=1,Pu=()=>Qh++,uo=async(e,t,r,o)=>{let s=ma(r),p=e.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let d=e.getCommandEncoder();e.endComputePass(),d.copyBufferToBuffer(t,0,p,0,s),e.flush(),await p.mapAsync(GPUMapMode.READ);let g=p.getMappedRange();if(o){let b=o();return b.set(new Uint8Array(g,0,r)),b}else return new Uint8Array(g.slice(0,r))}finally{p.destroy()}},so=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(t,r){let o=r.buffer,s=r.byteOffset,p=r.byteLength,d=ma(p),g=this.storageCache.get(t);if(!g)throw new Error("gpu data for uploading does not exist");if(g.originalSize!==p)throw new Error(`inconsistent data size. gpu data size=${g.originalSize}, data size=${p}`);let b=this.backend.device.createBuffer({mappedAtCreation:!0,size:d,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),w=b.getMappedRange();new Uint8Array(w).set(new Uint8Array(o,s,p)),b.unmap();let f=this.backend.getCommandEncoder();this.backend.endComputePass(),f.copyBufferToBuffer(b,0,g.gpuData.buffer,0,d),Ye("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(b)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let p=ma(o.originalSize),d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(o.gpuData.buffer,0,s.gpuData.buffer,0,p)}registerExternalBuffer(t,r,o){let s;if(o){if(s=this.externalBuffers.get(o),s===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ye("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else s=Pu();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,s),Ye("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ye("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=ma(t),s,p=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,d=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(p||d){let b=p?this.freeBuffers:this.freeUniformBuffers,w=b.get(o);w||(w=[],b.set(o,w)),w.length>0?s=w.pop():s=this.backend.device.createBuffer({size:o,usage:r})}else s=this.backend.device.createBuffer({size:o,usage:r});let g={id:Pu(),type:0,buffer:s};return this.storageCache.set(g.id,{gpuData:g,originalSize:t}),Ye("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${g.id}`),g}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ye("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await uo(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},zu=(...e)=>new so(...e)});var lo,De,mt=ae(()=>{"use strict";lo=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},De=e=>new lo(e)});var co,qt,ee,Ar,ha,ga,ya,je=ae(()=>{"use strict";co=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},qt=class{static calcShape(t,r,o=!1){let s=t.length,p=r.length;if(s===0)return r;if(p===0)return t;let d=Math.max(t.length,r.length),g=new Array(d);if(o){if(s<2||p<2)return;let b=co.calcMatMulShape([t[s-2],t[s-1]],[r[p-2],r[p-1]]);if(b===void 0)return;[g[d-2],g[d-1]]=b}for(let b=o?3:1;b<=d;b++){let w=s-b<0?1:t[s-b],f=p-b<0?1:r[p-b];if(w!==f&&w>1&&f>1)return;let C=Math.max(w,f);if(w&&f)g[d-b]=Math.max(w,f);else{if(C>1)return;g[d-b]=0}}return g}static isValidBroadcast(t,r){let o=t.length,s=r.length;if(o>s)return!1;for(let p=1;p<=o;p++)if(t[o-p]!==1&&t[o-p]!==r[s-p])return!1;return!0}},ee=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let o=t.length;if(o===0)return[];let s=new Array(o),p=o-1;for(;p>=0;){if(t[p]%r===0){s[p]=t[p]/r;break}if(r%t[p]!==0)throw new Error("cannot convert shape");s[p]=1,r/=t[p],p--}for(p--;p>=0;p--)s[p]=t[p];return s}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let s=1;for(let p=r;p<o;p++){if(t[p]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");s*=t[p]}return s}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let s=r-3;s>=0;--s)o[s]=o[s+1]*t[s+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((s,p)=>s+r[p]+r[p+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,s)=>o===r[s])}},Ar=class e{static adjustPoolAttributes(t,r,o,s,p,d){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let g=0;g<r.length-2;g++)g>=o.length?o.push(r[g+2]):o[g]=r[g+2];for(let g=0;g<o.length;g++)if(g<s.length){if(s[g]<0)throw new Error("strides should be greater than or equal to 1")}else s.push(1);for(let g=0;g<o.length;g++)if(g<p.length){if(p[g]<0)throw new Error("dilations should be greater than or equal to 1")}else p.push(1);for(let g=0;g<o.length*2;g++)if(g<d.length){if(d[g]<0)throw new Error("pad should be greater than or equal to 1")}else d.push(0);for(let g=0;g<o.length;g++){if(o[g]<=0)throw new Error("kernel shapes need to be greater than 0");if(d[g]>=o[g]||d[g+o.length]>=o[g])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,s,p,d,g){if(g){if(p.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(s.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let b=0;b<t.length-2;b++)e.adjustPadAndReturnShape(t[b+(d?1:2)],r[b],o[b],s[b],p,b,b+t.length-2,g)}}static computePoolOutputShape(t,r,o,s,p,d,g){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let b=[r[0],r[1]];return e.computeShapeHelper(t,r,b,o,s,p,d,g),b}static computeConvOutputShape(t,r,o,s,p,d,g){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let b=[t[0],r[0]];return e.computeShapeHelper(!1,t,b,o,s,p,d,g),b}static computeShapeHelper(t,r,o,s,p,d,g,b){if(t)for(let w=0;w<r.length-2;w++)o.push(1);else for(let w=0;w<r.length-2;w++)o.push(e.adjustPadAndReturnShape(r[w+2],s[w],p[w],d[w],g,w,w+r.length-2,b))}static adjustPadAndReturnShape(t,r,o,s,p,d,g,b){let w=o*(s-1)+1;if(b&&b!=="NOTSET")switch(b){case"VALID":return p[d]=0,p[g]=0,Math.floor((t-w)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let C=((t+r-1)/r-1)*r+s-t;return p[d]=Math.floor(b==="SAME_LOWER"?(C+1)/2:C/2),p[g]=C-p[d],Math.floor((t+C-s)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+p[d]+p[g]-w)/r+1)}},ha=class{static getShapeOfGemmResult(t,r,o,s,p){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let d,g,b;r?(d=t[1],g=t[0]):(d=t[0],g=t[1]);let w=-1;if(s?(b=o[0],w=1):(b=o[1],w=0),o[w]!==g)throw new Error("dimension mismatch");if(d<=0||b<=0||g<=0)throw new Error("invalid shape specified");if(p&&!qt.isValidBroadcast(p,[d,b]))throw new Error("gemm: invalid bias shape for broadcast");return[d,b,g]}},ga=-34028234663852886e22,ya=34028234663852886e22});var ba,fo,Le,It,le,Ze,ht,Wt,At,$e,mo,Q,oe,va,po,Mu,ti,Me=ae(()=>{"use strict";Se();je();ba=64,fo=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Le=(e,t=1)=>{let r=fo(e,t);return typeof r=="string"?r:r[0]},It=(e,t=1)=>{let r=fo(e,t);return typeof r=="string"?r:r[1]},le=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:ee.computeStrides(r)})}),t},Ze=e=>e%4===0?4:e%2===0?2:1,ht=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Wt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,At=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,$e=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,mo=(e,t,r,o,s)=>{let p=typeof r=="number",d=p?r:r.length,g=[...new Array(d).keys()],b=d<2?"u32":d<=4?`vec${d}<u32>`:`array<u32, ${d}>`,w=fo(t,s),f=typeof w=="string"?w:w[1],C=typeof w=="string"?w:w[0],S={indices:b,value:f,storage:C,tensor:t},O=ne=>typeof ne=="string"?ne:`${ne}u`,E={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},P=p?"uniforms.":"",j=`${P}${e}_shape`,U=`${P}${e}_strides`,z="";for(let ne=0;ne<d-1;ne++)z+=`
    let dim${ne} = current / ${$e(U,ne,d)};
    let rest${ne} = current % ${$e(U,ne,d)};
    indices[${ne}] = dim${ne};
    current = rest${ne};
    `;z+=`indices[${d-1}] = current;`;let N=d<2?"":`
  fn o2i_${e}(offset: u32) -> ${S.indices} {
    var indices: ${S.indices};
    var current = offset;
    ${z}
    return indices;
  }`,W=ne=>(E.offsetToIndices=!0,d<2?ne:`o2i_${e}(${ne})`),J=[];if(d>=2)for(let ne=d-1;ne>=0;ne--)J.push(`${$e(U,ne,d)} * (indices[${ne}])`);let Y=d<2?"":`
  fn i2o_${e}(indices: ${S.indices}) -> u32 {
    return ${J.join("+")};
  }`,te=ne=>(E.indicesToOffset=!0,d<2?ne:`i2o_${e}(${ne})`),q=(...ne)=>d===0?"0u":`${S.indices}(${ne.map(O).join(",")})`,ue=(ne,ve)=>d<2?`${ne}`:`${$e(ne,ve,d)}`,de=(ne,ve,Ee)=>d<2?`${ne}=${Ee};`:`${$e(ne,ve,d)}=${Ee};`,Pe={},Ne=(ne,ve)=>{E.broadcastedIndicesToOffset=!0;let Ee=`${ve.name}broadcastedIndicesTo${e}Offset`;if(Ee in Pe)return`${Ee}(${ne})`;let Tt=[];for(let nt=d-1;nt>=0;nt--){let at=ve.indicesGet("outputIndices",nt+ve.rank-d);Tt.push(`${ue(U,nt)} * (${at} % ${ue(j,nt)})`)}return Pe[Ee]=`fn ${Ee}(outputIndices: ${ve.type.indices}) -> u32 {
             return ${Tt.length>0?Tt.join("+"):"0u"};
           }`,`${Ee}(${ne})`},qe=(ne,ve)=>(()=>{if(S.storage===S.value)return`${e}[${ne}]=${ve};`;if(S.storage==="vec2<u32>"&&S.value==="i32")return`${e}[${ne}]=vec2<u32>(u32(${ve}), select(0u, 0xFFFFFFFFu, ${ve} < 0));`;if(S.storage==="vec2<u32>"&&S.value==="u32")return`${e}[${ne}]=vec2<u32>(u32(${ve}), 0u);`;if(S.storage==="u32"&&S.value==="vec4<bool>")return`${e}[${ne}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ve}));`;throw new Error(`not supported combination of storage type ${S.storage} and value type ${S.value} yet`)})(),Ie=ne=>(()=>{if(S.storage===S.value)return`${e}[${ne}]`;if(S.storage==="vec2<u32>"&&S.value==="i32")return`i32(${e}[${ne}].x)`;if(S.storage==="vec2<u32>"&&S.value==="u32")return`u32(${e}[${ne}].x)`;if(S.storage==="u32"&&S.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${ne}] & 0xFFu), bool(${e}[${ne}] & 0xFF00u), bool(${e}[${ne}] & 0xFF0000u), bool(${e}[${ne}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${S.storage} and value type ${S.value} yet`)})(),Te=d<2?"":`
  fn get_${e}ByIndices(indices: ${S.indices}) -> ${f} {
    return ${Ie(`i2o_${e}(indices)`)};
  }`,ge=d<2?"":(()=>{let ne=g.map(Ee=>`d${Ee}: u32`).join(", "),ve=g.map(Ee=>`d${Ee}`).join(", ");return`
  fn get_${e}(${ne}) -> ${f} {
    return get_${e}ByIndices(${q(ve)});
  }`})(),Ue=(...ne)=>{if(ne.length!==d)throw new Error(`indices length must be ${d}`);let ve=ne.map(O).join(",");return d===0?Ie("0u"):d===1?Ie(ve[0]):(E.get=!0,E.getByIndices=!0,E.indicesToOffset=!0,`get_${e}(${ve})`)},ke=ne=>d<2?Ie(ne):(E.getByIndices=!0,E.indicesToOffset=!0,`get_${e}ByIndices(${ne})`),be=d<2?"":`
  fn set_${e}ByIndices(indices: ${S.indices}, value: ${f}) {
    ${qe(`i2o_${e}(indices)`,"value")}
  }`,Re=d<2?"":(()=>{let ne=g.map(Ee=>`d${Ee}: u32`).join(", "),ve=g.map(Ee=>`d${Ee}`).join(", ");return`
  fn set_${e}(${ne}, value: ${f}) {
    set_${e}ByIndices(${q(ve)}, value);
  }`})();return{impl:()=>{let ne=[],ve=!1;return E.offsetToIndices&&(ne.push(N),ve=!0),E.indicesToOffset&&(ne.push(Y),ve=!0),E.broadcastedIndicesToOffset&&(Object.values(Pe).forEach(Ee=>ne.push(Ee)),ve=!0),E.set&&(ne.push(Re),ve=!0),E.setByIndices&&(ne.push(be),ve=!0),E.get&&(ne.push(ge),ve=!0),E.getByIndices&&(ne.push(Te),ve=!0),!p&&ve&&ne.unshift(`const ${j} = ${S.indices}(${r.join(",")});`,`const ${U} = ${S.indices}(${ee.computeStrides(r).join(",")});`),ne.join(`
`)},type:S,offsetToIndices:W,indicesToOffset:te,broadcastedIndicesToOffset:Ne,indices:q,indicesGet:ue,indicesSet:de,set:(...ne)=>{if(ne.length!==d+1)throw new Error(`indices length must be ${d}`);let ve=ne[d];if(typeof ve!="string")throw new Error("value must be string");let Ee=ne.slice(0,d).map(O).join(",");return d===0?qe("0u",ve):d===1?qe(Ee[0],ve):(E.set=!0,E.setByIndices=!0,E.indicesToOffset=!0,`set_${e}(${Ee}, ${ve})`)},setByOffset:qe,setByIndices:(ne,ve)=>d<2?qe(ne,ve):(E.setByIndices=!0,E.indicesToOffset=!0,`set_${e}ByIndices(${ne}, ${ve});`),get:Ue,getByOffset:Ie,getByIndices:ke,usage:o,name:e,strides:U,shape:j,rank:d}},Q=(e,t,r,o=1)=>mo(e,t,r,"input",o),oe=(e,t,r,o=1)=>mo(e,t,r,"output",o),va=(e,t,r,o=1)=>mo(e,t,r,"internal",o),po=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=ba){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],s=typeof t=="number"?1:t[2],p=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,d=p?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,g=p?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${s})
  fn main(${d}) {
    ${g}
  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",s=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${s}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:s}of this.uniforms)if(s&&s>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(s/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(s/4)}>`);else{let p=s==null||s===1?o:`vec${s}<${o}>`;t.push(`${r}:${p}`)}return`
      struct Uniforms { ${t.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`
`)+this.internalVariables.map(t=>t.impl()).join(`
`)}},Mu=e=>new po(e),ti=(e,t)=>{let r=e.length,o=[];for(let s=0;s<r;s++){let p=r-1-s,d=e[p]||1;(t[t.length-1-s]||1)>1&&d===1&&o.unshift(p)}return o}});var eg,Du,tg,rg,Dt,ju,Uu,ri=ae(()=>{"use strict";Se();je();mt();Me();eg=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Du=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,tg=(e,t)=>ee.sortBasedOnPerm(e,Du(e.length,t)),rg=(e,t,r,o)=>{let s=[];s.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let p=0;p<t;++p)s.push(r.indicesSet("a",e[p],`i[${p}]`));return s.push("return a;}"),s.join(`
`)},Dt=(e,t)=>{let r=e.dataType,o=e.dims.length,s=Du(o,t),p=tg(e.dims,s),d=oe("output",r,p.length),g=Q("a",r,o),b=w=>`
  ${w.registerUniform("output_size","u32").declareVariables(g,d)}

  ${rg(s,o,g,d)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${d.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${d.setByOffset("global_idx",g.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:w=>{let f=ee.size(p);return{outputs:[{dims:p,dataType:w[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...le(w[0].dims,p)]}},getShaderSource:b}},ju=(e,t)=>{eg(e.inputs),e.compute(Dt(e.inputs[0],t.perm))},Uu=e=>De({perm:e.perm})});var ig,ng,ag,og,sg,ug,lg,dg,cg,pg,Kt,Nu,Wu,Vu,Gu,Hu,Lu,Fu,qu,Ku,Ju,Yu=ae(()=>{"use strict";Se();je();Me();wa();ri();ig={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},ng={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},ag={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},og={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},sg=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},ug=(e,t)=>{let r=[],o=e.length;for(let p=0;p<o;p++)t.indexOf(p)===-1&&r.push(e[p]);let s=t.map(p=>e[p]);return[r,s]},lg=(e,t)=>{let r=e.length+t.length,o=[],s=0;for(let p=0;p<r;p++)t.indexOf(p)===-1?o.push(e[s++]):o.push(1);return o},dg=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},cg=(e,t)=>{let r=[];if(!dg(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},pg=(e,t,r,o,s,p,d)=>{let g=r[0].dims,b=ee.size(p),w=ee.size(d),f=Q("_A",r[0].dataType,g),C=oe("output",s,p),S=32,O=`
          var<workgroup> aBestValues : array<${C.type.storage}, ${S}>;
       `;return{name:e,shaderCache:t,getShaderSource:P=>`
        ${P.registerUniform("reduceSize","u32").declareVariables(f,C)}
        ${O}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${P.mainStart(S)}

          let outputIndex = global_idx / ${S};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = ${C.type.storage}(${ag[o]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${S}) {
           let candidate = ${C.type.storage}(${f.getByOffset("offset + k")});
           bestValue = ${ig[o]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${S}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${ng[o]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${C.setByOffset("outputIndex",`${o==="mean"?`bestValue / ${C.type.storage}(uniforms.reduceSize)`:`${og[o]}`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:p,dataType:s}],dispatchGroup:{x:b},programUniforms:[{type:12,data:w}]})}},Kt=(e,t,r,o)=>{let s=e.inputs.length===1?r:ho(e.inputs,r),p=s.axes;p.length===0&&!s.noopWithEmptyAxes&&(p=e.inputs[0].dims.map((O,E)=>E));let d=ee.normalizeAxes(p,e.inputs[0].dims.length),g=d,b=e.inputs[0],w=cg(g,e.inputs[0].dims.length);w.length>0&&(b=e.compute(Dt(e.inputs[0],w),{inputs:[0],outputs:[-1]})[0],g=sg(g.length,b.dims.length));let[f,C]=ug(b.dims,g),S=f;s.keepDims&&(S=lg(f,d)),e.compute(pg(t,{hint:s.cacheKey,inputDependencies:["type"]},[b],o,e.inputs[0].dataType,S,C),{inputs:[b]})},Nu=(e,t)=>{Kt(e,"ReduceMeanShared",t,"mean")},Wu=(e,t)=>{Kt(e,"ReduceL1Shared",t,"l1")},Vu=(e,t)=>{Kt(e,"ReduceL2Shared",t,"l2")},Gu=(e,t)=>{Kt(e,"ReduceLogSumExpShared",t,"logSumExp")},Hu=(e,t)=>{Kt(e,"ReduceMaxShared",t,"max")},Lu=(e,t)=>{Kt(e,"ReduceMinShared",t,"min")},Fu=(e,t)=>{Kt(e,"ReduceProdShared",t,"prod")},qu=(e,t)=>{Kt(e,"ReduceSumShared",t,"sum")},Ku=(e,t)=>{Kt(e,"ReduceSumSquareShared",t,"sumSquare")},Ju=(e,t)=>{Kt(e,"ReduceLogSumShared",t,"logSum")}});var Jt,fg,_a,ho,Yt,mg,hg,gg,yg,bg,vg,wg,_g,$g,Cg,Zt,Zu,Xu,Qu,el,tl,rl,il,nl,al,ol,wa=ae(()=>{"use strict";Se();je();mt();Me();Yu();Jt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},fg=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],_a=(e,t,r,o,s,p,d=!1,g=!1)=>{let b=[],w=r[0].dims,f=w.length,C=ee.normalizeAxes(s,f),S=!g&&C.length===0;w.forEach((j,U)=>{S||C.indexOf(U)>=0?d&&b.push(1):b.push(j)});let O=b.length,E=ee.size(b);return{name:e,shaderCache:t,getShaderSource:j=>{let U=[],z=Q("_A",r[0].dataType,f),N=oe("output",p,O),W=o(z,N,C),J=W[2];for(let Y=0,te=0;Y<f;Y++)S||C.indexOf(Y)>=0?(d&&te++,J=`for(var j${Y}: u32 = 0; j${Y} < ${w[Y]}; j${Y}++) {
                  ${W[2].includes("last_index")?`let last_index = j${Y};`:""}
                  ${z.indicesSet("input_indices",Y,`j${Y}`)}
                  ${J}
                }`):(U.push(`${z.indicesSet("input_indices",Y,N.indicesGet("output_indices",te))};`),te++);return`

        ${j.registerUniform("output_size","u32").declareVariables(z,N)}

        ${j.mainStart()}
          ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${z.type.indices};
          let output_indices = ${N.offsetToIndices("global_idx")};

          ${U.join(`
`)}
          ${W[0]}       // init ops for reduce max/min
          ${W[1]}
          ${J}
          ${W[3]}
          ${W.length===4?N.setByOffset("global_idx","value"):W.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:b,dataType:p}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},...le(w,b)]})}},ho=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),De({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Yt=(e,t,r,o)=>{let s=e.inputs,p=s.length===1?r:ho(s,r);e.compute(_a(t,{hint:p.cacheKey,inputDependencies:["rank"]},[s[0]],p.noopWithEmptyAxes&&p.axes.length===0?fg:o,p.axes,s[0].dataType,p.keepDims,p.noopWithEmptyAxes),{inputs:[0]})},mg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceLogSum",t,(o,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},hg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceL1",t,(o,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},gg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceL2",t,(o,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},yg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceLogSumExp",t,(o,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},bg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceMax",t,(o,s,p)=>{let d=[];for(let g=0;g<o.rank;g++)(p.indexOf(g)>=0||p.length===0)&&d.push(o.indicesSet("input_indices",g,0));return[`${d.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},vg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceMean",t,(o,s,p)=>{let d=1;for(let g=0;g<o.rank;g++)(p.indexOf(g)>=0||p.length===0)&&(d*=e.inputs[0].dims[g]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${d});`]})},wg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceMin",t,(o,s,p)=>{let d=[];for(let g=0;g<o.rank;g++)(p.indexOf(g)>=0||p.length===0)&&d.push(`input_indices[${g}] = 0;`);return[`${d.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},_g=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceProd",t,(o,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},$g=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceSum",t,(o,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Cg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceSumSquare",t,(o,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},Zt=(e,t,r)=>{if(t.length===0)return r;let o=1,s=1;for(let p=0;p<t.length;p++)t.indexOf(p)===-1?o*=e[p]:s*=e[p];return s<32&&o>1024},Zu=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vg(e,t):Nu(e,t)},Xu=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?hg(e,t):Wu(e,t)},Qu=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?gg(e,t):Vu(e,t)},el=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?yg(e,t):Gu(e,t)},tl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?bg(e,t):Hu(e,t)},rl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wg(e,t):Lu(e,t)},il=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_g(e,t):Fu(e,t)},nl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$g(e,t):qu(e,t)},al=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cg(e,t):Ku(e,t)},ol=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?mg(e,t):Ju(e,t)}});var sl,ul,ll,go,dl=ae(()=>{"use strict";Se();mt();wa();sl=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},ul=(e,t)=>{sl(e.inputs);let r=(o,s,p)=>{let d=[];for(let g=0;g<o.rank;g++)(p.indexOf(g)>=0||p.length===0)&&d.push(`input_indices[${g}] = 0;`);return[`${d.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${o.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]};e.compute(_a("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},ll=(e,t)=>{sl(e.inputs);let r=(o,s,p)=>{let d=[];for(let g=0;g<o.rank;g++)(p.indexOf(g)>=0||p.length===0)&&d.push(`input_indices[${g}] = 0;`);return[`${d.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${o.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]};e.compute(_a("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},go=e=>De(e)});var xg,Sg,Ig,Ag,$a,Tg,cl,yo=ae(()=>{"use strict";Se();fa();Me();xg=(e,t)=>{let r=e[0],o=e[1],s=e[2],p=e[3],d=e[4],g=e[5];if(d&&g)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let b=r.dims[0],w=r.dims[1],f=r.dims[2];if(s.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(o.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(o.dims[0]!==f)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(s.dims[0]!==o.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let C=s.dims[0]/3,S=C,O=S;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let N of t.qkvHiddenSizes)if(N%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");C=t.qkvHiddenSizes[0],S=t.qkvHiddenSizes[1],O=t.qkvHiddenSizes[2]}let E=w;if(C!==S)throw new Error("qkv_hidden_sizes first element should be same as the second");if(s.dims[0]!==C+S+O)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let P=0;if(d){if(S!==O)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(d.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(d.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(d.dims[1]!==b)throw new Error('Input "past" second dimension must be batch_size');if(d.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(d.dims[4]!==S/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(P=d.dims[3])}let j=E+P,U=-1,z=0;if(p)throw new Error("Mask not supported");if(d)throw new Error("past is not supported");if(g)throw new Error("relativePositionBias is not supported");return{batchSize:b,sequenceLength:w,pastSequenceLength:P,kvSequenceLength:E,totalSequenceLength:j,maxSequenceLength:U,inputHiddenSize:f,hiddenSize:C,vHiddenSize:O,headSize:Math.floor(C/t.numHeads),vHeadSize:Math.floor(O/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:z,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Sg=(e,t,r,o)=>{let s=Ze(o),p=64,d=o/s;d<p?p=1:d/8<64&&(p=Math.ceil(d/8));let g=Math.ceil(o/s/p),b=[{type:t.dataType,data:1/o},{type:12,data:d},{type:12,data:g}],w=Le(t.dataType,s),f=C=>{let S=oe("x",t.dataType,t.dims,s),O="thread_max_vector";s===2?O="max(thread_max_vector.x, thread_max_vector.y)":s===4&&(O="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let E=It(t.dataType),P=[{name:"d_inv",type:E},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`
  var<workgroup> wgMax: array<f32, ${p}>;
  var<workgroup> wgSum: array<f32, ${p}>;
  ${C.registerUniforms(P).declareVariables(S)}
  ${C.mainStart([p,1,1])}
    let localOffset = local_idx * uniforms.elements_per_wg;
    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;

    var thread_max_vector = ${ht("f32",s,"-3.402823e+38f")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      thread_max_vector = max(${Wt(E,s,"x[offset + i]")}, thread_max_vector);
    }
    wgMax[local_idx] = ${O};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${p}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${ht("f32",s,"0")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      sumVector += exp(${Wt(E,s,"x[offset + i]")} - maxValue);
    }
    wgSum[local_idx] = ${At("sumVector",s)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${p}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        x[offset + i] = ${ht(E,s,"uniforms.d_inv")};
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        let f32input = ${Wt(E,s,"x[offset + i]")};
        x[offset + i] = ${S.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${p};${w};${s}`},getShaderSource:f,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:b})},{inputs:[t],outputs:[]})},Ig=(e,t,r,o,s,p)=>{let d=[s.batchSize,s.numHeads,s.sequenceLength,s.kvSequenceLength+s.pastSequenceLength],g=p.scale===0?1/Math.sqrt(s.headSize):p.scale,b=Ze(s.headSize),w=s.headSize/b,f=12,C={x:Math.ceil(s.totalSequenceLength/f),y:Math.ceil(s.sequenceLength/f),z:s.batchSize*s.numHeads},S=[{type:12,data:s.sequenceLength},{type:12,data:w},{type:12,data:s.totalSequenceLength},{type:12,data:s.kvSequenceLength},{type:t.dataType,data:g}],O=[t,r],E=j=>{let U=Q("q",t.dataType,t.dims,b),z=Q("key",r.dataType,r.dims,b),N=oe("output",t.dataType,d),W=Le(t.dataType),J=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:W}];return`
  const beta: ${W} = 1.0;
  const TILE_SIZE = ${f}u;

  var<workgroup> tileQ: array<${U.type.storage}, ${f*f}>;
  var<workgroup> tileK: array<${U.type.storage}, ${f*f}>;
  ${j.registerUniforms(J).declareVariables(U,z,N)}
  ${j.mainStart([f,f,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let lm = m + local_id.y;
    let ln = n + local_id.x;

    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;

    var value = ${ht(W,b)};
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (lm < uniforms.M && ln < uniforms.N) {
      let outputIdx = headOffset + lm * uniforms.N + ln;
      output[outputIdx] = ${At("value",b)} * uniforms.alpha;
    }
  }`},P=e.compute({name:"AttentionProbs",shaderCache:{hint:`${b}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:d,dataType:t.dataType,gpuDataType:0}],dispatchGroup:C,programUniforms:S}),getShaderSource:E},{inputs:O,outputs:[-1]})[0];return Sg(e,P,s.batchSize*s.numHeads*s.sequenceLength,s.totalSequenceLength),P},Ag=(e,t,r,o)=>{let s=[o.batchSize,o.sequenceLength,o.vHiddenSize],p=12,d={x:Math.ceil(o.vHeadSize/p),y:Math.ceil(o.sequenceLength/p),z:o.batchSize*o.numHeads},g=[{type:12,data:o.sequenceLength},{type:12,data:o.totalSequenceLength},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}],b=w=>{let f=Q("probs",t.dataType,t.dims),C=Q("v",r.dataType,r.dims),S=oe("output",t.dataType,s),O=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${p}u;
  var<workgroup> tileQ: array<${f.type.value}, ${p*p}>;
  var<workgroup> tileK: array<${f.type.value}, ${p*p}>;
  ${w.registerUniforms(O).declareVariables(f,C,S)}
  ${w.mainStart([p,p,1])}
   let headIdx = workgroup_id.z;
   let m = workgroup_id.y * TILE_SIZE + local_id.y;
   let n = workgroup_id.x * TILE_SIZE + local_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${f.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType,gpuDataType:0}],dispatchGroup:d,programUniforms:g}),getShaderSource:b},{inputs:[t,r],outputs:[0]})[0]},$a=(e,t,r,o,s,p,d,g,b,w,f)=>{let C=Ig(e,t,r,b,w,f);Ag(e,C,o,w)},Tg=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,s=t.inputHiddenSize,p=t.headSize,d=12,g={x:Math.ceil(t.headSize/d),y:Math.ceil(t.sequenceLength/d),z:t.batchSize*t.numHeads},b=[e.inputs[0],e.inputs[1],e.inputs[2]],w=[{type:12,data:o},{type:12,data:s},{type:12,data:p},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],f=C=>{let S=oe("output_q",b[0].dataType,r),O=oe("output_k",b[0].dataType,r),E=oe("output_v",b[0].dataType,r),P=Q("input",b[0].dataType,b[0].dims),j=Q("weight",b[1].dataType,b[1].dims),U=Q("bias",b[2].dataType,b[2].dims),z=P.type.storage,N=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${d}u;
  var<workgroup> tileInput: array<${z}, ${d*d}>;
  var<workgroup> tileWeightQ: array<${z}, ${d*d}>;
  var<workgroup> tileWeightK: array<${z}, ${d*d}>;
  var<workgroup> tileWeightV: array<${z}, ${d*d}>;
  ${C.registerUniforms(N).declareVariables(P,j,U,S,O,E)}
  ${C.mainStart([d,d,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE + local_id.y;
    let n = workgroup_id.x * TILE_SIZE + local_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${z}(0);
    var valueK = ${z}(0);
    var valueV = ${z}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:g,programUniforms:w}),getShaderSource:f},{inputs:b,outputs:[-1,-1,-1]})},cl=(e,t)=>{let r=xg(e.inputs,t),[o,s,p]=Tg(e,r);return $a(e,o,s,p,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var Eg,kg,Og,pl,fl=ae(()=>{"use strict";Mt();Se();je();mt();Me();Eg=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,s,p)=>{let d=s.length;if(d!==o.length)throw new Error(`${p}: num dimensions != ${d}`);s.forEach((g,b)=>{if(g!==o[b])throw new Error(`${p}: dim[${b}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},kg=(e,t)=>{let{epsilon:r,spatial:o,format:s}=t,p=e[0].dims,d=o?Ze(p[p.length-1]):1,g=s==="NHWC"&&p.length>1?d:1,b=ee.size(p)/d,w=o,f=w?p.length:p,C=Q("x",e[0].dataType,e[0].dims,d),S=Q("scale",e[1].dataType,e[1].dims,g),O=Q("bias",e[2].dataType,e[2].dims,g),E=Q("inputMean",e[3].dataType,e[3].dims,g),P=Q("inputVar",e[4].dataType,e[4].dims,g),j=oe("y",e[0].dataType,f,d),U=()=>{let N="";if(o)N=`let cOffset = ${p.length===1?"0u":s==="NHWC"?`outputIndices[${p.length-1}] / ${d}`:"outputIndices[1]"};`;else if(s==="NCHW")N=`
            ${j.indicesSet("outputIndices","0","0")}
            let cOffset = ${j.indicesToOffset("outputIndices")};`;else{N=`var cIndices = ${S.type.indices}(0);
                       cIndices[0] = outputIndices[${p.length-1}];`;for(let W=1;W<S.rank;W++)N+=`cIndices[${W}] = outputIndices[${W}];`;N+=`let cOffset = ${S.indicesToOffset("cIndices")};`}return N},z=N=>`
  const epsilon = ${r};
  ${N.registerUniform("outputSize","u32").declareVariables(C,S,O,E,P,j)}
  ${N.mainStart()}
  ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${j.offsetToIndices(`global_idx * ${d}`)};
    ${U()}
    let scale = ${S.getByOffset("cOffset")};
    let bias = ${O.getByOffset("cOffset")};
    let inputMean = ${E.getByOffset("cOffset")};
    let inputVar = ${P.getByOffset("cOffset")};
    let x = ${C.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${j.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${d}`,inputDependencies:w?["rank","type","type","type","type"]:void 0},getShaderSource:z,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:w?[{type:12,data:b},...le(p)]:[{type:12,data:b}]})}},Og=e=>De(e),pl=(e,t)=>{let{inputs:r,outputCount:o}=e,s=Og({...t,outputCount:o});if(Ge.webgpu.validateInputContent&&Eg(r,s),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(kg(r,s))}});var Pg,Rg,ml,hl=ae(()=>{"use strict";je();Me();Pg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Rg=e=>{let t=e[0].dims,r=e[0].dims[2],o=ee.size(t)/4,s=e[0].dataType,p=Q("input",s,t,4),d=Q("bias",s,[r],4),g=Q("residual",s,t,4),b=oe("output",s,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:f=>`
  const channels = ${r}u / 4;
  ${f.declareVariables(p,d,g,b)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let value = ${p.getByOffset("global_idx")}
      + ${d.getByOffset("global_idx % channels")} + ${g.getByOffset("global_idx")};
    ${b.setByOffset("global_idx","value")}
  }`}},ml=e=>{Pg(e.inputs),e.compute(Rg(e.inputs))}});var zg,He,gl,yl,bl,vl,wl,_l,$l,Cl,xl,Bg,Sl,Il,Al,Tl,Ca,El,xa,kl,Ol,Pl,Rl,zl,Bl,Ml,Dl,jl,Ul,Nl,Wl,Vl,Gl,Hl,Ll,Fl,ql,bo,vo,Kl,Jl,Yl,Sa=ae(()=>{"use strict";Se();je();mt();Me();zg=(e,t,r,o,s,p)=>{let d=Math.ceil(t/4),g="";typeof s=="string"?g=`${s}(a)`:g=s("a");let b=Q("inputData",r,[d],4),w=oe("outputData",o,[d],4);return`
      ${e.registerUniform("vec_size","u32").declareVariables(b,w)}

  ${p??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${b.getByOffset("global_idx")};
    ${w.setByOffset("global_idx",g)}
  }`},He=(e,t,r,o,s,p=e.dataType)=>({name:t,shaderCache:{hint:s,inputDependencies:["type"]},getShaderSource:d=>zg(d,ee.size(e.dims),e.dataType,p,r,o),getRunData:d=>({outputs:[{dims:e.dims,dataType:p}],dispatchGroup:{x:Math.ceil(ee.size(d[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(ee.size(e.dims)/4)}]})}),gl=e=>{e.compute(He(e.inputs[0],"Abs","abs"))},yl=e=>{e.compute(He(e.inputs[0],"Acos","acos"))},bl=e=>{e.compute(He(e.inputs[0],"Acosh","acosh"))},vl=e=>{e.compute(He(e.inputs[0],"Asin","asin"))},wl=e=>{e.compute(He(e.inputs[0],"Asinh","asinh"))},_l=e=>{e.compute(He(e.inputs[0],"Atan","atan"))},$l=e=>{e.compute(He(e.inputs[0],"Atanh","atanh"))},Cl=e=>De(e),xl=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(He(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Bg=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:ga,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:ya;return De({min:t,max:r})},Sl=(e,t)=>{let r=e.inputs.length===1?t:Bg(e.inputs),o=It(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Clip",s=>`clamp(${s}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));
    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));
`,r.cacheKey),{inputs:[0]})},Il=e=>{e.compute(He(e.inputs[0],"Ceil","ceil"))},Al=e=>{e.compute(He(e.inputs[0],"Cos","cos"))},Tl=e=>{e.compute(He(e.inputs[0],"Cosh","cosh"))},Ca=e=>De(e),El=(e,t)=>{let r=It(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},xa=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,kl=e=>{let t=It(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,xa(t)))},Ol=e=>{e.compute(He(e.inputs[0],"Exp","exp"))},Pl=e=>{e.compute(He(e.inputs[0],"Floor","floor"))},Rl=e=>{let t=It(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,xa(t)))},zl=(e,t)=>{let r=It(e.inputs[0].dataType);e.compute(He(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},Bl=e=>{e.compute(He(e.inputs[0],"Not",t=>`!${t}`))},Ml=e=>{e.compute(He(e.inputs[0],"Neg",t=>`-${t}`))},Dl=e=>{e.compute(He(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},jl=e=>{let t=It(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Ul=e=>{e.compute(He(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},Nl=e=>De(e),Wl=(e,t)=>{let r=It(e.inputs[0].dataType);e.compute(He(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Vl=e=>{e.compute(He(e.inputs[0],"Sin","sin"))},Gl=e=>{e.compute(He(e.inputs[0],"Sinh","sinh"))},Hl=e=>{e.compute(He(e.inputs[0],"Sqrt","sqrt"))},Ll=e=>{e.compute(He(e.inputs[0],"Tan","tan"))},Fl=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,ql=e=>{e.compute(He(e.inputs[0],"Tanh",Fl))},bo=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${Fl("v")};
}
`,vo=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Kl=e=>{let t=It(e.inputs[0].dataType);e.compute(He(e.inputs[0],"FastGelu",vo,bo(t),void 0,e.inputs[0].dataType))},Jl=(e,t)=>{let r=It(e.inputs[0].dataType);return e.compute(He(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},Yl=e=>{e.compute(He(e.inputs[0],"Log","log"))}});var Mg,Dg,Xl,Ql=ae(()=>{"use strict";je();Me();Sa();Mg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Dg=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=Q("input",e[0].dataType,e[0].dims,4),o=Q("bias",e[0].dataType,[e[0].dims[2]],4),s=oe("output",e[0].dataType,t,4),p=ee.size(t)/4,d=Le(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)}}),getShaderSource:b=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${b.declareVariables(r,o,s)}

  ${xa(d)}

  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes(p)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${s.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},Xl=e=>{Mg(e.inputs),e.compute(Dg(e.inputs))}});var jg,Ug,Xt,ed,td,rd,id,nd,ad,od,sd,ud,ld,dd=ae(()=>{"use strict";Se();je();Me();jg=(e,t,r,o,s,p,d,g,b,w,f,C)=>{let S,O;typeof g=="string"?S=O=(z,N)=>`${g}((${z}),(${N}))`:typeof g=="function"?S=O=g:(S=g.scalar,O=g.vector);let E=oe("outputData",f,o.length,4),P=Q("aData",b,t.length,4),j=Q("bData",w,r.length,4),U;if(s)if(p){let z=ee.size(t)===1,N=ee.size(r)===1,W=t.length>0&&t[t.length-1]%4===0,J=r.length>0&&r[r.length-1]%4===0;z||N?U=E.setByOffset("global_idx",O(z?`${P.type.value}(${P.getByOffset("0")}.x)`:P.getByOffset("global_idx"),N?`${j.type.value}(${j.getByOffset("0")}.x)`:j.getByOffset("global_idx"))):U=`
            let outputIndices = ${E.offsetToIndices("global_idx * 4u")};
            let offsetA = ${P.broadcastedIndicesToOffset("outputIndices",E)};
            let offsetB = ${j.broadcastedIndicesToOffset("outputIndices",E)};
            ${E.setByOffset("global_idx",O(d||W?P.getByOffset("offsetA / 4u"):`${P.type.value}(${P.getByOffset("offsetA / 4u")}[offsetA % 4u])`,d||J?j.getByOffset("offsetB / 4u"):`${j.type.value}(${j.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else U=E.setByOffset("global_idx",O(P.getByOffset("global_idx"),j.getByOffset("global_idx")));else{if(!p)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let z=(N,W,J="")=>{let Y=`aData[indexA${W}][componentA${W}]`,te=`bData[indexB${W}][componentB${W}]`;return`
            let outputIndices${W} = ${E.offsetToIndices(`global_idx * 4u + ${W}u`)};
            let offsetA${W} = ${P.broadcastedIndicesToOffset(`outputIndices${W}`,E)};
            let offsetB${W} = ${j.broadcastedIndicesToOffset(`outputIndices${W}`,E)};
            let indexA${W} = offsetA${W} / 4u;
            let indexB${W} = offsetB${W} / 4u;
            let componentA${W} = offsetA${W} % 4u;
            let componentB${W} = offsetB${W} % 4u;
            ${N}[${W}] = ${J}(${S(Y,te)});
          `};f===9?U=`
            var data = vec4<u32>(0);
            ${z("data",0,"u32")}
            ${z("data",1,"u32")}
            ${z("data",2,"u32")}
            ${z("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:U=`
            ${z("outputData[global_idx]",0)}
            ${z("outputData[global_idx]",1)}
            ${z("outputData[global_idx]",2)}
            ${z("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(P,j,E)}

        ${C??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${U}
      }`},Ug=(e,t,r,o,s,p,d=r.dataType)=>{let g=!ee.areEqual(r.dims,o.dims),b=r.dims,w=ee.size(r.dims),f=!1,C=!1,S=[g];if(g){let O=qt.calcShape(r.dims,o.dims,!1);if(!O)throw new Error("Can't perform binary op on the given tensors");b=O,w=ee.size(b);let E=ee.size(r.dims)===1,P=ee.size(o.dims)===1,j=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,U=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;S.push(E),S.push(P),S.push(j),S.push(U);let z=1;for(let N=1;N<b.length;N++){let W=r.dims[r.dims.length-N]??1,J=o.dims[o.dims.length-N]??1;if(W===J)z*=W;else break}z%4===0?(C=!0,f=!0):(E||P||j||U)&&(f=!0)}else f=!0;return S.push(f),{name:e,shaderCache:{hint:t+S.map(O=>O.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:O=>jg(O,r.dims,o.dims,b,f,g,C,s,r.dataType,o.dataType,d,p),getRunData:()=>({outputs:[{dims:b,dataType:d}],dispatchGroup:{x:Math.ceil(w/64/4)},programUniforms:[{type:12,data:Math.ceil(ee.size(b)/4)},...le(r.dims,o.dims,b)]})}},Xt=(e,t,r,o,s,p)=>{e.compute(Ug(t,s??"",e.inputs[0],e.inputs[1],r,o,p))},ed=e=>{Xt(e,"Add",(t,r)=>`${t}+${r}`)},td=e=>{Xt(e,"Div",(t,r)=>`${t}/${r}`)},rd=e=>{Xt(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},id=e=>{Xt(e,"Mul",(t,r)=>`${t}*${r}`)},nd=e=>{let t=Q("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Xt(e,"Pow",{scalar:(o,s)=>`pow_custom(${o},${s})`,vector:(o,s)=>`pow_vector_custom(${o},${s})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},ad=e=>{Xt(e,"Sub",(t,r)=>`${t}-${r}`)},od=e=>{Xt(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},sd=e=>{Xt(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},ud=e=>{Xt(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},ld=e=>{Xt(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var Wg,Vg,Gg,Hg,cd,pd,fd=ae(()=>{"use strict";Se();je();mt();Me();Wg=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,o=e[r],s=o.dataType,p=o.dims.length;e.forEach((d,g)=>{if(g!==r){if(d.dataType!==s)throw new Error("input tensors should be one type");if(d.dims.length!==p)throw new Error("input tensors should have the same shape");d.dims.forEach((b,w)=>{if(w!==t&&b!==o.dims[w])throw new Error("non concat dimensions must match")})}})},Vg=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,Gg=(e,t)=>{let r=e.length,o=[];for(let s=0;s<r;++s){let p=t.setByOffset("global_idx",e[s].getByIndices("indices"));r===1?o.push(p):s===0?o.push(`if (inputIndex == ${s}u) { ${p} }`):s===r-1?o.push(`else { ${p} }`):o.push(`else if (inputIndex == ${s}) { ${p} }`)}return o.join(`
`)},Hg=(e,t,r,o)=>{let s=ee.size(r),p=new Array(e.length),d=new Array(e.length),g=0,b=[],w=[],f=[{type:12,data:s}];for(let P=0;P<e.length;++P)g+=e[P].dims[t],p[P]=g,w.push(e[P].dims.length),d[P]=Q(`input${P}`,o,w[P]),b.push("rank"),f.push({type:12,data:p[P]});for(let P=0;P<e.length;++P)f.push(...le(e[P].dims));f.push(...le(r));let C=oe("output",o,r.length),S=C.indicesGet("indices",t),O=Array.from(Array(p.length).keys()).map(P=>`uniforms.sizeInConcatAxis${P}`).join(","),E=P=>`

  ${(()=>{P.registerUniform("outputSize","u32");for(let j=0;j<e.length;j++)P.registerUniform(`sizeInConcatAxis${j}`,"u32");return P.declareVariables(...d,C)})()}

  ${Vg(p.length,O)}

  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${C.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${S});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${p.length}u>(${O});
      ${S} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Gg(d,C)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:b},getRunData:()=>({outputs:[{dims:r,dataType:o}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:f}),getShaderSource:E}},cd=(e,t)=>{let r=e.inputs,o=r[0].dims,s=ee.normalizeAxis(t.axis,o.length);Wg(r,s);let p=o.slice();p[s]=r.reduce((g,b)=>g+(b.dims.length>s?b.dims[s]:0),0);let d=r.filter(g=>ee.size(g.dims)>0);e.compute(Hg(d,s,p,r[0].dataType),{inputs:d})},pd=e=>De({axis:e.axis})});var Vt,Gt,Ht,Ia,cr=ae(()=>{"use strict";Se();je();Vt=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Gt=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Ht=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Ia=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[ga,ya];return{activation:t,clipMax:o,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}});var gt,Aa,Ta=ae(()=>{"use strict";gt=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Aa=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `});var Ea,wo=ae(()=>{"use strict";Ea=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`});var Lg,Fg,mn,md,qg,hn,Kg,ka,gn=ae(()=>{"use strict";Se();je();Me();cr();Ta();Lg=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,Fg=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,mn=(e,t,r="f32",o,s=!1,p=32,d=!1,g=32)=>{let b=t[1]*e[1],w=t[0]*e[0],f=s?b:p,C=s?p:b,S=f/t[0],O=p/t[1];if(!((s&&S===4&&e[1]===4||!s&&(S===3||S===4))&&f%t[0]===0&&p%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${s} is true, innerElementSize ${S} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${S} must be 3 or 4.
  tileAWidth ${f} must be divisible by workgroupSize[0]${t[0]}. tileInner ${p} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${S}<${r}>, ${f/S}>, ${C}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${w/e[0]}>, ${p}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${S};
const tileInner = ${p};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${d?"0":"i32(globalId.z)"};
  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${b};

  let num_tiles = ${d?`${Math.ceil(g/p)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${d?`i32(globalId.z) * ${g}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${O};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Lg(s,o)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${O}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${S===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Fg(s,S)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},md=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,qg=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",hn=(e,t,r="f32",o,s=!1,p=32,d=!1,g=32,b=!1)=>{let w=e[1]*t[1],f=e[0]*t[0],C=s?w:p,S=s?p:w;if(!(S%t[1]===0&&C%t[0]===0&&p%t[1]===0))throw new Error(`tileAHight ${S} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${C} must be divisible by workgroupSize[0]${t[0]}, tileInner ${p} must be divisible by workgroupSize[1]${t[1]}`);let O=S/t[1],E=C/t[0],P=p/t[1],j=b?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${w};
    let globalColStart = i32(workgroupId.x) * ${f};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${S}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${C}; inputCol = inputCol + ${t[0]}) {
          ${md(s,o)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${f}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${o?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${s?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${w};

let tileRowA = i32(localId.y) * ${O};
let tileColA = i32(localId.x) * ${E};
let tileRowB = i32(localId.y) * ${P};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${O}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${E}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${md(s,o)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${P}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${o?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${qg(s)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${C}>, ${S}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${f}>, ${p}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${p};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${d?"0":"i32(globalId.z)"};
    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${d?`${Math.ceil(g/p)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${d?`i32(globalId.z) * ${g}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${j}
  }
`},Kg=(e,t,r,o,s,p=!1)=>{let[d,g,b]=s,[w,f,C,S]=o,O=ti(d,b),E=ti(g,b),P=Le(o[0].type.tensor),j=()=>{let N=f.rank,W=w.rank,J=`var aIndices: ${f.type.indices};`;for(let Y=N-2-1,te=W-1;Y>=0;Y--,te--)J+=`
aIndices[${Y}] = ${W>1?`batchIndices[${te}]`:"batchIndices"};`;return O.forEach(Y=>{J+=`
aIndices[${Y}] = 0;`}),J+=`
aIndices[${N-2}] = u32(row);
                   aIndices[${N-1}] = u32(colIn);`,J},U=()=>{let N=C.rank,W=w.rank,J=`var bIndices: ${C.type.indices};`;for(let Y=N-2-1,te=W-1;Y>=0;Y--,te--)J+=`
bIndices[${Y}] = ${W>1?`batchIndices[${te}]`:"batchIndices"};`;return E.forEach(Y=>{J+=`
bIndices[${Y}] = 0;`}),J+=`
bIndices[${N-2}] = u32(row);
                   bIndices[${N-1}] = u32(colIn);`,J};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${w.type.indices}) -> ${gt(e,P)} {
      var value = ${gt(e,P)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${j()}
        value = ${f.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${w.type.indices}) -> ${gt(e,P)} {
      var value = ${gt(e,P)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${U()}
        value = ${C.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${gt(e,P)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${p?"bias[colIn]":`${gt(e,P)}(bias[row])`};`:""}
        ${r}
        ${S.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},ka=(e,t,r,o,s=!1)=>{let p=e[0].dims,d=e[1].dims,g=p.slice(0,-2),b=d.slice(0,-2),w=o?o.slice(0,-2):r.slice(0,-2),f=ee.size(w),C=p[p.length-2],S=p[p.length-1],O=d[d.length-1],E=S%4===0&&O%4===0,P=C<=8?[4,1,1]:[4,4,1],j=[8,8,1],U=[Math.ceil(O/j[0]/P[0]),Math.ceil(C/j[1]/P[1]),Math.ceil(f/j[2]/P[2])],z=E?4:1,N=[...g,C,S/z],W=N.length,J=[...b,S,O/z],Y=J.length,te=[f,C,O/z],q=[{type:6,data:C},{type:6,data:O},{type:6,data:S}];Gt(t,q),q.push(...le(w,N,J));let ue=["rank","rank"],de=e.length>2;de&&(q.push(...le(e[2].dims)),ue.push("rank")),q.push(...le(te));let Pe=Ne=>{let qe=w.length,Ie=va("batchDims",e[0].dataType,qe,1),Te=Le(e[0].dataType),ge=Q("a",e[0].dataType,W,z),Ue=Q("b",e[1].dataType,Y,z),ke=oe("result",e[0].dataType,te.length,z),be=[ge,Ue];if(de){let ne=s?z:1;be.push(Q("bias",e[2].dataType,e[2].dims.length,ne))}let Re=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ht(t,Re);let Oe=Le(ke.type.tensor),Ve=Vt(t,ke.type.value,Oe),ut=Kg(z,de,Ve,[Ie,ge,Ue,ke],[g,b,w],s);return`
  ${Ne.registerUniforms(Re).registerInternalVariables(Ie).declareVariables(...be,ke)}
  ${ut}
  ${E?mn(P,j,Te,Ie):hn(P,j,Te,Ie)}
                   `};return{name:"MatMul",shaderCache:{hint:`${P};${t.activation};${E};${s}`,inputDependencies:ue},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:U[0],y:U[1],z:U[2]},programUniforms:q}),getShaderSource:Pe}}});var Jg,hd,gd=ae(()=>{"use strict";Se();dr();Me();cr();Ta();wo();gn();Jg=(e,t,r,o,s=!1,p,d=4,g=4,b=4,w="f32")=>{let f=de=>{switch(de){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${w}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${de} is not supported.`)}},C=de=>{switch(de){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${de} is not supported.`)}},S=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,O=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,E=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",P=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",j=e?"row":"col",U=e?"col":"row",z=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${j} / outWidth;
    let outCol = ${j} % outWidth;

    let WRow = ${U} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${U} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${U} % inChannels;
    var resData = ${gt(d,w)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${E} && xCol >= 0 && xCol < ${P}) {
      ${S}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${f(d)}
    }
    return resData;`,N=e?t&&o?`
    let col = colIn * ${d};
    ${z}`:`
    let col = colIn * ${d};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${z}
    }
    return ${gt(d,w)}(0.0);`:o&&r?`
    let col = colIn * ${d};
    ${z}`:`
    let col = colIn * ${d};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${z}
    }
    return ${gt(d,w)}(0.0);`,W=`${C(g)}`,J=gt(b,w),Y=e?gt(d,w):gt(g,w),te=e?gt(g,w):gt(d,w),q=Vt(p,J,w);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Y} {
      ${e?N:W}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${te} {
      ${e?W:N}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${J}) {
      let col = colIn * ${b};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${O}
      ${Aa(s)}
      ${q}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},hd=(e,t,r,o,s,p,d,g)=>{let b=t.format==="NHWC",w=b?e[0].dims[3]:e[0].dims[1],f=r[0],C=b?r[2]:r[3],S=b?r[1]:r[2],O=b?r[3]:r[1],E=b&&(w%4===0||w%3===0)&&O%4===0,P=b?O:C*S,j=b?C*S:O,U=[8,8,1],z=o<=8?[4,1,1]:[4,4,1],N=[Math.ceil(P/U[0]/z[0]),Math.ceil(j/U[1]/z[1]),Math.ceil(f/U[2]/z[2])];Ye("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${N}`);let W=E?b&&w%4!==0?3:4:1,J=U[1]*z[1],Y=U[0]*z[0],te=Math.max(U[0]*W,U[1]),q=o%J===0,ue=s%Y===0,de=p%te===0,Pe=E?[W,4,4]:[1,1,1],Ne=[{type:6,data:o},{type:6,data:s},{type:6,data:p},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Gt(t,Ne),Ne.push(...le(e[0].dims,e[1].dims));let qe=["rank","rank"];d&&(Ne.push(...le(e[2].dims)),qe.push("rank")),Ne.push(...le(r));let Ie=Te=>{let ge=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ht(t,ge);let Ue=E?4:1,ke=Le(e[0].dataType),be=`
      fn setOutputAtIndex(flatIndex : i32, value : ${E?`vec4<${ke}>`:ke}) {
        result[flatIndex] = ${E?`vec4<${ke}>`:ke}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${E?`vec4<${ke}>`:ke}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${E?"/ 4":""}, value);
      }`,Re=Q("x",e[0].dataType,e[0].dims.length,W===3?1:W),Oe=Q("w",e[1].dataType,e[1].dims.length,Ue),Ve=[Re,Oe],ut=oe("result",e[0].dataType,r.length,Ue);if(d){let ne=Q("bias",e[2].dataType,e[2].dims.length,Ue);Ve.push(ne),be+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${E?`vec4<${ke}>`:ke} {
          return bias[coords.${b?"w":"y"}${E?"/ 4":""}];
        }`}return`
        ${Ea("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${Te.registerUniforms(ge).declareVariables(...Ve,ut)}
        ${be}
        ${Jg(b,q,ue,de,d,t,Pe[0],Pe[1],Pe[2],ke)}
        ${E?mn(z,U,ke,void 0,!b,te):hn(z,U,ke,void 0,!b,te,!1,void 0,g)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${W};${E};${q};${ue};${de};${J};${Y};${te}`,inputDependencies:qe},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:N[0],y:N[1],z:N[2]},programUniforms:Ne}),getShaderSource:Ie}}});var _o,yd,bd=ae(()=>{"use strict";Se();je();Me();$o();cr();_o=(e,t,r)=>{let o=e.length>2,s=o?"value += b[output_channel];":"",p=e[0].dims,d=e[1].dims,g=d[0]/t.group,b=t.format==="NHWC",w=Oa(p,d,t.dilations,t.pads,t.strides,b),f=ee.size(w),C=[{type:12,data:f},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:g}];Gt(t,C),C.push(...le(p,d,w));let S=["rank","rank"];o&&(C.push(...le(e[2].dims)),S.push("rank")),C.push(...le(w));let O=E=>{let P=oe("output",e[0].dataType,w.length),j=Le(P.type.tensor),U=Vt(t,P.type.value,j),z=Q("x",e[0].dataType,p.length),N=Q("w",e[1].dataType,d.length),W=[z,N];o&&W.push(Q("b",e[2].dataType,e[2].dims));let J=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Ht(t,J),`
  ${E.registerUniforms(J).declareVariables(...W,P)}

  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${P.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${b?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${b?1:2}], outputIndices[${b?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${P.type.value} = ${P.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${b?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${b?2:3}]) {
            continue;
          }

          let xVal = ${b?z.get("batch","xHeight","xWidth","input_channel"):z.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${N.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${s}
    ${U}
    ${P.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:S},getRunData:()=>({outputs:[{dims:r?r(w):w,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:C}),getShaderSource:O}},yd=(e,t,r)=>{let o=e.length>2,s=Ze(r[3]),p=Ze(r[2]),d=ee.size(r)/s/p,g=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/s],b=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/s],w=[r[0],r[1],r[2],r[3]/s],f=[{type:12,data:d},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];Gt(t,f),f.push(...le(g,b,w));let C=(p-1)*t.strides[1]+b[1],S=O=>{let E=oe("output",e[0].dataType,w.length,s),P=Le(E.type.tensor),j=Vt(t,E.type.value,P),U=Q("x",e[0].dataType,g.length,s),z=Q("w",e[1].dataType,b.length,s),N=[U,z];o&&N.push(Q("b",e[2].dataType,e[2].dims,s));let W=o?"value += b[output_channel];":"",J=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Ht(t,J),`
  ${O.registerUniforms(J).declareVariables(...N,E)}
  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${p}u;
    let col = (index1 % width1) * ${p}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${U.type.value}, ${C}>;
    var values: array<${E.type.value}, ${p}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${b[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${C}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${U.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${U.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${b[1]}; w_width++) {
          let w_val = ${z.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${p}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${p}u; i++) {
      var value = values[i];
      ${W}
      ${j}
      ${E.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${s};${p};${C};${b[0]};${b[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:f}),getShaderSource:S}}});var Co,Yg,vd,xo=ae(()=>{"use strict";Se();je();gn();Me();cr();Co=(e,t,r,o,s=!1)=>{let p=e[0].dims,d=e[1].dims,g=p[p.length-2],b=d[d.length-1],w=p[p.length-1],f=Ze(b),C=Ze(w),S=Ze(g),O=ee.size(r)/f/S,E=e.length>2,P=o?o.slice(0,-2):r.slice(0,-2),U=[ee.size(P),g,b],z=[{type:12,data:O},{type:12,data:g},{type:12,data:b},{type:12,data:w}];Gt(t,z),z.push(...le(P,p,d)),E&&z.push(...le(e[2].dims)),z.push(...le(U));let N=W=>{let J=va("batch_dims",e[0].dataType,P.length),Y=Q("a",e[0].dataType,p.length,C),te=Q("b",e[1].dataType,d.length,f),q=oe("output",e[0].dataType,U.length,f),ue=Le(q.type.tensor),de=Vt(t,q.type.value,ue),Pe=[Y,te],Ne="";if(E){let Re=s?f:1;Pe.push(Q("bias",e[2].dataType,e[2].dims.length,Re)),Ne=`${s?`value += bias[col / ${Re}];`:`value += ${q.type.value}(bias[row + i]);`}`}let qe=p.slice(0,-2),Ie=d.slice(0,-2),Te=ti(qe,P),ge=ti(Ie,P),Ue=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ht(t,Ue);let ke=(Re,Oe)=>{let Ve=Re.rank,ut=Re.name;if(Ve===2)return`var ${ut}_indices = ${Re.type.indices}(0u, 0u);`;let ne=J.rank,ve=`var ${ut}_indices: ${Re.type.indices};`;for(let Ee=Ve-2-1,Tt=ne-1;Ee>=0;Ee--,Tt--)ve+=`
${ut}_indices[${Ee}] = ${ne>1?`batch_indices[${Tt}]`:"batch_indices"};`;return Oe.forEach(Ee=>{ve+=`
${ut}_indices[${Ee}] = 0;`}),ve+=`${ut}_indices[${Ve-2}] = 0u;
                     ${ut}_indices[${Ve-1}] = 0u;`,ve},be=()=>{let Re=`var a_data: ${Y.type.value};`;for(let Oe=0;Oe<C;Oe++)Re+=`
              let b_data${Oe} = b[(b_offset + (k + ${Oe}) * uniforms.N + col) / ${f}];`;for(let Oe=0;Oe<S;Oe++){Re+=`a_data = a[(a_offset + (row + ${Oe}) * uniforms.K + k) / ${C}];`;for(let Ve=0;Ve<C;Ve++)Re+=`
            values[${Oe}] = fma(${te.type.value}(a_data${C===1?"":`[${Ve}]`}), b_data${Ve}, values[${Oe}]);
`}return Re};return`
  ${W.registerUniforms(Ue).registerInternalVariables(J).declareVariables(...Pe,q)}
  ${W.mainStart()}
    ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${f})) * ${f};
    var index1 = global_idx / (uniforms.N / ${f});
    let stride1 = uniforms.M / ${S};
    let row = (index1 % stride1) * ${S};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${J.offsetToIndices("batch")};`}
    ${ke(Y,Te)}
    let a_offset = ${Y.indicesToOffset("a_indices")};
    ${ke(te,ge)}
    let b_offset = ${te.indicesToOffset("b_indices")};
    var values: array<${q.type.value}, ${S}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${C}) {
      ${be()}
    }
    for (var i = 0u; i < ${S}u; i++) {
      var value = values[i];
      ${Ne}
      ${de}
      let cur_indices = ${q.type.indices}(batch, row + i, col);
      let offset = ${q.indicesToOffset("cur_indices")};
      ${q.setByOffset(`offset / ${f}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${f};${C};${S};${s}`,inputDependencies:E?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(O/64)},programUniforms:z}),getShaderSource:N}},Yg=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},vd=e=>{Yg(e.inputs);let t=qt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(Co(e.inputs,{activation:""},t)):e.compute(ka(e.inputs,{activation:""},t))}});var Oa,So,Zg,wd,Io,Xg,Qg,Ao,$o=ae(()=>{"use strict";je();gd();gn();bd();cr();xo();ri();Oa=(e,t,r,o,s,p)=>{let d=e[0],g=e.slice(p?1:2,p?3:4),b=g.length,w=t[0],C=t.slice(2).map((E,P)=>E+(E-1)*(r[P]-1)),O=g.map((E,P)=>E+o[P]+o[P+b]).map((E,P)=>Math.floor((E-C[P]+s[P])/s[P]));return O.splice(0,0,d),O.splice(p?3:1,0,w),O},So=[2,3,1,0],Zg=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},wd=(e,t)=>{let r=e.kernelShape.slice();for(let p=2;p<t[1].dims.length;++p)r[p-2]===0&&(r[p-2]=t[1].dims[p]);let o=e.pads.slice();Ar.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let s=Object.assign({},e);return Object.assign(s,{kernelShape:r,pads:o}),s},Io=e=>{let t=Ia(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],s=e.dilations,p=e.group,d=e.kernel_shape,g=e.pads,b=e.strides,w=e.w_is_const();return{autoPad:o,format:r,dilations:s,group:p,kernelShape:d,pads:g,strides:b,wIsConst:w,...t,cacheKey:`${e.format};${t.activation};`}},Xg=(e,t,r)=>{let o=wd(r,t),s=r.format==="NHWC";if(r.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&s&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let te=Oa(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,s),q=e.kernelCustomData.wT??e.compute(Dt(t[1],So),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=q);let ue=[t[0],q];t.length===3&&ue.push(t[2]),e.compute(yd(ue,o,te),{inputs:ue})}else e.compute(_o(t,o));return}let p=t.length===3,d=t[0].dims[s?1:2],g=t[0].dims[s?2:3],b=t[0].dims[s?3:1],w=t[1].dims[2],f=t[1].dims[3],C=Oa(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,s),S=C[s?1:2],O=C[s?2:3],E=C[s?3:1],P=s&&w===d&&f===g&&r.pads[0]===0&&r.pads[1]===0;if(P||w===1&&f===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let Y=C[0],te,q,ue,de=[];if(s){let qe=e.kernelCustomData.wT??e.compute(Dt(t[1],So),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=qe),P){let Ie=d*g*b;te=t[0].reshape([1,Y,Ie]),q=qe.reshape([1,Ie,E]),ue=[1,Y,E]}else te=t[0].reshape([Y,d*g,b]),q=qe.reshape([1,b,E]),ue=[Y,S*O,E];de.push(te),de.push(q)}else te=t[0].reshape([Y,b,d*g]),q=t[1].reshape([1,E,b]),ue=[Y,E,S*O],de.push(q),de.push(te);p&&de.push(t[2]);let Pe=ue[2],Ne=de[0].dims[de[0].dims.length-1];Pe<8&&Ne<8?e.compute(Co(de,o,C,ue,s),{inputs:de}):e.compute(ka(de,o,C,ue,s),{inputs:de});return}let j=!0,U=e.kernelCustomData.wT??e.compute(Dt(t[1],So),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=U);let z=[t[0],U];p&&z.push(t[2]);let N=s?S*O:E,W=s?E:S*O,J=w*f*b;e.compute(hd(z,o,C,N,W,J,p,j),{inputs:z})},Qg=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let s=[0,t.pads[0],0,t.pads[1]],p=[1].concat(t.strides),d=[1].concat(t.dilations),g=[1].concat(t.kernelShape),b=wd({...t,pads:s,strides:p,dilations:d,kernelShape:g},o);e.compute(_o(o,b,w=>r?[w[0],w[2],w[3]]:[]))},Ao=(e,t)=>{Zg(e.inputs,t),e.inputs[0].dims.length===3?Qg(e,t):Xg(e,e.inputs,t)}});var ey,_d,$d=ae(()=>{"use strict";Se();dr();Me();cr();Ta();wo();gn();ey=(e,t=!1,r,o,s=4)=>{let p=U=>{switch(U){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${o}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${U} is not supported.`)}},d=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,g=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,b=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",w=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",f=e?"row":"col",C=e?"col":"row",S=`
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${f} / outWidth;
      let outCol = ${f} % outWidth;

      let WRow = ${C} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${C} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${b}) || fract(xR) > 0.0) {
        return ${o}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${w}) || fract(xC) > 0.0) {
        return ${o}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${C} % inChannels;
      ${d}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${s}];`,O=e?`
      let col = colIn * ${s};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${S}
      }
      return ${o}(0.0);`:`
      let col = colIn * ${s};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${S}
      }
      return ${o}(0.0);`,E=`
      let col = colIn * ${s};
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${p(s)}
      }
      return ${o}(0.0);
      `,P=Vt(r,o);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${e?O:E}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${e?E:O}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {
    let col = colIn * ${s};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${g}
      ${Aa(t)}
      ${P}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${s}] = value;
    }
  }`},_d=(e,t,r,o,s,p,d,g)=>{let b=t.format==="NHWC",w=b?e[0].dims[3]:e[0].dims[1],f=r[0],C=b?r[2]:r[3],S=b?r[1]:r[2],O=b?r[3]:r[1],E=b?w%4===0&&O%4===0:C%4===0&&O%4===0,P=b?O:C*S,j=b?C*S:O,U=E?[8,8,1]:[P<=4||j<=4?4:16,P>4&&j<=4?4:16,1],z=E?[4,4,1]:[P<=4?1:4,P>4&&j<=4?1:4,1],N=[Math.ceil(P/U[0]/z[0]),Math.ceil(j/U[1]/z[1]),Math.ceil(f/U[2]/z[2])];Ye("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${N}`);let W=E?4:1,J=Math.max(U[0]*W,U[1]),Y=E?4:1,te=[t.kernelShape[b?1:2],t.kernelShape[b?2:3]],q=[te[0]+(t.dilations[0]<=1?0:(te[0]-1)*(t.dilations[0]-1)),te[1]+(t.dilations[1]<=1?0:(te[1]-1)*(t.dilations[1]-1))],ue=[q[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),q[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],de=[{type:6,data:o},{type:6,data:s},{type:6,data:p},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:te},{type:6,data:ue}];Gt(t,de),de.push(...le(e[0].dims,e[1].dims));let Pe=["rank","rank"];d&&(de.push(...le(e[2].dims)),Pe.push("rank")),de.push(...le(r));let Ne=qe=>{let Ie=Q("x",e[0].dataType,e[0].dims.length,Y),Te=Q("w",e[1].dataType,e[1].dims.length,1),ge=oe("result",e[0].dataType,r.length,Y),Ue=[Ie,Te],ke="";if(d){let Oe=Q("bias",e[2].dataType,e[2].dims.length,Y);Ue.push(Oe),ke+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${Oe.type.value} {
            return bias[coords.${b?"w":"y"}${E?"/ 4":""}];
          }`}let be=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:te.length},{name:"pads",type:"i32",length:ue.length}];Ht(t,be);let Re=Le(e[0].dataType,1);if(Re!=="f16"&&Re!=="f32")throw new Error(`elemType ${Re} is not supported.`);return`
        ${Ea("uniforms.result_strides")}
        ${qe.registerUniforms(be).declareVariables(...Ue,ge)};
        ${ke}
        ${ey(b,d,t,Ie.type.value,W)}
        ${E?mn(z,U,Re,void 0,!b,J):hn(z,U,Re,void 0,!b,J,!1,void 0,g)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${z};${U};${E}`,inputDependencies:Pe},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:N[0],y:N[1],z:N[2]},programUniforms:de}),getShaderSource:Ne}}});var ty,To,Cd=ae(()=>{"use strict";Se();dr();je();Me();ty=(e,t,r,o,s,p=!1,d,g,b=!1)=>{let w=b?1:2,f=b?2:3,C=b?3:1,S=p?2:1,O=`
  fn setOutputAtIndex(flatIndex : u32, value : ${p?`vec4<${d}>`:d}) {
    result[flatIndex] = ${p?`vec4<${d}>`:d}(value);
  }`;o&&(O+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${p?`vec4<${d}>`:d} {
      return bias[coords.${b?"w":"y"}${p?"/ 4":""}];
    }`);let E=p?4:1,P=Q("W",t[1].dataType,t[1].dims.length,E),j=Q("Dy",t[0].dataType,t[0].dims.length,E),U=[j,P];o&&U.push(Q("bias",t[2].dataType,[r[C]].length,E));let z=oe("result",t[0].dataType,r.length,E),N=`{
        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${s?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${s?"global_id.y":"workgroup_id.y"} * ${S};
        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${d}>, ${S}>;
        for (var i = 0; i < ${S}; i++) {
          dotProd[i] = vec4<${d}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${d}(dyCorner.x) + ${d}(wR)) / ${d}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${d}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${d}(dyCorner.y) + ${d}(wC)) / ${d}(uniforms.strides.y);
            let dyC2 = (${d}(dyCorner.y) + 1.0 + ${d}(wC)) / ${d}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${d}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${d}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${j.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${d}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${j.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${d}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${C}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${j.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${d}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${j.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${d}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${S}; i = i + 1) {
          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${d}>(0.0)`};
          ${z.set("batch","r","c + i","d1","value")};
        }
      }`,W=`
          let outputIndices = ${z.offsetToIndices("global_idx")};
          let batch = ${z.indicesGet("outputIndices",0)};
          let d1 = ${z.indicesGet("outputIndices",C)};
          let r = ${z.indicesGet("outputIndices",w)};
          let c = ${z.indicesGet("outputIndices",f)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${d}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${d}(dyRCorner) + ${d}(wR)) / ${d}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${d}(uniforms.Dy_shape[${w}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${d}(dyCCorner) + ${d}(wC)) / ${d}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${d}(uniforms.Dy_shape[${f}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${b?j.get("batch","idyR","idyC","inputChannel"):j.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${P.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${o?"bias[d1]":`${d}(0.0)`};
          ${z.setByOffset("global_idx","value")};
        `;return`
  ${e.registerUniforms(g).declareVariables(...U,z)}
  ${O}

    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${p?N:W}}`},To=(e,t,r)=>{let o=e.length>2,s=t.outputShape,p=ee.size(s),d=[Math.ceil(p/64),1,1];Ye("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${d}`);let g=t.format==="NHWC",b=["rank","rank"],w=[t.strides[0],t.strides[1]],f=[t.kernelShape[g?1:2],t.kernelShape[g?2:3]],C=[t.dilations[0],t.dilations[1]],S=[f[0]+(t.dilations[0]<=1?0:(t.kernelShape[g?1:2]-1)*(t.dilations[0]-1)),f[1]+(t.dilations[1]<=1?0:(t.kernelShape[g?2:3]-1)*(t.dilations[1]-1))],O=[S[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),S[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],E=!1,P=t.group,j=e[1].dims,U=j[0]/P,z=j[1],N=[{type:6,data:p},{type:12,data:w},{type:12,data:f},{type:12,data:C},{type:12,data:S},{type:6,data:O},{type:12,data:U},{type:12,data:z},...le(e[0].dims,e[1].dims)];o&&(N.push(...le(e[2].dims)),b.push("rank")),N.push(...le(s));let W=d[1]===1&&d[2]===1,J=Y=>{let te=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:w.length},{name:"filter_dims",type:"u32",length:f.length},{name:"dilations",type:"u32",length:f.length},{name:"effective_filter_dims",type:"u32",length:S.length},{name:"pads",type:"i32",length:O.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],q=Le(e[0].dataType);return`${ty(Y,e,s,o,W,E,q,te,g)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:b},getRunData:()=>({dispatchGroup:{x:d[0],y:d[1],z:d[2]},outputs:[{dims:r?r(s):s,dataType:e[0].dataType}],programUniforms:N}),getShaderSource:J}}});var ry,iy,ny,xd,Sd,ay,oy,sy,uy,Id,Ad=ae(()=>{"use strict";$d();Cd();cr();ri();ry=(e,t,r,o,s,p)=>(e-1)*t+r+(o-1)*s+1-p,iy=(e,t,r,o,s)=>{let p=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=p,r[s]=e-p):t==="SAME_LOWER"&&(r[o]=e-p,r[s]=p)},ny=(e,t,r,o,s,p,d,g,b,w)=>{let f=e.length-2,C=w.length===0;if(b.length===0)for(let E=0;E<f;++E)b.push(0);let S=e[0],O=t[g?3:1]*s;for(let E=0,P=e.length-f-(g?1:0);E<f;++E,++P){let j=e[P],U=C?j*d[E]:w[E],z=ry(j,d[E],p[E],t[P],r[E],U);iy(z,o,p,E,E+f),C&&w.push(d[E]*(j-1)+b[E]+(t[P]-1)*r[E]+1-p[E]-p[E+f])}w.splice(0,0,S),w.splice(g?3:1,0,O)},xd=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((C,S)=>C*S,1)===0){r.length=0;for(let C=2;C<t[1].dims.length;++C)r.push(t[1].dims[C])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let s=e.pads.slice(),p=e.outputShape.slice(),d=e.outputPadding.slice(),g=t[0].dims,b=e.dilations.slice();if(b.reduce((C,S)=>C+S,0)===0){let C=t[0].dims.length-2;b=new Array(C).fill(1)}let w=e.strides.slice();if(w.reduce((C,S)=>C+S,0)===0){let C=t[0].dims.length-2;w=new Array(C).fill(1)}ny(g,r,b,e.autoPad,e.group,s,w,o,d,p);let f=Object.assign({},e);return Object.assign(f,{kernelShape:r,pads:s,outputPadding:d,outputShape:p,dilations:b,strides:w}),f},Sd=e=>{let t=Ia(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],s=e.dilations,p=e.group,d=e.kernelShape,g=e.pads,b=e.strides,w=e.wIsConst(),f=e.outputPadding,C=e.outputShape;return{autoPad:o,format:r,dilations:s,group:p,kernelShape:d,outputPadding:f,outputShape:C,pads:g,strides:b,wIsConst:w,...t,cacheKey:`${e.format};${t.activation};`}},ay=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let s=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==s))throw new Error("invalid bias");let p=e[0].dims.length-2;if(t.dilations.reduce((f,C)=>f+C,0)>0&&t.dilations.length!==p)throw new Error(`dilations should be ${p}D`);if(t.strides.reduce((f,C)=>f+C,0)>0&&t.strides.length!==p)throw new Error(`strides should be ${p}D`);if(t.pads.reduce((f,C)=>f+C,0)>0&&t.pads.length!==p*2)throw new Error(`pads should be ${p*2}D`);if(t.outputPadding.length!==p&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${p}D`);if(t.kernelShape.reduce((f,C)=>f+C,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},oy=[2,3,1,0],sy=(e,t,r)=>{let o=xd(r,t),s=r.format==="NHWC",p=o.outputShape,d=p[s?3:1],g=t[0].dims[s?3:1];if(o.group!==1||d===1&&g===1){e.compute(To(t,o));return}let b=p[s?1:2],w=p[s?2:3],f=t[1].dims[2],C=t[1].dims[3],S=s?b*w:d,O=s?d:b*w,E=f*C*g,P=!0,j=e.kernelCustomData.wT??e.compute(Dt(t[1],oy),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=j);let U=[t[0],j],z=t.length===3;z&&(!s&&t[2].dims.length===1?U.push(t[2].reshape([t[2].dims[0],1,1])):U.push(t[2])),e.compute(_d(U,o,p,S,O,E,z,P),{inputs:U})},uy=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let s=t.kernelShape;(s.length===0||s[0]===0)&&(s=[e.inputs[1].dims[2]]);let p=t.dilations;(p.length===0||p[0]===0)&&(p=[1]);let d=t.strides;(d.length===0||d[0]===0)&&(d=[1]);let g=t.pads;g.length===0&&(g=[0,0]),g=[0,g[0],0,g[1]],d=[1].concat(d),p=[1].concat(p),s=[1].concat(s);let b=xd({...t,pads:g,strides:d,dilations:p,kernelShape:s},o);e.compute(To(o,b,w=>r?[w[0],w[2],w[3]]:[w[0],w[1],w[3]]))},Id=(e,t)=>{ay(e.inputs,t),e.inputs[0].dims.length===3?uy(e,t):sy(e,e.inputs,t)}});var ly,Td,Ed,kd=ae(()=>{"use strict";Se();je();mt();Me();ly=(e,t,r,o)=>{let s=ee.size(t),p=t.length,d=Q("input",e,p),g=oe("output",e,p),b=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),w=ee.normalizeAxis(b,p),f=C=>{let S=` i32(${d.indicesGet("inputIndices","uniforms.axis")}) `,O=$e("uniforms.input_shape","uniforms.axis",p),E=o.reverse?S+(o.exclusive?" + 1":""):"0",P=o.reverse?O:S+(o.exclusive?"":" + 1");return`
                ${C.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(d,g)}
                ${C.mainStart()}
                  ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${g.offsetToIndices("global_idx")};
                  var sum = ${g.type.value}(0);
                  let first : i32 = ${E};
                  let last : i32 = ${P};
                  for (var i : i32 = first; i < last; i++) {
                    ${d.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${d.getByIndices("inputIndices")};
                  }
                  ${g.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},{type:6,data:w},...le(t,t)]}),getShaderSource:f}},Td=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,s=e.inputs[1];e.compute(ly(o,r,s,t),{inputs:[0]})},Ed=e=>{let t=e.exclusive===1,r=e.reverse===1;return De({exclusive:t,reverse:r})}});var Eo,Pa,Od,dy,cy,ko,Oo,Pd,py,Rd,zd,Bd=ae(()=>{"use strict";Se();je();mt();Me();Eo="[a-zA-Z]|\\.\\.\\.",Pa="("+Eo+")+",Od="^"+Pa+"$",dy="("+Pa+",)*"+Pa,cy="^"+dy+"$",ko=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},Oo=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,s]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(cy)))throw new Error("Invalid LHS term");if(o.split(",").forEach((g,b)=>{let w=t[b].dims.slice();if(!g.match(RegExp(Od)))throw new Error("Invalid LHS term");let f=this.processTerm(g,!0,w,b);this.lhs.push(f)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([g,b])=>b.count===1||g==="...").map(([g])=>g).join("");else if(!s.match(RegExp(Pa)))throw new Error("Invalid RHS");s.match(RegExp(Eo,"g"))?.forEach(g=>{if(g==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let b=this.symbolToInfo.get(g);if(b===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(b.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(t,r,o){let s=this.symbolToInfo.get(t);if(s!==void 0){if(s.dimValue!==r&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(o)}else s={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,s)}processTerm(t,r,o,s=-1){let p=o.length,d=!1,g=[],b=0;if(!t.match(RegExp(Od))&&!r&&t!=="")throw new Error("Invalid LHS term");let w=t.match(RegExp(Eo,"g")),f=new ko(s);return w?.forEach((C,S)=>{if(C==="..."){if(d)throw new Error("Only one ellipsis is allowed per input term");d=!0;let O=p-w.length+1;if(O<0)throw new Error("Ellipsis out of bounds");if(g=o.slice(b,b+O),this.hasEllipsis){if(this.ellipsisDims.length!==g.length||this.ellipsisDims.toString()!==g.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=g;else throw new Error("Ellipsis must be specified in the LHS");for(let E=0;E<g.length;E++){let P=String.fromCharCode("0".charCodeAt(0)+E);f.addSymbol(P,S+E),this.addSymbol(P,o[b++],s)}}else f.addSymbol(C,S+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(C,o[b++],s)}),f}},Pd=e=>e+"_max",py=(e,t,r,o)=>{let p=e.map(f=>f.length).map((f,C)=>Q(`input${C}`,t,f)),d=ee.size(o),g=oe("output",t,o.length),b=[...r.symbolToInfo.keys()].filter(f=>!r.rhs.symbolToIndices.has(f)),w=f=>{let C=[],S="var prod = 1.0;",O="var sum = 0.0;",E="sum += prod;",P=[],j=[],U=[],z=[],N=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((J,Y)=>{if(r.rhs.symbolToIndices.has(Y)){let te=r.rhs.symbolToIndices.get(Y)?.[0];te!==void 0&&r.lhs.forEach((q,ue)=>{if(J.inputIndices.includes(ue)){let de=q.symbolToIndices.get(Y);if(de===void 0)throw new Error("Invalid symbol error");de.forEach(Pe=>{C.push(`${p[ue].indicesSet(`input${ue}Indices`,Pe,g.indicesGet("outputIndices",te))}`)})}})}else r.lhs.forEach((te,q)=>{if(J.inputIndices.includes(q)){let ue=te.symbolToIndices.get(Y);if(ue===void 0)throw new Error("Invalid symbol error");ue.forEach(de=>{P.push(`${p[q].indicesSet(`input${q}Indices`,de,`${Y}`)}`)}),z.push(`prod *= ${p[q].getByIndices(`input${q}Indices`)};`)}}),j.push(`for(var ${Y}: u32 = 0; ${Y} < uniforms.${Pd(Y)}; ${Y}++) {`),U.push("}")});let W=N?[...C,`let sum = ${p.map((J,Y)=>J.getByIndices(`input${Y}Indices`)).join(" * ")};`]:[...C,O,...j,...P,S,...z,E,...U];return`
            ${f.registerUniforms(b.map(J=>({name:`${Pd(J)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...p,g)}

            ${f.mainStart()}
            ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${g.offsetToIndices("global_idx")};
            ${p.map((J,Y)=>`var input${Y}Indices: ${p[Y].type.indices};`).join(`
`)}
            ${W.join(`
`)};
            ${g.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let f=b.filter(S=>r.symbolToInfo.has(S)).map(S=>({type:12,data:r.symbolToInfo.get(S)?.dimValue||0}));f.push({type:12,data:d});let C=e.map((S,O)=>[...le(S)]).reduce((S,O)=>S.concat(O),f);return C.push(...le(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:C}},getShaderSource:w}},Rd=(e,t)=>{let r=new Oo(e.inputs,t.equation),o=r.outputDims,s=e.inputs.map((p,d)=>p.dims);e.compute(py(s,e.inputs[0].dataType,r,o))},zd=e=>{let t=e.equation.replace(/\s+/g,"");return De({equation:t})}});var fy,Md,my,hy,Dd,jd=ae(()=>{"use strict";Se();je();Me();fy=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,s=t.length<r.length?0:t.length-r.length;for(;o<r.length&&s<t.length;++o,++s)if(r[o]!==t[s]&&r[o]!==1&&t[s]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Md=(e,t)=>{let r=e.length-t.length,o=[];for(let s=0;s<r;++s)o.push(e[s]);for(let s=0;s<t.length;++s)o.push(t[s]===1?e[s+r]:t[s]);return o},my=(e,t)=>e.length>t.length?Md(e,t):Md(t,e),hy=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=my(t,r),s=e[0].dataType,p=s===9?4:1,d=Math.ceil(ee.size(o)/p),g=w=>{let f=Q("input",s,t.length,p),C=oe("output",s,o.length,p),S;if(s===9){let O=(E,P,j="")=>`
          let outputIndices${P} = ${C.offsetToIndices(`outputOffset + ${P}u`)};
          let offset${P} = ${f.broadcastedIndicesToOffset(`outputIndices${P}`,C)};
          let index${P} = offset${P} / 4u;
          let component${P} = offset${P} % 4u;
          ${E}[${P}] = ${j}(${f.getByOffset(`index${P}`)}[component${P}]);
        `;S=`
        let outputOffset = global_idx * ${p};
        var data = vec4<u32>(0);
        ${O("data",0,"u32")}
        ${O("data",1,"u32")}
        ${O("data",2,"u32")}
        ${O("data",3,"u32")}
        ${C.setByOffset("global_idx","data")}
      }`}else S=`
        let outputIndices = ${C.offsetToIndices("global_idx")};
        let inputOffset = ${f.broadcastedIndicesToOffset("outputIndices",C)};
        ${C.setByOffset("global_idx",f.getByOffset("inputOffset"))}
      }`;return`
    ${w.registerUniform("vec_size","u32").declareVariables(f,C)}
    ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${S}`},b=[{type:12,data:d},...le(t,o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:b})}},Dd=e=>{fy(e.inputs),e.compute(hy(e.inputs),{inputs:[0]})}});var gy,Ud,Nd=ae(()=>{"use strict";Se();je();Me();Sa();gy=e=>{let t=e[0].dataType,r=ee.size(e[0].dims),o=ee.size(e[1].dims),s=o%4===0,p=d=>{let g=Q("x",t,[1],4),b=Q("bias",t,[1],4),w=oe("y",t,[1],4),f=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],C=O=>`
      let bias${O}_offset: u32 = (global_idx * 4 + ${O}) % uniforms.bias_size;
      let bias${O} = ${b.getByOffset(`bias${O}_offset / 4`)}[bias${O}_offset % 4];`,S=s?`
      let bias = ${b.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${C(0)}${C(1)}${C(2)}${C(3)}
      let bias = ${g.type.value}(bias0, bias1, bias2, bias3);`;return`${d.registerUniforms(f).declareVariables(g,b,w)}

    ${bo(It(t))}

    ${d.mainStart(ba)}
      ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${g.getByOffset("global_idx")};
      ${S}
      let x_in = x + bias;
      ${w.setByOffset("global_idx",vo("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${s}`,inputDependencies:["type","type"]},getShaderSource:p,getRunData:d=>({outputs:[{dims:d[0].dims,dataType:d[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(r/ba/4)}})}},Ud=e=>{e.inputs.length<2||ee.size(e.inputs[1].dims)===0?Kl(e):e.compute(gy(e.inputs))}});var yy,by,Wd,Vd,Gd=ae(()=>{"use strict";Se();je();mt();Me();yy=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},by=(e,t)=>{let r=e[0].dims,o=e[1].dims,s=r.length,p=ee.normalizeAxis(t.axis,s),d=r.slice(0);d.splice(p,1,...o);let g=r[p],b=e[0].dataType===9?4:1,w=Math.ceil(ee.size(d)/b),f=[{type:12,data:w},{type:6,data:g},{type:12,data:p},...le(e[0].dims,e[1].dims,d)],C=S=>{let O=Q("data",e[0].dataType,e[0].dims.length,b),E=Q("inputIndices",e[1].dataType,e[1].dims.length),P=oe("output",e[0].dataType,d.length,b),j=z=>{let N=o.length,W=`var indicesIndices${z}  = ${E.type.indices}(0);`;for(let J=0;J<N;J++)W+=`${N>1?`indicesIndices${z}[${J}]`:`indicesIndices${z}`} = ${d.length>1?`outputIndices${z}[uniforms.axis + ${J}]`:`outputIndices${z}`};`;W+=`
          var idx${z} = ${E.getByIndices(`indicesIndices${z}`)};
          if (idx${z} < 0) {
            idx${z} = idx${z} + uniforms.axisDimLimit;
          }
          var dataIndices${z} : ${O.type.indices};
        `;for(let J=0,Y=0;J<s;J++)J===p?(W+=`${s>1?`dataIndices${z}[${J}]`:`dataIndices${z}`} = u32(idx${z});`,Y+=N):(W+=`${s>1?`dataIndices${z}[${J}]`:`dataIndices${z}`} = ${d.length>1?`outputIndices${z}[${Y}]`:`outputIndices${z}`};`,Y++);return W},U;if(e[0].dataType===9){let z=(N,W,J="")=>`
          let outputIndices${W} = ${P.offsetToIndices(`outputOffset + ${W}u`)};
          ${j(W)};
          let offset${W} = ${O.indicesToOffset(`dataIndices${W}`)};
          let index${W} = offset${W} / 4u;
          let component${W} = offset${W} % 4u;
          ${N}[${W}] = ${J}(${O.getByOffset(`index${W}`)}[component${W}]);
        `;U=`
        let outputOffset = global_idx * ${b};
        var value = vec4<u32>(0);
        ${z("value",0,"u32")}
        ${z("value",1,"u32")}
        ${z("value",2,"u32")}
        ${z("value",3,"u32")}
        ${P.setByOffset("global_idx","value")}
      `}else U=`
      let outputIndices = ${P.offsetToIndices("global_idx")};
      ${j("")};
      let value = ${O.getByIndices("dataIndices")};
      ${P.setByOffset("global_idx","value")};
      `;return`
      ${S.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(O,E,P)}
      ${S.mainStart()}
        ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${U}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:f}),getShaderSource:C}},Wd=e=>De({axis:e.axis}),Vd=(e,t)=>{let r=e.inputs;yy(r),e.compute(by(e.inputs,t))}});var vy,wy,Hd,Ld,Fd=ae(()=>{"use strict";Se();je();mt();Me();vy=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},wy=(e,t)=>{let r=e[0].dims,o=e[0].dataType,s=r.length,p=e[1].dims,d=e[1].dataType,g=ee.normalizeAxis(t.axis,s),b=r[g],w=p.slice(0),f=ee.size(w),C=Q("input",o,s),S=Q("indicesInput",d,p.length),O=oe("output",o,w.length),E=[{type:12,data:f},{type:6,data:b},{type:12,data:g}];return E.push(...le(r,p,w)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:w,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:E}),getShaderSource:U=>`
      ${U.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(C,S,O)}
      ${U.mainStart()}
      ${U.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${O.offsetToIndices("global_idx")};

      var idx = ${S.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${C.type.indices}(outputIndices);
      ${C.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${C.getByIndices("inputIndices")};

      ${O.setByOffset("global_idx","value")};
  }`}},Hd=e=>De({axis:e.axis}),Ld=(e,t)=>{let r=e.inputs;vy(r),e.compute(wy(e.inputs,t))}});var _y,$y,qd,Kd,Jd=ae(()=>{"use strict";Se();je();Me();_y=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},$y=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[s,p,d]=ha.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),g=[s,p];if(!g)throw new Error("Can't use gemm on the given tensors");let b=ee.size(g),w=[{type:12,data:b},{type:12,data:s},{type:12,data:p},{type:12,data:d},{type:1,data:t.alpha},{type:1,data:t.beta}],f=["type","type"];e.length===3&&(w.push(...le(e[2].dims)),f.push("rank")),w.push(...le(g));let C=S=>{let O="";t.transA&&t.transB?O="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?O="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?O="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(O="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let E=t.alpha===1?"":"value *= uniforms.alpha;",P=Q("a",e[0].dataType,e[0].dims),j=Q("b",e[1].dataType,e[1].dims),U=P.type.value,z=null,N=[P,j];e.length===3&&(z=Q("c",e[2].dataType,e[2].dims.length),N.push(z));let W=oe("output",e[0].dataType,g.length);N.push(W);let J=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${S.registerUniforms(J).declareVariables(...N)}

  ${S.mainStart()}
    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${U}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${O}
    }

    ${E}
    ${(()=>z!=null?`let cOffset = ${z.broadcastedIndicesToOffset("vec2(m, n)",W)}; value += ${U}(uniforms.beta) * ${z.getByOffset("cOffset")};`:"")()}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:g,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:w}),getShaderSource:C}},qd=e=>{let t=e.transA,r=e.transB,o=e.alpha,s=e.beta;return{transA:t,transB:r,alpha:o,beta:s,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Kd=(e,t)=>{_y(e.inputs),e.compute($y(e.inputs,t))}});var Cy,xy,Sy,Yd,Zd=ae(()=>{"use strict";Se();je();Me();Cy=(e,t)=>{let r=e[0].dims,o=r,s=2,p=ee.sizeToDimension(r,s),d=ee.sizeFromDimension(r,s),g=Ze(d),b=d/g,w=[r[0],r[1],b],f=["rank","type","type"],C=[{type:12,data:d},{type:12,data:b}];C.push(...le(w,w));let S=O=>{let E=Q("x",e[0].dataType,w.length,g),P=Q("scale",e[1].dataType,e[1].dims),j=Q("bias",e[2].dataType,e[2].dims),U=oe("output",e[0].dataType,w.length,g),z=[E,P,j,U],N=E.type.value,W=g===1?"f32":`vec${g}<f32>`,J=64,Y=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${W}, ${J}>;
  const workgroupSize = ${J}u;
  ${O.registerUniforms(Y).declareVariables(...z)}
  ${O.mainStart(J)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${W}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${W}(${E.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${At("workgroupShared[0]",g)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${W}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${W}(${E.get("batch","channel","h")}) - ${W}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${At("workgroupShared[0]",g)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));
    let channelScale = invStdDev * f32(${P.getByOffset("channel")});
    let channelShift = f32(${j.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${E.get("batch","channel","h")} * ${N}(${W}(channelScale)) + ${N}(${W}(channelShift));
      ${U.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${g}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:p},programUniforms:C}),getShaderSource:S}},xy=(e,t,r,o,s,p,d,g)=>{let b=Ze(d),w=64,f=b===1?"vec2f":`mat2x${b}f`,C=b===1?"f32":`vec${b}f`,S=(Y,te)=>`${f}(${Y}, ${te})`,O=s*d/b,E=Math.ceil(p/w),P=["type"],j=[{type:12,data:E},{type:12,data:p},{type:12,data:Math.floor(d/b)},{type:12,data:Math.floor(p*d/b)}],U=Y=>{let te=Q("input",t.dataType,t.dims,b);return`
  ${Y.declareVariables(te)}
  @group(0) @binding(1) var<storage, read_write> output : array<${f}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${Y.mainStart(w)}
    let currentImageNumber = global_idx / ${w} / uniforms.C;
    let currentChannelNumber = (global_idx / ${w}) % uniforms.C;
    let wgId = global_idx % ${w};
    let wgOffset = wgId * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${ht("f32",b)};
    var squaredSum = ${ht("f32",b)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${C}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${S("sum","squaredSum")};
  }`},z=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${b}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:[s,d,w,2],dataType:1}],dispatchGroup:{x:s*d/b},programUniforms:j}),getShaderSource:U},{inputs:[t],outputs:[-1]})[0],N=[{type:12,data:O},{type:12,data:p},{type:12,data:Math.floor(d/b)},{type:12,data:Math.floor(w*d/b)}],W=["type","type","type"],J=Y=>{let te=Q("scale",r.dataType,r.dims,b),q=Q("bias",o.dataType,o.dims,b);return`
  @group(0) @binding(0) var<storage, read> input : array<${f}>;
  @group(0) @binding(1) var<storage, read> scale : array<${te.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${q.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${f}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${Y.mainStart()}
    ${Y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${ht("f32",b)};
    var squaredSum = ${ht("f32",b)};
    for (var i: u32 = 0; i < ${w}; i++) {
        let value = input[offset + i + currentChannelNumber * ${w}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${g}));
    let channelScale = invStdDev * ${C}(scale[currentChannelNumber]);
    let channelShift = ${C}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${S("channelScale","channelShift")};
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${b};${g}`,inputDependencies:W},getRunData:()=>({outputs:[{dims:[s,d,2],dataType:1}],dispatchGroup:{x:Math.ceil(O/64)},programUniforms:N}),getShaderSource:J},{inputs:[z,r,o],outputs:[-1]})[0]},Sy=(e,t,r)=>{let o=t[0].dims,s=o,p=o[0],d=o[o.length-1],g=ee.sizeFromDimension(o,1)/d,b=Ze(d),w=ee.size(s)/b,f=[{type:12,data:g},{type:12,data:Math.floor(d/b)}],C=["type","type"],S=xy(e,t[0],t[1],t[2],p,g,d,r.epsilon),O=E=>{let P=Le(t[0].dataType),j=b===1?"vec2f":`mat2x${b}f`,U=b===1?P:`vec${b}<${P}>`,z=Q("input",t[0].dataType,t[0].dims,b),N=oe("output",t[0].dataType,s,b);return`
  @group(0) @binding(0) var<storage, read> input : array<${z.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${j}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${N.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${E.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${U}(scale[0]), ${U}(scale[1]));
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${b}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:f}),getShaderSource:O},{inputs:[t[0],S]})},Yd=(e,t)=>{t.format==="NHWC"?Sy(e,e.inputs,t):e.compute(Cy(e.inputs,t))}});var Iy,Ay,Xd,Qd=ae(()=>{"use strict";Se();je();Me();Iy=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Ay=(e,t,r)=>{let o=e[0].dims,s=e[1],p=e[2],d=o,g=ee.normalizeAxis(t.axis,o.length),b=ee.sizeToDimension(o,g),w=ee.sizeFromDimension(o,g),f=ee.size(s.dims),C=p?ee.size(p.dims):0;if(f!==w||p&&C!==w)throw new Error(`Size of X.shape()[axis:] == ${w}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${f} and bias size of ${C}`);let S=[];for(let W=0;W<o.length;++W)W<g?S.push(o[W]):S.push(1);let O=Ze(w),E=["type","type"],P=[{type:12,data:b},{type:1,data:w},{type:12,data:Math.floor(w/O)},{type:1,data:t.epsilon}];p&&E.push("type");let j=r>1,U=r>2,z=W=>{let J=Le(e[0].dataType),Y=[Q("x",e[0].dataType,e[0].dims,O),Q("scale",s.dataType,s.dims,O)];p&&Y.push(Q("bias",p.dataType,p.dims,O)),Y.push(oe("output",e[0].dataType,d,O)),j&&Y.push(oe("mean_data_output",1,S)),U&&Y.push(oe("inv_std_output",1,S));let te=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${W.registerUniforms(te).declareVariables(...Y)}
  ${W.mainStart()}
    ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${ht("f32",O)};
    var mean_square_vector = ${ht("f32",O)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Wt(J,O,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${At("mean_vector",O)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${At("mean_square_vector",O)} / uniforms.norm_size - mean * mean + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Wt(J,O,"x[j + offset]")};
      let f32scale = ${Wt(J,O,"scale[j]")};
      output[j + offset] = ${Y[0].type.value}((f32input - mean) * inv_std_dev * f32scale
        ${p?`+ ${Wt(J,O,"bias[j]")}`:""}
      );
    }

    ${j?"mean_data_output[global_idx] = mean":""};
    ${U?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},N=[{dims:d,dataType:e[0].dataType}];return j&&N.push({dims:S,dataType:1}),U&&N.push({dims:S,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${O};${r}`,inputDependencies:E},getRunData:()=>({outputs:N,dispatchGroup:{x:Math.ceil(b/64)},programUniforms:P}),getShaderSource:z}},Xd=(e,t)=>{Iy(e.inputs),e.compute(Ay(e.inputs,t,e.outputCount))}});var Ty,Ey,ec,tc,rc=ae(()=>{"use strict";Se();je();mt();Me();Ty=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],o=r.dims.length;if(r.dims[o-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let s=Math.floor((t.k+t.blockSize-1)/t.blockSize),p=t.blockSize/8*t.bits,d=e[1];if(!ee.areEqual(d.dims,[t.n,s,p]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let b=e[2].dims;if(ee.size(b)!==t.n*s)throw new Error("scales input size error.");if(e.length===4){let f=e[3].dims,C=t.bits>4?t.n*s:t.n*Math.floor((s+1)/2);if(ee.size(f)!==C)throw new Error("zeroPoints input size error.")}},Ey=(e,t)=>{let r=e[0].dims,o=r.length,s=r.slice(0,o-1).concat(t.n),p=r[o-2],g=t.blockSize/8*t.bits/4,b=Ze(p),w=Ze(t.n),f=Ze(t.k),C=Ze(g),S=ee.size(s)/w/b,O=[{type:12,data:S},{type:12,data:t.k},{type:12,data:t.n},{type:12,data:t.accuracyLevel},{type:12,data:t.bits},{type:12,data:t.blockSize}],E=r.slice();E.splice(-1,1,t.k/f);let P=ee.convertShape(e[1].dims).slice();P.splice(-1,1,g/C),O.push(...le(E)),O.push(...le(P)),O.push(...le(e[2].dims)),e.length===4&&O.push(...le(ee.convertShape(e[3].dims)));let j=s.slice();j.splice(-1,1,t.n/w),O.push(...le(j));let U=z=>{let N=Q("a",e[0].dataType,E.length,f),W=Q("b",12,P.length,C),J=Q("scales",e[2].dataType,e[2].dims.length),Y=[N,W,J],te=e.length===4?Q("zero_points",12,e[3].dims.length):void 0;te&&Y.push(te);let q=oe("output",e[0].dataType,s.length,w),ue=[{name:"output_size",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}],de=Math.floor((t.k+t.blockSize-1)/t.blockSize),Pe=Le(e[0].dataType),Ne=(()=>{switch(f){case 1:return`array<${Pe}, 8>`;case 2:return`mat4x2<${Pe}>`;case 4:return`mat2x4<${Pe}>`;default:throw new Error(`${f}-component is not supported.`)}})(),qe=`
        fn dequantize(quantized: ${Ne}, zero_point: ${Pe}, scale: ${Pe}) -> ${Ne} {
          ${(()=>f===1?`var dequantized = ${Ne}(${Array.from({length:8},(ge,Ue)=>`(quantized[${Ue}] - zero_point) * scale`).join(", ")});
              return dequantized;`:`var zero_points: ${Ne} = ${Ne}(${Array(8).fill("zero_point").join(",")});
              return (quantized - zero_points) * scale;`)()}
        }`,Ie=`
        fn ortUnpack8x4snorm(value: u32) -> ${Ne} {
          var quantized: ${Ne};
          var offset: u32 = 0;
          let count: u32 = 4;
          for (var i: u32 = 0; i < 8u; i++) {
            var result = ${Pe}(extractBits(value, offset, count));
            ${(()=>{switch(f){case 1:return"quantized[i] = result;";case 2:return"quantized[i / 2][i % 2] = result;";case 4:return"quantized[i / 4][i % 4] = result;";default:throw new Error(`${f}-component is not supported.`)}})()}
            offset += count;
          }
          return quantized;
        }`,Te=te?`
          zero_point_offset += 4;
          if (zero_point_offset == 32) {
            zero_point_offset = 0;
            zero_point_index++;
            zero_point_word = ${te.getByOffset("zero_point_index")};
          }`:"";return`
        ${qe};
        ${Ie};
        ${z.registerUniforms(ue).declareVariables(...Y,q)}
        ${z.mainStart()}
          ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var output_values: array<${q.type.value}, ${b}>;
          var output_indices = ${q.offsetToIndices("global_idx")};
          var n = ${q.indicesGet("output_indices",o-1)};
          var m = ${q.indicesGet("output_indices",o-2)};
          var a_indices: ${N.type.indices} = output_indices;
          // Two zero points are packed into one byte because uniforms.bits <= 4.
          // zero_point_offset is either 0 or 4. It is bit offset within one byte.
          // TODO support zero_point_offset for bits > 4
          ${te?`
          var zero_point_index: u32 = n * ${w} * ((${de} + 1) / 2) / 4;
          var zero_point_word: u32 = ${te.getByOffset("zero_point_index")};
          var zero_point_offset: u32 = 0;`:""}
          var scale_index = n * ${de*w};
          var b_indices: ${W.type.indices};
          for (var c: u32 = 0; c < ${w}; c++) {
            ${W.indicesSet("b_indices","0",`n * ${w} + c`)};
            var block_offset: u32 = 0;
            for (var block: u32 = 0; block < ${de}; block++) {
              // The scale and zero points are computed per block.
              let scale = ${J.getByOffset("scale_index")};
              // The default zero point is 8 for unsigned 4-bit quantization.
              let zero_point = ${Pe}(${te?"extractBits(zero_point_word, zero_point_offset, 4)":8});
              ${W.indicesSet("b_indices","1","block")};
              var word_offset: u32 = block_offset;
              for (var word: u32 = 0; word < ${g}; word += ${C}) {
                ${W.indicesSet("b_indices","2","word")};
                let b_data = ${W.getByIndices("b_indices")};
                for (var i: u32 = 0; i < ${C}; i++) {
                  let b_value = ${C===1?"b_data":"b_data[word + i]"};
                  let b_quantized_values: ${Ne} = ortUnpack8x4snorm(b_value);
                  let b_dequantized_values = dequantize(b_quantized_values, zero_point, scale);
                  // Number of B elements per 32-bit word is 32/bits = 32/4 = 8
                  var offset: u32 = word_offset;
                  for (var j: u32 = 0; j < 8/${f}; j++) {
                    ${N.indicesSet("a_indices",o-1,`offset/${f}`)};
                    for (var k: u32 = 0; k < ${b}u; k++) {
                      ${N.indicesSet("a_indices",o-2,`m * ${b} + k`)};
                      let a_data = ${N.getByIndices("a_indices")};
                      output_values[k]${w>1?"[c]":""} += ${f===1?"a_data * b_dequantized_values[j]":"dot(a_data, b_dequantized_values[j])"};
                    }
                    offset += ${f};
                  }
                  word_offset += 8;
                }
              }
              scale_index++;
              ${Te}
              block_offset += uniforms.block_size;
            }
            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.
            ${te?`if (zero_point_offset % 8 > 0) {
                ${Te}
              }`:""}
            }
            for (var k: u32 = 0u; k < ${b}u; k++) {
              ${q.indicesSet("output_indices",o-2,`${b+" * m + k"}`)};
              ${q.setByIndices("output_indices","output_values[k]")}
            }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:O}),getShaderSource:U}},ec=(e,t)=>{Ty(e.inputs,t),e.compute(Ey(e.inputs,t))},tc=e=>De(e)});var ky,nc,ic,Oy,Po,ac,oc=ae(()=>{"use strict";Se();je();mt();fa();yo();Me();ri();ky=(e,t)=>{let r=e[0],o=e[1],s=e[2],p=e[3],d=e[4],g=e[5],b=e[6],w=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let f=!1,C=r.dims[0],S=r.dims[1],O=r.dims.length===3?f?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],E=S,P=0,j=0,U=Math.floor(O/t.numHeads);if(b&&w){if(b.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(w.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');P=b.dims[2],j=b.dims[2]}else if(b||w)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let z;if(o){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(o.dims.length<3||o.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==o.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');z=2,E=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==U)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');z=5,E=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==U)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');z=0,E=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');z=3}if(p){if(p.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let N=0;if(d){N=8;let q=d.dims;throw q.length===1?q[0]===C?N=1:q[0]===3*C+2&&(N=3):q.length===2&&q[0]===C&&q[1]===E&&(N=5),N===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let W=!1,J=O;if(s){if(s.dims.length!==3&&s.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(s.dims.length===3){if(E!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');J=s.dims[2]}else{if(E!==s.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');J=s.dims[1]*s.dims[3],W=!0}}let Y=P+E,te=!1;if(d)throw new Error("Key padding mask is not supported");if(g)throw new Error("extraAddQk is not supported");if(b)throw new Error("pastKey is not supported");if(w)throw new Error("pastValue is not supported");return{batchSize:C,sequenceLength:S,pastSequenceLength:P,kvSequenceLength:E,totalSequenceLength:Y,maxSequenceLength:j,inputHiddenSize:0,hiddenSize:O,vHiddenSize:J,headSize:U,vHeadSize:Math.floor(J/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:N,scale:t.scale,broadcastResPosBias:te,passPastInKv:W,qkvFormat:z}},nc=e=>De({...e}),ic=De({perm:[0,2,1,3]}),Oy=(e,t,r,o,s,p,d)=>{let g=[o,s,p],b=ee.size(g),w=[{type:12,data:b},{type:12,data:d},{type:12,data:p}],f=C=>{let S=oe("qkv_with_bias",t.dataType,g),O=Q("qkv",t.dataType,g),E=Q("bias",r.dataType,g),P=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${C.registerUniforms(P).declareVariables(O,E,S)}
  ${C.mainStart()}
    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:g,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:w}),getShaderSource:f},{inputs:[t,r],outputs:[-1]})[0]},Po=(e,t,r,o,s,p,d,g)=>{let b=p;if(d){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return b=Oy(e,p,d,t,o,r*s,g),b=b.reshape([t,o,r,s]),e.compute(Dt(b,ic.perm),{inputs:[b],outputs:[-1]})[0]}else return p.dims.length===3&&(b=p.reshape([t,o,r,s])),e.compute(Dt(b,ic.perm),{inputs:[b],outputs:[-1]})[0]},ac=(e,t)=>{let r=ky(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,s=Po(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return $a(e,s,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let p=Po(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),d=Po(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);$a(e,s,p,d,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var Py,Ry,zy,By,My,Dy,jy,Uy,sc,uc=ae(()=>{"use strict";Se();je();Me();Py=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Ry=(e,t,r)=>{let o="";for(let s=t-1;s>=0;--s)o+=`
            k = i32(${e.indicesGet("indices",s)}) - ${$e("uniforms.pads",s,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${$e("uniforms.x_shape",s,t)})) {
              break;
            }
            offset += k * i32(${$e("uniforms.x_strides",s,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${o}
            value = x[offset];
          }
      `},zy=(e,t,r)=>{let o="";for(let s=t-1;s>=0;--s)o+=`
                k = i32(${e.indicesGet("indices",s)}) - ${$e("uniforms.pads",s,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${$e("uniforms.x_shape",s,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${$e("uniforms.x_shape",s,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${$e("uniforms.x_strides",s,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},By=(e,t,r)=>{let o="";for(let s=t-1;s>=0;--s)o+=`
                k = i32(${e.indicesGet("indices",s)}) - ${$e("uniforms.pads",s,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${$e("uniforms.x_shape",s,t)})) {
                  k = i32(${$e("uniforms.x_shape",s,t)}) - 1;
                }
                offset += k * i32(${$e("uniforms.x_strides",s,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},My=(e,t,r)=>{let o="";for(let s=t-1;s>=0;--s)o+=`
                k = i32(${e.indicesGet("indices",s)}) - ${$e("uniforms.pads",s,r)};
                if (k < 0)  {
                  k += i32(${$e("uniforms.x_shape",s,t)}]);
                }
                if (k >= i32(${$e("uniforms.x_shape",s,t)})) {
                  k -= i32(${$e("uniforms.x_shape",s,t)});
                }
                offset += k * i32(${$e("uniforms.x_strides",s,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},Dy=(e,t,r)=>{switch(r.mode){case 0:return Ry(e,t,r.pads.length);case 1:return zy(e,t,r.pads.length);case 2:return By(e,t,r.pads.length);case 3:return My(e,t,r.pads.length);default:throw new Error("Invalid mode")}},jy=(e,t)=>{let r=ee.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,s=ee.size(r),p=[{type:12,data:s},{type:12,data:t.pads}];t.mode===0&&p.push({type:e[0].dataType,data:t.value}),p.push(...le(e[0].dims,r));let d=["rank"],g=b=>{let w=oe("output",e[0].dataType,r.length),f=Q("x",e[0].dataType,o.length),C=f.type.value,S=Dy(w,o.length,t),O=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&O.push({name:"constant_value",type:C}),`
            ${b.registerUniforms(O).declareVariables(f,w)}
            ${b.mainStart()}
            ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${w.offsetToIndices("global_idx")};

            var value = ${C}(0);
            ${S}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ee.size(r)/64)},programUniforms:p}),getShaderSource:g}},Uy=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,s=e[0].dims.length,p=new Int32Array(2*s).fill(0);if(e.length>=4){let g=e[3].getBigInt64Array();for(let b=0;b<g.length;b++)p[Number(g[b])]=Number(r[b]),p[Number(g[b])+s]=Number(r[b+g.length])}else r.forEach((g,b)=>p[Number(b)]=Number(g));let d=[];return p.forEach(g=>d.push(g)),{mode:t.mode,value:o,pads:d}}else return t},sc=(e,t)=>{Py(e.inputs);let r=Uy(e.inputs,t);e.compute(jy(e.inputs,r),{inputs:[0]})}});var Ra,lc,dc,cc,pc,Ny,Wy,fc,mc,hc,gc,yc,bc,vc,wc,_c,$c,Cc,xc,Sc=ae(()=>{"use strict";Mt();Se();je();Me();Ra=e=>{if(Ge.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},lc=(e,t,r)=>{let o=t.format==="NHWC",s=e.dims.slice();o&&s.splice(1,0,s.pop());let p=Object.hasOwnProperty.call(t,"dilations"),d=t.kernelShape.slice(),g=t.strides.slice(),b=p?t.dilations.slice():[],w=t.pads.slice();Ar.adjustPoolAttributes(r,s,d,g,b,w);let f=Ar.computePoolOutputShape(r,s,g,b,d,w,t.autoPad),C=Object.assign({},t);p?Object.assign(C,{kernelShape:d,strides:g,pads:w,dilations:b,cacheKey:t.cacheKey}):Object.assign(C,{kernelShape:d,strides:g,pads:w,cacheKey:t.cacheKey});let S=f.slice();return S.push(S.splice(1,1)[0]),[C,o?S:f]},dc=(e,t)=>{let r=t.format==="NHWC",o=ee.size(e),s=ee.size(t.kernelShape),p=[{type:12,data:o},{type:12,data:s}],d=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let g=t.kernelShape[t.kernelShape.length-1],b=t.strides[t.strides.length-1],w=t.pads[t.pads.length/2-1],f=t.pads[t.pads.length-1],C=!!(w+f);p.push({type:12,data:g},{type:12,data:b},{type:12,data:w},{type:12,data:f}),d.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let S=!1;if(t.kernelShape.length===2){let O=t.kernelShape[t.kernelShape.length-2],E=t.strides[t.strides.length-2],P=t.pads[t.pads.length/2-2],j=t.pads[t.pads.length-2];S=!!(P+j),p.push({type:12,data:O},{type:12,data:E},{type:12,data:P},{type:12,data:j}),d.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[p,d,!0,C,S]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let g=ee.computeStrides(t.kernelShape);p.push({type:12,data:g},{type:12,data:t.pads},{type:12,data:t.strides}),d.push({name:"kernelStrides",type:"u32",length:g.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let b=t.pads.reduce((w,f)=>w+f);return[p,d,!!b,!1,!1]}},cc=(e,t,r,o,s,p,d,g,b,w,f,C)=>{let S=s.format==="NHWC",O=t.type.value,E=oe("output",t.type.tensor,o);if(s.kernelShape.length<=2){let P="",j="",U="",z=r-(S?2:1);if(f?P=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${z}] = indices[${z}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${z}] < 0 || xIndices[${z}]
                      >= uniforms.x_shape[${z}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${p}
                }`:P=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${z}] = indices[${z}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${p}
                }`,s.kernelShape.length===2){let W=r-(S?3:2);C?j=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${W}] = indices[${W}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${W}] < 0 || xIndices[${W}] >= uniforms.x_shape[${W}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:j=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${W}] = indices[${W}] * uniforms.sh - uniforms.phStart + j;
                `,U=`
              }
            `}return`
            ${e.registerUniforms(b).declareVariables(t,E)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${E.offsetToIndices("global_idx")};
              var xIndices = ${E.offsetToIndices("global_idx")};

              var value = ${O}(${g});
              var pad = 0;
              ${j}
              ${P}
              ${U}
              ${d}

              output[global_idx] = value;
            }`}else{if(S)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let P=s.kernelShape.length,j=s.pads.length,U="";return w?U=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${p}
              }`:U=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${p}
            `,`
            ${e.registerUniforms(b).declareVariables(t,E)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${E.offsetToIndices("global_idx")};
              var xIndices = ${E.offsetToIndices("global_idx")};

              var offsets: array<u32, ${P}>;

              var value = ${O}(${g});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${P-1}u; j++) {
                  offsets[j] = offset / ${$e("uniforms.kernelStrides","j",P)};
                  offset -= offsets[j] * ${$e("uniforms.kernelStrides","j",P)};
                }
                offsets[${P-1}] = offset;

                isPad = false;
                for (var j = ${r-P}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${$e("uniforms.strides",`j - ${r-P}u`,P)}
                    + offsets[j - ${r-P}u] - ${$e("uniforms.pads","j - 2u",j)};
                  ${U}
              }
              ${d}

              output[global_idx] = value;
            }`}},pc=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Ny=e=>`${pc(e)};${e.countIncludePad}`,Wy=e=>`${pc(e)};${e.storageOrder};${e.dilations}`,fc=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),mc=(e,t,r,o)=>{let[s,p]=lc(t,o,r),d=Q("x",t.dataType,t.dims.length),g=d.type.value,b="value += x_val;",w="";s.countIncludePad?w+=`value /= ${g}(uniforms.kernelSize);`:w+=`value /= ${g}(i32(uniforms.kernelSize) - pad);`;let[f,C,S,O,E]=dc(p,s);f.push(...le(t.dims,p));let P=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${S};${O};${E}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(ee.size(p)/64)},programUniforms:f}),getShaderSource:j=>cc(j,d,t.dims.length,p.length,s,b,w,0,C,S,O,E)}},hc=e=>{let t=e.count_include_pad!==0,r=fc(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:Ny(o)}},gc=(e,t)=>{Ra(e.inputs),e.compute(mc("AveragePool",e.inputs[0],!1,t))},yc={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},bc=e=>{let t=e.format;return{format:t,...yc,cacheKey:t}},vc=(e,t)=>{Ra(e.inputs),e.compute(mc("GlobalAveragePool",e.inputs[0],!0,t))},wc=(e,t,r,o)=>{let[s,p]=lc(t,o,r),d=`
      value = max(x_val, value);
    `,g="",b=Q("x",t.dataType,t.dims.length),w=["rank"],[f,C,S,O,E]=dc(p,s);return f.push(...le(t.dims,p)),{name:e,shaderCache:{hint:`${o.cacheKey};${S};${O};${E}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(ee.size(p)/64)},programUniforms:f}),getShaderSource:P=>cc(P,b,t.dims.length,p.length,s,d,g,-1e5,C,S,O,E)}},_c=(e,t)=>{Ra(e.inputs),e.compute(wc("MaxPool",e.inputs[0],!1,t))},$c=e=>{let t=e.storage_order,r=e.dilations,o=fc(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let s={storageOrder:t,dilations:r,...o,cacheKey:""};return{...s,cacheKey:Wy(s)}},Cc=e=>{let t=e.format;return{format:t,...yc,cacheKey:t}},xc=(e,t)=>{Ra(e.inputs),e.compute(wc("GlobalMaxPool",e.inputs[0],!0,t))}});var Gy,Hy,Ic,Ac=ae(()=>{"use strict";Mt();Se();Me();Gy=(e,t,r)=>{let o=e===t,s=e<t&&r<0,p=e>t&&r>0;if(o||s||p)throw new Error("Range these inputs' contents are invalid.")},Hy=(e,t,r,o)=>{let s=Math.abs(Math.ceil((t-e)/r)),p=[s],d=s,g=[{type:12,data:d},{type:o,data:e},{type:o,data:r},...le(p)],b=w=>{let f=oe("output",o,p.length),C=f.type.value,S=[{name:"outputSize",type:"u32"},{name:"start",type:C},{name:"delta",type:C}];return`
        ${w.registerUniforms(S).declareVariables(f)}
        ${w.mainStart()}
        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${C}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:b,getRunData:()=>({outputs:[{dims:p,dataType:o}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:g})}},Ic=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),Ge.webgpu.validateInputContent&&Gy(t,r,o),e.compute(Hy(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var Ly,Fy,qy,Ky,Jy,Yy,Zy,Xy,Qy,e0,t0,Tc,r0,i0,n0,a0,o0,Ec,kc,Oc=ae(()=>{"use strict";Se();je();mt();Me();Ly=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Fy=(e,t,r)=>{t.every(s=>s>=0&&s<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((s,p)=>o[s]=e[p]),o},qy=(e,t,r,o,s,p)=>{let[d,g,b]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],w=e[0].dims.length;if(d>0&&e.length>d&&e[d].dims.length>0)e[d].getFloat32Array().forEach(f=>p.push(f));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(g>0&&e.length>g&&e[g].dims.length>0){if(e[g].getFloat32Array().forEach(f=>o.push(f)),o.length!==0&&o.length!==w&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Ly(o,t),t.axes.length>0&&Fy(o,t.axes,w).forEach((f,C)=>o[C]=f)}if(b>0&&e.length>b&&(e[b].getBigInt64Array().forEach(f=>s.push(Number(f))),s.length!==w||r>=18&&s.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(s.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof o<"u"&&typeof s<"u"&&o.length>0&&s.length>w)throw new Error("Resize requires only of scales or sizes to be specified")},Ky=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Jy=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Yy=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),s=e.length===0?o:e.slice();return t.length>0?(t.forEach((p,d)=>{o[p]=s[d],o[d+r]=s[t.length+d]}),o):s},Zy=(e,t,r,o)=>{let s=[];if(r.length>0)if(o.length>0){if(e.forEach(p=>s.push(p)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((p,d)=>s[p]=r[d])}else r.forEach(p=>s.push(p));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");s=e.map((p,d)=>Math.round(p*t[d]))}return s},Xy=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(p=>t[p]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(p=>t[p]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let s=e.slice();return r.axes.length>0?(r.axes.forEach(p=>t[p]=o),r.axes.forEach(p=>s[p]=Math.round(e[p]*t[p]))):(t.fill(o,0,t.length),s.forEach((p,d)=>s[d]=Math.round(p*t[d]))),s},Qy=(e,t,r,o,s)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${$e("uniforms.scales","i",o)};
        var roi_low = ${$e("uniforms.roi","i",s)};
        var roi_hi = ${$e("uniforms.roi",`i + ${t.length}`,s)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${$e("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${$e("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,e0=(e,t,r,o,s,p,d)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${o.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${$e("uniforms.scales","i",s)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${$e("uniforms.roi","i",p)};
          var roi_hi = ${$e("uniforms.roi",`i + ${r.length}`,p)};
          var input_shape_i = ${$e("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${$e("uniforms.output_shape","i",o.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${d} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,t0=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${$e("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,Tc=(e,t,r,o)=>e.rank>o?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",r0=(e,t,r,o,s)=>{let[d,g,b,w]=r.length===2?[-1,0,1,-1]:[0,2,3,1],f=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${f} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",g,`max(0, min(row, ${r[g]} - 1))`)};
      ${e.indicesSet("input_indices",b,`max(0, min(col, ${r[b]} - 1))`)};
      ${Tc(e,w,d,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${f} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${f} = originalIndices[${g}];
      var col:${f} = originalIndices[${b}];
      ${o?`if (row < 0 || row > (${r[g]} - 1) || col < 0 || col > (${r[b]} - 1)) {
        return ${s};
      }`:""};
      row = max(0, min(row, ${r[g]} - 1));
      col = max(0, min(col, ${r[b]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${w}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${d}])`:"0"};
      var x11: ${f} = getInputValue(batch, channel, row1, col1);
      var x12: ${f} = getInputValue(batch, channel, row1, col2);
      var x21: ${f} = getInputValue(batch, channel, row2, col1);
      var x22: ${f} = getInputValue(batch, channel, row2, col2);
      var dx1: ${f} = abs(row - ${f}(row1));
      var dx2: ${f} = abs(${f}(row2) - row);
      var dy1: ${f} = abs(col - ${f}(col1));
      var dy2: ${f} = abs(${f}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},i0=(e,t,r,o,s,p,d,g,b,w)=>{let f=r.length===2,C=!0,[S,O]=f?[0,1]:C?[2,3]:[1,2],E=e.type.value,P=j=>{let U=j===S?"row":"col";return`
      fn ${U}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${E} {
        var output_index = ${t.indicesGet("output_indices",j)};
        var originalIdx: ${E} = getOriginalCoordinateFromResizedCoordinate(output_index, ${s[j]},
        ${o[j]}, ${r[j]}, ${p[j]}, ${p[j]} + ${r.length});
        var fractOriginalIdx: ${E} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${g} && (originalIdx < 0 || originalIdx > (${r[j]} - 1))) {
          return ${b};
        }
        var data: array<${E}, 4> = array<${E}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${U}: ${E} = originalIdx + ${E}(i);
          if (${U} < 0 || ${U} >= ${r[j]}) {
            ${(()=>w?`coefs[i + 1] = 0.0;
                        continue;`:g?`return ${b};`:`${U} = max(0, min(${U}, ${r[j]} - 1));`)()};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",j,`u32(${U})`)};
          data[i + 1] = ${j===S?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${P(S)};
    ${P(O)};
  fn getCubicInterpolationCoefs(s: ${E}) -> array<${E}, 4> {
    var absS = abs(s);
    var coeffs: array<${E}, 4> = array<${E}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${E} = 1.0 - absS;
    var twoMinusAbsS: ${E} = 2.0 - absS;
    var onePlusAbsS: ${E} = 1.0 + absS;
    coeffs[0] = ((${d} * onePlusAbsS - 5 * ${d}) * onePlusAbsS + 8 * ${d}) * onePlusAbsS - 4 * ${d};
    coeffs[1] = ((${d} + 2) * absS - (${d} + 3)) * absS * absS + 1;
    coeffs[2] = ((${d} + 2) * oneMinusAbsS - (${d} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${d} * twoMinusAbsS - 5 * ${d}) * twoMinusAbsS + 8 * ${d}) * twoMinusAbsS - 4 * ${d};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${E}, 4>, coefs: array<${E}, 4>) -> ${E} {
    var coefsSum: ${E} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${E} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},n0=(e,t,r,o,s)=>{let[d,g,b,w,f]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],C=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${C} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",g,`max(0, min(depth, ${r[g]} - 1))`)};
      ${e.indicesSet("input_indices",b,`max(0, min(height, ${r[b]} - 1))`)};
      ${e.indicesSet("input_indices",w,`max(0, min(width, ${r[w]} - 1))`)};
      ${Tc(e,f,d,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${C} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${C} = originalIndices[${g}];
      var height:${C} = originalIndices[${b}];
      var width:${C} = originalIndices[${w}];
      ${o?`if (depth < 0 || depth > (${r[g]} - 1) || height < 0 || height > (${r[b]} - 1) || width < 0 || (width > ${r[w]} - 1)) {
      return ${s};
        }`:""};

    depth = max(0, min(depth, ${r[g]} - 1));
      height = max(0, min(height, ${r[b]} - 1));
      width = max(0, min(width, ${r[w]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${f}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${d}])`:"0"};

      var x111: ${C} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${C} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${C} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${C} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${C} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${C} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${C} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${C} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${C} = abs(depth - ${C}(depth1));
      var dx2: ${C} = abs(${C}(depth2) - depth);
      var dy1: ${C} = abs(height - ${C}(height1));
      var dy2: ${C} = abs(${C}(height2) - height);
      var dz1: ${C} = abs(width - ${C}(width1));
      var dz2: ${C} = abs(${C}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},a0=(e,t,r,o,s,p)=>{let d=e.dims,g=Yy(p,t.axes,d.length),b=Zy(d,o,s,t.axes),w=o.slice();o.length===0&&(w=d.map((z,N)=>z===0?1:b[N]/z),t.keepAspectRatioPolicy!=="stretch"&&(b=Xy(d,w,t)));let f=oe("output",e.dataType,b.length),C=Q("input",e.dataType,d.length),S=ee.size(b),O=d.length===b.length&&d.every((z,N)=>z===b[N]),E=t.coordinateTransformMode==="tf_crop_and_resize",P=t.extrapolationValue,j=C.type.value,U=z=>`
      ${O?"":`
      ${Ky(t.coordinateTransformMode,j)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${t0(C,d)};
              ${Jy(t.nearestMode,r,j)};
              ${e0(C,f,d,b,w.length,g.length,E)};
              `;case"linear":return`
              ${Qy(f,d,b,w.length,g.length)};
              ${(()=>{if(d.length===2||d.length===4)return`${r0(C,f,d,E,P)}`;if(d.length===3||d.length===5)return`${n0(C,f,d,E,P)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(d.length===2||d.length===4)return`${i0(C,f,d,b,w,g,t.cubicCoeffA,E,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${z.registerUniform("output_size","u32").registerUniform("scales","f32",w.length).registerUniform("roi","f32",g.length).declareVariables(C,f)}
      ${z.mainStart()}
        ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${O?"output[global_idx] = input[global_idx];":`
        let output_indices = ${f.offsetToIndices("global_idx")};
        var input_indices: ${C.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${C.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${d.length===2||d.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${w.length>0?w:""}|${s.length>0?s:""}|${g.length>0?g:""}|${O}|${d}`,inputDependencies:["rank"]},getShaderSource:U,getRunData:()=>({outputs:[{dims:b,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:[{type:12,data:S},{type:1,data:w},{type:1,data:g},...le(d,b)]})}},o0=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Ec=(e,t)=>{let r=[],o=[],s=[],p=o0(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");qy(e.inputs,t,p,r,o,s),e.compute(a0(e.inputs[0],t,p,r,o,s),{inputs:[0]})},kc=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,s=e.cubicCoeffA,p=e.excludeOutside!==0,d=e.extrapolationValue,g=e.keepAspectRatioPolicy,b=e.mode,w=e.nearestMode===""?"simple":e.nearestMode;return De({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:s,excludeOutside:p,extrapolationValue:d,keepAspectRatioPolicy:g,mode:b,nearestMode:w})}});var s0,u0,Pc,Rc=ae(()=>{"use strict";Se();je();Me();s0=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let s=t.dims[t.dims.length-1],p=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==s)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==p)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==s)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let d=e[3];if(d.dims.length!==1)throw new Error("Beta must be 1D");if(d.dims[d.dims.length-1]!==s)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let d=e[4];if(d.dims.length!==1)throw new Error("Bias must be 1D");if(d.dims[d.dims.length-1]!==s)throw new Error("Bias must have the same hidden size as input")}},u0=(e,t,r,o)=>{let s=e[0].dims,p=ee.size(s),d=s,g=p,b=s.slice(-1)[0],w=o?s.slice(0,-1).concat(1):[],f=e.length>3,C=e.length>4,S=o&&r>1,O=o&&r>2,E=r>3,P=Ze(b),j=[{type:12,data:g},{type:12,data:P},{type:12,data:b},{type:1,data:t.epsilon}],U=N=>{let W=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],J=[Q("x",e[0].dataType,e[0].dims,P),Q("skip",e[1].dataType,e[1].dims,P),Q("gamma",e[2].dataType,e[2].dims,P)];f&&J.push(Q("beta",e[3].dataType,e[3].dims,P)),C&&J.push(Q("bias",e[4].dataType,e[4].dims,P)),J.push(oe("output",e[0].dataType,d,P)),S&&J.push(oe("mean_output",1,w)),O&&J.push(oe("inv_std_output",1,w)),E&&J.push(oe("input_skip_bias_sum",e[0].dataType,d,P));let Y=Le(e[0].dataType);return`

      ${N.registerUniforms(W).declareVariables(...J)}

      ${N.mainStart()}
        ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}
        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        let offset = global_idx * hidden_size_vectorized;
        var sum = ${ht("f32",P)};
        var squareSum = ${ht("f32",P)};
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${C?"bias[i]":"0.0"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${E?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Wt(Y,P,"value")};
          sum += f32_value;
          squareSum += f32_value * f32_value;
        }
        let mean = ${At("sum",P)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${At("squareSum",P)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);
        ${S?"mean_output[global_idx] = mean;":""}
        ${O?"inv_std_output[global_idx] = inv_std_dev;":""}
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          output[offset + i] = (output[offset + i] - ${Y}(mean)) * ${Y}(inv_std_dev) * gamma[i] + ${f?"beta[i]":"0.0"};
        }
      }`},z=[{dims:d,dataType:e[0].dataType}];return r>1&&z.push({dims:w,dataType:1}),r>2&&z.push({dims:w,dataType:1}),r>3&&z.push({dims:s,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${P};${S};${O};${E}`,inputDependencies:e.map((N,W)=>"type")},getShaderSource:U,getRunData:()=>({outputs:z,dispatchGroup:{x:Math.ceil(g/b/64)},programUniforms:j})}},Pc=(e,t)=>{s0(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(u0(e.inputs,t,e.outputCount,!1),{outputs:o})}});var l0,za,d0,zc,c0,p0,Bc,Mc,Dc=ae(()=>{"use strict";Se();je();mt();Me();l0=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},za=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},d0=(e,t)=>{if(e.length>1){let r=za(e,1),o=za(e,2),s=za(e,3);return s.length===0&&(s=[...Array(e[0].dims.length).keys()]),De({starts:r,ends:o,axes:s})}else return t},zc=(e,t,r,o,s)=>{let p=e;return e<0&&(p+=r[o[t]]),s[t]<0?Math.max(0,Math.min(p,r[o[t]]-1)):Math.max(0,Math.min(p,r[o[t]]))},c0=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${$e("uniforms.input_shape","i",r.length)};
            let steps_i = ${$e("uniforms.steps","i",r.length)};
            let signs_i = ${$e("uniforms.signs","i",r.length)};
            let starts_i = ${$e("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,p0=(e,t)=>{let r=e[0].dims,o=ee.size(r),s=t.axes.length>0?ee.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],p=za(e,4);p.forEach(U=>U!==0||(()=>{throw new Error("step cannot be 0")})),p.length===0&&(p=Array(s.length).fill(1));let d=t.starts.map((U,z)=>zc(U,z,r,s,p)),g=t.ends.map((U,z)=>zc(U,z,r,s,p));if(s.length!==d.length||s.length!==g.length)throw new Error("start, ends and axes should have the same number of elements");if(s.length!==r.length)for(let U=0;U<r.length;++U)s.includes(U)||(d.splice(U,0,0),g.splice(U,0,r[U]),p.splice(U,0,1));let b=p.map(U=>Math.sign(U));p.forEach((U,z,N)=>{if(U<0){let W=(g[z]-d[z])/U,J=d[z],Y=J+W*p[z];d[z]=Y,g[z]=J,N[z]=-U}});let w=r.slice(0);s.forEach((U,z)=>{w[U]=Math.ceil((g[U]-d[U])/p[U])});let f={dims:w,dataType:e[0].dataType},C=oe("output",e[0].dataType,w.length),S=Q("input",e[0].dataType,e[0].dims.length),O=ee.size(w),E=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:d.length},{name:"signs",type:"i32",length:b.length},{name:"steps",type:"u32",length:p.length}],P=[{type:12,data:O},{type:12,data:d},{type:6,data:b},{type:12,data:p},...le(e[0].dims,w)],j=U=>`
      ${U.registerUniforms(E).declareVariables(S,C)}
        ${c0(S,C,r)}
        ${U.mainStart()}
          ${U.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${C.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${C.setByOffset("global_idx",S.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${b.length}_${d.length}_${p.length}`,inputDependencies:["rank"]},getShaderSource:j,getRunData:()=>({outputs:[f],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:P})}},Bc=(e,t)=>{l0(e.inputs,t);let r=d0(e.inputs,t);e.compute(p0(e.inputs,r),{inputs:[0]})},Mc=e=>{let t=e.starts,r=e.ends,o=e.axes;return De({starts:t,ends:r,axes:o})}});var f0,m0,jc,Uc,Nc=ae(()=>{"use strict";Se();je();mt();Me();f0=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},m0=(e,t)=>{let r=e.dims,o=ee.size(r),s=64,p=t.axis;if(p<0&&(p=r.length+p),p<r.length-1)throw new Error("softmax only supports last axis for now.");let d=r[p],g=o/d,b=Ze(d),w=d/b,f=(j,U)=>U===4?`max(max(${j}.x, ${j}.y), max(${j}.z, ${j}.w))`:U===2?`max(${j}.x, ${j}.y)`:U===3?`max(max(${j}.x, ${j}.y), ${j}.z)`:j,C=Q("x",e.dataType,e.dims,b),S=oe("result",e.dataType,e.dims,b),O=C.type.value,E=Le(e.dataType)==="f32"?`var threadMax = ${O}(-3.402823e+38f);`:`var threadMax = ${O}(-65504.0h);`,P=j=>`
      var<workgroup> rowMaxShared : ${O};
      var<workgroup> rowSumShared : ${O};
      var<workgroup> threadShared : array<${O}, ${s}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${O} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${O}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${j.registerUniform("packedCols","i32").declareVariables(C,S)}
      ${j.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${s};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${E}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${O}(${f("threadShared[0]",b)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${O}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${O}(${At("threadShared[0]",b)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${b}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:g},programUniforms:[{type:12,data:w}]}),getShaderSource:P}},jc=(e,t)=>{f0(e.inputs),e.compute(m0(e.inputs[0],t))},Uc=e=>De({axis:e.axis})});var h0,g0,y0,b0,v0,Wc,Vc,Gc=ae(()=>{"use strict";Se();je();mt();Me();h0=e=>{if(!e||e.length<1)throw new Error("too few inputs")},g0=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(s=>r.push(Number(s))),o=r.length),De({numOutputs:o,axis:t.axis,splitSizes:r})},y0=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${$e("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,b0=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let s=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(s):o===0?r.push(`if (output_number == ${o}u) { ${s} }`):o===t-1?r.push(`else { ${s} }`):r.push(`else if (output_number == ${o}) { ${s} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},v0=(e,t)=>{let r=e[0].dims,o=ee.size(r),s=e[0].dataType,p=ee.normalizeAxis(t.axis,r.length),d=new Array(t.numOutputs),g=Q("input",s,r.length),b=new Array(t.numOutputs),w=[],f=[],C=0,S=[{type:12,data:o}];for(let E=0;E<t.numOutputs;E++){C+=t.splitSizes[E],b[E]=C;let P=r.slice();P[t.axis]=t.splitSizes[E],f.push(P),d[E]=oe(`output${E}`,s,P.length),w.push({dims:f[E],dataType:e[0].dataType})}S.push({type:12,data:b},...le(r,...f));let O=E=>`
  ${E.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",b.length).declareVariables(g,...d)}
  ${y0(b.length)}
  ${b0(d)}

  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${g.offsetToIndices("global_idx")};
    var index = ${g.indicesGet("indices",p)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${$e("uniforms.size_in_split_axis","output_number - 1u",b.length)};
      ${g.indicesSet("indices",p,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:O,getRunData:()=>({outputs:w,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:S})}},Wc=(e,t)=>{h0(e.inputs);let r=e.inputs.length===1?t:g0(e.inputs,t);e.compute(v0(e.inputs,r),{inputs:[0]})},Vc=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return De({axis:t,numOutputs:o,splitSizes:r})}});var Hc,w0,_0,$0,Lc,Fc=ae(()=>{"use strict";Se();je();Me();Hc=e=>Array.from(e.getBigInt64Array(),Number),w0=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Hc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},_0=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},$0=e=>{let t=e[0].dims,r=Hc(e[1]),o=_0(t,r),s=ee.size(o),p=e[0].dataType,d=Q("input",p,t.length),g=oe("output",p,o.length),b=w=>`
      const inputShape = ${d.indices(...t)};
      ${w.registerUniform("output_size","u32").declareVariables(d,g)}
      ${w.mainStart()}
      ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${g.offsetToIndices("global_idx")};
      var input_indices: ${d.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${d.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${g.indicesGet("output_indices","i")}  % input_dim_i;

        ${d.indicesSet("input_indices","i","input_dim_value")}
      }
      ${g.setByOffset("global_idx",d.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},...le(e[0].dims,o)]}),getShaderSource:b}},Lc=e=>{w0(e.inputs),e.compute($0(e.inputs),{inputs:[0]})}});var C0,x0,qc,Kc=ae(()=>{"use strict";Se();je();Me();C0=(e,t,r,o,s)=>{let p=oe("output_data",s,r.length,4),d=Q("a_data",t[1].dataType,t[1].dims.length,4),g=Q("b_data",t[2].dataType,t[2].dims.length,4),b=Q("c_data",t[0].dataType,t[0].dims.length,4),w,f=(C,S,O)=>`select(${S}, ${C}, ${O})`;if(!o)w=p.setByOffset("global_idx",f(d.getByOffset("global_idx"),g.getByOffset("global_idx"),b.getByOffset("global_idx")));else{let C=(S,O,E="")=>{let P=`a_data[index_a${O}][component_a${O}]`,j=`b_data[index_b${O}][component_b${O}]`,U=`bool(c_data[index_c${O}] & (0xffu << (component_c${O} * 8)))`;return`
            let output_indices${O} = ${p.offsetToIndices(`global_idx * 4u + ${O}u`)};
            let offset_a${O} = ${d.broadcastedIndicesToOffset(`output_indices${O}`,p)};
            let offset_b${O} = ${g.broadcastedIndicesToOffset(`output_indices${O}`,p)};
            let offset_c${O} = ${b.broadcastedIndicesToOffset(`output_indices${O}`,p)};
            let index_a${O} = offset_a${O} / 4u;
            let index_b${O} = offset_b${O} / 4u;
            let index_c${O} = offset_c${O} / 4u;
            let component_a${O} = offset_a${O} % 4u;
            let component_b${O} = offset_b${O} % 4u;
            let component_c${O} = offset_c${O} % 4u;
            ${S}[${O}] = ${E}(${f(P,j,U)});
          `};s===9?w=`
            var data = vec4<u32>(0);
            ${C("data",0,"u32")}
            ${C("data",1,"u32")}
            ${C("data",2,"u32")}
            ${C("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:w=`
            ${C("output_data[global_idx]",0)}
            ${C("output_data[global_idx]",1)}
            ${C("output_data[global_idx]",2)}
            ${C("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(b,d,g,p)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${w}
      }`},x0=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,s=e[1].dataType,p=!(ee.areEqual(t,r)&&ee.areEqual(r,o)),d=t,g=ee.size(t);if(p){let w=qt.calcShape(qt.calcShape(t,r,!1),o,!1);if(!w)throw new Error("Can't perform where op on the given tensors");d=w,g=ee.size(d)}let b=Math.ceil(g/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:w=>C0(w,e,d,p,s),getRunData:()=>({outputs:[{dims:d,dataType:s}],dispatchGroup:{x:Math.ceil(g/64/4)},programUniforms:[{type:12,data:b},...le(o,t,r,d)]})}},qc=e=>{e.compute(x0(e.inputs))}});var Jc,Yc=ae(()=>{"use strict";dl();yo();fl();hl();Ql();dd();fd();$o();Ad();kd();Bd();jd();Nd();Gd();Fd();Jd();Zd();Qd();xo();rc();oc();uc();Sc();Ac();wa();Oc();Rc();Dc();Nc();Gc();Fc();ri();Sa();Kc();Jc=new Map([["Abs",[gl]],["Acos",[yl]],["Acosh",[bl]],["Add",[ed]],["ArgMax",[ll,go]],["ArgMin",[ul,go]],["Asin",[vl]],["Asinh",[wl]],["Atan",[_l]],["Atanh",[$l]],["Attention",[cl]],["AveragePool",[gc,hc]],["BatchNormalization",[pl]],["BiasAdd",[ml]],["BiasSplitGelu",[Xl]],["Cast",[xl,Cl]],["Ceil",[Il]],["Clip",[Sl]],["Concat",[cd,pd]],["Conv",[Ao,Io]],["ConvTranspose",[Id,Sd]],["Cos",[Al]],["Cosh",[Tl]],["CumSum",[Td,Ed]],["Div",[td]],["Einsum",[Rd,zd]],["Elu",[El,Ca]],["Equal",[rd]],["Erf",[kl]],["Exp",[Ol]],["Expand",[Dd]],["FastGelu",[Ud]],["Floor",[Pl]],["FusedConv",[Ao,Io]],["Gather",[Vd,Wd]],["GatherElements",[Ld,Hd]],["Gelu",[Rl]],["Gemm",[Kd,qd]],["GlobalAveragePool",[vc,bc]],["GlobalMaxPool",[xc,Cc]],["Greater",[od]],["GreaterOrEqual",[ud]],["HardSigmoid",[Wl,Nl]],["InstanceNormalization",[Yd]],["LayerNormalization",[Xd]],["LeakyRelu",[zl,Ca]],["Less",[sd]],["LessOrEqual",[ld]],["Log",[Yl]],["MatMul",[vd]],["MatMulNBits",[ec,tc]],["MaxPool",[_c,$c]],["Mul",[id]],["MultiHeadAttention",[ac,nc]],["Neg",[Ml]],["Not",[Bl]],["Pad",[sc]],["Pow",[nd]],["Range",[Ic]],["Reciprocal",[Dl]],["ReduceMin",[rl]],["ReduceMean",[Zu]],["ReduceMax",[tl]],["ReduceSum",[nl]],["ReduceProd",[il]],["ReduceL1",[Xu]],["ReduceL2",[Qu]],["ReduceLogSum",[ol]],["ReduceLogSumExp",[el]],["ReduceSumSquare",[al]],["Relu",[jl]],["Resize",[Ec,kc]],["Sigmoid",[Ul]],["Sin",[Vl]],["Sinh",[Gl]],["Slice",[Bc,Mc]],["SkipLayerNormalization",[Pc]],["Split",[Wc,Vc]],["Sqrt",[Hl]],["Softmax",[jc,Uc]],["Sub",[ad]],["Tan",[Ll]],["Tanh",[ql]],["ThresholdedRelu",[Jl,Ca]],["Tile",[Lc]],["Transpose",[ju,Uu]],["Where",[qc]]])});var Ba,Zc=ae(()=>{"use strict";Mt();dr();Me();Ba=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,s,p){St(t.programInfo.name);let d=this.backend.device,g=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let b=[];for(let f of r)b.push({binding:b.length,resource:{buffer:f.buffer}});for(let f of o)b.push({binding:b.length,resource:{buffer:f.buffer}});p&&b.push({binding:b.length,resource:p});let w=d.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:b,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let f={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:w,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(f)}g.setPipeline(t.computePipeline),g.setBindGroup(0,w),g.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),wt(t.programInfo.name)}dispose(){}build(t,r){St(t.name);let o=this.backend.device,s=[];o.features.has("shader-f16")&&s.push("enable f16;");let p=Mu(r),d=t.getShaderSource(p),g=`${s.join(`
`)}
${p.additionalImplementations}
${d}`,b=o.createShaderModule({code:g,label:t.name});Ye("verbose",()=>`[WebGPU] ${t.name} shader code: ${g}`);let w=o.createComputePipeline({compute:{module:b,entryPoint:"main"},layout:"auto",label:t.name});return wt(t.name),{programInfo:t,computePipeline:w}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,s=typeof t=="number"?1:t.z||1,p=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=p&&o<=p&&s<=p)return[r,o,s];let d=r*o*s,g=Math.ceil(Math.sqrt(d));if(g>p){if(g=Math.ceil(Math.cbrt(d)),g>p)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[g,g,g]}else return[g,g,1]}}});var S0,I0,Ro,Ma,Xc=ae(()=>{"use strict";Mt();Se();dr();Ou();Bu();Yc();Zc();S0=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let s=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${s}`);break}case"rank":{let p=e[o].dims.length;r.push(`${s};${p}`);break}case"dims":{let p=e[o].dims.join(",");r.push(`${s};${p}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},I0=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${S0(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},Ro=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},Ma=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(s),this.adapterInfo=new Ro(await r.requestAdapterInfo()),this.gpuDataManager=zu(this),this.programManager=new Ba(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Eu(t.logLevel,!!t.debug),this.device.onuncapturederror=p=>{p.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${p.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),Object.defineProperty(this.env.webgpu,"adapter",{value:r}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;St(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let s=0;s<r.length/2;s++){let p=o[s],d=p.kernelId,g=this.kernels.get(d),b=g.kernelType,w=g.kernelName,f=p.programName,C=p.inputTensorViews,S=p.outputTensorViews,O=r[s*2],E=r[s*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=O);let P=Number(O-this.queryTimeBase),j=Number(E-this.queryTimeBase);if(!Number.isSafeInteger(P)||!Number.isSafeInteger(j))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:C.map(U=>({dims:U.dims,dataType:lr(U.dataType)})),outputsMetadata:S.map(U=>({dims:U.dims,dataType:lr(U.dataType)})),kernelId:d,kernelType:b,kernelName:w,programName:f,startTime:P,endTime:j});else{let U="";C.forEach((N,W)=>{U+=`input[${W}]: [${N.dims}] | ${lr(N.dataType)}, `});let z="";S.forEach((N,W)=>{z+=`output[${W}]: [${N.dims}] | ${lr(N.dataType)}, `}),console.log(`[profiling] kernel "${d}|${b}|${w}|${f}" ${U}${z}execution time: ${j-P} ns`)}ln("GPU",`${f}::${O}::${E}`)}t.unmap(),this.pendingQueries.delete(t)}),wt()}run(t,r,o,s,p){St(t.name);let d=[];for(let z=0;z<r.length;++z){let N=r[z].data;if(N===0)continue;let W=this.gpuDataManager.get(N);if(!W)throw new Error(`no GPU data for input: ${N}`);d.push(W)}let{outputs:g,dispatchGroup:b,programUniforms:w}=t.getRunData(r),f=o.length===0?g.map((z,N)=>N):o;if(f.length!==g.length)throw new Error(`Output size ${f.length} must be equal to ${g.length}.`);let C=[],S=[];for(let z=0;z<g.length;++z){if(!Number.isInteger(f[z])||f[z]<-3||f[z]>=g.length)throw new Error(`Invalid output index: ${f[z]}`);if(f[z]===-3)continue;let N=f[z]===-1,W=f[z]===-2,J=N||W?p(g[z].dataType,g[z].dims):s(f[z],g[z].dataType,g[z].dims);if(C.push(J),J.data===0)continue;let Y=this.gpuDataManager.get(J.data);if(!Y)throw new Error(`no GPU data for output: ${J.data}`);if(N&&this.temporaryData.push(Y),W){let te=this.kernelPersistentData.get(this.currentKernelId);te||(te=[],this.kernelPersistentData.set(this.currentKernelId,te)),te.push(Y)}S.push(Y)}if(d.length!==r.length||S.length!==C.length){if(S.length===0)return wt(t.name),C;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let O;if(w){let z=0,N=[];w.forEach(te=>{let q=typeof te.data=="number"?[te.data]:te.data;if(q.length===0)return;let ue=te.type===10?2:4,de,Pe;te.type===10?(Pe=q.length>4?16:q.length>2?8:q.length*ue,de=q.length>4?16:ue*q.length):(Pe=q.length<=2?q.length*ue:16,de=16),z=Math.ceil(z/Pe)*Pe,N.push(z);let Ne=te.type===10?8:4;z+=q.length>4?Math.ceil(q.length/Ne)*de:q.length*ue});let W=16;z=Math.ceil(z/W)*W;let J=new ArrayBuffer(z);w.forEach((te,q)=>{let ue=N[q],de=typeof te.data=="number"?[te.data]:te.data;if(te.type===6)new Int32Array(J,ue,de.length).set(de);else if(te.type===12)new Uint32Array(J,ue,de.length).set(de);else if(te.type===10)new Uint16Array(J,ue,de.length).set(de);else if(te.type===1)new Float32Array(J,ue,de.length).set(de);else throw new Error(`Unsupported uniform type: ${lr(te.type)}`)});let Y=this.gpuDataManager.create(z,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Y.buffer,0,J,0,z),this.gpuDataManager.release(Y.id),O={offset:0,size:z,buffer:Y.buffer}}let E=this.programManager.normalizeDispatchGroupSize(b),P=E[1]===1&&E[2]===1,j=I0(t,r,P),U=this.programManager.getArtifact(j);if(U||(U=this.programManager.build(t,E),this.programManager.setArtifact(j,U),Ye("info",()=>`[artifact] key: ${j}, programName: ${t.name}`)),Ye("info",()=>`[ProgramManager] run "${t.name}" (key=${j}) with ${E[0]}x${E[1]}x${E[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let z={kernelId:this.currentKernelId,programName:U.programInfo.name,inputTensorViews:r,outputTensorViews:C};this.pendingKernels.push(z),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(z)}return this.programManager.run(U,d,S,E,O),wt(t.name),C}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,s){let p=Jc.get(t);if(!p)throw new Error(`kernel not implemented: ${t}`);let d={kernelType:t,kernelName:s,kernelEntry:p[0],attributes:[p[1],o]};this.kernels.set(r,d)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let s=this.kernels.get(t);if(!s)throw new Error(`kernel not created: ${t}`);let p=s.kernelType,d=s.kernelName,g=s.kernelEntry,b=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${p}] ${d}" is not allowed to be called recursively`);this.currentKernelId=t,b[0]&&(b[1]=b[0](b[1]),b[0]=void 0),Ye("info",()=>`[WebGPU] Start to run kernel "[${p}] ${d}"...`);let w=this.env.debug;this.temporaryData=[];try{return w&&this.device.pushErrorScope("validation"),g(r,b[1]),0}catch(f){return o.push(Promise.resolve(`[WebGPU] Kernel "[${p}] ${d}" failed. ${f}`)),1}finally{w&&o.push(this.device.popErrorScope().then(f=>f?`GPU validation error for kernel "[${p}] ${d}": ${f.message}`:null));for(let f of this.temporaryData)this.gpuDataManager.release(f.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,s){let p=this.sessionExternalDataMapping.get(t);p||(p=new Map,this.sessionExternalDataMapping.set(t,p));let d=p.get(r),g=this.gpuDataManager.registerExternalBuffer(o,s,d?.[1]);return p.set(r,[g,o]),g}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let s=await uo(this,t,r);return ku(s.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ye("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ye("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ye("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let s=0;s<o;s++){let p=this.getComputePassEncoder(),d=t[s];this.writeTimestamp(this.pendingDispatchNumber*2),p.setPipeline(d.computePipeline),p.setBindGroup(0,d.bindGroup),p.dispatchWorkgroups(...d.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var Qc={};xr(Qc,{init:()=>A0});var yn,zo,A0,ep=ae(()=>{"use strict";Se();Xc();dr();je();yn=class e{constructor(t,r,o,s){this.module=t;this.dataType=r;this.data=o;this.dims=s}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=ee.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=ee.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=ee.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(ee.size(t)!==ee.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},zo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=r.adapterInfo;let s=t.HEAPU32,p=o>>>2;this.opKernelContext=s[p++];let d=s[p++];this.outputCount=s[p++],this.customDataOffset=s[p++],this.customDataSize=s[p++];let g=[];for(let b=0;b<d;b++){let w=s[p++],f=s[p++],C=s[p++],S=[];for(let O=0;O<C;O++)S.push(s[p++]);g.push(new yn(t,w,f,S))}this.inputs=g}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(g=>typeof g=="number"?this.inputs[g]:g)??this.inputs,s=r?.outputs??[],p=(g,b,w)=>new yn(this.module,b,this.output(g,w),w),d=(g,b)=>{let w=cn(g);if(!w)throw new Error(`Unsupported data type: ${g}`);let f=w*ee.size(b),C=f>0?this.backend.gpuDataManager.create(f).id:0;return new yn(this.module,g,C,b)};return this.backend.run(t,o,s,p,d)}output(t,r){let o=this.module.stackSave();try{let s=this.module.stackAlloc((1+r.length)*4),p=s>>2;this.module.HEAPU32[p++]=r.length;for(let d=0;d<r.length;d++)this.module.HEAPU32[p++]=r[d];return this.module._JsepOutput(this.opKernelContext,t,s)}catch(s){throw new Error(`Failed to generate kernel's output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(o)}}},A0=async(e,t,r)=>{let o=e.jsepInit;if(!o)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let s=new Ma;await s.initialize(t,r),o(s,p=>s.alloc(p),p=>s.free(p),(p,d,g,b=!1)=>{if(b)Ye("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${p}, dst=${d}, size=${g}`),s.memcpy(p,d);else{Ye("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${p}, gpuDataId=${d}, size=${g}`);let w=e.HEAPU8.subarray(p>>>0,(p>>>0)+g);s.upload(d,w)}},async(p,d,g)=>{Ye("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${p}, dataOffset=${d}, size=${g}`),await s.download(p,()=>e.HEAPU8.subarray(d>>>0,(d>>>0)+g))},(p,d,g)=>s.createKernel(p,d,g,e.UTF8ToString(e._JsepGetNodeName(d))),p=>s.releaseKernel(p),(p,d,g,b)=>{Ye("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${g}, kernel=${p}, contextDataOffset=${d}`);let w=new zo(e,s,d);return s.computeKernel(p,w,b)},()=>s.captureBegin(),()=>s.captureEnd(),()=>s.replay())}});var T0,rp,ip,Tr,E0,Bo,np,ap,tp,op,sp,up,lp=ae(()=>{"use strict";xu();Iu();Se();ei();da();oo();T0=(e,t)=>{it()._OrtInit(e,t)!==0&&Je("Can't initialize onnxruntime.")},rp=async e=>{T0(e.wasm.numThreads,pn(e.logLevel))},ip=async(e,t)=>{if(t==="webgpu"||t==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let r=e.webgpu?.powerPreference;if(r!==void 0&&r!=="low-power"&&r!=="high-performance")throw new Error(`Invalid powerPreference setting: "${r}"`);let o=e.webgpu?.forceFallbackAdapter;if(o!==void 0&&typeof o!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${o}"`);let s=await navigator.gpu.requestAdapter({powerPreference:r,forceFallbackAdapter:o});if(!s)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let p=(ep(),sr(Qc)).init;await p(it(),e,s)}},Tr=new Map,E0=e=>{let t=it(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Je("Can't get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Bo=e=>{let t=it(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},np=async(e,t)=>{let r,o,s=it();Array.isArray(e)?[r,o]=e:e.buffer===s.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Bo(e);let p=0,d=0,g=0,b=[],w=[],f=[];try{if([d,b]=Su(t),t?.externalData&&s.mountExternalData){let z=[];for(let N of t.externalData){let W=typeof N=="string"?N:N.path;z.push(fn(typeof N=="string"?N:N.data).then(J=>{s.mountExternalData(W,J)}))}await Promise.all(z)}p=await s._OrtCreateSession(r,o,d),p===0&&Je("Can't create a session.");let[C,S]=E0(p),O=!!t?.enableGraphCapture,E=[],P=[],j=[];for(let z=0;z<C;z++){let N=s._OrtGetInputName(p,z);N===0&&Je("Can't get an input name."),w.push(N),E.push(s.UTF8ToString(N))}for(let z=0;z<S;z++){let N=s._OrtGetOutputName(p,z);N===0&&Je("Can't get an output name."),f.push(N);let W=s.UTF8ToString(N);P.push(W);{if(O&&t?.preferredOutputLocation===void 0){j.push("gpu-buffer");continue}let J=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[W]??"cpu";if(J!=="cpu"&&J!=="cpu-pinned"&&J!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${J}.`);if(O&&J!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${J}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);j.push(J)}}let U=null;return j.some(z=>z==="gpu-buffer")&&(g=s._OrtCreateBinding(p),g===0&&Je("Can't create IO binding."),U={handle:g,outputPreferredLocations:j,outputPreferredLocationsEncoded:j.map(z=>ao(z))}),Tr.set(p,[p,w,f,U,O,!1]),[p,E,P]}catch(C){throw w.forEach(S=>s._OrtFree(S)),f.forEach(S=>s._OrtFree(S)),g!==0&&s._OrtReleaseBinding(g),p!==0&&s._OrtReleaseSession(p),C}finally{s._free(r),d!==0&&s._OrtReleaseSessionOptions(d),b.forEach(C=>s._free(C)),s.unmountExternalData?.()}},ap=e=>{let t=it(),r=Tr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,s,p,d,g]=r;d&&(g&&t._OrtClearBoundOutputs(d.handle),t._OrtReleaseBinding(d.handle)),t.jsepOnReleaseSession?.(e),s.forEach(b=>t._OrtFree(b)),p.forEach(b=>t._OrtFree(b)),t._OrtReleaseSession(o),Tr.delete(e)},tp=(e,t,r,o,s,p=!1)=>{if(!e){t.push(0);return}let d=it(),g=e[0],b=e[1],w=e[3],f,C;if(g==="string"&&w==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(p&&w!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${s} when enableGraphCapture is true.`);if(w==="gpu-buffer"){let E=e[2].gpuBuffer,P=cn(no(g));C=b.reduce((j,U)=>j*U,1)*P,f=d.jsepRegisterBuffer(o,s,E,C)}else{let E=e[2];if(Array.isArray(E)){C=4*E.length,f=d._malloc(C),r.push(f);let P=f/4;for(let j=0;j<E.length;j++){if(typeof E[j]!="string")throw new TypeError(`tensor data at index ${j} is not a string`);d.HEAPU32[P++]=et(E[j],r)}}else C=E.byteLength,f=d._malloc(C),r.push(f),d.HEAPU8.set(new Uint8Array(E.buffer,E.byteOffset,C),f)}let S=d.stackSave(),O=d.stackAlloc(4*b.length);try{let E=O/4;b.forEach(j=>d.HEAP32[E++]=j);let P=d._OrtCreateTensor(no(g),f,C,O,b.length,ao(w));P===0&&Je(`Can't create tensor for input/output. session=${o}, index=${s}.`),t.push(P)}finally{d.stackRestore(S)}},op=async(e,t,r,o,s,p)=>{let d=it(),g=Tr.get(e);if(!g)throw new Error(`cannot run inference. invalid session id: ${e}`);let b=g[0],w=g[1],f=g[2],C=g[3],S=g[4],O=g[5],E=t.length,P=o.length,j=0,U=[],z=[],N=[],W=[],J=d.stackSave(),Y=d.stackAlloc(E*4),te=d.stackAlloc(E*4),q=d.stackAlloc(P*4),ue=d.stackAlloc(P*4);try{[j,U]=Cu(p);for(let ge=0;ge<E;ge++)tp(r[ge],z,W,e,t[ge],S);for(let ge=0;ge<P;ge++)tp(s[ge],N,W,e,E+o[ge],S);let de=Y/4,Pe=te/4,Ne=q/4,qe=ue/4;for(let ge=0;ge<E;ge++)d.HEAPU32[de++]=z[ge],d.HEAPU32[Pe++]=w[t[ge]];for(let ge=0;ge<P;ge++)d.HEAPU32[Ne++]=N[ge],d.HEAPU32[qe++]=f[o[ge]];if(C&&!O){let{handle:ge,outputPreferredLocations:Ue,outputPreferredLocationsEncoded:ke}=C;if(w.length!==E)throw new Error(`input count from feeds (${E}) is expected to be always equal to model's input count (${w.length}).`);for(let be=0;be<E;be++){let Re=t[be];await d._OrtBindInput(ge,w[Re],z[be])!==0&&Je(`Can't bind input[${be}] for session=${e}.`)}for(let be=0;be<P;be++){let Re=o[be];s[be]?.[3]?d._OrtBindOutput(ge,f[Re],N[be],0)!==0&&Je(`Can't bind pre-allocated output[${be}] for session=${e}.`):d._OrtBindOutput(ge,f[Re],0,ke[Re])!==0&&Je(`Can't bind output[${be}] to ${Ue[be]} for session=${e}.`)}Tr.set(e,[b,w,f,C,S,!0])}d.jsepOnRunStart?.(b);let Ie;C?Ie=await d._OrtRunWithBinding(b,C.handle,P,q,j):Ie=await d._OrtRun(b,te,Y,E,ue,P,q,j),Ie!==0&&Je("failed to call OrtRun().");let Te=[];for(let ge=0;ge<P;ge++){let Ue=d.HEAPU32[q/4+ge];if(Ue===N[ge]){Te.push(s[ge]);continue}let ke=d.stackSave(),be=d.stackAlloc(4*4),Re=!1,Oe,Ve=0;try{d._OrtGetTensorData(Ue,be,be+4,be+8,be+12)!==0&&Je(`Can't access output tensor data on index ${ge}.`);let ne=be/4,ve=d.HEAPU32[ne++];Ve=d.HEAPU32[ne++];let Ee=d.HEAPU32[ne++],Tt=d.HEAPU32[ne++],nt=[];for(let tt=0;tt<Tt;tt++)nt.push(d.HEAPU32[Ee/4+tt]);d._OrtFree(Ee);let at=nt.reduce((tt,rt)=>tt*rt,1);Oe=lr(ve);let Qt=C?.outputPreferredLocations[o[ge]];if(Oe==="string"){if(Qt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let tt=[],rt=Ve/4;for(let _t=0;_t<at;_t++){let Et=d.HEAPU32[rt++],Lt=_t===at-1?void 0:d.HEAPU32[rt]-Et;tt.push(d.UTF8ToString(Et,Lt))}Te.push([Oe,nt,tt,"cpu"])}else if(Qt==="gpu-buffer"&&at>0){let tt=d.jsepGetBuffer(Ve),rt=cn(ve);if(rt===void 0||!pa(Oe))throw new Error(`Unsupported data type: ${Oe}`);Re=!0,Te.push([Oe,nt,{gpuBuffer:tt,download:d.jsepCreateDownloader(tt,at*rt,Oe),dispose:()=>{d._OrtReleaseTensor(Ue)}},"gpu-buffer"])}else{let tt=ca(Oe),rt=new tt(at);new Uint8Array(rt.buffer,rt.byteOffset,rt.byteLength).set(d.HEAPU8.subarray(Ve,Ve+rt.byteLength)),Te.push([Oe,nt,rt,"cpu"])}}finally{d.stackRestore(ke),Oe==="string"&&Ve&&d._free(Ve),Re||d._OrtReleaseTensor(Ue)}}return C&&!S&&(d._OrtClearBoundOutputs(C.handle),Tr.set(e,[b,w,f,C,S,!1])),Te}finally{d.stackRestore(J),z.forEach(de=>d._OrtReleaseTensor(de)),N.forEach(de=>d._OrtReleaseTensor(de)),W.forEach(de=>d._free(de)),j!==0&&d._OrtReleaseRunOptions(j),U.forEach(de=>d._free(de))}},sp=e=>{let t=it(),r=Tr.get(e);if(!r)throw new Error("invalid session id");let o=r[0],s=t._OrtEndProfiling(o);s===0&&Je("Can't get an profile file name."),t._OrtFree(s)},up=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t}});var dp=Qr((FC,O0)=>{O0.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var _o=Object.defineProperty;var Pm=Object.getOwnPropertyDescriptor;var Om=Object.getOwnPropertyNames;var km=Object.prototype.hasOwnProperty;var ue=(e,r)=>()=>(e&&(r=e(e=0)),r);var Yn=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),Ni=(e,r)=>{for(var t in r)_o(e,t,{get:r[t],enumerable:!0})},Rm=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let l of Om(r))!km.call(e,l)&&l!==t&&_o(e,l,{get:()=>r[l],enumerable:!(s=Pm(r,l))||s.enumerable});return e};var Wr=e=>Rm(_o({},"__esModule",{value:!0}),e);var $o={};Ni($o,{createReadStream:()=>is,readFile:()=>Bm,readFileSync:()=>Dm});var Bm,Dm,is,Co=ue(()=>{Bm=void 0,Dm=void 0,is=void 0});var So={};Ni(So,{join:()=>Mm});var Mm,xo=ue(()=>{Mm=void 0});var ss=Yn((as,Ao)=>{"use strict";var os=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(r={}){var t=r,s,l;t.ready=new Promise((n,i)=>{s=n,l=i}),t.mountExternalData=(n,i)=>{(t.jh||(t.jh=new Map)).set(n,i)},t.unmountExternalData=()=>{delete t.jh},t.jsepInit=(n,i,o,u,c,p,g,v,w,$,A)=>{t.Oh=n,t.Ah=i,t.Eh=o,t.qh=u,t.Dh=c,t.Jd=p,t.Fh=g,t.Hh=v,t.Bh=w,t.Ch=$,t.Gh=A,i=(I,O,S)=>(...D)=>{let W=bt,X=O?.();D=I(...D);let ne=O?.();return X!==ne&&(I=ne,S(X),O=S=null),bt!=W?li():D},o=I=>async(...O)=>{try{if(t.ih)throw Error("Session already started");let S=t.ih={Jh:O[0],errors:[]},D=await I(...O);if(t.ih!==S)throw Error("Session mismatch");n.flush();let W=S.errors;if(0<W.length){let X=await Promise.all(W);if(X=X.filter(ne=>ne),0<X.length)throw Error(X.join(`\n`))}return D}finally{t.ih=null}},t._OrtCreateSession=i(t._OrtCreateSession,()=>t._OrtCreateSession,I=>t._OrtCreateSession=I),t._OrtRun=o(i(t._OrtRun,()=>t._OrtRun,I=>t._OrtRun=I)),t._OrtRunWithBinding=o(i(t._OrtRunWithBinding,()=>t._OrtRunWithBinding,I=>t._OrtRunWithBinding=I)),t._OrtBindInput=i(t._OrtBindInput,()=>t._OrtBindInput,I=>t._OrtBindInput=I),t.jsepRegisterBuffer=(I,O,S,D)=>n.registerBuffer(I,O,S,D),t.jsepGetBuffer=I=>n.getBuffer(I),t.jsepCreateDownloader=(I,O,S)=>n.createDownloader(I,O,S),t.jsepOnReleaseSession=I=>{n.onReleaseSession(I)},t.jsepOnRunStart=I=>n.onRunStart(I)};var f=Object.assign({},t),d="./this.program",y=(n,i)=>{throw i},b=typeof window=="object",C=typeof importScripts=="function",m=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x="",P,R,E;if(m){var k=(Co(),Wr($o)),U=(xo(),Wr(So));x=C?U.dirname(x)+"/":__dirname+"/",P=(n,i)=>(n=Oe(n)?new URL(n):U.normalize(n),k.readFileSync(n,i?void 0:"utf8")),E=n=>(n=P(n,!0),n.buffer||(n=new Uint8Array(n)),n),R=(n,i,o,u=!0)=>{n=Oe(n)?new URL(n):U.normalize(n),k.readFile(n,u?void 0:"utf8",(c,p)=>{c?o(c):i(u?p.buffer:p)})},!t.thisProgram&&1<process.argv.length&&(d=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),y=(n,i)=>{throw process.exitCode=n,i},t.inspect=()=>"[Emscripten Module object]"}else(b||C)&&(C?x=self.location.href:typeof document<"u"&&document.currentScript&&(x=document.currentScript.src),e&&(x=e),x.indexOf("blob:")!==0?x=x.substr(0,x.replace(/[?#].*/,"").lastIndexOf("/")+1):x="",P=n=>{var i=new XMLHttpRequest;return i.open("GET",n,!1),i.send(null),i.responseText},C&&(E=n=>{var i=new XMLHttpRequest;return i.open("GET",n,!1),i.responseType="arraybuffer",i.send(null),new Uint8Array(i.response)}),R=(n,i,o)=>{var u=new XMLHttpRequest;u.open("GET",n,!0),u.responseType="arraybuffer",u.onload=()=>{u.status==200||u.status==0&&u.response?i(u.response):o()},u.onerror=o,u.send(null)});var j=console.log.bind(console),B=console.error.bind(console);Object.assign(t,f),f=null,typeof WebAssembly!="object"&&be("no native wasm support detected");var V,N=!1,J,Y,te,q,se,de,ke;function Ve(){var n=V.buffer;t.HEAP8=Y=new Int8Array(n),t.HEAP16=new Int16Array(n),t.HEAPU8=te=new Uint8Array(n),t.HEAPU16=new Uint16Array(n),t.HEAP32=q=new Int32Array(n),t.HEAPU32=se=new Uint32Array(n),t.HEAPF32=de=new Float32Array(n),t.HEAPF64=ke=new Float64Array(n)}var Fe=[],Ae=[],Te=[],ge=0,je=null,Pe=null;function be(n){throw n="Aborted("+n+")",B(n),N=!0,J=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),l(n),n}var Re=n=>n.startsWith("data:application/octet-stream;base64,"),Oe=n=>n.startsWith("file://"),We;if(We="ort-wasm-simd.wasm",!Re(We)){var st=We;We=t.locateFile?t.locateFile(st,x):x+st}function ie(n){if(E)return E(n);throw"both async and sync fetching of the wasm failed"}function ve(n){if(b||C){if(typeof fetch=="function"&&!Oe(n))return fetch(n,{credentials:"same-origin"}).then(i=>{if(!i.ok)throw"failed to load wasm binary file at \'"+n+"\'";return i.arrayBuffer()}).catch(()=>ie(n));if(R)return new Promise((i,o)=>{R(n,u=>i(new Uint8Array(u)),o)})}return Promise.resolve().then(()=>ie(n))}function Ee(n,i,o){return ve(n).then(u=>WebAssembly.instantiate(u,i)).then(u=>u).then(o,u=>{B(`failed to asynchronously prepare wasm: ${u}`),be(u)})}function Ct(n,i){var o=We;return typeof WebAssembly.instantiateStreaming!="function"||Re(o)||Oe(o)||m||typeof fetch!="function"?Ee(o,n,i):fetch(o,{credentials:"same-origin"}).then(u=>WebAssembly.instantiateStreaming(u,n).then(i,function(c){return B(`wasm streaming compile failed: ${c}`),B("falling back to ArrayBuffer instantiation"),Ee(o,n,i)}))}var nt,it={1366560:(n,i,o,u)=>{if(typeof t>"u"||!t.jh)return 1;if(n=ot(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=t.jh.get(n),!n)return 2;if(i>>>=0,o>>>=0,i+o>n.byteLength)return 3;try{return te.set(n.subarray(i,i+o),u>>>0>>>0),0}catch{return 4}},1367061:()=>{t.Bh()},1367092:()=>{t.Ch()},1367121:()=>{t.Gh()},1367146:n=>t.Ah(n),1367179:n=>t.Eh(n),1367211:(n,i,o)=>{t.qh(n,i,o,!0)},1367250:(n,i,o)=>{t.qh(n,i,o)},1367283:n=>{t.Jd("Abs",n,void 0)},1367334:n=>{t.Jd("Neg",n,void 0)},1367385:n=>{t.Jd("Floor",n,void 0)},1367438:n=>{t.Jd("Ceil",n,void 0)},1367490:n=>{t.Jd("Reciprocal",n,void 0)},1367548:n=>{t.Jd("Sqrt",n,void 0)},1367600:n=>{t.Jd("Exp",n,void 0)},1367651:n=>{t.Jd("Erf",n,void 0)},1367702:n=>{t.Jd("Sigmoid",n,void 0)},1367757:(n,i,o)=>{t.Jd("HardSigmoid",n,{alpha:i,beta:o})},1367836:n=>{t.Jd("Log",n,void 0)},1367887:n=>{t.Jd("Sin",n,void 0)},1367938:n=>{t.Jd("Cos",n,void 0)},1367989:n=>{t.Jd("Tan",n,void 0)},1368040:n=>{t.Jd("Asin",n,void 0)},1368092:n=>{t.Jd("Acos",n,void 0)},1368144:n=>{t.Jd("Atan",n,void 0)},1368196:n=>{t.Jd("Sinh",n,void 0)},1368248:n=>{t.Jd("Cosh",n,void 0)},1368300:n=>{t.Jd("Asinh",n,void 0)},1368353:n=>{t.Jd("Acosh",n,void 0)},1368406:n=>{t.Jd("Atanh",n,void 0)},1368459:n=>{t.Jd("Tanh",n,void 0)},1368511:n=>{t.Jd("Not",n,void 0)},1368562:(n,i,o)=>{t.Jd("Clip",n,{min:i,max:o})},1368631:n=>{t.Jd("Clip",n,void 0)},1368683:(n,i)=>{t.Jd("Elu",n,{alpha:i})},1368741:n=>{t.Jd("Relu",n,void 0)},1368793:(n,i)=>{t.Jd("LeakyRelu",n,{alpha:i})},1368857:(n,i)=>{t.Jd("ThresholdedRelu",n,{alpha:i})},1368927:(n,i)=>{t.Jd("Cast",n,{to:i})},1368985:n=>{t.Jd("Add",n,void 0)},1369036:n=>{t.Jd("Sub",n,void 0)},1369087:n=>{t.Jd("Mul",n,void 0)},1369138:n=>{t.Jd("Div",n,void 0)},1369189:n=>{t.Jd("Pow",n,void 0)},1369240:n=>{t.Jd("Equal",n,void 0)},1369293:n=>{t.Jd("Greater",n,void 0)},1369348:n=>{t.Jd("GreaterOrEqual",n,void 0)},1369410:n=>{t.Jd("Less",n,void 0)},1369462:n=>{t.Jd("LessOrEqual",n,void 0)},1369521:(n,i,o,u,c)=>{t.Jd("ReduceMean",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(q.subarray(u>>>0,c>>>0)):[]})},1369680:(n,i,o,u,c)=>{t.Jd("ReduceMax",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(q.subarray(u>>>0,c>>>0)):[]})},1369838:(n,i,o,u,c)=>{t.Jd("ReduceMin",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(q.subarray(u>>>0,c>>>0)):[]})},1369996:(n,i,o,u,c)=>{t.Jd("ReduceProd",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(q.subarray(u>>>0,c>>>0)):[]})},1370155:(n,i,o,u,c)=>{t.Jd("ReduceSum",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(q.subarray(u>>>0,c>>>0)):[]})},1370313:(n,i,o,u,c)=>{t.Jd("ReduceL1",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(q.subarray(u>>>0,c>>>0)):[]})},1370470:(n,i,o,u,c)=>{t.Jd("ReduceL2",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(q.subarray(u>>>0,c>>>0)):[]})},1370627:(n,i,o,u,c)=>{t.Jd("ReduceLogSum",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(q.subarray(u>>>0,c>>>0)):[]})},1370788:(n,i,o,u,c)=>{t.Jd("ReduceSumSquare",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(q.subarray(u>>>0,c>>>0)):[]})},1370952:(n,i,o,u,c)=>{t.Jd("ReduceLogSumExp",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:u?Array.from(q.subarray(u>>>0,c>>>0)):[]})},1371116:n=>{t.Jd("Where",n,void 0)},1371169:(n,i,o)=>{t.Jd("Transpose",n,{perm:i?Array.from(q.subarray(i>>>0,o>>>0)):[]})},1371277:(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)=>{t.Jd("ConvTranspose",n,{format:w?"NHWC":"NCHW",autoPad:i,dilations:[o],group:u,kernel_shape:[c],pads:[p,g],strides:[v],wIsConst:()=>!!Y[$>>>0],outputPadding:A?Array.from(q.subarray(A>>>0,I>>>0)):[],outputShape:O?Array.from(q.subarray(O>>>0,S>>>0)):[],activation:ot(D)})},1371679:(n,i,o,u,c,p,g,v,w,$,A,I,O,S)=>{t.Jd("ConvTranspose",n,{format:v?"NHWC":"NCHW",autoPad:i,dilations:Array.from(q.subarray(o>>>0,(o>>>0)+2>>>0)),group:u,kernelShape:Array.from(q.subarray(c>>>0,(c>>>0)+2>>>0)),pads:Array.from(q.subarray(p>>>0,(p>>>0)+4>>>0)),strides:Array.from(q.subarray(g>>>0,(g>>>0)+2>>>0)),wIsConst:()=>!!Y[w>>>0],outputPadding:$?Array.from(q.subarray($>>>0,A>>>0)):[],outputShape:I?Array.from(q.subarray(I>>>0,O>>>0)):[],activation:ot(S)})},1372244:(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)=>{t.Jd("ConvTranspose",n,{format:w?"NHWC":"NCHW",autoPad:i,dilations:[o],group:u,kernel_shape:[c],pads:[p,g],strides:[v],wIsConst:()=>!!Y[$>>>0],outputPadding:A?Array.from(q.subarray(A>>>0,I>>>0)):[],outputShape:O?Array.from(q.subarray(O>>>0,S>>>0)):[],activation:ot(D)})},1372646:(n,i,o,u,c,p,g,v,w,$,A,I,O,S)=>{t.Jd("ConvTranspose",n,{format:v?"NHWC":"NCHW",autoPad:i,dilations:Array.from(q.subarray(o>>>0,(o>>>0)+2>>>0)),group:u,kernelShape:Array.from(q.subarray(c>>>0,(c>>>0)+2>>>0)),pads:Array.from(q.subarray(p>>>0,(p>>>0)+4>>>0)),strides:Array.from(q.subarray(g>>>0,(g>>>0)+2>>>0)),wIsConst:()=>!!Y[w>>>0],outputPadding:$?Array.from(q.subarray($>>>0,A>>>0)):[],outputShape:I?Array.from(q.subarray(I>>>0,O>>>0)):[],activation:ot(S)})},1373211:(n,i)=>{t.Jd("GlobalAveragePool",n,{format:i?"NHWC":"NCHW"})},1373302:(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)=>{t.Jd("AveragePool",n,{format:W?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:u,storage_order:c,dilations:[p,g],kernel_shape:[v,w],pads:[$,A,I,O],strides:[S,D]})},1373586:(n,i)=>{t.Jd("GlobalAveragePool",n,{format:i?"NHWC":"NCHW"})},1373677:(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)=>{t.Jd("AveragePool",n,{format:W?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:u,storage_order:c,dilations:[p,g],kernel_shape:[v,w],pads:[$,A,I,O],strides:[S,D]})},1373961:(n,i)=>{t.Jd("GlobalMaxPool",n,{format:i?"NHWC":"NCHW"})},1374048:(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)=>{t.Jd("MaxPool",n,{format:W?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:u,storage_order:c,dilations:[p,g],kernel_shape:[v,w],pads:[$,A,I,O],strides:[S,D]})},1374328:(n,i)=>{t.Jd("GlobalMaxPool",n,{format:i?"NHWC":"NCHW"})},1374415:(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)=>{t.Jd("MaxPool",n,{format:W?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:u,storage_order:c,dilations:[p,g],kernel_shape:[v,w],pads:[$,A,I,O],strides:[S,D]})},1374695:(n,i,o,u,c)=>{t.Jd("Gemm",n,{alpha:i,beta:o,transA:u,transB:c})},1374799:n=>{t.Jd("MatMul",n,void 0)},1374853:(n,i,o,u)=>{t.Jd("ArgMax",n,{keepDims:!!i,selectLastIndex:!!o,axis:u})},1374961:(n,i,o,u)=>{t.Jd("ArgMin",n,{keepDims:!!i,selectLastIndex:!!o,axis:u})},1375069:(n,i)=>{t.Jd("Softmax",n,{axis:i})},1375132:(n,i)=>{t.Jd("Concat",n,{axis:i})},1375192:(n,i,o,u,c)=>{t.Jd("Split",n,{axis:i,numOutputs:o,splitSizes:u?Array.from(q.subarray(u>>>0,c>>>0)):[]})},1375332:n=>{t.Jd("Expand",n,void 0)},1375386:(n,i)=>{t.Jd("Gather",n,{axis:Number(i)})},1375457:(n,i)=>{t.Jd("GatherElements",n,{axis:Number(i)})},1375536:(n,i,o,u,c,p,g,v,w,$,A)=>{t.Jd("Resize",n,{antialias:i,axes:o?Array.from(q.subarray(o>>>0,u>>>0)):[],coordinateTransformMode:ot(c),cubicCoeffA:p,excludeOutside:g,extrapolationValue:v,keepAspectRatioPolicy:ot(w),mode:ot($),nearestMode:ot(A)})},1375882:(n,i,o,u,c,p,g)=>{t.Jd("Slice",n,{starts:i?Array.from(q.subarray(i>>>0,o>>>0)):[],ends:u?Array.from(q.subarray(u>>>0,c>>>0)):[],axes:p?Array.from(q.subarray(p>>>0,g>>>0)):[]})},1376098:n=>{t.Jd("Tile",n,void 0)},1376150:(n,i,o)=>{t.Jd("LayerNormalization",n,{axis:Number(i),epsilon:Number(o)})},1376257:(n,i,o)=>{t.Jd("InstanceNormalization",n,{epsilon:i,format:o?"NHWC":"NCHW"})},1376371:(n,i,o)=>{t.Jd("InstanceNormalization",n,{epsilon:i,format:o?"NHWC":"NCHW"})},1376485:n=>{t.Jd("Range",n,void 0)},1376538:(n,i)=>{t.Jd("Einsum",n,{equation:ot(i)})},1376619:(n,i,o,u,c)=>{t.Jd("Pad",n,{mode:i,value:o,pads:u?Array.from(q.subarray(u>>>0,c>>>0)):[]})},1376746:(n,i,o,u,c,p)=>{t.Jd("BatchNormalization",n,{epsilon:i,momentum:o,spatial:!!c,trainingMode:!!u,format:p?"NHWC":"NCHW"})},1376915:(n,i,o,u,c,p)=>{t.Jd("BatchNormalization",n,{epsilon:i,momentum:o,spatial:!!c,trainingMode:!!u,format:p?"NHWC":"NCHW"})},1377084:(n,i,o)=>{t.Jd("CumSum",n,{exclusive:Number(i),reverse:Number(o)})},1377181:(n,i,o,u,c,p,g,v,w)=>{t.Jd("Attention",n,{numHeads:i,isUnidirectional:o,maskFilterValue:u,scale:c,doRotary:p,qkvHiddenSizes:g?Array.from(q.subarray(Number(v)>>>0,Number(v)+g>>>0)):[],pastPresentShareBuffer:!!w})},1377453:n=>{t.Jd("BiasAdd",n,void 0)},1377508:n=>{t.Jd("BiasSplitGelu",n,void 0)},1377569:n=>{t.Jd("FastGelu",n,void 0)},1377625:(n,i,o,u,c,p,g,v,w,$,A,I,O)=>{t.Jd("Conv",n,{format:w?"NHWC":"NCHW",auto_pad:i,dilations:[o],group:u,kernel_shape:[c],pads:p?Array.from(q.subarray(p>>>0,g>>>0)):[],strides:[v],w_is_const:()=>!!Y[$>>>0],activation:ot(A),activation_params:I?Array.from(de.subarray(I>>>0,O>>>0)):[]})},1377995:(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)=>{t.Jd("Conv",n,{format:I?"NHWC":"NCHW",auto_pad:i,dilations:[o,u],group:c,kernel_shape:[p,g],pads:v?Array.from(q.subarray(v>>>0,w>>>0)):[],strides:[$,A],w_is_const:()=>!!Y[O>>>0],activation:ot(S),activation_params:D?Array.from(de.subarray(D>>>0,W>>>0)):[]})},1378386:n=>{t.Jd("Gelu",n,void 0)},1378438:(n,i,o,u,c,p)=>{t.Jd("MatMulNBits",n,{k:i,n:o,accuracyLevel:u,bits:c,blockSize:p})},1378565:(n,i,o,u,c,p)=>{t.Jd("MultiHeadAttention",n,{numHeads:i,isUnidirectional:o,maskFilterValue:u,scale:c,doRotary:p})},1378724:(n,i)=>{t.Jd("SkipLayerNormalization",n,{epsilon:i})},1378805:n=>{t.Fh(n)},1378839:(n,i)=>t.Hh(n,i,t.ih.Jh,t.ih.errors)};function Ft(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var et=[],tt=0,yt=0;function St(n){this.hh=n,this.dh=n-24,this.Ih=function(i){se[this.dh+4>>>2>>>0]=i},this.oh=function(){return se[this.dh+4>>>2>>>0]},this.zh=function(i){se[this.dh+8>>>2>>>0]=i},this.rh=function(i){Y[this.dh+12>>>0>>>0]=i?1:0},this.wh=function(){return Y[this.dh+12>>>0>>>0]!=0},this.sh=function(i){Y[this.dh+13>>>0>>>0]=i?1:0},this.vh=function(){return Y[this.dh+13>>>0>>>0]!=0},this.yh=function(i,o){this.ph(0),this.Ih(i),this.zh(o)},this.ph=function(i){se[this.dh+16>>>2>>>0]=i},this.th=function(){return se[this.dh+16>>>2>>>0]},this.xh=function(){if(nn(this.oh()))return se[this.hh>>>2>>>0];var i=this.th();return i!==0?i:this.hh}}var Ut=n=>{var i=yt;if(!i)return Kt(0),0;var o=new St(i);o.ph(i);var u=o.oh();if(!u)return Kt(0),i;for(var c in n){var p=n[c];if(p===0||p===u)break;if(rn(p,u,o.dh+16))return Kt(p),i}return Kt(u),i},Zt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,qr=(n,i,o)=>{i>>>=0;var u=i+o;for(o=i;n[o]&&!(o>=u);)++o;if(16<o-i&&n.buffer&&Zt)return Zt.decode(n.subarray(i,o));for(u="";i<o;){var c=n[i++];if(c&128){var p=n[i++]&63;if((c&224)==192)u+=String.fromCharCode((c&31)<<6|p);else{var g=n[i++]&63;c=(c&240)==224?(c&15)<<12|p<<6|g:(c&7)<<18|p<<12|g<<6|n[i++]&63,65536>c?u+=String.fromCharCode(c):(c-=65536,u+=String.fromCharCode(55296|c>>10,56320|c&1023))}}else u+=String.fromCharCode(c)}return u},ot=(n,i)=>(n>>>=0)?qr(te,n,i):"",vr=n=>{for(var i=0,o=0;o<n.length;++o){var u=n.charCodeAt(o);127>=u?i++:2047>=u?i+=2:55296<=u&&57343>=u?(i+=4,++o):i+=3}return i},Xt=(n,i,o,u)=>{if(o>>>=0,!(0<u))return 0;var c=o;u=o+u-1;for(var p=0;p<n.length;++p){var g=n.charCodeAt(p);if(55296<=g&&57343>=g){var v=n.charCodeAt(++p);g=65536+((g&1023)<<10)|v&1023}if(127>=g){if(o>=u)break;i[o++>>>0]=g}else{if(2047>=g){if(o+1>=u)break;i[o++>>>0]=192|g>>6}else{if(65535>=g){if(o+2>=u)break;i[o++>>>0]=224|g>>12}else{if(o+3>=u)break;i[o++>>>0]=240|g>>18,i[o++>>>0]=128|g>>12&63}i[o++>>>0]=128|g>>6&63}i[o++>>>0]=128|g&63}}return i[o>>>0]=0,o-c},Tt=n=>n%4===0&&(n%100!==0||n%400===0),Kr=[0,31,60,91,121,152,182,213,244,274,305,335],ii=[0,31,59,90,120,151,181,212,243,273,304,334],Jr=n=>{var i=vr(n)+1,o=xr(i);return o&&Xt(n,te,o,i),o},Yr=[],wr=(n,i)=>{Yr.length=0;for(var o;o=te[n++>>>0];){var u=o!=105;u&=o!=112,i+=u&&i%8?4:0,Yr.push(o==112?se[i>>>2>>>0]:o==105?q[i>>>2>>>0]:ke[i>>>3>>>0]),i+=u?8:4}return Yr},ir={},_r=()=>{if(!$r){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:d||"./this.program"},i;for(i in ir)ir[i]===void 0?delete n[i]:n[i]=ir[i];var o=[];for(i in n)o.push(`${i}=${n[i]}`);$r=o}return $r},$r,qt=[null,[],[]],Zr=[31,29,31,30,31,30,31,31,30,31,30,31],Xr=[31,28,31,30,31,30,31,31,30,31,30,31];function ut(n){var i=Array(vr(n)+1);return Xt(n,i,0,i.length),i}function oi(n,i,o,u){function c(S,D,W){for(S=typeof S=="number"?S.toString():S||"";S.length<D;)S=W[0]+S;return S}function p(S,D){return c(S,D,"0")}function g(S,D){function W(ne){return 0>ne?-1:0<ne?1:0}var X;return(X=W(S.getFullYear()-D.getFullYear()))===0&&(X=W(S.getMonth()-D.getMonth()))===0&&(X=W(S.getDate()-D.getDate())),X}function v(S){switch(S.getDay()){case 0:return new Date(S.getFullYear()-1,11,29);case 1:return S;case 2:return new Date(S.getFullYear(),0,3);case 3:return new Date(S.getFullYear(),0,2);case 4:return new Date(S.getFullYear(),0,1);case 5:return new Date(S.getFullYear()-1,11,31);case 6:return new Date(S.getFullYear()-1,11,30)}}function w(S){var D=S.fh;for(S=new Date(new Date(S.gh+1900,0,1).getTime());0<D;){var W=S.getMonth(),X=(Tt(S.getFullYear())?Zr:Xr)[W];if(D>X-S.getDate())D-=X-S.getDate()+1,S.setDate(1),11>W?S.setMonth(W+1):(S.setMonth(0),S.setFullYear(S.getFullYear()+1));else{S.setDate(S.getDate()+D);break}}return W=new Date(S.getFullYear()+1,0,4),D=v(new Date(S.getFullYear(),0,4)),W=v(W),0>=g(D,S)?0>=g(W,S)?S.getFullYear()+1:S.getFullYear():S.getFullYear()-1}n>>>=0,i>>>=0,o>>>=0,u>>>=0;var $=se[u+40>>>2>>>0];u={Mh:q[u>>>2>>>0],Lh:q[u+4>>>2>>>0],kh:q[u+8>>>2>>>0],nh:q[u+12>>>2>>>0],lh:q[u+16>>>2>>>0],gh:q[u+20>>>2>>>0],eh:q[u+24>>>2>>>0],fh:q[u+28>>>2>>>0],Ph:q[u+32>>>2>>>0],Kh:q[u+36>>>2>>>0],Nh:$?ot($):""},o=ot(o),$={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var A in $)o=o.replace(new RegExp(A,"g"),$[A]);var I="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),O="January February March April May June July August September October November December".split(" ");$={"%a":S=>I[S.eh].substring(0,3),"%A":S=>I[S.eh],"%b":S=>O[S.lh].substring(0,3),"%B":S=>O[S.lh],"%C":S=>p((S.gh+1900)/100|0,2),"%d":S=>p(S.nh,2),"%e":S=>c(S.nh,2," "),"%g":S=>w(S).toString().substring(2),"%G":S=>w(S),"%H":S=>p(S.kh,2),"%I":S=>(S=S.kh,S==0?S=12:12<S&&(S-=12),p(S,2)),"%j":S=>{for(var D=0,W=0;W<=S.lh-1;D+=(Tt(S.gh+1900)?Zr:Xr)[W++]);return p(S.nh+D,3)},"%m":S=>p(S.lh+1,2),"%M":S=>p(S.Lh,2),"%n":()=>`\n`,"%p":S=>0<=S.kh&&12>S.kh?"AM":"PM","%S":S=>p(S.Mh,2),"%t":()=>"	","%u":S=>S.eh||7,"%U":S=>p(Math.floor((S.fh+7-S.eh)/7),2),"%V":S=>{var D=Math.floor((S.fh+7-(S.eh+6)%7)/7);if(2>=(S.eh+371-S.fh-2)%7&&D++,D)D==53&&(W=(S.eh+371-S.fh)%7,W==4||W==3&&Tt(S.gh)||(D=1));else{D=52;var W=(S.eh+7-S.fh-1)%7;(W==4||W==5&&Tt(S.gh%400-1))&&D++}return p(D,2)},"%w":S=>S.eh,"%W":S=>p(Math.floor((S.fh+7-(S.eh+6)%7)/7),2),"%y":S=>(S.gh+1900).toString().substring(2),"%Y":S=>S.gh+1900,"%z":S=>{S=S.Kh;var D=0<=S;return S=Math.abs(S)/60,(D?"+":"-")+("0000"+(S/60*100+S%60)).slice(-4)},"%Z":S=>S.Nh,"%%":()=>"%"},o=o.replace(/%%/g,"\\0\\0");for(A in $)o.includes(A)&&(o=o.replace(new RegExp(A,"g"),$[A](u)));return o=o.replace(/\\0\\0/g,"%"),A=ut(o),A.length>i?0:(Y.set(A,n>>>0),A.length-1)}var Le=n=>{try{n()}catch(i){be(i)}};function ai(){var n=z,i={};for(let[o,u]of Object.entries(n))i[o]=typeof u=="function"?function(){or.push(o);try{return u.apply(null,arguments)}finally{N||(or.pop(),bt&&Et===1&&or.length===0&&(Et=0,Le(es),typeof Fibers<"u"&&Fibers.Qh()))}}:u;return i}var Et=0,bt=null,si=0,or=[],ui={},_e={},Cr=0,Sr=null,bo=[];function li(){return new Promise((n,i)=>{Sr={resolve:n,reject:i}})}function vo(){var n=xr(65548),i=n+12;se[n>>>2>>>0]=i,se[n+4>>>2>>>0]=i+65536,i=or[0];var o=ui[i];return o===void 0&&(o=Cr++,ui[i]=o,_e[o]=i),q[n+8>>>2>>>0]=o,n}function di(n){if(!N){if(Et===0){var i=!1,o=!1;n((u=0)=>{if(!N&&(si=u,i=!0,o)){Et=2,Le(()=>ts(bt)),typeof Browser<"u"&&Browser.mh.uh&&Browser.mh.resume(),u=!1;try{var c=(0,z[_e[q[bt+8>>>2>>>0]]])()}catch(v){c=v,u=!0}var p=!1;if(!bt){var g=Sr;g&&(Sr=null,(u?g.reject:g.resolve)(c),p=!0)}if(u&&!p)throw c}}),o=!0,i||(Et=1,bt=vo(),typeof Browser<"u"&&Browser.mh.uh&&Browser.mh.pause(),Le(()=>Qa(bt)))}else Et===2?(Et=0,Le(rs),Ar(bt),bt=null,bo.forEach(u=>{if(!N)try{u();try{J=J=u=J,t.onExit?.(u),N=!0,y(u,new Ft(u))}catch(c){c instanceof Ft||c=="unwind"||y(1,c)}}catch(c){c instanceof Ft||c=="unwind"||y(1,c)}})):be(`invalid state: ${Et}`);return si}}function ci(n){return di(i=>{n().then(i)})}var fi={Ia:function(n,i,o){return ci(async()=>{await t.Dh(n,i,o)})},t:function(n){return n=new St(n>>>0),n.wh()||(n.rh(!0),tt--),n.sh(!1),et.push(n),tn(n.hh),n.xh()},C:()=>{H(0,0);var n=et.pop();en(n.hh),yt=0},a:function(){return Ut([])},l:function(n){return Ut([n>>>0])},w:function(n,i){return Ut([n>>>0,i>>>0])},p:function(n,i,o){return Ut([n>>>0,i>>>0,o>>>0])},pa:()=>{var n=et.pop();n||be("no exception to throw");var i=n.hh;throw n.vh()||(et.push(n),n.sh(!0),n.rh(!1),tt++),yt=i,yt},r:function(n,i,o){throw n>>>=0,new St(n).yh(i>>>0,o>>>0),yt=n,tt++,yt},ca:()=>tt,f:function(n){throw yt||=n>>>0,yt},qa:function(){return 0},uc:function(){},Qa:function(){},Sa:function(){},Ka:function(){return 0},_b:function(){},_a:function(){},Pb:function(){},Ea:function(){},Ra:function(){},Oa:function(){},jc:function(){},Pa:function(){},Yc:()=>1,Uc:function(n,i,o){n=i+2097152>>>0<4194305-!!n?(n>>>0)+4294967296*i:NaN,o>>>=0,n=new Date(1e3*n),q[o>>>2>>>0]=n.getUTCSeconds(),q[o+4>>>2>>>0]=n.getUTCMinutes(),q[o+8>>>2>>>0]=n.getUTCHours(),q[o+12>>>2>>>0]=n.getUTCDate(),q[o+16>>>2>>>0]=n.getUTCMonth(),q[o+20>>>2>>>0]=n.getUTCFullYear()-1900,q[o+24>>>2>>>0]=n.getUTCDay(),q[o+28>>>2>>>0]=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Vc:function(n,i,o){n=i+2097152>>>0<4194305-!!n?(n>>>0)+4294967296*i:NaN,o>>>=0,n=new Date(1e3*n),q[o>>>2>>>0]=n.getSeconds(),q[o+4>>>2>>>0]=n.getMinutes(),q[o+8>>>2>>>0]=n.getHours(),q[o+12>>>2>>>0]=n.getDate(),q[o+16>>>2>>>0]=n.getMonth(),q[o+20>>>2>>>0]=n.getFullYear()-1900,q[o+24>>>2>>>0]=n.getDay(),q[o+28>>>2>>>0]=(Tt(n.getFullYear())?Kr:ii)[n.getMonth()]+n.getDate()-1|0,q[o+36>>>2>>>0]=-(60*n.getTimezoneOffset()),i=new Date(n.getFullYear(),6,1).getTimezoneOffset();var u=new Date(n.getFullYear(),0,1).getTimezoneOffset();q[o+32>>>2>>>0]=(i!=u&&n.getTimezoneOffset()==Math.min(u,i))|0},Wc:function(n){n>>>=0;var i=new Date(q[n+20>>>2>>>0]+1900,q[n+16>>>2>>>0],q[n+12>>>2>>>0],q[n+8>>>2>>>0],q[n+4>>>2>>>0],q[n>>>2>>>0],0),o=q[n+32>>>2>>>0],u=i.getTimezoneOffset(),c=new Date(i.getFullYear(),6,1).getTimezoneOffset(),p=new Date(i.getFullYear(),0,1).getTimezoneOffset(),g=Math.min(p,c);return 0>o?q[n+32>>>2>>>0]=+(c!=p&&g==u):0<o!=(g==u)&&(c=Math.max(p,c),i.setTime(i.getTime()+6e4*((0<o?g:c)-u))),q[n+24>>>2>>>0]=i.getDay(),q[n+28>>>2>>>0]=(Tt(i.getFullYear())?Kr:ii)[i.getMonth()]+i.getDate()-1|0,q[n>>>2>>>0]=i.getSeconds(),q[n+4>>>2>>>0]=i.getMinutes(),q[n+8>>>2>>>0]=i.getHours(),q[n+12>>>2>>>0]=i.getDate(),q[n+16>>>2>>>0]=i.getMonth(),q[n+20>>>2>>>0]=i.getYear(),n=i.getTime(),isNaN(n)?(q[ar()>>>2>>>0]=61,n=-1):n/=1e3,Kt((nt=n,1<=+Math.abs(nt)?0<nt?+Math.floor(nt/4294967296)>>>0:~~+Math.ceil((nt-+(~~nt>>>0))/4294967296)>>>0:0)),n>>>0},Sc:function(){return-52},Tc:function(){},Ma:function(n,i,o){function u(w){return(w=w.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?w[1]:"GMT"}o>>>=0;var c=new Date().getFullYear(),p=new Date(c,0,1),g=new Date(c,6,1);c=p.getTimezoneOffset();var v=g.getTimezoneOffset();se[n>>>0>>>2>>>0]=60*Math.max(c,v),q[i>>>0>>>2>>>0]=+(c!=v),n=u(p),i=u(g),n=Jr(n),i=Jr(i),v<c?(se[o>>>2>>>0]=n,se[o+4>>>2>>>0]=i):(se[o>>>2>>>0]=i,se[o+4>>>2>>>0]=n)},ha:()=>{be("")},x:function(n,i,o){return n>>>=0,i=wr(i>>>0,o>>>0),it[n].apply(null,i)},za:function(n,i,o){return n>>>=0,i=wr(i>>>0,o>>>0),it[n].apply(null,i)},Ga:()=>Date.now(),Na:function(){return 4294901760},H:()=>performance.now(),Eb:function(n,i,o){return i>>>=0,te.copyWithin(n>>>0>>>0,i>>>0,i+(o>>>0)>>>0)},La:function(n){n>>>=0;var i=te.length;if(4294901760<n)return!1;for(var o=1;4>=o;o*=2){var u=i*(1+.2/o);u=Math.min(u,n+100663296);var c=Math;u=Math.max(n,u);e:{c=(c.min.call(c,4294901760,u+(65536-u%65536)%65536)-V.buffer.byteLength+65535)/65536;try{V.grow(c),Ve();var p=1;break e}catch{}p=void 0}if(p)return!0}return!1},jb:function(n,i){n>>>=0,i>>>=0;var o=0;return _r().forEach((u,c)=>{var p=i+o;for(c=se[n+4*c>>>2>>>0]=p,p=0;p<u.length;++p)Y[c++>>>0>>>0]=u.charCodeAt(p);Y[c>>>0>>>0]=0,o+=u.length+1}),0},ub:function(n,i){n>>>=0,i>>>=0;var o=_r();se[n>>>2>>>0]=o.length;var u=0;return o.forEach(c=>u+=c.length+1),se[i>>>2>>>0]=u,0},ma:()=>52,Da:function(){return 52},Xc:function(){return 70},Ca:function(n,i,o,u){i>>>=0,o>>>=0,u>>>=0;for(var c=0,p=0;p<o;p++){var g=se[i>>>2>>>0],v=se[i+4>>>2>>>0];i+=8;for(var w=0;w<v;w++){var $=te[g+w>>>0],A=qt[n];$===0||$===10?((n===1?j:B)(qr(A,0)),A.length=0):A.push($)}c+=v}return se[u>>>2>>>0]=c,0},ga:Fc,Zc:Df,la:yf,L:df,I:Lc,_c:Bf,da:gf,B:sf,z:Uc,b:Sc,Ba:Mc,$:Dc,g:$c,ra:Of,h:_c,E:Ef,i:Ec,$c:kf,j:Tc,u:Ic,s:jc,n:Hc,W:qc,Q:Sf,J:Nc,na:of,_:uf,ja:xf,xb:Qp,fb:hm,Cc:Xf,bb:vm,db:ym,Ta:Tm,Qb:Dp,Kc:Hf,hb:pm,Va:Am,Ob:Mp,eb:gm,lc:mp,Rc:Mf,tc:ap,gb:mm,cb:bm,Bb:Kp,pc:dp,sc:sp,kc:hp,Qc:zf,Ya:Cm,ab:wm,ob:sm,lb:dm,$a:_m,nc:fp,Ib:Wp,kb:cm,Ua:Im,Tb:kp,Hc:qf,Pc:Uf,Ac:ep,nb:um,Za:$m,qc:lp,d:Ac,X:ef,q:xc,Y:Pf,N:hf,fa:Jc,e:Cc,Aa:Kc,F:Tf,aa:rf,R:cf,wb:em,ba:Yc,c:Pc,xa:Xc,ad:Af,ua:ff,k:Oc,wa:tf,m:kc,ya:Zc,va:nf,Ha:wf,o:Rc,ec:wp,fc:vp,dc:_p,ka:bf,y:Vc,A:zc,D:Gc,Z:If,ta:pf,ea:Qc,P:lf,K:Bc,O:af,oa:Wc,V:mf,ia:Rf,S:$f,sa:Cf,T:_f,U:vf,Wa:xm,oc:cp,Xb:Tp,M:Yp,sb:nm,hc:yp,Sb:Rp,Db:Fp,Ab:Jp,Fa:Nf,Nb:zp,zb:Zp,Fb:Lp,Rb:Bp,Hb:Gp,ic:gp,mb:lm,Kb:Vp,tb:rm,qb:om,wc:ip,Fc:Jf,rb:im,Lb:jp,Lc:Gf,ib:fm,Bc:Qf,Ic:Ff,Nc:Vf,Dc:Zf,pb:am,Ec:Yf,yb:Xp,Jb:Np,Mc:Wf,Oc:jf,yc:rp,Cb:qp,Yb:Ip,vb:tm,Gc:Kf,Zb:Ap,Mb:Up,mc:pp,Jc:Lf,vc:op,Gb:Hp,Wb:Ep,xc:np,rc:up,Xa:Sm,zc:tp,Ub:Op,Vb:Pp,ac:Sp,bc:Cp,gc:bp,cc:$p,$b:xp,v:function(n){return n>>>0},Ja:oi,G:function(n,i,o,u){return oi(n>>>0,i>>>0,o>>>0,u>>>0)}},z=function(){function n(o){return z=o.exports,z=ai(),z=Em(),V=z.bd,Ve(),Ae.unshift(z.cd),ge--,ge==0&&(je!==null&&(clearInterval(je),je=null),Pe&&(o=Pe,Pe=null,o())),z}var i={a:fi};if(ge++,t.instantiateWasm)try{return t.instantiateWasm(i,n)}catch(o){B(`Module.instantiateWasm callback failed with error: ${o}`),l(o)}return Ct(i,function(o){n(o.instance)}).catch(l),{}}();t._OrtInit=(n,i)=>(t._OrtInit=z.dd)(n,i),t._OrtGetLastError=(n,i)=>(t._OrtGetLastError=z.ed)(n,i),t._OrtCreateSessionOptions=(n,i,o,u,c,p,g,v,w,$)=>(t._OrtCreateSessionOptions=z.fd)(n,i,o,u,c,p,g,v,w,$),t._OrtAppendExecutionProvider=(n,i)=>(t._OrtAppendExecutionProvider=z.gd)(n,i),t._OrtAddFreeDimensionOverride=(n,i,o)=>(t._OrtAddFreeDimensionOverride=z.hd)(n,i,o),t._OrtAddSessionConfigEntry=(n,i,o)=>(t._OrtAddSessionConfigEntry=z.id)(n,i,o),t._OrtReleaseSessionOptions=n=>(t._OrtReleaseSessionOptions=z.jd)(n),t._OrtCreateSession=(n,i,o)=>(t._OrtCreateSession=z.kd)(n,i,o),t._OrtReleaseSession=n=>(t._OrtReleaseSession=z.ld)(n),t._OrtGetInputOutputCount=(n,i,o)=>(t._OrtGetInputOutputCount=z.md)(n,i,o),t._OrtGetInputName=(n,i)=>(t._OrtGetInputName=z.nd)(n,i),t._OrtGetOutputName=(n,i)=>(t._OrtGetOutputName=z.od)(n,i),t._OrtFree=n=>(t._OrtFree=z.pd)(n),t._OrtCreateTensor=(n,i,o,u,c,p)=>(t._OrtCreateTensor=z.qd)(n,i,o,u,c,p),t._OrtGetTensorData=(n,i,o,u,c)=>(t._OrtGetTensorData=z.rd)(n,i,o,u,c),t._OrtReleaseTensor=n=>(t._OrtReleaseTensor=z.sd)(n),t._OrtCreateRunOptions=(n,i,o,u)=>(t._OrtCreateRunOptions=z.td)(n,i,o,u),t._OrtAddRunConfigEntry=(n,i,o)=>(t._OrtAddRunConfigEntry=z.ud)(n,i,o),t._OrtReleaseRunOptions=n=>(t._OrtReleaseRunOptions=z.vd)(n),t._OrtCreateBinding=n=>(t._OrtCreateBinding=z.wd)(n),t._OrtBindInput=(n,i,o)=>(t._OrtBindInput=z.xd)(n,i,o),t._OrtBindOutput=(n,i,o,u)=>(t._OrtBindOutput=z.yd)(n,i,o,u),t._OrtClearBoundOutputs=n=>(t._OrtClearBoundOutputs=z.zd)(n),t._OrtReleaseBinding=n=>(t._OrtReleaseBinding=z.Ad)(n),t._OrtRunWithBinding=(n,i,o,u,c)=>(t._OrtRunWithBinding=z.Bd)(n,i,o,u,c),t._OrtRun=(n,i,o,u,c,p,g,v)=>(t._OrtRun=z.Cd)(n,i,o,u,c,p,g,v),t._OrtEndProfiling=n=>(t._OrtEndProfiling=z.Dd)(n),t._JsepOutput=(n,i,o)=>(t._JsepOutput=z.Ed)(n,i,o),t._JsepGetNodeName=n=>(t._JsepGetNodeName=z.Fd)(n);var ar=()=>(ar=z.Gd)(),xr=t._malloc=n=>(xr=t._malloc=z.Hd)(n),Ar=t._free=n=>(Ar=t._free=z.Id)(n),H=(n,i)=>(H=z.Kd)(n,i),Kt=n=>(Kt=z.Ld)(n),L=()=>(L=z.Md)(),F=n=>(F=z.Nd)(n),Qr=n=>(Qr=z.Od)(n),en=n=>(en=z.Pd)(n),tn=n=>(tn=z.Qd)(n),rn=(n,i,o)=>(rn=z.Rd)(n,i,o),nn=n=>(nn=z.Sd)(n),on=t.dynCall_vii=(n,i,o)=>(on=t.dynCall_vii=z.Td)(n,i,o),an=t.dynCall_iiii=(n,i,o,u)=>(an=t.dynCall_iiii=z.Ud)(n,i,o,u),sn=t.dynCall_iii=(n,i,o)=>(sn=t.dynCall_iii=z.Vd)(n,i,o),un=t.dynCall_ii=(n,i)=>(un=t.dynCall_ii=z.Wd)(n,i),vt=t.dynCall_iiiiiii=(n,i,o,u,c,p,g)=>(vt=t.dynCall_iiiiiii=z.Xd)(n,i,o,u,c,p,g),Ir=t.dynCall_vi=(n,i)=>(Ir=t.dynCall_vi=z.Yd)(n,i),Tr=t.dynCall_v=n=>(Tr=t.dynCall_v=z.Zd)(n),pi=t.dynCall_iiiiii=(n,i,o,u,c,p)=>(pi=t.dynCall_iiiiii=z._d)(n,i,o,u,c,p),kt=t.dynCall_iiij=(n,i,o,u,c)=>(kt=t.dynCall_iiij=z.$d)(n,i,o,u,c),mi=t.dynCall_iiiii=(n,i,o,u,c)=>(mi=t.dynCall_iiiii=z.ae)(n,i,o,u,c),Pt=t.dynCall_viii=(n,i,o,u)=>(Pt=t.dynCall_viii=z.be)(n,i,o,u),ln=t.dynCall_viiiii=(n,i,o,u,c,p)=>(ln=t.dynCall_viiiii=z.ce)(n,i,o,u,c,p),dn=t.dynCall_viiii=(n,i,o,u,c)=>(dn=t.dynCall_viiii=z.de)(n,i,o,u,c),ht=t.dynCall_viiiiii=(n,i,o,u,c,p,g)=>(ht=t.dynCall_viiiiii=z.ee)(n,i,o,u,c,p,g),Er=t.dynCall_viiji=(n,i,o,u,c,p)=>(Er=t.dynCall_viiji=z.fe)(n,i,o,u,c,p),dt=t.dynCall_viiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I)=>(dt=t.dynCall_viiiiiiiiiii=z.ge)(n,i,o,u,c,p,g,v,w,$,A,I),wt=t.dynCall_viiijjjii=(n,i,o,u,c,p,g,v,w,$,A,I)=>(wt=t.dynCall_viiijjjii=z.he)(n,i,o,u,c,p,g,v,w,$,A,I),cn=t.dynCall_iij=(n,i,o,u)=>(cn=t.dynCall_iij=z.ie)(n,i,o,u),hi=t.dynCall_iif=(n,i,o)=>(hi=t.dynCall_iif=z.je)(n,i,o),gi=t.dynCall_iid=(n,i,o)=>(gi=t.dynCall_iid=z.ke)(n,i,o),fn=t.dynCall_jii=(n,i,o)=>(fn=t.dynCall_jii=z.le)(n,i,o),yi=t.dynCall_i=n=>(yi=t.dynCall_i=z.me)(n),bi=t.dynCall_viiiiiiii=(n,i,o,u,c,p,g,v,w)=>(bi=t.dynCall_viiiiiiii=z.ne)(n,i,o,u,c,p,g,v,w),vi=t.dynCall_viiiiij=(n,i,o,u,c,p,g,v)=>(vi=t.dynCall_viiiiij=z.oe)(n,i,o,u,c,p,g,v),wi=t.dynCall_ji=(n,i)=>(wi=t.dynCall_ji=z.pe)(n,i),_i=t.dynCall_viij=(n,i,o,u,c)=>(_i=t.dynCall_viij=z.qe)(n,i,o,u,c),$i=t.dynCall_iiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I)=>($i=t.dynCall_iiiiiiiiiiii=z.re)(n,i,o,u,c,p,g,v,w,$,A,I),pn=t.dynCall_viiiiiiiii=(n,i,o,u,c,p,g,v,w,$)=>(pn=t.dynCall_viiiiiiiii=z.se)(n,i,o,u,c,p,g,v,w,$),Pr=t.dynCall_ij=(n,i,o)=>(Pr=t.dynCall_ij=z.te)(n,i,o),sr=t.dynCall_iiiiij=(n,i,o,u,c,p,g)=>(sr=t.dynCall_iiiiij=z.ue)(n,i,o,u,c,p,g),Or=t.dynCall_j=n=>(Or=t.dynCall_j=z.ve)(n),kr=t.dynCall_vij=(n,i,o,u)=>(kr=t.dynCall_vij=z.we)(n,i,o,u),mn=t.dynCall_viijjjiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)=>(mn=t.dynCall_viijjjiiiiii=z.xe)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D),ur=t.dynCall_viiijiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O)=>(ur=t.dynCall_viiijiiiiiii=z.ye)(n,i,o,u,c,p,g,v,w,$,A,I,O),Ci=t.dynCall_iiiiiiii=(n,i,o,u,c,p,g,v)=>(Ci=t.dynCall_iiiiiiii=z.ze)(n,i,o,u,c,p,g,v),Rt=t.dynCall_viiiiiii=(n,i,o,u,c,p,g,v)=>(Rt=t.dynCall_viiiiiii=z.Ae)(n,i,o,u,c,p,g,v),xt=t.dynCall_iiiiiiiij=(n,i,o,u,c,p,g,v,w,$)=>(xt=t.dynCall_iiiiiiiij=z.Be)(n,i,o,u,c,p,g,v,w,$),hn=t.dynCall_viiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S)=>(hn=t.dynCall_viiiiiiiiiiiii=z.Ce)(n,i,o,u,c,p,g,v,w,$,A,I,O,S),lr=t.dynCall_iiiiiiiii=(n,i,o,u,c,p,g,v,w)=>(lr=t.dynCall_iiiiiiiii=z.De)(n,i,o,u,c,p,g,v,w),gn=t.dynCall_iiiiijiiiii=(n,i,o,u,c,p,g,v,w,$,A,I)=>(gn=t.dynCall_iiiiijiiiii=z.Ee)(n,i,o,u,c,p,g,v,w,$,A,I),yn=t.dynCall_vijjjiiij=(n,i,o,u,c,p,g,v,w,$,A,I,O)=>(yn=t.dynCall_vijjjiiij=z.Fe)(n,i,o,u,c,p,g,v,w,$,A,I,O),Si=t.dynCall_fi=(n,i)=>(Si=t.dynCall_fi=z.Ge)(n,i),Rr=t.dynCall_fii=(n,i,o)=>(Rr=t.dynCall_fii=z.He)(n,i,o),xi=t.dynCall_di=(n,i)=>(xi=t.dynCall_di=z.Ie)(n,i),Ai=t.dynCall_dii=(n,i,o)=>(Ai=t.dynCall_dii=z.Je)(n,i,o),Ii=t.dynCall_vijj=(n,i,o,u,c,p)=>(Ii=t.dynCall_vijj=z.Ke)(n,i,o,u,c,p),Ti=t.dynCall_iiiiiiiiii=(n,i,o,u,c,p,g,v,w,$)=>(Ti=t.dynCall_iiiiiiiiii=z.Le)(n,i,o,u,c,p,g,v,w,$),Ei=t.dynCall_viijiii=(n,i,o,u,c,p,g,v)=>(Ei=t.dynCall_viijiii=z.Me)(n,i,o,u,c,p,g,v),bn=t.dynCall_viid=(n,i,o,u)=>(bn=t.dynCall_viid=z.Ne)(n,i,o,u),dr=t.dynCall_viffiii=(n,i,o,u,c,p,g)=>(dr=t.dynCall_viffiii=z.Oe)(n,i,o,u,c,p,g),Pi=t.dynCall_viifiii=(n,i,o,u,c,p,g)=>(Pi=t.dynCall_viifiii=z.Pe)(n,i,o,u,c,p,g),Br=t.dynCall_viiiiidiidi=(n,i,o,u,c,p,g,v,w,$,A)=>(Br=t.dynCall_viiiiidiidi=z.Qe)(n,i,o,u,c,p,g,v,w,$,A),vn=t.dynCall_viiiiiiiiidi=(n,i,o,u,c,p,g,v,w,$,A,I)=>(vn=t.dynCall_viiiiiiiiidi=z.Re)(n,i,o,u,c,p,g,v,w,$,A,I),Oi=t.dynCall_jiii=(n,i,o,u)=>(Oi=t.dynCall_jiii=z.Se)(n,i,o,u),ki=t.dynCall_vjiiiiii=(n,i,o,u,c,p,g,v,w)=>(ki=t.dynCall_vjiiiiii=z.Te)(n,i,o,u,c,p,g,v,w),wn=t.dynCall_viiid=(n,i,o,u,c)=>(wn=t.dynCall_viiid=z.Ue)(n,i,o,u,c),Ri=t.dynCall_viiiiiiiiiji=(n,i,o,u,c,p,g,v,w,$,A,I,O)=>(Ri=t.dynCall_viiiiiiiiiji=z.Ve)(n,i,o,u,c,p,g,v,w,$,A,I,O),Jt=t.dynCall_viji=(n,i,o,u,c)=>(Jt=t.dynCall_viji=z.We)(n,i,o,u,c),_n=t.dynCall_vijjjjjjjjjjjjji=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at,ct,gt)=>(_n=t.dynCall_vijjjjjjjjjjjjji=z.Xe)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at,ct,gt),$n=t.dynCall_viiiji=(n,i,o,u,c,p,g)=>($n=t.dynCall_viiiji=z.Ye)(n,i,o,u,c,p,g),Cn=t.dynCall_vijjjiiji=(n,i,o,u,c,p,g,v,w,$,A,I,O)=>(Cn=t.dynCall_vijjjiiji=z.Ze)(n,i,o,u,c,p,g,v,w,$,A,I,O),Sn=t.dynCall_iiiji=(n,i,o,u,c,p)=>(Sn=t.dynCall_iiiji=z._e)(n,i,o,u,c,p),xn=t.dynCall_iiijiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)=>(xn=t.dynCall_iiijiiiiiiiiii=z.$e)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D),Dr=t.dynCall_vj=(n,i,o)=>(Dr=t.dynCall_vj=z.af)(n,i,o),An=t.dynCall_jjj=(n,i,o,u,c)=>(An=t.dynCall_jjj=z.bf)(n,i,o,u,c),Mr=t.dynCall_iiijiiiiii=(n,i,o,u,c,p,g,v,w,$,A)=>(Mr=t.dynCall_iiijiiiiii=z.cf)(n,i,o,u,c,p,g,v,w,$,A),In=t.dynCall_vfiii=(n,i,o,u,c)=>(In=t.dynCall_vfiii=z.df)(n,i,o,u,c),zr=t.dynCall_viiiiff=(n,i,o,u,c,p,g)=>(zr=t.dynCall_viiiiff=z.ef)(n,i,o,u,c,p,g),Tn=t.dynCall_viiiiiff=(n,i,o,u,c,p,g,v)=>(Tn=t.dynCall_viiiiiff=z.ff)(n,i,o,u,c,p,g,v),En=t.dynCall_viiff=(n,i,o,u,c)=>(En=t.dynCall_viiff=z.gf)(n,i,o,u,c),Pn=t.dynCall_viiiiiiiiifiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S)=>(Pn=t.dynCall_viiiiiiiiifiii=z.hf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S),On=t.dynCall_viiiiiiiijj=(n,i,o,u,c,p,g,v,w,$,A,I,O)=>(On=t.dynCall_viiiiiiiijj=z.jf)(n,i,o,u,c,p,g,v,w,$,A,I,O),kn=t.dynCall_iiiiiiiiiiiiiifii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X)=>(kn=t.dynCall_iiiiiiiiiiiiiifii=z.kf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X),Bi=t.dynCall_viiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O)=>(Bi=t.dynCall_viiiiiiiiiiii=z.lf)(n,i,o,u,c,p,g,v,w,$,A,I,O),Rn=t.dynCall_iiiiiiiiiiiiiiiiifii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye)=>(Rn=t.dynCall_iiiiiiiiiiiiiiiiifii=z.mf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye),Bn=t.dynCall_vijjiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I)=>(Bn=t.dynCall_vijjiiiiii=z.nf)(n,i,o,u,c,p,g,v,w,$,A,I),Dn=t.dynCall_iiiijjj=(n,i,o,u,c,p,g,v,w,$)=>(Dn=t.dynCall_iiiijjj=z.of)(n,i,o,u,c,p,g,v,w,$),Di=t.dynCall_viiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A)=>(Di=t.dynCall_viiiiiiiiii=z.pf)(n,i,o,u,c,p,g,v,w,$,A),Mi=t.dynCall_iiijjj=(n,i,o,u,c,p,g,v,w)=>(Mi=t.dynCall_iiijjj=z.qf)(n,i,o,u,c,p,g,v,w),Mn=t.dynCall_fffffff=(n,i,o,u,c,p,g)=>(Mn=t.dynCall_fffffff=z.rf)(n,i,o,u,c,p,g),zn=t.dynCall_viiiij=(n,i,o,u,c,p,g)=>(zn=t.dynCall_viiiij=z.sf)(n,i,o,u,c,p,g),cr=t.dynCall_viiiiiijiifiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)=>(cr=t.dynCall_viiiiiijiifiii=z.tf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D),zi=t.dynCall_vjjjjjjffjifiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze)=>(zi=t.dynCall_vjjjjjjffjifiiiiii=z.uf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze),Ui=t.dynCall_viiiiiiffjifiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne)=>(Ui=t.dynCall_viiiiiiffjifiiiii=z.vf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne),pe=t.dynCall_viiiiiiffjfiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X)=>(pe=t.dynCall_viiiiiiffjfiiiii=z.wf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X),Un=t.dynCall_viiiiiiffjiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)=>(Un=t.dynCall_viiiiiiffjiiiii=z.xf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W),fr=t.dynCall_vjjjjjjjjfffiiifiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at,ct,gt)=>(fr=t.dynCall_vjjjjjjjjfffiiifiiiii=z.yf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at,ct,gt),Qt=t.dynCall_vjjjjjjfffifijiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe)=>(Qt=t.dynCall_vjjjjjjfffifijiiiii=z.zf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe),At=t.dynCall_vjjjjjjfffifiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe)=>(At=t.dynCall_vjjjjjjfffifiiiiii=z.Af)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe),jn=t.dynCall_vjjjjjjjjfffjifiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at,ct,gt,hr)=>(jn=t.dynCall_vjjjjjjjjfffjifiiiiii=z.Bf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at,ct,gt,hr),Vn=t.dynCall_vijjfffiii=(n,i,o,u,c,p,g,v,w,$,A,I)=>(Vn=t.dynCall_vijjfffiii=z.Cf)(n,i,o,u,c,p,g,v,w,$,A,I),Nn=t.dynCall_vijiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S)=>(Nn=t.dynCall_vijiiiiiiiiii=z.Df)(n,i,o,u,c,p,g,v,w,$,A,I,O,S),Ur=t.dynCall_viiiiiiijiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S)=>(Ur=t.dynCall_viiiiiiijiiii=z.Ef)(n,i,o,u,c,p,g,v,w,$,A,I,O,S),jr=t.dynCall_vijjjjjjifiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se)=>(jr=t.dynCall_vijjjjjjifiiiii=z.Ff)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se),Wn=t.dynCall_viifi=(n,i,o,u,c)=>(Wn=t.dynCall_viifi=z.Gf)(n,i,o,u,c),Gn=t.dynCall_vjjjjjiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)=>(Gn=t.dynCall_vjjjjjiiii=z.Hf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D),Vr=t.dynCall_vjjjjfiii=(n,i,o,u,c,p,g,v,w,$,A,I,O)=>(Vr=t.dynCall_vjjjjfiii=z.If)(n,i,o,u,c,p,g,v,w,$,A,I,O),pr=t.dynCall_viiiiiijiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)=>(pr=t.dynCall_viiiiiijiiiiii=z.Jf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D),Nr=t.dynCall_vijjii=(n,i,o,u,c,p,g,v)=>(Nr=t.dynCall_vijjii=z.Kf)(n,i,o,u,c,p,g,v),Hn=t.dynCall_viiiiijjiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)=>(Hn=t.dynCall_viiiiijjiiiii=z.Lf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D),Ln=t.dynCall_iiiiiji=(n,i,o,u,c,p,g,v)=>(Ln=t.dynCall_iiiiiji=z.Mf)(n,i,o,u,c,p,g,v),Fn=t.dynCall_iiiiji=(n,i,o,u,c,p,g)=>(Fn=t.dynCall_iiiiji=z.Nf)(n,i,o,u,c,p,g),qn=t.dynCall_viiiiijiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S)=>(qn=t.dynCall_viiiiijiiiiii=z.Of)(n,i,o,u,c,p,g,v,w,$,A,I,O,S),Kn=t.dynCall_viiijiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I)=>(Kn=t.dynCall_viiijiiiiii=z.Pf)(n,i,o,u,c,p,g,v,w,$,A,I),ji=t.dynCall_viijj=(n,i,o,u,c,p,g)=>(ji=t.dynCall_viijj=z.Qf)(n,i,o,u,c,p,g),mr=t.dynCall_viiiijii=(n,i,o,u,c,p,g,v,w)=>(mr=t.dynCall_viiiijii=z.Rf)(n,i,o,u,c,p,g,v,w),Jn=t.dynCall_viijjiii=(n,i,o,u,c,p,g,v,w,$)=>(Jn=t.dynCall_viijjiii=z.Sf)(n,i,o,u,c,p,g,v,w,$),a=t.dynCall_ijii=(n,i,o,u,c)=>(a=t.dynCall_ijii=z.Tf)(n,i,o,u,c),h=t.dynCall_viiiiijjji=(n,i,o,u,c,p,g,v,w,$,A,I,O)=>(h=t.dynCall_viiiiijjji=z.Uf)(n,i,o,u,c,p,g,v,w,$,A,I,O),_=t.dynCall_vijjjjiij=(n,i,o,u,c,p,g,v,w,$,A,I,O,S)=>(_=t.dynCall_vijjjjiij=z.Vf)(n,i,o,u,c,p,g,v,w,$,A,I,O,S),T=t.dynCall_viiiiijij=(n,i,o,u,c,p,g,v,w,$,A)=>(T=t.dynCall_viiiiijij=z.Wf)(n,i,o,u,c,p,g,v,w,$,A),M=t.dynCall_viiiiiijij=(n,i,o,u,c,p,g,v,w,$,A,I)=>(M=t.dynCall_viiiiiijij=z.Xf)(n,i,o,u,c,p,g,v,w,$,A,I),G=t.dynCall_vijiii=(n,i,o,u,c,p,g)=>(G=t.dynCall_vijiii=z.Yf)(n,i,o,u,c,p,g),Z=t.dynCall_viiifii=(n,i,o,u,c,p,g)=>(Z=t.dynCall_viiifii=z.Zf)(n,i,o,u,c,p,g),re=t.dynCall_viiiiiiiiifi=(n,i,o,u,c,p,g,v,w,$,A,I)=>(re=t.dynCall_viiiiiiiiifi=z._f)(n,i,o,u,c,p,g,v,w,$,A,I),ce=t.dynCall_iiijiiii=(n,i,o,u,c,p,g,v,w)=>(ce=t.dynCall_iiijiiii=z.$f)(n,i,o,u,c,p,g,v,w),ae=t.dynCall_viiiiiijjiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)=>(ae=t.dynCall_viiiiiijjiiiii=z.ag)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W),we=t.dynCall_viiiiiiijiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)=>(we=t.dynCall_viiiiiiijiiiiii=z.bg)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W),me=t.dynCall_vif=(n,i,o)=>(me=t.dynCall_vif=z.cg)(n,i,o),Ce=t.dynCall_viif=(n,i,o,u)=>(Ce=t.dynCall_viif=z.dg)(n,i,o,u),K=t.dynCall_fiii=(n,i,o,u)=>(K=t.dynCall_fiii=z.eg)(n,i,o,u),he=t.dynCall_diii=(n,i,o,u)=>(he=t.dynCall_diii=z.fg)(n,i,o,u),Be=t.dynCall_viiiiiifii=(n,i,o,u,c,p,g,v,w,$)=>(Be=t.dynCall_viiiiiifii=z.gg)(n,i,o,u,c,p,g,v,w,$),lt=t.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at)=>(lt=t.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=z.hg)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at),jt=t.dynCall_viijji=(n,i,o,u,c,p,g,v)=>(jt=t.dynCall_viijji=z.ig)(n,i,o,u,c,p,g,v),la=t.dynCall_iiiiiiiiiiiji=(n,i,o,u,c,p,g,v,w,$,A,I,O,S)=>(la=t.dynCall_iiiiiiiiiiiji=z.jg)(n,i,o,u,c,p,g,v,w,$,A,I,O,S),da=t.dynCall_viifiifijjjii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)=>(da=t.dynCall_viifiifijjjii=z.kg)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W),ca=t.dynCall_viiiiiiiiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se)=>(ca=t.dynCall_viiiiiiiiiiiiiiiiiiii=z.lg)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se),fa=t.dynCall_viiiiifiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O)=>(fa=t.dynCall_viiiiifiiiiii=z.mg)(n,i,o,u,c,p,g,v,w,$,A,I,O),pa=t.dynCall_vijiiiiiiijjii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X)=>(pa=t.dynCall_vijiiiiiiijjii=z.ng)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X),ma=t.dynCall_viiiiiiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe)=>(ma=t.dynCall_viiiiiiiiiiiiiiiiii=z.og)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe),ha=t.dynCall_viiiiiiiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye)=>(ha=t.dynCall_viiiiiiiiiiiiiiiiiii=z.pg)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye),ga=t.dynCall_viiiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)=>(ga=t.dynCall_viiiiiiiiiiiiiii=z.qg)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W),ya=t.dynCall_viiiiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X)=>(ya=t.dynCall_viiiiiiiiiiiiiiii=z.rg)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X),ba=t.dynCall_viiiijjj=(n,i,o,u,c,p,g,v,w,$,A)=>(ba=t.dynCall_viiiijjj=z.sg)(n,i,o,u,c,p,g,v,w,$,A),va=t.dynCall_iiiiid=(n,i,o,u,c,p)=>(va=t.dynCall_iiiiid=z.tg)(n,i,o,u,c,p),wa=t.dynCall_viiiiiiijjj=(n,i,o,u,c,p,g,v,w,$,A,I,O,S)=>(wa=t.dynCall_viiiiiiijjj=z.ug)(n,i,o,u,c,p,g,v,w,$,A,I,O,S),_a=t.dynCall_iiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A)=>(_a=t.dynCall_iiiiiiiiiii=z.vg)(n,i,o,u,c,p,g,v,w,$,A),$a=t.dynCall_iiiiiiiiiiiiiiiiiifi=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye)=>($a=t.dynCall_iiiiiiiiiiiiiiiiiifi=z.wg)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye),Ca=t.dynCall_viiif=(n,i,o,u,c)=>(Ca=t.dynCall_viiif=z.xg)(n,i,o,u,c),Sa=t.dynCall_viiijiiiii=(n,i,o,u,c,p,g,v,w,$,A)=>(Sa=t.dynCall_viiijiiiii=z.yg)(n,i,o,u,c,p,g,v,w,$,A),xa=t.dynCall_viiij=(n,i,o,u,c,p)=>(xa=t.dynCall_viiij=z.zg)(n,i,o,u,c,p),Aa=t.dynCall_iijjj=(n,i,o,u,c,p,g,v)=>(Aa=t.dynCall_iijjj=z.Ag)(n,i,o,u,c,p,g,v),Ia=t.dynCall_viiiiji=(n,i,o,u,c,p,g,v)=>(Ia=t.dynCall_viiiiji=z.Bg)(n,i,o,u,c,p,g,v),Ta=t.dynCall_iijjji=(n,i,o,u,c,p,g,v,w)=>(Ta=t.dynCall_iijjji=z.Cg)(n,i,o,u,c,p,g,v,w),Ea=t.dynCall_ijijji=(n,i,o,u,c,p,g,v,w)=>(Ea=t.dynCall_ijijji=z.Dg)(n,i,o,u,c,p,g,v,w),Pa=t.dynCall_viiijjiii=(n,i,o,u,c,p,g,v,w,$,A)=>(Pa=t.dynCall_viiijjiii=z.Eg)(n,i,o,u,c,p,g,v,w,$,A),Oa=t.dynCall_iiiiijji=(n,i,o,u,c,p,g,v,w,$)=>(Oa=t.dynCall_iiiiijji=z.Fg)(n,i,o,u,c,p,g,v,w,$),ka=t.dynCall_iiiifi=(n,i,o,u,c,p)=>(ka=t.dynCall_iiiifi=z.Gg)(n,i,o,u,c,p),Ra=t.dynCall_iiijii=(n,i,o,u,c,p,g)=>(Ra=t.dynCall_iiijii=z.Hg)(n,i,o,u,c,p,g),Ba=t.dynCall_iiiiiiiiijii=(n,i,o,u,c,p,g,v,w,$,A,I,O)=>(Ba=t.dynCall_iiiiiiiiijii=z.Ig)(n,i,o,u,c,p,g,v,w,$,A,I,O),Da=t.dynCall_iiiijjii=(n,i,o,u,c,p,g,v,w,$)=>(Da=t.dynCall_iiiijjii=z.Jg)(n,i,o,u,c,p,g,v,w,$),Ma=t.dynCall_iiiiiijjjii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S)=>(Ma=t.dynCall_iiiiiijjjii=z.Kg)(n,i,o,u,c,p,g,v,w,$,A,I,O,S),za=t.dynCall_iiijiii=(n,i,o,u,c,p,g,v)=>(za=t.dynCall_iiijiii=z.Lg)(n,i,o,u,c,p,g,v),Ua=t.dynCall_iiiiiiiijjjfi=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)=>(Ua=t.dynCall_iiiiiiiijjjfi=z.Mg)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W),ja=t.dynCall_iijiiii=(n,i,o,u,c,p,g,v)=>(ja=t.dynCall_iijiiii=z.Ng)(n,i,o,u,c,p,g,v),Va=t.dynCall_iijjjii=(n,i,o,u,c,p,g,v,w,$)=>(Va=t.dynCall_iijjjii=z.Og)(n,i,o,u,c,p,g,v,w,$),Na=t.dynCall_jij=(n,i,o,u)=>(Na=t.dynCall_jij=z.Pg)(n,i,o,u),Wa=t.dynCall_iiji=(n,i,o,u,c)=>(Wa=t.dynCall_iiji=z.Qg)(n,i,o,u,c),Ga=t.dynCall_iiif=(n,i,o,u)=>(Ga=t.dynCall_iiif=z.Rg)(n,i,o,u),Ha=t.dynCall_vidi=(n,i,o,u)=>(Ha=t.dynCall_vidi=z.Sg)(n,i,o,u),La=t.dynCall_vjiii=(n,i,o,u,c,p)=>(La=t.dynCall_vjiii=z.Tg)(n,i,o,u,c,p),Fa=t.dynCall_iiiij=(n,i,o,u,c,p)=>(Fa=t.dynCall_iiiij=z.Ug)(n,i,o,u,c,p),qa=t.dynCall_viiijii=(n,i,o,u,c,p,g,v)=>(qa=t.dynCall_viiijii=z.Vg)(n,i,o,u,c,p,g,v),Ka=t.dynCall_viijiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S)=>(Ka=t.dynCall_viijiiiiiiiii=z.Wg)(n,i,o,u,c,p,g,v,w,$,A,I,O,S),Ja=t.dynCall_fiiii=(n,i,o,u,c)=>(Ja=t.dynCall_fiiii=z.Xg)(n,i,o,u,c),Ya=t.dynCall_jfi=(n,i,o)=>(Ya=t.dynCall_jfi=z.Yg)(n,i,o),Za=t.dynCall_viiiiiiiiiiiiii=(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)=>(Za=t.dynCall_viiiiiiiiiiiiii=z.Zg)(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D),Xa=t.dynCall_jiij=(n,i,o,u,c)=>(Xa=t.dynCall_jiij=z._g)(n,i,o,u,c),Qa=n=>(Qa=z.$g)(n),es=()=>(es=z.ah)(),ts=n=>(ts=z.bh)(n),rs=()=>(rs=z.ch)();t.___start_em_js=1378951,t.___stop_em_js=1379112;function _c(n,i,o,u){var c=L();try{return an(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function $c(n,i,o){var u=L();try{return sn(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function Cc(n,i,o){var u=L();try{on(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function Sc(n,i){var o=L();try{return un(n,i)}catch(u){if(F(o),u!==u+0)throw u;H(1,0)}}function xc(n,i){var o=L();try{Ir(n,i)}catch(u){if(F(o),u!==u+0)throw u;H(1,0)}}function Ac(n){var i=L();try{Tr(n)}catch(o){if(F(i),o!==o+0)throw o;H(1,0)}}function Ic(n,i,o,u,c,p,g){var v=L();try{return vt(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Tc(n,i,o,u,c,p){var g=L();try{return pi(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Ec(n,i,o,u,c){var p=L();try{return mi(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Pc(n,i,o,u){var c=L();try{Pt(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Oc(n,i,o,u,c){var p=L();try{dn(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function kc(n,i,o,u,c,p){var g=L();try{ln(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Rc(n,i,o,u,c,p,g){var v=L();try{ht(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Bc(n,i,o,u,c,p,g,v,w,$,A,I){var O=L();try{dt(n,i,o,u,c,p,g,v,w,$,A,I)}catch(S){if(F(O),S!==S+0)throw S;H(1,0)}}function Dc(n,i,o){var u=L();try{return hi(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function Mc(n,i,o){var u=L();try{return gi(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function zc(n,i,o,u,c,p,g,v,w){var $=L();try{bi(n,i,o,u,c,p,g,v,w)}catch(A){if(F($),A!==A+0)throw A;H(1,0)}}function Uc(n){var i=L();try{return yi(n)}catch(o){if(F(i),o!==o+0)throw o;H(1,0)}}function jc(n,i,o,u,c,p,g,v){var w=L();try{return Ci(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Vc(n,i,o,u,c,p,g,v){var w=L();try{Rt(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Nc(n,i,o,u,c,p,g,v,w,$,A,I){var O=L();try{return $i(n,i,o,u,c,p,g,v,w,$,A,I)}catch(S){if(F(O),S!==S+0)throw S;H(1,0)}}function Wc(n,i,o,u,c,p,g,v,w,$,A,I,O,S){var D=L();try{hn(n,i,o,u,c,p,g,v,w,$,A,I,O,S)}catch(W){if(F(D),W!==W+0)throw W;H(1,0)}}function Gc(n,i,o,u,c,p,g,v,w,$){var A=L();try{pn(n,i,o,u,c,p,g,v,w,$)}catch(I){if(F(A),I!==I+0)throw I;H(1,0)}}function Hc(n,i,o,u,c,p,g,v,w){var $=L();try{return lr(n,i,o,u,c,p,g,v,w)}catch(A){if(F($),A!==A+0)throw A;H(1,0)}}function Lc(n,i){var o=L();try{return Si(n,i)}catch(u){if(F(o),u!==u+0)throw u;H(1,0)}}function Fc(n,i){var o=L();try{return xi(n,i)}catch(u){if(F(o),u!==u+0)throw u;H(1,0)}}function qc(n,i,o,u,c,p,g,v,w,$){var A=L();try{return Ti(n,i,o,u,c,p,g,v,w,$)}catch(I){if(F(A),I!==I+0)throw I;H(1,0)}}function Kc(n,i,o,u){var c=L();try{bn(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Jc(n,i,o,u,c,p,g){var v=L();try{dr(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Yc(n,i,o,u,c,p,g){var v=L();try{Pi(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Zc(n,i,o,u,c,p,g,v,w,$,A){var I=L();try{Br(n,i,o,u,c,p,g,v,w,$,A)}catch(O){if(F(I),O!==O+0)throw O;H(1,0)}}function Xc(n,i,o,u,c){var p=L();try{wn(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Qc(n,i,o,u,c,p,g,v,w,$,A,I,O,S){var D=L();try{Pn(n,i,o,u,c,p,g,v,w,$,A,I,O,S)}catch(W){if(F(D),W!==W+0)throw W;H(1,0)}}function ef(n,i,o,u,c){var p=L();try{In(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function tf(n,i,o,u,c,p,g){var v=L();try{zr(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function rf(n,i,o,u,c){var p=L();try{En(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function nf(n,i,o,u,c,p,g,v){var w=L();try{Tn(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function of(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X){var ne=L();try{return kn(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X)}catch(fe){if(F(ne),fe!==fe+0)throw fe;H(1,0)}}function af(n,i,o,u,c,p,g,v,w,$,A,I,O){var S=L();try{Bi(n,i,o,u,c,p,g,v,w,$,A,I,O)}catch(D){if(F(S),D!==D+0)throw D;H(1,0)}}function sf(n,i,o,u,c){var p=L();try{return Ja(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function uf(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye){var Se=L();try{return Rn(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye)}catch(Ie){if(F(Se),Ie!==Ie+0)throw Ie;H(1,0)}}function lf(n,i,o,u,c,p,g,v,w,$,A){var I=L();try{Di(n,i,o,u,c,p,g,v,w,$,A)}catch(O){if(F(I),O!==O+0)throw O;H(1,0)}}function df(n,i,o,u,c,p,g){var v=L();try{return Mn(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function cf(n,i,o,u,c){var p=L();try{Wn(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function ff(n,i,o,u,c,p,g){var v=L();try{Z(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function pf(n,i,o,u,c,p,g,v,w,$,A,I){var O=L();try{re(n,i,o,u,c,p,g,v,w,$,A,I)}catch(S){if(F(O),S!==S+0)throw S;H(1,0)}}function mf(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D){var W=L();try{Za(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)}catch(X){if(F(W),X!==X+0)throw X;H(1,0)}}function hf(n,i,o){var u=L();try{me(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function gf(n,i,o,u){var c=L();try{return K(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function yf(n,i,o,u){var c=L();try{return he(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function bf(n,i,o,u,c,p,g,v,w,$){var A=L();try{Be(n,i,o,u,c,p,g,v,w,$)}catch(I){if(F(A),I!==I+0)throw I;H(1,0)}}function vf(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se){var Ie=L();try{ca(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se)}catch(Ne){if(F(Ie),Ne!==Ne+0)throw Ne;H(1,0)}}function wf(n,i,o,u,c,p,g,v,w,$,A,I,O){var S=L();try{fa(n,i,o,u,c,p,g,v,w,$,A,I,O)}catch(D){if(F(S),D!==D+0)throw D;H(1,0)}}function _f(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye){var Se=L();try{ha(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye)}catch(Ie){if(F(Se),Ie!==Ie+0)throw Ie;H(1,0)}}function $f(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X){var ne=L();try{ya(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X)}catch(fe){if(F(ne),fe!==fe+0)throw fe;H(1,0)}}function Cf(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe){var ye=L();try{ma(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe)}catch(Se){if(F(ye),Se!==Se+0)throw Se;H(1,0)}}function Sf(n,i,o,u,c,p,g,v,w,$,A){var I=L();try{return _a(n,i,o,u,c,p,g,v,w,$,A)}catch(O){if(F(I),O!==O+0)throw O;H(1,0)}}function xf(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye){var Se=L();try{return $a(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye)}catch(Ie){if(F(Se),Ie!==Ie+0)throw Ie;H(1,0)}}function Af(n,i,o,u,c){var p=L();try{Ca(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function If(n,i,o,u,c,p,g,v,w,$,A,I){var O=L();try{vn(n,i,o,u,c,p,g,v,w,$,A,I)}catch(S){if(F(O),S!==S+0)throw S;H(1,0)}}function Tf(n,i,o,u){var c=L();try{Ce(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Ef(n,i,o,u,c,p){var g=L();try{return ka(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Pf(n,i,o,u){var c=L();try{Ha(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Of(n,i,o,u){var c=L();try{return Ga(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function kf(n,i,o,u,c,p){var g=L();try{return va(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Rf(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W){var X=L();try{ga(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)}catch(ne){if(F(X),ne!==ne+0)throw ne;H(1,0)}}function Bf(n,i,o){var u=L();try{return Rr(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function Df(n,i,o){var u=L();try{return Ai(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function Mf(n,i,o,u,c){var p=L();try{return kt(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function zf(n,i,o,u){var c=L();try{return cn(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Uf(n,i,o){var u=L();try{return fn(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function jf(n,i,o,u){var c=L();try{kr(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Vf(n,i,o,u,c,p){var g=L();try{Er(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Nf(n,i,o,u,c,p,g,v){var w=L();try{vi(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Wf(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D){var W=L();try{mn(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)}catch(X){if(F(W),X!==X+0)throw X;H(1,0)}}function Gf(n,i,o,u,c,p,g,v,w,$,A,I,O){var S=L();try{ur(n,i,o,u,c,p,g,v,w,$,A,I,O)}catch(D){if(F(S),D!==D+0)throw D;H(1,0)}}function Hf(n,i,o,u,c,p,g,v,w,$,A,I){var O=L();try{return gn(n,i,o,u,c,p,g,v,w,$,A,I)}catch(S){if(F(O),S!==S+0)throw S;H(1,0)}}function Lf(n,i,o,u,c,p,g,v,w,$,A,I,O){var S=L();try{yn(n,i,o,u,c,p,g,v,w,$,A,I,O)}catch(D){if(F(S),D!==D+0)throw D;H(1,0)}}function Ff(n,i,o,u,c){var p=L();try{_i(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function qf(n,i){var o=L();try{return wi(n,i)}catch(u){if(F(o),u!==u+0)throw u;H(1,0)}}function Kf(n,i,o,u,c,p){var g=L();try{Ii(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Jf(n,i,o,u,c,p,g,v){var w=L();try{qa(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Yf(n,i,o,u,c,p,g){var v=L();try{ji(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Zf(n,i,o,u,c,p,g,v){var w=L();try{Ei(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Xf(n,i,o,u,c,p,g,v,w,$){var A=L();try{return xt(n,i,o,u,c,p,g,v,w,$)}catch(I){if(F(A),I!==I+0)throw I;H(1,0)}}function Qf(n,i,o,u,c,p,g,v,w,$,A,I){var O=L();try{wt(n,i,o,u,c,p,g,v,w,$,A,I)}catch(S){if(F(O),S!==S+0)throw S;H(1,0)}}function ep(n,i,o,u){var c=L();try{return Oi(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function tp(n,i,o,u,c,p,g,v,w){var $=L();try{ki(n,i,o,u,c,p,g,v,w)}catch(A){if(F($),A!==A+0)throw A;H(1,0)}}function rp(n,i,o,u,c){var p=L();try{Jt(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function np(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at,ct,gt){var hr=L();try{_n(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at,ct,gt)}catch(Yt){if(F(hr),Yt!==Yt+0)throw Yt;H(1,0)}}function ip(n,i,o,u,c,p,g){var v=L();try{$n(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function op(n,i,o,u,c,p,g,v,w,$,A,I,O){var S=L();try{Cn(n,i,o,u,c,p,g,v,w,$,A,I,O)}catch(D){if(F(S),D!==D+0)throw D;H(1,0)}}function ap(n,i,o,u,c,p){var g=L();try{return Sn(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function sp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D){var W=L();try{return xn(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)}catch(X){if(F(W),X!==X+0)throw X;H(1,0)}}function up(n,i,o){var u=L();try{Dr(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function lp(n,i,o,u,c){var p=L();try{return An(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function dp(n,i,o,u,c,p,g,v,w,$,A){var I=L();try{return Mr(n,i,o,u,c,p,g,v,w,$,A)}catch(O){if(F(I),O!==O+0)throw O;H(1,0)}}function cp(n,i,o,u,c,p,g,v,w,$,A,I,O){var S=L();try{On(n,i,o,u,c,p,g,v,w,$,A,I,O)}catch(D){if(F(S),D!==D+0)throw D;H(1,0)}}function fp(n,i,o){var u=L();try{return Pr(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function pp(n,i,o,u,c,p,g,v,w,$,A,I){var O=L();try{Bn(n,i,o,u,c,p,g,v,w,$,A,I)}catch(S){if(F(O),S!==S+0)throw S;H(1,0)}}function mp(n,i,o,u,c,p,g,v,w,$){var A=L();try{return Dn(n,i,o,u,c,p,g,v,w,$)}catch(I){if(F(A),I!==I+0)throw I;H(1,0)}}function hp(n,i,o,u,c,p,g,v,w){var $=L();try{return Mi(n,i,o,u,c,p,g,v,w)}catch(A){if(F($),A!==A+0)throw A;H(1,0)}}function gp(n,i,o,u,c,p,g){var v=L();try{zn(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function yp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D){var W=L();try{cr(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)}catch(X){if(F(W),X!==X+0)throw X;H(1,0)}}function bp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze){var Xe=L();try{zi(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze)}catch(at){if(F(Xe),at!==at+0)throw at;H(1,0)}}function vp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne){var fe=L();try{Ui(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne)}catch(ye){if(F(fe),ye!==ye+0)throw ye;H(1,0)}}function wp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X){var ne=L();try{pe(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X)}catch(fe){if(F(ne),fe!==fe+0)throw fe;H(1,0)}}function _p(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W){var X=L();try{Un(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)}catch(ne){if(F(X),ne!==ne+0)throw ne;H(1,0)}}function $p(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at,ct,gt){var hr=L();try{fr(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at,ct,gt)}catch(Yt){if(F(hr),Yt!==Yt+0)throw Yt;H(1,0)}}function Cp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe){var at=L();try{Qt(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe)}catch(ct){if(F(at),ct!==ct+0)throw ct;H(1,0)}}function Sp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe){var Ze=L();try{At(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe)}catch(Xe){if(F(Ze),Xe!==Xe+0)throw Xe;H(1,0)}}function xp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at,ct,gt,hr){var Yt=L();try{jn(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at,ct,gt,hr)}catch(wo){if(F(Yt),wo!==wo+0)throw wo;H(1,0)}}function Ap(n,i,o,u,c,p,g,v,w,$,A,I){var O=L();try{Vn(n,i,o,u,c,p,g,v,w,$,A,I)}catch(S){if(F(O),S!==S+0)throw S;H(1,0)}}function Ip(n,i,o,u,c,p,g,v,w,$,A,I,O,S){var D=L();try{Nn(n,i,o,u,c,p,g,v,w,$,A,I,O,S)}catch(W){if(F(D),W!==W+0)throw W;H(1,0)}}function Tp(n,i,o,u,c,p,g,v,w,$,A,I,O,S){var D=L();try{Ur(n,i,o,u,c,p,g,v,w,$,A,I,O,S)}catch(W){if(F(D),W!==W+0)throw W;H(1,0)}}function Ep(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se){var Ie=L();try{jr(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se)}catch(Ne){if(F(Ie),Ne!==Ne+0)throw Ne;H(1,0)}}function Pp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D){var W=L();try{Gn(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)}catch(X){if(F(W),X!==X+0)throw X;H(1,0)}}function Op(n,i,o,u,c,p,g,v,w,$,A,I,O){var S=L();try{Vr(n,i,o,u,c,p,g,v,w,$,A,I,O)}catch(D){if(F(S),D!==D+0)throw D;H(1,0)}}function kp(n,i,o){var u=L();try{return Ya(n,i,o)}catch(c){if(F(u),c!==c+0)throw c;H(1,0)}}function Rp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D){var W=L();try{pr(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)}catch(X){if(F(W),X!==X+0)throw X;H(1,0)}}function Bp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D){var W=L();try{Hn(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D)}catch(X){if(F(W),X!==X+0)throw X;H(1,0)}}function Dp(n,i,o,u,c,p,g,v){var w=L();try{return Ln(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Mp(n,i,o,u,c,p,g){var v=L();try{return Fn(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function zp(n,i,o,u,c,p,g,v,w,$,A,I,O,S){var D=L();try{qn(n,i,o,u,c,p,g,v,w,$,A,I,O,S)}catch(W){if(F(D),W!==W+0)throw W;H(1,0)}}function Up(n,i,o,u,c,p,g,v){var w=L();try{Nr(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function jp(n,i,o,u,c,p,g,v,w,$,A,I){var O=L();try{Kn(n,i,o,u,c,p,g,v,w,$,A,I)}catch(S){if(F(O),S!==S+0)throw S;H(1,0)}}function Vp(n,i,o,u,c,p,g,v,w){var $=L();try{mr(n,i,o,u,c,p,g,v,w)}catch(A){if(F($),A!==A+0)throw A;H(1,0)}}function Np(n,i,o,u,c,p,g,v,w,$){var A=L();try{Jn(n,i,o,u,c,p,g,v,w,$)}catch(I){if(F(A),I!==I+0)throw I;H(1,0)}}function Wp(n,i,o,u,c){var p=L();try{return a(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Gp(n,i,o,u,c,p,g,v,w,$,A,I,O){var S=L();try{h(n,i,o,u,c,p,g,v,w,$,A,I,O)}catch(D){if(F(S),D!==D+0)throw D;H(1,0)}}function Hp(n,i,o,u,c,p,g,v,w,$,A,I,O,S){var D=L();try{_(n,i,o,u,c,p,g,v,w,$,A,I,O,S)}catch(W){if(F(D),W!==W+0)throw W;H(1,0)}}function Lp(n,i,o,u,c,p,g,v,w,$,A){var I=L();try{T(n,i,o,u,c,p,g,v,w,$,A)}catch(O){if(F(I),O!==O+0)throw O;H(1,0)}}function Fp(n,i,o,u,c,p,g,v,w,$,A,I){var O=L();try{M(n,i,o,u,c,p,g,v,w,$,A,I)}catch(S){if(F(O),S!==S+0)throw S;H(1,0)}}function qp(n,i,o,u,c,p,g){var v=L();try{G(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Kp(n,i,o,u,c,p,g,v,w){var $=L();try{return ce(n,i,o,u,c,p,g,v,w)}catch(A){if(F($),A!==A+0)throw A;H(1,0)}}function Jp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W){var X=L();try{ae(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)}catch(ne){if(F(X),ne!==ne+0)throw ne;H(1,0)}}function Yp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W){var X=L();try{we(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)}catch(ne){if(F(X),ne!==ne+0)throw ne;H(1,0)}}function Zp(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at){var ct=L();try{lt(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X,ne,fe,ye,Se,Ie,Ne,qe,Ze,Xe,at)}catch(gt){if(F(ct),gt!==gt+0)throw gt;H(1,0)}}function Xp(n,i,o,u,c,p,g,v){var w=L();try{jt(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Qp(n,i,o,u,c,p,g,v,w,$,A,I,O,S){var D=L();try{return la(n,i,o,u,c,p,g,v,w,$,A,I,O,S)}catch(W){if(F(D),W!==W+0)throw W;H(1,0)}}function em(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W){var X=L();try{da(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)}catch(ne){if(F(X),ne!==ne+0)throw ne;H(1,0)}}function tm(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X){var ne=L();try{pa(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W,X)}catch(fe){if(F(ne),fe!==fe+0)throw fe;H(1,0)}}function rm(n,i,o,u,c,p,g,v,w,$,A){var I=L();try{ba(n,i,o,u,c,p,g,v,w,$,A)}catch(O){if(F(I),O!==O+0)throw O;H(1,0)}}function nm(n,i,o,u,c,p,g,v,w,$,A,I,O,S){var D=L();try{wa(n,i,o,u,c,p,g,v,w,$,A,I,O,S)}catch(W){if(F(D),W!==W+0)throw W;H(1,0)}}function im(n,i,o,u,c,p,g,v,w,$,A){var I=L();try{Sa(n,i,o,u,c,p,g,v,w,$,A)}catch(O){if(F(I),O!==O+0)throw O;H(1,0)}}function om(n,i,o,u,c,p){var g=L();try{xa(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function am(n,i,o,u,c,p,g,v,w,$,A,I,O,S){var D=L();try{Ka(n,i,o,u,c,p,g,v,w,$,A,I,O,S)}catch(W){if(F(D),W!==W+0)throw W;H(1,0)}}function sm(n,i,o,u,c,p,g,v){var w=L();try{return Aa(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function um(n,i,o,u,c){var p=L();try{return Xa(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function lm(n,i,o,u,c,p,g,v){var w=L();try{Ia(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function dm(n,i,o,u,c,p,g,v,w){var $=L();try{return Ta(n,i,o,u,c,p,g,v,w)}catch(A){if(F($),A!==A+0)throw A;H(1,0)}}function cm(n,i,o,u,c,p,g,v,w){var $=L();try{return Ea(n,i,o,u,c,p,g,v,w)}catch(A){if(F($),A!==A+0)throw A;H(1,0)}}function fm(n,i,o,u,c,p,g,v,w,$,A){var I=L();try{Pa(n,i,o,u,c,p,g,v,w,$,A)}catch(O){if(F(I),O!==O+0)throw O;H(1,0)}}function pm(n,i,o,u,c,p,g,v,w,$){var A=L();try{return Oa(n,i,o,u,c,p,g,v,w,$)}catch(I){if(F(A),I!==I+0)throw I;H(1,0)}}function mm(n,i,o,u,c,p,g){var v=L();try{return Ra(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function hm(n,i,o,u,c,p,g,v,w,$,A,I,O){var S=L();try{return Ba(n,i,o,u,c,p,g,v,w,$,A,I,O)}catch(D){if(F(S),D!==D+0)throw D;H(1,0)}}function gm(n,i,o,u,c,p,g,v,w,$){var A=L();try{return Da(n,i,o,u,c,p,g,v,w,$)}catch(I){if(F(A),I!==I+0)throw I;H(1,0)}}function ym(n,i,o,u,c,p,g,v,w,$,A,I,O,S){var D=L();try{return Ma(n,i,o,u,c,p,g,v,w,$,A,I,O,S)}catch(W){if(F(D),W!==W+0)throw W;H(1,0)}}function bm(n,i,o,u,c,p,g,v){var w=L();try{return za(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function vm(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W){var X=L();try{return Ua(n,i,o,u,c,p,g,v,w,$,A,I,O,S,D,W)}catch(ne){if(F(X),ne!==ne+0)throw ne;H(1,0)}}function wm(n,i,o,u,c,p,g,v){var w=L();try{return ja(n,i,o,u,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function _m(n,i,o,u,c,p,g,v,w,$){var A=L();try{return Va(n,i,o,u,c,p,g,v,w,$)}catch(I){if(F(A),I!==I+0)throw I;H(1,0)}}function $m(n,i,o,u){var c=L();try{return Na(n,i,o,u)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Cm(n,i,o,u,c){var p=L();try{return Wa(n,i,o,u,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Sm(n,i,o,u,c,p){var g=L();try{La(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function xm(n,i,o,u,c,p,g,v,w,$,A,I,O){var S=L();try{Ri(n,i,o,u,c,p,g,v,w,$,A,I,O)}catch(D){if(F(S),D!==D+0)throw D;H(1,0)}}function Am(n,i,o,u,c,p){var g=L();try{return Fa(n,i,o,u,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Im(n){var i=L();try{return Or(n)}catch(o){if(F(i),o!==o+0)throw o;H(1,0)}}function Tm(n,i,o,u,c,p,g){var v=L();try{return sr(n,i,o,u,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Em(){var n=z;n=Object.assign({},n);var i=u=>()=>u()>>>0,o=u=>c=>u(c)>>>0;return n.Gd=i(n.Gd),n.Hd=o(n.Hd),n.Md=i(n.Md),n.Od=o(n.Od),n}t.stackAlloc=Qr,t.stackSave=L,t.stackRestore=F,t.UTF8ToString=ot,t.stringToUTF8=(n,i,o)=>Xt(n,te,i,o),t.lengthBytesUTF8=vr;var Vi;Pe=function n(){Vi||ns(),Vi||(Pe=n)};function ns(){if(!(0<ge)){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;){var n=t.preRun.shift();Fe.unshift(n)}for(;0<Fe.length;)Fe.shift()(t);if(!(0<ge||Vi||(Vi=!0,t.calledRun=!0,N))){for(;0<Ae.length;)Ae.shift()(t);for(s(t);0<Te.length;)Te.shift()(t)}}}return ns(),r.ready}})();typeof as=="object"&&typeof Ao=="object"?Ao.exports=os:typeof define=="function"&&define.amd&&define([],()=>os)});var us=Yn(()=>{});var ls=Yn(()=>{});var ds={};Ni(ds,{cpus:()=>zm});var zm,cs=ue(()=>{zm=void 0});var ms=Yn((ps,Io)=>{"use strict";var fs=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(r={}){function t(){return Te.buffer!=be.buffer&&it(),be}function s(){return Te.buffer!=be.buffer&&it(),Re}function l(){return Te.buffer!=be.buffer&&it(),Oe}function f(){return Te.buffer!=be.buffer&&it(),We}function d(){return Te.buffer!=be.buffer&&it(),st}function y(){return Te.buffer!=be.buffer&&it(),ie}function b(){return Te.buffer!=be.buffer&&it(),ve}function C(){return Te.buffer!=be.buffer&&it(),nt}var m=r,x,P;m.ready=new Promise((a,h)=>{x=a,P=h}),m.mountExternalData=(a,h)=>{(m.Fb||(m.Fb=new Map)).set(a,h)},m.unmountExternalData=()=>{delete m.Fb},m.jsepInit=(a,h,_,T,M,G,Z,re,ce,ae,we)=>{m.uc=a,m.$b=h,m.dc=_,m.Ob=T,m.cc=M,m.eb=G,m.ec=Z,m.hc=re,m.ac=ce,m.bc=ae,m.fc=we,h=(me,Ce,K)=>(...he)=>{let Be=xt,lt=Ce?.();he=me(...he);let jt=Ce?.();return lt!==jt&&(me=jt,K(lt),Ce=K=null),xt!=Be?Ai():he},_=me=>async(...Ce)=>{try{if(m.Eb)throw Error("Session already started");let K=m.Eb={jc:Ce[0],errors:[]},he=await me(...Ce);if(m.Eb!==K)throw Error("Session mismatch");a.flush();let Be=K.errors;if(0<Be.length){let lt=await Promise.all(Be);if(lt=lt.filter(jt=>jt),0<lt.length)throw Error(lt.join(`\n`))}return he}finally{m.Eb=null}},m._OrtCreateSession=h(m._OrtCreateSession,()=>m._OrtCreateSession,me=>m._OrtCreateSession=me),m._OrtRun=_(h(m._OrtRun,()=>m._OrtRun,me=>m._OrtRun=me)),m._OrtRunWithBinding=_(h(m._OrtRunWithBinding,()=>m._OrtRunWithBinding,me=>m._OrtRunWithBinding=me)),m._OrtBindInput=h(m._OrtBindInput,()=>m._OrtBindInput,me=>m._OrtBindInput=me),m.jsepRegisterBuffer=(me,Ce,K,he)=>a.registerBuffer(me,Ce,K,he),m.jsepGetBuffer=me=>a.getBuffer(me),m.jsepCreateDownloader=(me,Ce,K)=>a.createDownloader(me,Ce,K),m.jsepOnReleaseSession=me=>{a.onReleaseSession(me)},m.jsepOnRunStart=me=>a.onRunStart(me)};var R=Object.assign({},m),E="./this.program",k=(a,h)=>{throw h},U=typeof window=="object",j=typeof importScripts=="function",B=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",V=m.ENVIRONMENT_IS_PTHREAD||!1,N="";function J(a){return m.locateFile?m.locateFile(a,N):N+a}var Y,te,q;if(B){var se=(Co(),Wr($o)),de=(xo(),Wr(So));N=j?de.dirname(N)+"/":__dirname+"/",Y=(h,_)=>(h=Xt(h)?new URL(h):de.normalize(h),se.readFileSync(h,_?void 0:"utf8")),q=h=>(h=Y(h,!0),h.buffer||(h=new Uint8Array(h)),h),te=(h,_,T,M=!0)=>{h=Xt(h)?new URL(h):de.normalize(h),se.readFile(h,M?void 0:"utf8",(G,Z)=>{G?T(G):_(M?Z.buffer:Z)})},!m.thisProgram&&1<process.argv.length&&(E=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),k=(h,_)=>{throw process.exitCode=h,_},m.inspect=()=>"[Emscripten Module object]";let a;try{a=us()}catch(h){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),h}global.Worker=a.Worker}else(U||j)&&(j?N=self.location.href:typeof document<"u"&&document.currentScript&&(N=document.currentScript.src),typeof e<"u"&&e&&(N=e),N.indexOf("blob:")!==0?N=N.substr(0,N.replace(/[?#].*/,"").lastIndexOf("/")+1):N="",B||(Y=a=>{var h=new XMLHttpRequest;return h.open("GET",a,!1),h.send(null),h.responseText},j&&(q=a=>{var h=new XMLHttpRequest;return h.open("GET",a,!1),h.responseType="arraybuffer",h.send(null),new Uint8Array(h.response)}),te=(a,h,_)=>{var T=new XMLHttpRequest;T.open("GET",a,!0),T.responseType="arraybuffer",T.onload=()=>{T.status==200||T.status==0&&T.response?h(T.response):_()},T.onerror=_,T.send(null)}));B&&typeof performance>"u"&&(global.performance=ls().performance);var ke=console.log.bind(console),Ve=console.error.bind(console);B&&(ke=(...a)=>se.writeSync(1,a.join(" ")+`\n`),Ve=(...a)=>se.writeSync(2,a.join(" ")+`\n`));var Fe=ke,Ae=Ve;Object.assign(m,R),R=null,typeof WebAssembly!="object"&&ot("no native wasm support detected");var Te,ge,je=!1,Pe,be,Re,Oe,We,st,ie,ve,Ee,Ct,nt;function it(){var a=Te.buffer;m.HEAP8=be=new Int8Array(a),m.HEAP16=Oe=new Int16Array(a),m.HEAPU8=Re=new Uint8Array(a),m.HEAPU16=We=new Uint16Array(a),m.HEAP32=st=new Int32Array(a),m.HEAPU32=ie=new Uint32Array(a),m.HEAPF32=ve=new Float32Array(a),m.HEAPF64=nt=new Float64Array(a),m.HEAP64=Ee=new BigInt64Array(a),m.HEAPU64=Ct=new BigUint64Array(a)}var Ft=16777216;if(V)Te=m.wasmMemory;else if(m.wasmMemory)Te=m.wasmMemory;else if(Te=new WebAssembly.Memory({initial:Ft/65536,maximum:65536,shared:!0}),!(Te.buffer instanceof SharedArrayBuffer))throw Ae("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),B&&Ae("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");it(),Ft=Te.buffer.byteLength;var et=[],tt=[],yt=[],St=0,Ut=null,Zt=null;function qr(){if(St--,St==0&&(Ut!==null&&(clearInterval(Ut),Ut=null),Zt)){var a=Zt;Zt=null,a()}}function ot(a){throw a="Aborted("+a+")",Ae(a),je=!0,Pe=1,a=new WebAssembly.RuntimeError(a+". Build with -sASSERTIONS for more info."),P(a),a}var vr=a=>a.startsWith("data:application/octet-stream;base64,"),Xt=a=>a.startsWith("file://"),Tt;Tt="ort-wasm-simd-threaded.wasm",vr(Tt)||(Tt=J(Tt));function Kr(a){if(q)return q(a);throw"both async and sync fetching of the wasm failed"}function ii(a){if(U||j){if(typeof fetch=="function"&&!Xt(a))return fetch(a,{credentials:"same-origin"}).then(h=>{if(!h.ok)throw"failed to load wasm binary file at \'"+a+"\'";return h.arrayBuffer()}).catch(()=>Kr(a));if(te)return new Promise((h,_)=>{te(a,T=>h(new Uint8Array(T)),_)})}return Promise.resolve().then(()=>Kr(a))}function Jr(a,h,_){return ii(a).then(T=>WebAssembly.instantiate(T,h)).then(T=>T).then(_,T=>{Ae(`failed to asynchronously prepare wasm: ${T}`),ot(T)})}function Yr(a,h){var _=Tt;return typeof WebAssembly.instantiateStreaming!="function"||vr(_)||Xt(_)||B||typeof fetch!="function"?Jr(_,a,h):fetch(_,{credentials:"same-origin"}).then(T=>WebAssembly.instantiateStreaming(T,a).then(h,function(M){return Ae(`wasm streaming compile failed: ${M}`),Ae("falling back to ArrayBuffer instantiation"),Jr(_,a,h)}))}var wr={949148:(a,h,_,T)=>{if(typeof m>"u"||!m.Fb)return 1;if(a=ut(a>>>0),a.startsWith("./")&&(a=a.substring(2)),a=m.Fb.get(a),!a)return 2;if(h>>>=0,_>>>=0,T>>>=0,h+_>a.byteLength)return 3;try{return s().set(a.subarray(h,h+_),T>>>0),0}catch{return 4}},949649:()=>{m.ac()},949680:()=>{m.bc()},949709:()=>{m.fc()},949734:a=>m.$b(a),949767:a=>m.dc(a),949799:(a,h,_)=>{m.Ob(a,h,_,!0)},949838:(a,h,_)=>{m.Ob(a,h,_)},949871:a=>{m.eb("Abs",a,void 0)},949922:a=>{m.eb("Neg",a,void 0)},949973:a=>{m.eb("Floor",a,void 0)},950026:a=>{m.eb("Ceil",a,void 0)},950078:a=>{m.eb("Reciprocal",a,void 0)},950136:a=>{m.eb("Sqrt",a,void 0)},950188:a=>{m.eb("Exp",a,void 0)},950239:a=>{m.eb("Erf",a,void 0)},950290:a=>{m.eb("Sigmoid",a,void 0)},950345:(a,h,_)=>{m.eb("HardSigmoid",a,{alpha:h,beta:_})},950424:a=>{m.eb("Log",a,void 0)},950475:a=>{m.eb("Sin",a,void 0)},950526:a=>{m.eb("Cos",a,void 0)},950577:a=>{m.eb("Tan",a,void 0)},950628:a=>{m.eb("Asin",a,void 0)},950680:a=>{m.eb("Acos",a,void 0)},950732:a=>{m.eb("Atan",a,void 0)},950784:a=>{m.eb("Sinh",a,void 0)},950836:a=>{m.eb("Cosh",a,void 0)},950888:a=>{m.eb("Asinh",a,void 0)},950941:a=>{m.eb("Acosh",a,void 0)},950994:a=>{m.eb("Atanh",a,void 0)},951047:a=>{m.eb("Tanh",a,void 0)},951099:a=>{m.eb("Not",a,void 0)},951150:(a,h,_)=>{m.eb("Clip",a,{min:h,max:_})},951219:a=>{m.eb("Clip",a,void 0)},951271:(a,h)=>{m.eb("Elu",a,{alpha:h})},951329:a=>{m.eb("Relu",a,void 0)},951381:(a,h)=>{m.eb("LeakyRelu",a,{alpha:h})},951445:(a,h)=>{m.eb("ThresholdedRelu",a,{alpha:h})},951515:(a,h)=>{m.eb("Cast",a,{to:h})},951573:a=>{m.eb("Add",a,void 0)},951624:a=>{m.eb("Sub",a,void 0)},951675:a=>{m.eb("Mul",a,void 0)},951726:a=>{m.eb("Div",a,void 0)},951777:a=>{m.eb("Pow",a,void 0)},951828:a=>{m.eb("Equal",a,void 0)},951881:a=>{m.eb("Greater",a,void 0)},951936:a=>{m.eb("GreaterOrEqual",a,void 0)},951998:a=>{m.eb("Less",a,void 0)},952050:a=>{m.eb("LessOrEqual",a,void 0)},952109:(a,h,_,T,M)=>{m.eb("ReduceMean",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:T?Array.from(d().subarray(T>>>0,M>>>0)):[]})},952268:(a,h,_,T,M)=>{m.eb("ReduceMax",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:T?Array.from(d().subarray(T>>>0,M>>>0)):[]})},952426:(a,h,_,T,M)=>{m.eb("ReduceMin",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:T?Array.from(d().subarray(T>>>0,M>>>0)):[]})},952584:(a,h,_,T,M)=>{m.eb("ReduceProd",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:T?Array.from(d().subarray(T>>>0,M>>>0)):[]})},952743:(a,h,_,T,M)=>{m.eb("ReduceSum",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:T?Array.from(d().subarray(T>>>0,M>>>0)):[]})},952901:(a,h,_,T,M)=>{m.eb("ReduceL1",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:T?Array.from(d().subarray(T>>>0,M>>>0)):[]})},953058:(a,h,_,T,M)=>{m.eb("ReduceL2",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:T?Array.from(d().subarray(T>>>0,M>>>0)):[]})},953215:(a,h,_,T,M)=>{m.eb("ReduceLogSum",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:T?Array.from(d().subarray(T>>>0,M>>>0)):[]})},953376:(a,h,_,T,M)=>{m.eb("ReduceSumSquare",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:T?Array.from(d().subarray(T>>>0,M>>>0)):[]})},953540:(a,h,_,T,M)=>{m.eb("ReduceLogSumExp",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:T?Array.from(d().subarray(T>>>0,M>>>0)):[]})},953704:a=>{m.eb("Where",a,void 0)},953757:(a,h,_)=>{m.eb("Transpose",a,{perm:h?Array.from(d().subarray(h>>>0,_>>>0)):[]})},953865:(a,h,_,T,M,G,Z,re,ce,ae,we,me,Ce,K,he)=>{m.eb("ConvTranspose",a,{format:ce?"NHWC":"NCHW",autoPad:h,dilations:[_],group:T,kernel_shape:[M],pads:[G,Z],strides:[re],wIsConst:()=>!!t()[ae>>>0],outputPadding:we?Array.from(d().subarray(we>>>0,me>>>0)):[],outputShape:Ce?Array.from(d().subarray(Ce>>>0,K>>>0)):[],activation:ut(he)})},954267:(a,h,_,T,M,G,Z,re,ce,ae,we,me,Ce,K)=>{m.eb("ConvTranspose",a,{format:re?"NHWC":"NCHW",autoPad:h,dilations:Array.from(d().subarray(_>>>0,(_>>>0)+2>>>0)),group:T,kernelShape:Array.from(d().subarray(M>>>0,(M>>>0)+2>>>0)),pads:Array.from(d().subarray(G>>>0,(G>>>0)+4>>>0)),strides:Array.from(d().subarray(Z>>>0,(Z>>>0)+2>>>0)),wIsConst:()=>!!t()[ce>>>0],outputPadding:ae?Array.from(d().subarray(ae>>>0,we>>>0)):[],outputShape:me?Array.from(d().subarray(me>>>0,Ce>>>0)):[],activation:ut(K)})},954832:(a,h,_,T,M,G,Z,re,ce,ae,we,me,Ce,K,he)=>{m.eb("ConvTranspose",a,{format:ce?"NHWC":"NCHW",autoPad:h,dilations:[_],group:T,kernel_shape:[M],pads:[G,Z],strides:[re],wIsConst:()=>!!t()[ae>>>0],outputPadding:we?Array.from(d().subarray(we>>>0,me>>>0)):[],outputShape:Ce?Array.from(d().subarray(Ce>>>0,K>>>0)):[],activation:ut(he)})},955234:(a,h,_,T,M,G,Z,re,ce,ae,we,me,Ce,K)=>{m.eb("ConvTranspose",a,{format:re?"NHWC":"NCHW",autoPad:h,dilations:Array.from(d().subarray(_>>>0,(_>>>0)+2>>>0)),group:T,kernelShape:Array.from(d().subarray(M>>>0,(M>>>0)+2>>>0)),pads:Array.from(d().subarray(G>>>0,(G>>>0)+4>>>0)),strides:Array.from(d().subarray(Z>>>0,(Z>>>0)+2>>>0)),wIsConst:()=>!!t()[ce>>>0],outputPadding:ae?Array.from(d().subarray(ae>>>0,we>>>0)):[],outputShape:me?Array.from(d().subarray(me>>>0,Ce>>>0)):[],activation:ut(K)})},955799:(a,h)=>{m.eb("GlobalAveragePool",a,{format:h?"NHWC":"NCHW"})},955890:(a,h,_,T,M,G,Z,re,ce,ae,we,me,Ce,K,he,Be)=>{m.eb("AveragePool",a,{format:Be?"NHWC":"NCHW",auto_pad:h,ceil_mode:_,count_include_pad:T,storage_order:M,dilations:[G,Z],kernel_shape:[re,ce],pads:[ae,we,me,Ce],strides:[K,he]})},956174:(a,h)=>{m.eb("GlobalAveragePool",a,{format:h?"NHWC":"NCHW"})},956265:(a,h,_,T,M,G,Z,re,ce,ae,we,me,Ce,K,he,Be)=>{m.eb("AveragePool",a,{format:Be?"NHWC":"NCHW",auto_pad:h,ceil_mode:_,count_include_pad:T,storage_order:M,dilations:[G,Z],kernel_shape:[re,ce],pads:[ae,we,me,Ce],strides:[K,he]})},956549:(a,h)=>{m.eb("GlobalMaxPool",a,{format:h?"NHWC":"NCHW"})},956636:(a,h,_,T,M,G,Z,re,ce,ae,we,me,Ce,K,he,Be)=>{m.eb("MaxPool",a,{format:Be?"NHWC":"NCHW",auto_pad:h,ceil_mode:_,count_include_pad:T,storage_order:M,dilations:[G,Z],kernel_shape:[re,ce],pads:[ae,we,me,Ce],strides:[K,he]})},956916:(a,h)=>{m.eb("GlobalMaxPool",a,{format:h?"NHWC":"NCHW"})},957003:(a,h,_,T,M,G,Z,re,ce,ae,we,me,Ce,K,he,Be)=>{m.eb("MaxPool",a,{format:Be?"NHWC":"NCHW",auto_pad:h,ceil_mode:_,count_include_pad:T,storage_order:M,dilations:[G,Z],kernel_shape:[re,ce],pads:[ae,we,me,Ce],strides:[K,he]})},957283:(a,h,_,T,M)=>{m.eb("Gemm",a,{alpha:h,beta:_,transA:T,transB:M})},957387:a=>{m.eb("MatMul",a,void 0)},957441:(a,h,_,T)=>{m.eb("ArgMax",a,{keepDims:!!h,selectLastIndex:!!_,axis:T})},957549:(a,h,_,T)=>{m.eb("ArgMin",a,{keepDims:!!h,selectLastIndex:!!_,axis:T})},957657:(a,h)=>{m.eb("Softmax",a,{axis:h})},957720:(a,h)=>{m.eb("Concat",a,{axis:h})},957780:(a,h,_,T,M)=>{m.eb("Split",a,{axis:h,numOutputs:_,splitSizes:T?Array.from(d().subarray(T>>>0,M>>>0)):[]})},957920:a=>{m.eb("Expand",a,void 0)},957974:(a,h)=>{m.eb("Gather",a,{axis:Number(h)})},958045:(a,h)=>{m.eb("GatherElements",a,{axis:Number(h)})},958124:(a,h,_,T,M,G,Z,re,ce,ae,we)=>{m.eb("Resize",a,{antialias:h,axes:_?Array.from(d().subarray(_>>>0,T>>>0)):[],coordinateTransformMode:ut(M),cubicCoeffA:G,excludeOutside:Z,extrapolationValue:re,keepAspectRatioPolicy:ut(ce),mode:ut(ae),nearestMode:ut(we)})},958470:(a,h,_,T,M,G,Z)=>{m.eb("Slice",a,{starts:h?Array.from(d().subarray(h>>>0,_>>>0)):[],ends:T?Array.from(d().subarray(T>>>0,M>>>0)):[],axes:G?Array.from(d().subarray(G>>>0,Z>>>0)):[]})},958686:a=>{m.eb("Tile",a,void 0)},958738:(a,h,_)=>{m.eb("LayerNormalization",a,{axis:Number(h),epsilon:Number(_)})},958845:(a,h,_)=>{m.eb("InstanceNormalization",a,{epsilon:h,format:_?"NHWC":"NCHW"})},958959:(a,h,_)=>{m.eb("InstanceNormalization",a,{epsilon:h,format:_?"NHWC":"NCHW"})},959073:a=>{m.eb("Range",a,void 0)},959126:(a,h)=>{m.eb("Einsum",a,{equation:ut(h)})},959207:(a,h,_,T,M)=>{m.eb("Pad",a,{mode:h,value:_,pads:T?Array.from(d().subarray(T>>>0,M>>>0)):[]})},959334:(a,h,_,T,M,G)=>{m.eb("BatchNormalization",a,{epsilon:h,momentum:_,spatial:!!M,trainingMode:!!T,format:G?"NHWC":"NCHW"})},959503:(a,h,_,T,M,G)=>{m.eb("BatchNormalization",a,{epsilon:h,momentum:_,spatial:!!M,trainingMode:!!T,format:G?"NHWC":"NCHW"})},959672:(a,h,_)=>{m.eb("CumSum",a,{exclusive:Number(h),reverse:Number(_)})},959769:(a,h,_,T,M,G,Z,re,ce)=>{m.eb("Attention",a,{numHeads:h,isUnidirectional:_,maskFilterValue:T,scale:M,doRotary:G,qkvHiddenSizes:Z?Array.from(d().subarray(Number(re)>>>0,Number(re)+Z>>>0)):[],pastPresentShareBuffer:!!ce})},960041:a=>{m.eb("BiasAdd",a,void 0)},960096:a=>{m.eb("BiasSplitGelu",a,void 0)},960157:a=>{m.eb("FastGelu",a,void 0)},960213:(a,h,_,T,M,G,Z,re,ce,ae,we,me,Ce)=>{m.eb("Conv",a,{format:ce?"NHWC":"NCHW",auto_pad:h,dilations:[_],group:T,kernel_shape:[M],pads:G?Array.from(d().subarray(G>>>0,Z>>>0)):[],strides:[re],w_is_const:()=>!!t()[ae>>>0],activation:ut(we),activation_params:me?Array.from(b().subarray(me>>>0,Ce>>>0)):[]})},960583:(a,h,_,T,M,G,Z,re,ce,ae,we,me,Ce,K,he,Be)=>{m.eb("Conv",a,{format:me?"NHWC":"NCHW",auto_pad:h,dilations:[_,T],group:M,kernel_shape:[G,Z],pads:re?Array.from(d().subarray(re>>>0,ce>>>0)):[],strides:[ae,we],w_is_const:()=>!!t()[Ce>>>0],activation:ut(K),activation_params:he?Array.from(b().subarray(he>>>0,Be>>>0)):[]})},960974:a=>{m.eb("Gelu",a,void 0)},961026:(a,h,_,T,M,G)=>{m.eb("MatMulNBits",a,{k:h,n:_,accuracyLevel:T,bits:M,blockSize:G})},961153:(a,h,_,T,M,G)=>{m.eb("MultiHeadAttention",a,{numHeads:h,isUnidirectional:_,maskFilterValue:T,scale:M,doRotary:G})},961312:(a,h)=>{m.eb("SkipLayerNormalization",a,{epsilon:h})},961393:a=>{m.ec(a)},961427:(a,h)=>m.hc(a,h,m.Eb.jc,m.Eb.errors)};function ir(a){this.name="ExitStatus",this.message=`Program terminated with exit(${a})`,this.status=a}var _r=a=>{a.terminate(),a.onmessage=()=>{}},$r=a=>{_e.yb.length==0&&(or(),_e.Pb(_e.yb[0]));var h=_e.yb.pop();if(!h)return 6;_e.zb.push(h),_e.pb[a.xb]=h,h.xb=a.xb;var _={cmd:"run",start_routine:a.kc,arg:a.Vb,pthread_ptr:a.xb};return B&&h.unref(),h.postMessage(_,a.qc),0},qt=0,Zr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Xr=(a,h,_)=>{h>>>=0;var T=h+_;for(_=h;a[_]&&!(_>=T);)++_;if(16<_-h&&a.buffer&&Zr)return Zr.decode(a.buffer instanceof SharedArrayBuffer?a.slice(h,_):a.subarray(h,_));for(T="";h<_;){var M=a[h++];if(M&128){var G=a[h++]&63;if((M&224)==192)T+=String.fromCharCode((M&31)<<6|G);else{var Z=a[h++]&63;M=(M&240)==224?(M&15)<<12|G<<6|Z:(M&7)<<18|G<<12|Z<<6|a[h++]&63,65536>M?T+=String.fromCharCode(M):(M-=65536,T+=String.fromCharCode(55296|M>>10,56320|M&1023))}}else T+=String.fromCharCode(M)}return T},ut=(a,h)=>(a>>>=0)?Xr(s(),a,h):"",oi=a=>{var h=Vr();return a=a(),pr(h),a};function Le(a,h){var _=arguments.length-2,T=arguments;return oi(()=>{for(var M=2*_,G=Nr(8*M),Z=G>>>3,re=0;re<_;re++){var ce=T[2+re];typeof ce=="bigint"?(Ee[Z+2*re]=1n,Ee[Z+2*re+1]=ce):(Ee[Z+2*re]=0n,C()[Z+2*re+1>>>0]=ce)}return Nn(a,M,G,h)})}function ai(a){if(V)return Le(0,1,a);Pe=a,0<qt||(_e.lc(),m.onExit?.(a),je=!0),k(a,new ir(a))}var Et=a=>{if(Pe=a,V)throw Sr(a),"unwind";ai(a)},bt=a=>{a instanceof ir||a=="unwind"||k(1,a)};function si(){for(var a=m.numThreads;a--;)or();et.unshift(()=>{St++,ui(()=>qr())})}function or(){var a=J("ort-wasm-simd-threaded.worker.js");a=new Worker(a),_e.yb.push(a)}function ui(a){V?a():Promise.all(_e.yb.map(_e.Pb)).then(a)}var _e={yb:[],zb:[],Ub:[],pb:{},Ib(){V?(_e.receiveObjectTransfer=_e.ic,_e.threadInitTLS=_e.Tb,_e.setExitStatus=_e.Sb):si()},Sb:a=>Pe=a,vc:["$terminateWorker"],lc:()=>{for(var a of _e.zb)_r(a);for(a of _e.yb)_r(a);_e.yb=[],_e.zb=[],_e.pb=[]},Rb:a=>{var h=a.xb;delete _e.pb[h],_e.yb.push(a),_e.zb.splice(_e.zb.indexOf(a),1),a.xb=0,Ur(h)},ic(){},Tb(){_e.Ub.forEach(a=>a())},Pb:a=>new Promise(h=>{a.onmessage=G=>{G=G.data;var Z=G.cmd;if(G.targetThread&&G.targetThread!=fr()){var re=_e.pb[G.targetThread];re?re.postMessage(G,G.transferList):Ae(`Internal error! Worker sent a message "${Z}" to target pthread ${G.targetThread}, but that thread no longer exists!`)}else Z==="checkMailbox"?sr():Z==="spawnThread"?$r(G):Z==="cleanupThread"?_e.Rb(_e.pb[G.thread]):Z==="killThread"?(G=G.thread,Z=_e.pb[G],delete _e.pb[G],_r(Z),Ur(G),_e.zb.splice(_e.zb.indexOf(Z),1),Z.xb=0):Z==="cancelThread"?_e.pb[G.thread].postMessage({cmd:"cancel"}):Z==="loaded"?(a.loaded=!0,B&&!a.xb&&a.unref(),h(a)):Z==="alert"?alert(`Thread ${G.threadId}: ${G.text}`):G.target==="setimmediate"?a.postMessage(G):Z==="callHandler"?m[G.handler](...G.args):Z&&Ae(`worker sent an unknown command ${Z}`)},a.onerror=G=>{throw Ae(`worker sent an error! ${G.filename}:${G.lineno}: ${G.message}`),G},B&&(a.on("message",G=>a.onmessage({data:G})),a.on("error",G=>a.onerror(G)));var _=[],T=["onExit"],M;for(M of T)m.hasOwnProperty(M)&&_.push(M);a.postMessage({cmd:"load",handlers:_,urlOrBlob:m.mainScriptUrlOrBlob||e,wasmMemory:Te,wasmModule:ge})})};m.PThread=_e;var Cr=a=>{for(;0<a.length;)a.shift()(m)};m.establishStackSpace=()=>{var a=fr(),h=y()[a+52>>>2>>>0];a=y()[a+56>>>2>>>0],Gn(h,h-a),pr(h)};function Sr(a){if(V)return Le(1,0,a);Et(a)}m.invokeEntryPoint=(a,h)=>{a=Hn.apply(null,[a,h]),0<qt?_e.Sb(a):jr(a)};function bo(a){this.Db=a-24,this.sc=function(h){y()[this.Db+4>>>2>>>0]=h},this.Mb=function(h){y()[this.Db+8>>>2>>>0]=h},this.Ib=function(h,_){this.Kb(),this.sc(h),this.Mb(_)},this.Kb=function(){y()[this.Db+16>>>2>>>0]=0}}var li=0,vo=0;function di(a,h,_,T){return V?Le(2,1,a,h,_,T):ci(a,h,_,T)}function ci(a,h,_,T){if(a>>>=0,h>>>=0,_>>>=0,T>>>=0,typeof SharedArrayBuffer>"u")return Ae("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var M=[];return V&&M.length===0?di(a,h,_,T):(a={kc:_,xb:a,Vb:T,qc:M},V?(a.tc="spawnThread",postMessage(a,M),0):$r(a))}function fi(a,h,_){return V?Le(3,1,a,h,_):0}function z(a,h){if(V)return Le(4,1,a,h)}var ar=a=>{for(var h=0,_=0;_<a.length;++_){var T=a.charCodeAt(_);127>=T?h++:2047>=T?h+=2:55296<=T&&57343>=T?(h+=4,++_):h+=3}return h},xr=(a,h,_,T)=>{if(_>>>=0,!(0<T))return 0;var M=_;T=_+T-1;for(var G=0;G<a.length;++G){var Z=a.charCodeAt(G);if(55296<=Z&&57343>=Z){var re=a.charCodeAt(++G);Z=65536+((Z&1023)<<10)|re&1023}if(127>=Z){if(_>=T)break;h[_++>>>0]=Z}else{if(2047>=Z){if(_+1>=T)break;h[_++>>>0]=192|Z>>6}else{if(65535>=Z){if(_+2>=T)break;h[_++>>>0]=224|Z>>12}else{if(_+3>=T)break;h[_++>>>0]=240|Z>>18,h[_++>>>0]=128|Z>>12&63}h[_++>>>0]=128|Z>>6&63}h[_++>>>0]=128|Z&63}}return h[_>>>0]=0,_-M},Ar=(a,h,_)=>xr(a,s(),h,_);function H(a,h){if(V)return Le(5,1,a,h)}function Kt(a,h,_){if(V)return Le(6,1,a,h,_)}function L(a,h,_){return V?Le(7,1,a,h,_):0}function F(a,h){if(V)return Le(8,1,a,h)}function Qr(a,h,_){if(V)return Le(9,1,a,h,_)}function en(a,h,_,T){if(V)return Le(10,1,a,h,_,T)}function tn(a,h,_,T){if(V)return Le(11,1,a,h,_,T)}function rn(a,h,_,T){if(V)return Le(12,1,a,h,_,T)}function nn(a){if(V)return Le(13,1,a)}function on(a,h){if(V)return Le(14,1,a,h)}function an(a,h,_){if(V)return Le(15,1,a,h,_)}var sn=a=>{if(a===null)return"null";var h=typeof a;return h==="object"||h==="array"||h==="function"?a.toString():""+a},un,vt=a=>{for(var h="";s()[a>>>0];)h+=un[s()[a++>>>0]];return h},Ir={},Tr={},pi={},kt;function mi(a,h,_={}){var T=h.name;if(!a)throw new kt(`type "${T}" must have a positive integer typeid pointer`);if(Tr.hasOwnProperty(a)){if(_.Yb)return;throw new kt(`Cannot register type \'${T}\' twice`)}Tr[a]=h,delete pi[a],Ir.hasOwnProperty(a)&&(h=Ir[a],delete Ir[a],h.forEach(M=>M()))}function Pt(a,h,_={}){if(!("argPackAdvance"in h))throw new TypeError("registerType registeredInstance requires argPackAdvance");mi(a,h,_)}var ln=(a,h,_)=>{switch(h){case 1:return _?T=>t()[T>>>0>>>0]:T=>s()[T>>>0>>>0];case 2:return _?T=>l()[T>>>1>>>0]:T=>f()[T>>>1>>>0];case 4:return _?T=>d()[T>>>2>>>0]:T=>y()[T>>>2>>>0];case 8:return _?T=>Ee[T>>>3]:T=>Ct[T>>>3];default:throw new TypeError(`invalid integer width (${h}): ${a}`)}};function dn(){this.wb=[void 0],this.Nb=[]}var ht=new dn;function Er(a){a>>>=0,a>=ht.Db&&--ht.get(a).Qb===0&&ht.Mb(a)}var dt=a=>{if(!a)throw new kt("Cannot use deleted val. handle = "+a);return ht.get(a).value},wt=a=>{switch(a){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return ht.Kb({Qb:1,value:a})}};function cn(a){return this.fromWireType(d()[a>>>2>>>0])}var hi=(a,h)=>{switch(h){case 4:return function(_){return this.fromWireType(b()[_>>>2>>>0])};case 8:return function(_){return this.fromWireType(C()[_>>>3>>>0])};default:throw new TypeError(`invalid float width (${h}): ${a}`)}};function gi(a){return this.fromWireType(y()[a>>>2>>>0])}var fn=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,yi=(a,h)=>{for(var _=a>>1,T=_+h/2;!(_>=T)&&f()[_>>>0];)++_;if(_<<=1,32<_-a&&fn)return fn.decode(s().slice(a,_));for(_="",T=0;!(T>=h/2);++T){var M=l()[a+2*T>>>1>>>0];if(M==0)break;_+=String.fromCharCode(M)}return _},bi=(a,h,_)=>{if(_??=2147483647,2>_)return 0;_-=2;var T=h;_=_<2*a.length?_/2:a.length;for(var M=0;M<_;++M){var G=a.charCodeAt(M);l()[h>>>1>>>0]=G,h+=2}return l()[h>>>1>>>0]=0,h-T},vi=a=>2*a.length,wi=(a,h)=>{for(var _=0,T="";!(_>=h/4);){var M=d()[a+4*_>>>2>>>0];if(M==0)break;++_,65536<=M?(M-=65536,T+=String.fromCharCode(55296|M>>10,56320|M&1023)):T+=String.fromCharCode(M)}return T},_i=(a,h,_)=>{if(h>>>=0,_??=2147483647,4>_)return 0;var T=h;_=T+_-4;for(var M=0;M<a.length;++M){var G=a.charCodeAt(M);if(55296<=G&&57343>=G){var Z=a.charCodeAt(++M);G=65536+((G&1023)<<10)|Z&1023}if(d()[h>>>2>>>0]=G,h+=4,h+4>_)break}return d()[h>>>2>>>0]=0,h-T},$i=a=>{for(var h=0,_=0;_<a.length;++_){var T=a.charCodeAt(_);55296<=T&&57343>=T&&++_,h+=4}return h},pn=()=>{if(!(0<qt))try{V?jr(Pe):Et(Pe)}catch(a){bt(a)}};function Pr(a){a>>>=0,typeof Atomics.rc=="function"&&(Atomics.rc(d(),a>>>2,a).value.then(sr),a+=128,Atomics.store(d(),a>>>2,1))}m.__emscripten_thread_mailbox_await=Pr;var sr=()=>{var a=fr();if(a&&(Pr(a),!je))try{Wn(),pn()}catch(h){bt(h)}};m.checkMailbox=sr;var Or=[],kr=(a,h)=>{var _=Tr[a];if(_===void 0)throw a=jn(a),_=vt(a),At(a),new kt(h+" has unknown type "+_);return _},mn=(a,h,_)=>{var T=[];return a=a.toWireType(T,_),T.length&&(y()[h>>>2>>>0]=wt(T)),a},ur=a=>{try{a()}catch(h){ot(h)}};function Ci(){var a=pe,h={};for(let[_,T]of Object.entries(a))h[_]=typeof T=="function"?function(){lr.push(_);try{return T.apply(null,arguments)}finally{je||(lr.pop(),xt&&Rt===1&&lr.length===0&&(Rt=0,qt+=1,ur(Fn),typeof Fibers<"u"&&Fibers.xc()))}}:T;return h}var Rt=0,xt=null,hn=0,lr=[],gn={},yn={},Si=0,Rr=null,xi=[];function Ai(){return new Promise((a,h)=>{Rr={resolve:a,reject:h}})}function Ii(){var a=Qt(65548),h=a+12;y()[a>>>2>>>0]=h,y()[a+4>>>2>>>0]=h+65536,h=lr[0];var _=gn[h];return _===void 0&&(_=Si++,gn[h]=_,yn[_]=h),h=_,d()[a+8>>>2>>>0]=h,a}function Ti(){var a=d()[xt+8>>>2>>>0];return a=pe[yn[a]],--qt,a()}function Ei(a){if(!je){if(Rt===0){var h=!1,_=!1;a((T=0)=>{if(!je&&(hn=T,h=!0,_)){Rt=2,ur(()=>qn(xt)),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.resume(),T=!1;try{var M=Ti()}catch(re){M=re,T=!0}var G=!1;if(!xt){var Z=Rr;Z&&(Rr=null,(T?Z.reject:Z.resolve)(M),G=!0)}if(T&&!G)throw M}}),_=!0,h||(Rt=1,xt=Ii(),typeof Browser<"u"&&Browser.Jb.Xb&&Browser.Jb.pause(),ur(()=>Ln(xt)))}else Rt===2?(Rt=0,ur(Kn),At(xt),xt=null,xi.forEach(T=>{if(!je)try{T(),pn()}catch(M){bt(M)}})):ot(`invalid state: ${Rt}`);return hn}}function bn(a){return Ei(h=>{a().then(h)})}var dr=[],Pi={},Br=a=>{var h=Pi[a];return h===void 0?vt(a):h},vn=()=>typeof globalThis=="object"?globalThis:Function("return this")(),Oi=a=>{var h=dr.length;return dr.push(a),h},ki=(a,h)=>{for(var _=Array(a),T=0;T<a;++T)_[T]=kr(y()[h+4*T>>>2>>>0],"parameter "+T);return _},wn=(a,h)=>Object.defineProperty(h,"name",{value:a});function Ri(a){var h=Function;if(!(h instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof h} which is not a function`);var _=wn(h.name||"unknownFunctionName",function(){});return _.prototype=h.prototype,_=new _,a=h.apply(_,a),a instanceof Object?a:_}var Jt=a=>a%4===0&&(a%100!==0||a%400===0),_n=[0,31,60,91,121,152,182,213,244,274,305,335],$n=[0,31,59,90,120,151,181,212,243,273,304,334];function Cn(a,h,_,T,M,G,Z){return V?Le(16,1,a,h,_,T,M,G,Z):-52}function Sn(a,h,_,T,M,G){if(V)return Le(17,1,a,h,_,T,M,G)}var xn=a=>{var h=ar(a)+1,_=Qt(h);return _&&Ar(a,_,h),_},Dr=[],An=(a,h)=>{Dr.length=0;for(var _;_=s()[a++>>>0];){var T=_!=105;T&=_!=112,h+=T&&h%8?4:0,Dr.push(_==112?y()[h>>>2>>>0]:_==106?Ee[h>>>3]:_==105?d()[h>>>2>>>0]:C()[h>>>3>>>0]),h+=T?8:4}return Dr},Mr={},In=()=>{if(!zr){var a={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:E||"./this.program"},h;for(h in Mr)Mr[h]===void 0?delete a[h]:a[h]=Mr[h];var _=[];for(h in a)_.push(`${h}=${a[h]}`);zr=_}return zr},zr;function Tn(a,h){if(V)return Le(18,1,a,h);a>>>=0,h>>>=0;var _=0;return In().forEach((T,M)=>{var G=h+_;for(M=y()[a+4*M>>>2>>>0]=G,G=0;G<T.length;++G)t()[M++>>>0>>>0]=T.charCodeAt(G);t()[M>>>0>>>0]=0,_+=T.length+1}),0}function En(a,h){if(V)return Le(19,1,a,h);a>>>=0,h>>>=0;var _=In();y()[a>>>2>>>0]=_.length;var T=0;return _.forEach(M=>T+=M.length+1),y()[h>>>2>>>0]=T,0}function Pn(a){return V?Le(20,1,a):52}function On(a,h,_,T){return V?Le(21,1,a,h,_,T):52}function kn(a,h,_,T){return V?Le(22,1,a,h,_,T):70}var Bi=[null,[],[]];function Rn(a,h,_,T){if(V)return Le(23,1,a,h,_,T);h>>>=0,_>>>=0,T>>>=0;for(var M=0,G=0;G<_;G++){var Z=y()[h>>>2>>>0],re=y()[h+4>>>2>>>0];h+=8;for(var ce=0;ce<re;ce++){var ae=s()[Z+ce>>>0],we=Bi[a];ae===0||ae===10?((a===1?Fe:Ae)(Xr(we,0)),we.length=0):we.push(ae)}M+=re}return y()[T>>>2>>>0]=M,0}var Bn=[31,29,31,30,31,30,31,31,30,31,30,31],Dn=[31,28,31,30,31,30,31,31,30,31,30,31];function Di(a){var h=Array(ar(a)+1);return xr(a,h,0,h.length),h}var Mi=(a,h)=>{t().set(a,h>>>0)};function Mn(a,h,_,T){function M(K,he,Be){for(K=typeof K=="number"?K.toString():K||"";K.length<he;)K=Be[0]+K;return K}function G(K,he){return M(K,he,"0")}function Z(K,he){function Be(jt){return 0>jt?-1:0<jt?1:0}var lt;return(lt=Be(K.getFullYear()-he.getFullYear()))===0&&(lt=Be(K.getMonth()-he.getMonth()))===0&&(lt=Be(K.getDate()-he.getDate())),lt}function re(K){switch(K.getDay()){case 0:return new Date(K.getFullYear()-1,11,29);case 1:return K;case 2:return new Date(K.getFullYear(),0,3);case 3:return new Date(K.getFullYear(),0,2);case 4:return new Date(K.getFullYear(),0,1);case 5:return new Date(K.getFullYear()-1,11,31);case 6:return new Date(K.getFullYear()-1,11,30)}}function ce(K){var he=K.Ab;for(K=new Date(new Date(K.Bb+1900,0,1).getTime());0<he;){var Be=K.getMonth(),lt=(Jt(K.getFullYear())?Bn:Dn)[Be];if(he>lt-K.getDate())he-=lt-K.getDate()+1,K.setDate(1),11>Be?K.setMonth(Be+1):(K.setMonth(0),K.setFullYear(K.getFullYear()+1));else{K.setDate(K.getDate()+he);break}}return Be=new Date(K.getFullYear()+1,0,4),he=re(new Date(K.getFullYear(),0,4)),Be=re(Be),0>=Z(he,K)?0>=Z(Be,K)?K.getFullYear()+1:K.getFullYear():K.getFullYear()-1}a>>>=0,h>>>=0,_>>>=0,T>>>=0;var ae=y()[T+40>>>2>>>0];T={oc:d()[T>>>2>>>0],nc:d()[T+4>>>2>>>0],Gb:d()[T+8>>>2>>>0],Lb:d()[T+12>>>2>>>0],Hb:d()[T+16>>>2>>>0],Bb:d()[T+20>>>2>>>0],vb:d()[T+24>>>2>>>0],Ab:d()[T+28>>>2>>>0],wc:d()[T+32>>>2>>>0],mc:d()[T+36>>>2>>>0],pc:ae?ut(ae):""},_=ut(_),ae={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var we in ae)_=_.replace(new RegExp(we,"g"),ae[we]);var me="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ce="January February March April May June July August September October November December".split(" ");ae={"%a":K=>me[K.vb].substring(0,3),"%A":K=>me[K.vb],"%b":K=>Ce[K.Hb].substring(0,3),"%B":K=>Ce[K.Hb],"%C":K=>G((K.Bb+1900)/100|0,2),"%d":K=>G(K.Lb,2),"%e":K=>M(K.Lb,2," "),"%g":K=>ce(K).toString().substring(2),"%G":K=>ce(K),"%H":K=>G(K.Gb,2),"%I":K=>(K=K.Gb,K==0?K=12:12<K&&(K-=12),G(K,2)),"%j":K=>{for(var he=0,Be=0;Be<=K.Hb-1;he+=(Jt(K.Bb+1900)?Bn:Dn)[Be++]);return G(K.Lb+he,3)},"%m":K=>G(K.Hb+1,2),"%M":K=>G(K.nc,2),"%n":()=>`\n`,"%p":K=>0<=K.Gb&&12>K.Gb?"AM":"PM","%S":K=>G(K.oc,2),"%t":()=>"	","%u":K=>K.vb||7,"%U":K=>G(Math.floor((K.Ab+7-K.vb)/7),2),"%V":K=>{var he=Math.floor((K.Ab+7-(K.vb+6)%7)/7);if(2>=(K.vb+371-K.Ab-2)%7&&he++,he)he==53&&(Be=(K.vb+371-K.Ab)%7,Be==4||Be==3&&Jt(K.Bb)||(he=1));else{he=52;var Be=(K.vb+7-K.Ab-1)%7;(Be==4||Be==5&&Jt(K.Bb%400-1))&&he++}return G(he,2)},"%w":K=>K.vb,"%W":K=>G(Math.floor((K.Ab+7-(K.vb+6)%7)/7),2),"%y":K=>(K.Bb+1900).toString().substring(2),"%Y":K=>K.Bb+1900,"%z":K=>{K=K.mc;var he=0<=K;return K=Math.abs(K)/60,(he?"+":"-")+("0000"+(K/60*100+K%60)).slice(-4)},"%Z":K=>K.pc,"%%":()=>"%"},_=_.replace(/%%/g,"\\0\\0");for(we in ae)_.includes(we)&&(_=_.replace(new RegExp(we,"g"),ae[we](T)));return _=_.replace(/\\0\\0/g,"%"),we=Di(_),we.length>h?0:(Mi(we,a),we.length-1)}_e.Ib();for(var zn=Array(256),cr=0;256>cr;++cr)zn[cr]=String.fromCharCode(cr);un=zn,kt=m.BindingError=class extends Error{constructor(a){super(a),this.name="BindingError"}},m.InternalError=class extends Error{constructor(a){super(a),this.name="InternalError"}},Object.assign(dn.prototype,{get(a){return this.wb[a]},has(a){return this.wb[a]!==void 0},Kb(a){var h=this.Nb.pop()||this.wb.length;return this.wb[h]=a,h},Mb(a){this.wb[a]=void 0,this.Nb.push(a)}}),ht.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),ht.Db=ht.wb.length,m.count_emval_handles=()=>{for(var a=0,h=ht.Db;h<ht.wb.length;++h)ht.wb[h]!==void 0&&++a;return a};var zi=[ai,Sr,di,fi,z,H,Kt,L,F,Qr,en,tn,rn,nn,on,an,Cn,Sn,Tn,En,Pn,On,kn,Rn],Ui={ua:function(a,h,_){return bn(async()=>{await m.cc(a,h,_)})},b:function(a,h,_){throw a>>>=0,new bo(a).Ib(h>>>0,_>>>0),li=a,vo++,li},fa:function(a){Vn(a>>>0,!j,1,!U,131072,!1),_e.Tb()},D:function(a){a>>>=0,V?postMessage({cmd:"cleanupThread",thread:a}):_e.Rb(_e.pb[a])},X:ci,z:fi,la:z,T:H,V:Kt,ma:L,ja:F,ca:Qr,ia:en,H:tn,U:rn,R:nn,ka:on,S:an,K:function(a,h,_,T,M){a>>>=0,h>>>=0,_>>>=0,h=vt(h);var G=h.indexOf("u")!=-1;G&&(M=(1n<<64n)-1n),Pt(a,{name:h,fromWireType:Z=>Z,toWireType:function(Z,re){if(typeof re!="bigint"&&typeof re!="number")throw new TypeError(`Cannot convert "${sn(re)}" to ${this.name}`);if(re<T||re>M)throw new TypeError(`Passing a number "${sn(re)}" from JS side to C/C++ side to an argument of type "${h}", which is outside the valid range [${T}, ${M}]!`);return re},argPackAdvance:8,readValueFromPointer:ln(h,_,!G),Cb:null})},sa:function(a,h,_,T){a>>>=0,h=vt(h>>>0),Pt(a,{name:h,fromWireType:function(M){return!!M},toWireType:function(M,G){return G?_:T},argPackAdvance:8,readValueFromPointer:function(M){return this.fromWireType(s()[M>>>0])},Cb:null})},ra:function(a,h){a>>>=0,h=vt(h>>>0),Pt(a,{name:h,fromWireType:_=>{var T=dt(_);return Er(_),T},toWireType:(_,T)=>wt(T),argPackAdvance:8,readValueFromPointer:cn,Cb:null})},J:function(a,h,_){a>>>=0,_>>>=0,h=vt(h>>>0),Pt(a,{name:h,fromWireType:T=>T,toWireType:(T,M)=>M,argPackAdvance:8,readValueFromPointer:hi(h,_),Cb:null})},v:function(a,h,_,T,M){if(a>>>=0,_>>>=0,h=vt(h>>>0),M===-1&&(M=4294967295),M=re=>re,T===0){var G=32-8*_;M=re=>re<<G>>>G}var Z=h.includes("unsigned")?function(re,ce){return ce>>>0}:function(re,ce){return ce};Pt(a,{name:h,fromWireType:M,toWireType:Z,argPackAdvance:8,readValueFromPointer:ln(h,_,T!==0),Cb:null})},o:function(a,h,_){function T(G){var Z=y()[G>>>2>>>0];return G=y()[G+4>>>2>>>0],new M(t().buffer,G,Z)}a>>>=0;var M=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][h];_=vt(_>>>0),Pt(a,{name:_,fromWireType:T,argPackAdvance:8,readValueFromPointer:T},{Yb:!0})},L:function(a,h){a>>>=0,h=vt(h>>>0);var _=h==="std::string";Pt(a,{name:h,fromWireType:function(T){var M=y()[T>>>2>>>0],G=T+4;if(_)for(var Z=G,re=0;re<=M;++re){var ce=G+re;if(re==M||s()[ce>>>0]==0){if(Z=ut(Z,ce-Z),ae===void 0)var ae=Z;else ae+=String.fromCharCode(0),ae+=Z;Z=ce+1}}else{for(ae=Array(M),re=0;re<M;++re)ae[re]=String.fromCharCode(s()[G+re>>>0]);ae=ae.join("")}return At(T),ae},toWireType:function(T,M){M instanceof ArrayBuffer&&(M=new Uint8Array(M));var G=typeof M=="string";if(!(G||M instanceof Uint8Array||M instanceof Uint8ClampedArray||M instanceof Int8Array))throw new kt("Cannot pass non-string to std::string");var Z=_&&G?ar(M):M.length,re=Qt(4+Z+1),ce=re+4;if(y()[re>>>2>>>0]=Z,_&&G)Ar(M,ce,Z+1);else if(G)for(G=0;G<Z;++G){var ae=M.charCodeAt(G);if(255<ae)throw At(ce),new kt("String has UTF-16 code units that do not fit in 8 bits");s()[ce+G>>>0]=ae}else for(G=0;G<Z;++G)s()[ce+G>>>0]=M[G];return T!==null&&T.push(At,re),re},argPackAdvance:8,readValueFromPointer:gi,Cb(T){At(T)}})},B:function(a,h,_){if(a>>>=0,h>>>=0,_>>>=0,_=vt(_),h===2)var T=yi,M=bi,G=vi,Z=()=>f(),re=1;else h===4&&(T=wi,M=_i,G=$i,Z=()=>y(),re=2);Pt(a,{name:_,fromWireType:ce=>{for(var ae=y()[ce>>>2>>>0],we=Z(),me,Ce=ce+4,K=0;K<=ae;++K){var he=ce+4+K*h;(K==ae||we[he>>>re]==0)&&(Ce=T(Ce,he-Ce),me===void 0?me=Ce:(me+=String.fromCharCode(0),me+=Ce),Ce=he+h)}return At(ce),me},toWireType:(ce,ae)=>{if(typeof ae!="string")throw new kt(`Cannot pass non-string to C++ string type ${_}`);var we=G(ae),me=Qt(4+we+h);return y()[me>>>2]=we>>re,M(ae,me+4,we+h),ce!==null&&ce.push(At,me),me},argPackAdvance:8,readValueFromPointer:cn,Cb(ce){At(ce)}})},ta:function(a,h){a>>>=0,h=vt(h>>>0),Pt(a,{Zb:!0,name:h,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,P:function(a,h){a>>>=0,a==h>>>0?setTimeout(()=>sr()):V?postMessage({targetThread:a,cmd:"checkMailbox"}):(a=_e.pb[a])&&a.postMessage({cmd:"checkMailbox"})},Y:function(a,h,_,T){h>>>=0,_/=2,Or.length=_,T=T>>>0>>>3;for(var M=0;M<_;M++)Or[M]=Ee[T+2*M]?Ee[T+2*M+1]:C()[T+2*M+1>>>0];return a=0>a?wr[-a-1]:zi[a],_e.Wb=h,h=a.apply(null,Or),_e.Wb=0,h},ea:Pr,pa:function(a){B&&_e.pb[a>>>0].ref()},t:function(a,h,_){return h>>>=0,_>>>=0,a=dt(a>>>0),h=kr(h,"emval::as"),mn(h,_,a)},y:function(a){return a>>>=0,bn(()=>(a=dt(a),a.then(wt)))},p:function(a,h,_,T){return _>>>=0,T>>>=0,a=dr[a>>>0],h=dt(h>>>0),a(null,h,_,T)},k:function(a,h,_,T,M){return _>>>=0,T>>>=0,M>>>=0,a=dr[a>>>0],h=dt(h>>>0),_=Br(_),a(h,h[_],T,M)},c:Er,C:function(a,h){return h>>>=0,a=dt(a>>>0),h=dt(h),a==h},n:function(a){return a>>>=0,a===0?wt(vn()):(a=Br(a),wt(vn()[a]))},j:function(a,h,_){h=ki(a,h>>>0);var T=h.shift();a--;var M=`return function (obj, func, destructorsRef, args) {\n`,G=0,Z=[];_===0&&Z.push("obj");for(var re=["retType"],ce=[T],ae=0;ae<a;++ae)Z.push("arg"+ae),re.push("argType"+ae),ce.push(h[ae]),M+=`  var arg${ae} = argType${ae}.readValueFromPointer(args${G?"+"+G:""});\n`,G+=h[ae].argPackAdvance;for(M+=`  var rv = ${_===1?"new func":"func.call"}(${Z.join(", ")});\n`,ae=0;ae<a;++ae)h[ae].deleteObject&&(M+=`  argType${ae}.deleteObject(arg${ae});\n`);return T.Zb||(re.push("emval_returnValue"),ce.push(mn),M+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),re.push(M+`};\n`),a=Ri(re).apply(null,ce),_=`methodCaller<(${h.map(we=>we.name).join(", ")}) => ${T.name}>`,Oi(wn(_,a))},s:function(a,h){return h>>>=0,a=dt(a>>>0),h=dt(h),wt(a[h])},e:function(a){a>>>=0,4<a&&(ht.get(a).Qb+=1)},w:function(){return wt([])},m:function(a){a=dt(a>>>0);for(var h=Array(a.length),_=0;_<a.length;_++)h[_]=a[_];return wt(h)},g:function(a){return wt(Br(a>>>0))},l:function(){return wt({})},i:function(a){a>>>=0;for(var h=dt(a);h.length;){var _=h.pop();h.pop()(_)}Er(a)},h:function(a,h,_){h>>>=0,_>>>=0,a=dt(a>>>0),h=dt(h),_=dt(_),a[h]=_},d:function(a,h){return h>>>=0,a=kr(a>>>0,"_emval_take_value"),a=a.readValueFromPointer(h),wt(a)},$:function(a,h){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),h>>>=0,a=new Date(1e3*a),d()[h>>>2>>>0]=a.getUTCSeconds(),d()[h+4>>>2>>>0]=a.getUTCMinutes(),d()[h+8>>>2>>>0]=a.getUTCHours(),d()[h+12>>>2>>>0]=a.getUTCDate(),d()[h+16>>>2>>>0]=a.getUTCMonth(),d()[h+20>>>2>>>0]=a.getUTCFullYear()-1900,d()[h+24>>>2>>>0]=a.getUTCDay(),a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,d()[h+28>>>2>>>0]=a},aa:function(a,h){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),h>>>=0,a=new Date(1e3*a),d()[h>>>2>>>0]=a.getSeconds(),d()[h+4>>>2>>>0]=a.getMinutes(),d()[h+8>>>2>>>0]=a.getHours(),d()[h+12>>>2>>>0]=a.getDate(),d()[h+16>>>2>>>0]=a.getMonth(),d()[h+20>>>2>>>0]=a.getFullYear()-1900,d()[h+24>>>2>>>0]=a.getDay();var _=(Jt(a.getFullYear())?_n:$n)[a.getMonth()]+a.getDate()-1|0;d()[h+28>>>2>>>0]=_,d()[h+36>>>2>>>0]=-(60*a.getTimezoneOffset()),_=new Date(a.getFullYear(),6,1).getTimezoneOffset();var T=new Date(a.getFullYear(),0,1).getTimezoneOffset();a=(_!=T&&a.getTimezoneOffset()==Math.min(T,_))|0,d()[h+32>>>2>>>0]=a},ba:function(a){a>>>=0;var h=new Date(d()[a+20>>>2>>>0]+1900,d()[a+16>>>2>>>0],d()[a+12>>>2>>>0],d()[a+8>>>2>>>0],d()[a+4>>>2>>>0],d()[a>>>2>>>0],0),_=d()[a+32>>>2>>>0],T=h.getTimezoneOffset(),M=new Date(h.getFullYear(),6,1).getTimezoneOffset(),G=new Date(h.getFullYear(),0,1).getTimezoneOffset(),Z=Math.min(G,M);return 0>_?d()[a+32>>>2>>>0]=+(M!=G&&Z==T):0<_!=(Z==T)&&(M=Math.max(G,M),h.setTime(h.getTime()+6e4*((0<_?Z:M)-T))),d()[a+24>>>2>>>0]=h.getDay(),_=(Jt(h.getFullYear())?_n:$n)[h.getMonth()]+h.getDate()-1|0,d()[a+28>>>2>>>0]=_,d()[a>>>2>>>0]=h.getSeconds(),d()[a+4>>>2>>>0]=h.getMinutes(),d()[a+8>>>2>>>0]=h.getHours(),d()[a+12>>>2>>>0]=h.getDate(),d()[a+16>>>2>>>0]=h.getMonth(),d()[a+20>>>2>>>0]=h.getYear(),a=h.getTime(),isNaN(a)?(d()[Un()>>>2>>>0]=61,a=-1):a/=1e3,BigInt(a)},Z:Cn,_:Sn,O:function(a,h,_){function T(ae){return(ae=ae.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?ae[1]:"GMT"}a>>>=0,h>>>=0,_>>>=0;var M=new Date().getFullYear(),G=new Date(M,0,1),Z=new Date(M,6,1);M=G.getTimezoneOffset();var re=Z.getTimezoneOffset(),ce=Math.max(M,re);y()[a>>>2>>>0]=60*ce,d()[h>>>2>>>0]=+(M!=re),a=T(G),h=T(Z),a=xn(a),h=xn(h),re<M?(y()[_>>>2>>>0]=a,y()[_+4>>>2>>>0]=h):(y()[_>>>2>>>0]=h,y()[_+4>>>2>>>0]=a)},q:()=>{ot("")},f:function(a,h,_){return a>>>=0,h=An(h>>>0,_>>>0),wr[a].apply(null,h)},M:function(a,h,_){return a>>>=0,h=An(h>>>0,_>>>0),wr[a].apply(null,h)},E:()=>{},I:()=>Date.now(),oa:()=>{throw qt+=1,"unwind"},Q:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>B?(cs(),Wr(ds)).cpus().length:navigator.hardwareConcurrency,N:function(a){a>>>=0;var h=s().length;if(a<=h||4294901760<a)return!1;for(var _=1;4>=_;_*=2){var T=h*(1+.2/_);T=Math.min(T,a+100663296);var M=Math;T=Math.max(a,T);e:{M=(M.min.call(M,4294901760,T+(65536-T%65536)%65536)-Te.buffer.byteLength+65535)/65536;try{Te.grow(M),it();var G=1;break e}catch{}G=void 0}if(G)return!0}return!1},ga:Tn,ha:En,W:Et,A:Pn,G:On,da:kn,F:Rn,a:Te||m.wasmMemory,na:Mn,r:function(a,h,_,T){return Mn(a>>>0,h>>>0,_>>>0,T>>>0)}},pe=function(){function a(_,T){return pe=_.exports,pe=Ci(),pe=ji(),_e.Ub.push(pe.bb),tt.unshift(pe.va),ge=T,qr(),pe}var h={a:Ui};if(St++,m.instantiateWasm)try{return m.instantiateWasm(h,a)}catch(_){Ae(`Module.instantiateWasm callback failed with error: ${_}`),P(_)}return Yr(h,function(_){a(_.instance,_.module)}).catch(P),{}}();m._OrtInit=(a,h)=>(m._OrtInit=pe.wa)(a,h),m._OrtGetLastError=(a,h)=>(m._OrtGetLastError=pe.xa)(a,h),m._OrtCreateSessionOptions=(a,h,_,T,M,G,Z,re,ce,ae)=>(m._OrtCreateSessionOptions=pe.ya)(a,h,_,T,M,G,Z,re,ce,ae),m._OrtAppendExecutionProvider=(a,h)=>(m._OrtAppendExecutionProvider=pe.za)(a,h),m._OrtAddFreeDimensionOverride=(a,h,_)=>(m._OrtAddFreeDimensionOverride=pe.Aa)(a,h,_),m._OrtAddSessionConfigEntry=(a,h,_)=>(m._OrtAddSessionConfigEntry=pe.Ba)(a,h,_),m._OrtReleaseSessionOptions=a=>(m._OrtReleaseSessionOptions=pe.Ca)(a),m._OrtCreateSession=(a,h,_)=>(m._OrtCreateSession=pe.Da)(a,h,_),m._OrtReleaseSession=a=>(m._OrtReleaseSession=pe.Ea)(a),m._OrtGetInputOutputCount=(a,h,_)=>(m._OrtGetInputOutputCount=pe.Fa)(a,h,_),m._OrtGetInputName=(a,h)=>(m._OrtGetInputName=pe.Ga)(a,h),m._OrtGetOutputName=(a,h)=>(m._OrtGetOutputName=pe.Ha)(a,h),m._OrtFree=a=>(m._OrtFree=pe.Ia)(a),m._OrtCreateTensor=(a,h,_,T,M,G)=>(m._OrtCreateTensor=pe.Ja)(a,h,_,T,M,G),m._OrtGetTensorData=(a,h,_,T,M)=>(m._OrtGetTensorData=pe.Ka)(a,h,_,T,M),m._OrtReleaseTensor=a=>(m._OrtReleaseTensor=pe.La)(a),m._OrtCreateRunOptions=(a,h,_,T)=>(m._OrtCreateRunOptions=pe.Ma)(a,h,_,T),m._OrtAddRunConfigEntry=(a,h,_)=>(m._OrtAddRunConfigEntry=pe.Na)(a,h,_),m._OrtReleaseRunOptions=a=>(m._OrtReleaseRunOptions=pe.Oa)(a),m._OrtCreateBinding=a=>(m._OrtCreateBinding=pe.Pa)(a),m._OrtBindInput=(a,h,_)=>(m._OrtBindInput=pe.Qa)(a,h,_),m._OrtBindOutput=(a,h,_,T)=>(m._OrtBindOutput=pe.Ra)(a,h,_,T),m._OrtClearBoundOutputs=a=>(m._OrtClearBoundOutputs=pe.Sa)(a),m._OrtReleaseBinding=a=>(m._OrtReleaseBinding=pe.Ta)(a),m._OrtRunWithBinding=(a,h,_,T,M)=>(m._OrtRunWithBinding=pe.Ua)(a,h,_,T,M),m._OrtRun=(a,h,_,T,M,G,Z,re)=>(m._OrtRun=pe.Va)(a,h,_,T,M,G,Z,re),m._OrtEndProfiling=a=>(m._OrtEndProfiling=pe.Wa)(a),m._JsepOutput=(a,h,_)=>(m._JsepOutput=pe.Xa)(a,h,_),m._JsepGetNodeName=a=>(m._JsepGetNodeName=pe.Ya)(a);var Un=()=>(Un=pe.Za)(),fr=m._pthread_self=()=>(fr=m._pthread_self=pe._a)(),Qt=m._malloc=a=>(Qt=m._malloc=pe.$a)(a),At=m._free=a=>(At=m._free=pe.ab)(a);m.__emscripten_tls_init=()=>(m.__emscripten_tls_init=pe.bb)();var jn=a=>(jn=pe.cb)(a);m.__embind_initialize_bindings=()=>(m.__embind_initialize_bindings=pe.db)();var Vn=m.__emscripten_thread_init=(a,h,_,T,M,G)=>(Vn=m.__emscripten_thread_init=pe.fb)(a,h,_,T,M,G);m.__emscripten_thread_crashed=()=>(m.__emscripten_thread_crashed=pe.gb)();var Nn=(a,h,_,T)=>(Nn=pe.hb)(a,h,_,T),Ur=a=>(Ur=pe.ib)(a),jr=m.__emscripten_thread_exit=a=>(jr=m.__emscripten_thread_exit=pe.jb)(a),Wn=()=>(Wn=pe.kb)(),Gn=(a,h)=>(Gn=pe.lb)(a,h),Vr=()=>(Vr=pe.mb)(),pr=a=>(pr=pe.nb)(a),Nr=a=>(Nr=pe.ob)(a),Hn=m.dynCall_ii=(a,h)=>(Hn=m.dynCall_ii=pe.qb)(a,h),Ln=a=>(Ln=pe.rb)(a),Fn=()=>(Fn=pe.sb)(),qn=a=>(qn=pe.tb)(a),Kn=()=>(Kn=pe.ub)();m.___start_em_js=961539,m.___stop_em_js=961700;function ji(){var a=pe;a=Object.assign({},a);var h=T=>()=>T()>>>0,_=T=>M=>T(M)>>>0;return a.Za=h(a.Za),a._a=h(a._a),a.$a=_(a.$a),a.cb=_(a.cb),a.emscripten_main_runtime_thread_id=h(a.emscripten_main_runtime_thread_id),a.mb=h(a.mb),a.ob=_(a.ob),a}m.wasmMemory=Te,m.stackAlloc=Nr,m.stackSave=Vr,m.stackRestore=pr,m.keepRuntimeAlive=()=>0<qt,m.UTF8ToString=ut,m.stringToUTF8=Ar,m.lengthBytesUTF8=ar,m.ExitStatus=ir,m.PThread=_e;var mr;Zt=function a(){mr||Jn(),mr||(Zt=a)};function Jn(){if(!(0<St))if(V)x(m),V||Cr(tt),startWorker(m);else{if(m.preRun)for(typeof m.preRun=="function"&&(m.preRun=[m.preRun]);m.preRun.length;)et.unshift(m.preRun.shift());Cr(et),0<St||mr||(mr=!0,m.calledRun=!0,je||(V||Cr(tt),x(m),V||Cr(yt)))}}return Jn(),r.ready}})();typeof ps=="object"&&typeof Io=="object"?Io.exports=fs:typeof define=="function"&&define.amd&&define([],()=>fs)});var hs=Yn((My,Um)=>{Um.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\\n\'});var Po,er,Xn,Gi,Qn,_s,Oo,xe=ue(()=>{"use strict";Po=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},er=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Xn=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Gi=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Qn=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},_s=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",Oo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var Hi=ue(()=>{"use strict"});var Cs=ue(()=>{"use strict";Hi()});var Ss,xs=ue(()=>{"use strict";Ss="1.18.0"});var As,It,ko=ue(()=>{"use strict";xs();As="warning",It={wasm:{},webgl:{},webgpu:{},versions:{common:Ss},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);As=e}},get logLevel(){return As}};Object.defineProperty(It,"logLevel",{enumerable:!0})});var Gr,Is=ue(()=>{"use strict";ko();Gr=It});var Ts=ue(()=>{"use strict"});var Es=ue(()=>{"use strict";Li()});var Os=ue(()=>{"use strict"});var ks=ue(()=>{"use strict";Li()});var Li=ue(()=>{"use strict";Ts();Es();Os();ks()});var Fi=ue(()=>{"use strict";Li()});var Ro,Rs,gr,tr,Bo=ue(()=>{"use strict";ko();Ro=(e,r)=>{(typeof It.trace>"u"?!It.wasm.trace:!It.trace)||console.timeStamp(`${e}::ORT::${r}`)},Rs=(e,r)=>{let t=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],s=!1;for(let l=0;l<t.length;l++){if(s&&!t[l].includes("TRACE_FUNC")){let f=`FUNC_${e}::${t[l].trim().split(" ")[1]}`;r&&(f+=`::${r}`),Ro("CPU",f);return}t[l].includes("TRACE_FUNC")&&(s=!0)}},gr=e=>{(typeof It.trace>"u"?!It.wasm.trace:!It.trace)||Rs("BEGIN",e)},tr=e=>{(typeof It.trace>"u"?!It.wasm.trace:!It.trace)||Rs("END",e)}});var Bs=ue(()=>{"use strict";Hi();Fi();Bo()});var Ds=ue(()=>{"use strict";Bs()});var Ms=ue(()=>{"use strict"});var zs=ue(()=>{"use strict";Hi();Fi()});var Us=ue(()=>{"use strict";zs()});var Hr=ue(()=>{"use strict";Cs();Is();Ds();Fi();Bo();Ms();Us()});var Jm,Ym,js,Vs,Ns,Zm,Je,rr=ue(()=>{"use strict";xe();Jm=["V","I","W","E","F"],Ym=(e,r)=>{console.log(`[${Jm[e]},${new Date().toISOString()}]${r}`)},Ns=(e,r)=>{js=e,Vs=r},Zm=(e,r)=>{let t=Qn(e),s=Qn(js);t>=s&&Ym(t,typeof r=="function"?r():r)},Je=(...e)=>{Vs&&Zm(...e)}});var Ws,Gs=ue(()=>{"use strict";xe();Ws=(e,r)=>new(Gi(r))(e)});var qi=ue(()=>{"use strict"});var Ki,Xm,Hs,Mo,Do,Fs,qs=ue(()=>{"use strict";rr();qi();Ki=e=>Math.ceil(e/16)*16,Xm=1,Hs=()=>Xm++,Mo=async(e,r,t,s)=>{let l=Ki(t),f=e.device.createBuffer({size:l,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let d=e.getCommandEncoder();e.endComputePass(),d.copyBufferToBuffer(r,0,f,0,l),e.flush(),await f.mapAsync(GPUMapMode.READ);let y=f.getMappedRange();if(s){let b=s();return b.set(new Uint8Array(y,0,t)),b}else return new Uint8Array(y.slice(0,t))}finally{f.destroy()}},Do=class{constructor(r){this.backend=r;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(r,t){let s=t.buffer,l=t.byteOffset,f=t.byteLength,d=Ki(f),y=this.storageCache.get(r);if(!y)throw new Error("gpu data for uploading does not exist");if(y.originalSize!==f)throw new Error(`inconsistent data size. gpu data size=${y.originalSize}, data size=${f}`);let b=this.backend.device.createBuffer({mappedAtCreation:!0,size:d,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),C=b.getMappedRange();new Uint8Array(C).set(new Uint8Array(s,l,f)),b.unmap();let m=this.backend.getCommandEncoder();this.backend.endComputePass(),m.copyBufferToBuffer(b,0,y.gpuData.buffer,0,d),Je("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${r})`),this.buffersForUploadingPending.push(b)}memcpy(r,t){let s=this.storageCache.get(r);if(!s)throw new Error("source gpu data for memcpy does not exist");let l=this.storageCache.get(t);if(!l)throw new Error("destination gpu data for memcpy does not exist");if(s.originalSize!==l.originalSize)throw new Error("inconsistent source and destination gpu data size");let f=Ki(s.originalSize),d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(s.gpuData.buffer,0,l.gpuData.buffer,0,f)}registerExternalBuffer(r,t,s){let l;if(s){if(l=this.externalBuffers.get(s),l===void 0)throw new Error("previous buffer is not registered");if(r===s)return Je("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${l}, buffer is the same, skip.`),l;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(s)}else l=Hs();return this.storageCache.set(l,{gpuData:{id:l,type:0,buffer:r},originalSize:t}),this.externalBuffers.set(r,l),Je("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${l}, registered.`),l}unregisterExternalBuffer(r){let t=this.externalBuffers.get(r);t!==void 0&&(this.storageCache.delete(t),this.externalBuffers.delete(r),Je("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`))}create(r,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let s=Ki(r),l,f=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,d=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(f||d){let b=f?this.freeBuffers:this.freeUniformBuffers,C=b.get(s);C||(C=[],b.set(s,C)),C.length>0?l=C.pop():l=this.backend.device.createBuffer({size:s,usage:t})}else l=this.backend.device.createBuffer({size:s,usage:t});let y={id:Hs(),type:0,buffer:l};return this.storageCache.set(y.id,{gpuData:y,originalSize:r}),Je("verbose",()=>`[WebGPU] GpuDataManager.create(size=${r}) => id=${y.id}`),y}get(r){return this.storageCache.get(r)?.gpuData}release(r){let t=this.storageCache.get(r);if(!t)throw new Error("releasing data does not exist");return Je("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(r,t){let s=this.storageCache.get(r);if(!s)throw new Error("data does not exist");await Mo(this.backend,s.gpuData.buffer,s.originalSize,t)}refreshPendingBuffers(){for(let r of this.buffersForUploadingPending)r.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let r of this.buffersPending)(r.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(r.size).push(r):(r.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(r.size).push(r):r.destroy();this.buffersPending=[]}else{let r=this.capturedPendingBuffers.get(this.backend.currentSessionId);r||(r=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,r));for(let t of this.buffersPending)r.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(r){let t=this.capturedPendingBuffers.get(r);t&&(t.forEach(s=>{s.destroy()}),this.capturedPendingBuffers.delete(r))}},Fs=(...e)=>new Do(...e)});var zo,ze,ft=ue(()=>{"use strict";zo=class{constructor(r){Object.assign(this,r)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(r=>`${this[r]}`).join(";")),this.key}},ze=e=>new zo(e)});var Uo,Vt,ee,yr,Ji,Yi,Zi,Ue=ue(()=>{"use strict";Uo=class{static calcMatMulShape(r,t){return r[1]!==t[0]?void 0:[r[0],t[1]]}},Vt=class{static calcShape(r,t,s=!1){let l=r.length,f=t.length;if(l===0)return t;if(f===0)return r;let d=Math.max(r.length,t.length),y=new Array(d);if(s){if(l<2||f<2)return;let b=Uo.calcMatMulShape([r[l-2],r[l-1]],[t[f-2],t[f-1]]);if(b===void 0)return;[y[d-2],y[d-1]]=b}for(let b=s?3:1;b<=d;b++){let C=l-b<0?1:r[l-b],m=f-b<0?1:t[f-b];if(C!==m&&C>1&&m>1)return;let x=Math.max(C,m);if(C&&m)y[d-b]=Math.max(C,m);else{if(x>1)return;y[d-b]=0}}return y}static isValidBroadcast(r,t){let s=r.length,l=t.length;if(s>l)return!1;for(let f=1;f<=s;f++)if(r[s-f]!==1&&r[s-f]!==t[l-f])return!1;return!0}},ee=class e{static size(r){return e.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let s=r.length;if(s===0)return[];let l=new Array(s),f=s-1;for(;f>=0;){if(r[f]%t===0){l[f]=r[f]/t;break}if(t%r[f]!==0)throw new Error("cannot convert shape");l[f]=1,t/=r[f],f--}for(f--;f>=0;f--)l[f]=r[f];return l}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return e.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return e.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,s){let l=1;for(let f=t;f<s;f++){if(r[f]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");l*=r[f]}return l}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let s=new Array(t);s[t-1]=1,s[t-2]=r[t-1];for(let l=t-3;l>=0;--l)s[l]=s[l+1]*r[l+1];return s}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(s=>this.normalizeAxis(s,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(s=>r[s]):r.slice().reverse()}static padShape(r,t){let s=r.length;return r.map((l,f)=>l+t[f]+t[f+s])}static areEqual(r,t){return r.length!==t.length?!1:r.every((s,l)=>s===t[l])}},yr=class e{static adjustPoolAttributes(r,t,s,l,f,d){if(!r&&s.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let y=0;y<t.length-2;y++)y>=s.length?s.push(t[y+2]):s[y]=t[y+2];for(let y=0;y<s.length;y++)if(y<l.length){if(l[y]<0)throw new Error("strides should be greater than or equal to 1")}else l.push(1);for(let y=0;y<s.length;y++)if(y<f.length){if(f[y]<0)throw new Error("dilations should be greater than or equal to 1")}else f.push(1);for(let y=0;y<s.length*2;y++)if(y<d.length){if(d[y]<0)throw new Error("pad should be greater than or equal to 1")}else d.push(0);for(let y=0;y<s.length;y++){if(s[y]<=0)throw new Error("kernel shapes need to be greater than 0");if(d[y]>=s[y]||d[y+s.length]>=s[y])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,s,l,f,d,y){if(y){if(f.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(l.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let b=0;b<r.length-2;b++)e.adjustPadAndReturnShape(r[b+(d?1:2)],t[b],s[b],l[b],f,b,b+r.length-2,y)}}static computePoolOutputShape(r,t,s,l,f,d,y){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let b=[t[0],t[1]];return e.computeShapeHelper(r,t,b,s,l,f,d,y),b}static computeConvOutputShape(r,t,s,l,f,d,y){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let b=[r[0],t[0]];return e.computeShapeHelper(!1,r,b,s,l,f,d,y),b}static computeShapeHelper(r,t,s,l,f,d,y,b){if(r)for(let C=0;C<t.length-2;C++)s.push(1);else for(let C=0;C<t.length-2;C++)s.push(e.adjustPadAndReturnShape(t[C+2],l[C],f[C],d[C],y,C,C+t.length-2,b))}static adjustPadAndReturnShape(r,t,s,l,f,d,y,b){let C=s*(l-1)+1;if(b&&b!=="NOTSET")switch(b){case"VALID":return f[d]=0,f[y]=0,Math.floor((r-C)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let x=((r+t-1)/t-1)*t+l-r;return f[d]=Math.floor(b==="SAME_LOWER"?(x+1)/2:x/2),f[y]=x-f[d],Math.floor((r+x-l)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+f[d]+f[y]-C)/t+1)}},Ji=class{static getShapeOfGemmResult(r,t,s,l,f){if(r.length!==2||s.length!==2)throw new Error("shape need to be of size 2");let d,y,b;t?(d=r[1],y=r[0]):(d=r[0],y=r[1]);let C=-1;if(l?(b=s[0],C=1):(b=s[1],C=0),s[C]!==y)throw new Error("dimension mismatch");if(d<=0||b<=0||y<=0)throw new Error("invalid shape specified");if(f&&!Vt.isValidBroadcast(f,[d,b]))throw new Error("gemm: invalid bias shape for broadcast");return[d,b,y]}},Yi=-34028234663852886e22,Zi=34028234663852886e22});var Xi,Vo,He,_t,le,Ye,pt,Bt,$t,$e,No,Q,oe,Qi,jo,Ks,Lr,Me=ue(()=>{"use strict";xe();Ue();Xi=64,Vo=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},He=(e,r=1)=>{let t=Vo(e,r);return typeof t=="string"?t:t[0]},_t=(e,r=1)=>{let t=Vo(e,r);return typeof t=="string"?t:t[1]},le=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:ee.computeStrides(t)})}),r},Ye=e=>e%4===0?4:e%2===0?2:1,pt=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,Bt=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}f(${t})`,$t=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,$e=(e,r,t,s)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?s==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:s==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,No=(e,r,t,s,l)=>{let f=typeof t=="number",d=f?t:t.length,y=[...new Array(d).keys()],b=d<2?"u32":d<=4?`vec${d}<u32>`:`array<u32, ${d}>`,C=Vo(r,l),m=typeof C=="string"?C:C[1],x=typeof C=="string"?C:C[0],P={indices:b,value:m,storage:x,tensor:r},R=ie=>typeof ie=="string"?ie:`${ie}u`,E={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},k=f?"uniforms.":"",U=`${k}${e}_shape`,j=`${k}${e}_strides`,B="";for(let ie=0;ie<d-1;ie++)B+=`\n    let dim${ie} = current / ${$e(j,ie,d)};\n    let rest${ie} = current % ${$e(j,ie,d)};\n    indices[${ie}] = dim${ie};\n    current = rest${ie};\n    `;B+=`indices[${d-1}] = current;`;let V=d<2?"":`\n  fn o2i_${e}(offset: u32) -> ${P.indices} {\n    var indices: ${P.indices};\n    var current = offset;\n    ${B}\n    return indices;\n  }`,N=ie=>(E.offsetToIndices=!0,d<2?ie:`o2i_${e}(${ie})`),J=[];if(d>=2)for(let ie=d-1;ie>=0;ie--)J.push(`${$e(j,ie,d)} * (indices[${ie}])`);let Y=d<2?"":`\n  fn i2o_${e}(indices: ${P.indices}) -> u32 {\n    return ${J.join("+")};\n  }`,te=ie=>(E.indicesToOffset=!0,d<2?ie:`i2o_${e}(${ie})`),q=(...ie)=>d===0?"0u":`${P.indices}(${ie.map(R).join(",")})`,se=(ie,ve)=>d<2?`${ie}`:`${$e(ie,ve,d)}`,de=(ie,ve,Ee)=>d<2?`${ie}=${Ee};`:`${$e(ie,ve,d)}=${Ee};`,ke={},Ve=(ie,ve)=>{E.broadcastedIndicesToOffset=!0;let Ee=`${ve.name}broadcastedIndicesTo${e}Offset`;if(Ee in ke)return`${Ee}(${ie})`;let Ct=[];for(let nt=d-1;nt>=0;nt--){let it=ve.indicesGet("outputIndices",nt+ve.rank-d);Ct.push(`${se(j,nt)} * (${it} % ${se(U,nt)})`)}return ke[Ee]=`fn ${Ee}(outputIndices: ${ve.type.indices}) -> u32 {\n             return ${Ct.length>0?Ct.join("+"):"0u"};\n           }`,`${Ee}(${ie})`},Fe=(ie,ve)=>(()=>{if(P.storage===P.value)return`${e}[${ie}]=${ve};`;if(P.storage==="vec2<u32>"&&P.value==="i32")return`${e}[${ie}]=vec2<u32>(u32(${ve}), select(0u, 0xFFFFFFFFu, ${ve} < 0));`;if(P.storage==="vec2<u32>"&&P.value==="u32")return`${e}[${ie}]=vec2<u32>(u32(${ve}), 0u);`;if(P.storage==="u32"&&P.value==="vec4<bool>")return`${e}[${ie}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ve}));`;throw new Error(`not supported combination of storage type ${P.storage} and value type ${P.value} yet`)})(),Ae=ie=>(()=>{if(P.storage===P.value)return`${e}[${ie}]`;if(P.storage==="vec2<u32>"&&P.value==="i32")return`i32(${e}[${ie}].x)`;if(P.storage==="vec2<u32>"&&P.value==="u32")return`u32(${e}[${ie}].x)`;if(P.storage==="u32"&&P.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${ie}] & 0xFFu), bool(${e}[${ie}] & 0xFF00u), bool(${e}[${ie}] & 0xFF0000u), bool(${e}[${ie}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${P.storage} and value type ${P.value} yet`)})(),Te=d<2?"":`\n  fn get_${e}ByIndices(indices: ${P.indices}) -> ${m} {\n    return ${Ae(`i2o_${e}(indices)`)};\n  }`,ge=d<2?"":(()=>{let ie=y.map(Ee=>`d${Ee}: u32`).join(", "),ve=y.map(Ee=>`d${Ee}`).join(", ");return`\n  fn get_${e}(${ie}) -> ${m} {\n    return get_${e}ByIndices(${q(ve)});\n  }`})(),je=(...ie)=>{if(ie.length!==d)throw new Error(`indices length must be ${d}`);let ve=ie.map(R).join(",");return d===0?Ae("0u"):d===1?Ae(ve[0]):(E.get=!0,E.getByIndices=!0,E.indicesToOffset=!0,`get_${e}(${ve})`)},Pe=ie=>d<2?Ae(ie):(E.getByIndices=!0,E.indicesToOffset=!0,`get_${e}ByIndices(${ie})`),be=d<2?"":`\n  fn set_${e}ByIndices(indices: ${P.indices}, value: ${m}) {\n    ${Fe(`i2o_${e}(indices)`,"value")}\n  }`,Re=d<2?"":(()=>{let ie=y.map(Ee=>`d${Ee}: u32`).join(", "),ve=y.map(Ee=>`d${Ee}`).join(", ");return`\n  fn set_${e}(${ie}, value: ${m}) {\n    set_${e}ByIndices(${q(ve)}, value);\n  }`})();return{impl:()=>{let ie=[],ve=!1;return E.offsetToIndices&&(ie.push(V),ve=!0),E.indicesToOffset&&(ie.push(Y),ve=!0),E.broadcastedIndicesToOffset&&(Object.values(ke).forEach(Ee=>ie.push(Ee)),ve=!0),E.set&&(ie.push(Re),ve=!0),E.setByIndices&&(ie.push(be),ve=!0),E.get&&(ie.push(ge),ve=!0),E.getByIndices&&(ie.push(Te),ve=!0),!f&&ve&&ie.unshift(`const ${U} = ${P.indices}(${t.join(",")});`,`const ${j} = ${P.indices}(${ee.computeStrides(t).join(",")});`),ie.join(`\n`)},type:P,offsetToIndices:N,indicesToOffset:te,broadcastedIndicesToOffset:Ve,indices:q,indicesGet:se,indicesSet:de,set:(...ie)=>{if(ie.length!==d+1)throw new Error(`indices length must be ${d}`);let ve=ie[d];if(typeof ve!="string")throw new Error("value must be string");let Ee=ie.slice(0,d).map(R).join(",");return d===0?Fe("0u",ve):d===1?Fe(Ee[0],ve):(E.set=!0,E.setByIndices=!0,E.indicesToOffset=!0,`set_${e}(${Ee}, ${ve})`)},setByOffset:Fe,setByIndices:(ie,ve)=>d<2?Fe(ie,ve):(E.setByIndices=!0,E.indicesToOffset=!0,`set_${e}ByIndices(${ie}, ${ve});`),get:je,getByOffset:Ae,getByIndices:Pe,usage:s,name:e,strides:j,shape:U,rank:d}},Q=(e,r,t,s=1)=>No(e,r,t,"input",s),oe=(e,r,t,s=1)=>No(e,r,t,"output",s),Qi=(e,r,t,s=1)=>No(e,r,t,"internal",s),jo=class{constructor(r){this.normalizedDispatchGroup=r;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(r){return`if (global_idx >= ${typeof r=="number"?`${r}u`:r}) { return; }`}mainStart(r=Xi){let t=typeof r=="number"?r:r[0],s=typeof r=="number"?1:r[1],l=typeof r=="number"?1:r[2],f=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,d=f?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,y=f?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${t*s*l}u + local_idx;`;return`@compute @workgroup_size(${t}, ${s}, ${l})\n  fn main(${d}) {\n    ${y}\n  `}appendVariableUniforms(r){r.rank!==0&&(r.shape.startsWith("uniforms.")&&this.uniforms.push({name:r.shape.replace("uniforms.",""),type:"u32",length:r.rank}),r.strides.startsWith("uniforms.")&&this.uniforms.push({name:r.strides.replace("uniforms.",""),type:"u32",length:r.rank}))}declareVariable(r,t){if(r.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(r),this.appendVariableUniforms(r);let s=r.usage==="input"?"read":"read_write",l=r.type.storage;return`@group(0) @binding(${t}) var<storage, ${s}> ${r.name}: array<${l}>;`}declareVariables(...r){return r.map(t=>this.declareVariable(t,this.variableIndex++)).join(`\n`)}registerInternalVariable(r){if(r.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(r),this.appendVariableUniforms(r)}registerInternalVariables(...r){return r.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(r,t,s=1){return this.uniforms.push({name:r,type:t,length:s}),this}registerUniforms(r){return this.uniforms=this.uniforms.concat(r),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let r=[];for(let{name:t,type:s,length:l}of this.uniforms)if(l&&l>4)s==="f16"?r.push(`@align(16) ${t}:array<mat2x4<${s}>, ${Math.ceil(l/8)}>`):r.push(`${t}:array<vec4<${s}>, ${Math.ceil(l/4)}>`);else{let f=l==null||l===1?s:`vec${l}<${s}>`;r.push(`${t}:${f}`)}return`\n      struct Uniforms { ${r.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(r=>r.impl()).join(`\n`)+this.internalVariables.map(r=>r.impl()).join(`\n`)}},Ks=e=>new jo(e),Lr=(e,r)=>{let t=e.length,s=[];for(let l=0;l<t;l++){let f=t-1-l,d=e[f]||1;(r[r.length-1-l]||1)>1&&d===1&&s.unshift(f)}return s}});var Qm,Js,eh,th,Ot,Ys,Zs,Fr=ue(()=>{"use strict";xe();Ue();ft();Me();Qm=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Js=(e,r)=>r&&r.length!==e?[...new Array(e).keys()].reverse():r,eh=(e,r)=>ee.sortBasedOnPerm(e,Js(e.length,r)),th=(e,r,t,s)=>{let l=[];l.push(`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {\n    var a: ${t.type.indices};`);for(let f=0;f<r;++f)l.push(t.indicesSet("a",e[f],`i[${f}]`));return l.push("return a;}"),l.join(`\n`)},Ot=(e,r)=>{let t=e.dataType,s=e.dims.length,l=Js(s,r),f=eh(e.dims,l),d=oe("output",t,f.length),y=Q("a",t,s),b=C=>`\n  ${C.registerUniform("output_size","u32").declareVariables(y,d)}\n\n  ${th(l,s,y,d)}\n\n  ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${d.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${d.setByOffset("global_idx",y.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:C=>{let m=ee.size(f);return{outputs:[{dims:f,dataType:C[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},...le(C[0].dims,f)]}},getShaderSource:b}},Ys=(e,r)=>{Qm(e.inputs),e.compute(Ot(e.inputs[0],r.perm))},Zs=e=>ze({perm:e.perm})});var rh,nh,ih,oh,ah,sh,uh,lh,dh,ch,Nt,Xs,Qs,eu,tu,ru,nu,iu,ou,au,su,uu=ue(()=>{"use strict";xe();Ue();Me();eo();Fr();rh={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},nh={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},ih={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},oh={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},ah=(e,r)=>{let t=[];for(let s=r-e;s<r;++s)t.push(s);return t},sh=(e,r)=>{let t=[],s=e.length;for(let f=0;f<s;f++)r.indexOf(f)===-1&&t.push(e[f]);let l=r.map(f=>e[f]);return[t,l]},uh=(e,r)=>{let t=e.length+r.length,s=[],l=0;for(let f=0;f<t;f++)r.indexOf(f)===-1?s.push(e[l++]):s.push(1);return s},lh=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},dh=(e,r)=>{let t=[];if(!lh(e,r)){for(let s=0;s<r;++s)e.indexOf(s)===-1&&t.push(s);e.forEach(s=>t.push(s))}return t},ch=(e,r,t,s,l,f,d)=>{let y=t[0].dims,b=ee.size(f),C=ee.size(d),m=Q("_A",t[0].dataType,y),x=oe("output",l,f),P=32,R=`\n          var<workgroup> aBestValues : array<${x.type.storage}, ${P}>;\n       `;return{name:e,shaderCache:r,getShaderSource:k=>`\n        ${k.registerUniform("reduceSize","u32").declareVariables(m,x)}\n        ${R}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${k.mainStart(P)}\n\n          let outputIndex = global_idx / ${P};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = ${x.type.storage}(${ih[s]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${P}) {\n           let candidate = ${x.type.storage}(${m.getByOffset("offset + k")});\n           bestValue = ${rh[s]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${P}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${nh[s]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${x.setByOffset("outputIndex",`${s==="mean"?`bestValue / ${x.type.storage}(uniforms.reduceSize)`:`${oh[s]}`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:f,dataType:l}],dispatchGroup:{x:b},programUniforms:[{type:12,data:C}]})}},Nt=(e,r,t,s)=>{let l=e.inputs.length===1?t:Wo(e.inputs,t),f=l.axes;f.length===0&&!l.noopWithEmptyAxes&&(f=e.inputs[0].dims.map((R,E)=>E));let d=ee.normalizeAxes(f,e.inputs[0].dims.length),y=d,b=e.inputs[0],C=dh(y,e.inputs[0].dims.length);C.length>0&&(b=e.compute(Ot(e.inputs[0],C),{inputs:[0],outputs:[-1]})[0],y=ah(y.length,b.dims.length));let[m,x]=sh(b.dims,y),P=m;l.keepDims&&(P=uh(m,d)),e.compute(ch(r,{hint:l.cacheKey,inputDependencies:["type"]},[b],s,e.inputs[0].dataType,P,x),{inputs:[b]})},Xs=(e,r)=>{Nt(e,"ReduceMeanShared",r,"mean")},Qs=(e,r)=>{Nt(e,"ReduceL1Shared",r,"l1")},eu=(e,r)=>{Nt(e,"ReduceL2Shared",r,"l2")},tu=(e,r)=>{Nt(e,"ReduceLogSumExpShared",r,"logSumExp")},ru=(e,r)=>{Nt(e,"ReduceMaxShared",r,"max")},nu=(e,r)=>{Nt(e,"ReduceMinShared",r,"min")},iu=(e,r)=>{Nt(e,"ReduceProdShared",r,"prod")},ou=(e,r)=>{Nt(e,"ReduceSumShared",r,"sum")},au=(e,r)=>{Nt(e,"ReduceSumSquareShared",r,"sumSquare")},su=(e,r)=>{Nt(e,"ReduceLogSumShared",r,"logSum")}});var Wt,fh,to,Wo,Gt,ph,mh,hh,gh,yh,bh,vh,wh,_h,$h,Ht,lu,du,cu,fu,pu,mu,hu,gu,yu,bu,eo=ue(()=>{"use strict";xe();Ue();ft();Me();uu();Wt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},fh=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],to=(e,r,t,s,l,f,d=!1,y=!1)=>{let b=[],C=t[0].dims,m=C.length,x=ee.normalizeAxes(l,m),P=!y&&x.length===0;C.forEach((U,j)=>{P||x.indexOf(j)>=0?d&&b.push(1):b.push(U)});let R=b.length,E=ee.size(b);return{name:e,shaderCache:r,getShaderSource:U=>{let j=[],B=Q("_A",t[0].dataType,m),V=oe("output",f,R),N=s(B,V,x),J=N[2];for(let Y=0,te=0;Y<m;Y++)P||x.indexOf(Y)>=0?(d&&te++,J=`for(var j${Y}: u32 = 0; j${Y} < ${C[Y]}; j${Y}++) {\n                  ${N[2].includes("last_index")?`let last_index = j${Y};`:""}\n                  ${B.indicesSet("input_indices",Y,`j${Y}`)}\n                  ${J}\n                }`):(j.push(`${B.indicesSet("input_indices",Y,V.indicesGet("output_indices",te))};`),te++);return`\n\n        ${U.registerUniform("output_size","u32").declareVariables(B,V)}\n\n        ${U.mainStart()}\n          ${U.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${B.type.indices};\n          let output_indices = ${V.offsetToIndices("global_idx")};\n\n          ${j.join(`\n`)}\n          ${N[0]}       // init ops for reduce max/min\n          ${N[1]}\n          ${J}\n          ${N[3]}\n          ${N.length===4?V.setByOffset("global_idx","value"):N.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:b,dataType:f}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},...le(C,b)]})}},Wo=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),ze({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},Gt=(e,r,t,s)=>{let l=e.inputs,f=l.length===1?t:Wo(l,t);e.compute(to(r,{hint:f.cacheKey,inputDependencies:["rank"]},[l[0]],f.noopWithEmptyAxes&&f.axes.length===0?fh:s,f.axes,l[0].dataType,f.keepDims,f.noopWithEmptyAxes),{inputs:[0]})},ph=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceLogSum",r,(s,l)=>[`var value = ${l.type.storage}(0);`,"",`value += ${s.getByIndices("input_indices")};`,"value = log(value);"])},mh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceL1",r,(s,l)=>[`var value = ${l.type.storage}(0);`,"",`value += abs(${s.getByIndices("input_indices")});`,""])},hh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceL2",r,(s,l)=>[`var t = ${l.type.value}(0); var value = ${l.type.value}(0);`,"",`t = ${s.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},gh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceLogSumExp",r,(s,l)=>[`var value = ${l.type.storage}(0);`,"",`value += exp(${s.getByIndices("input_indices")});`,"value = log(value);"])},yh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceMax",r,(s,l,f)=>{let d=[];for(let y=0;y<s.rank;y++)(f.indexOf(y)>=0||f.length===0)&&d.push(s.indicesSet("input_indices",y,0));return[`${d.join(`\n`)}`,`var value = ${s.getByIndices("input_indices")};`,`value = max(value, ${s.getByIndices("input_indices")});`,""]})},bh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceMean",r,(s,l,f)=>{let d=1;for(let y=0;y<s.rank;y++)(f.indexOf(y)>=0||f.length===0)&&(d*=e.inputs[0].dims[y]);return["var sum = f32(0);","",`sum += f32(${s.getByIndices("input_indices")});`,`let value = ${l.type.value}(sum / ${d});`]})},vh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceMin",r,(s,l,f)=>{let d=[];for(let y=0;y<s.rank;y++)(f.indexOf(y)>=0||f.length===0)&&d.push(`input_indices[${y}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${s.getByIndices("input_indices")};`,`value = min(value, ${s.getByIndices("input_indices")});`,""]})},wh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceProd",r,(s,l)=>[`var value = ${l.type.storage}(1);`,"",`value *= ${s.getByIndices("input_indices")};`,""])},_h=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceSum",r,(s,l)=>[`var value = ${l.type.storage}(0);`,"",`value += ${s.getByIndices("input_indices")};`,""])},$h=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceSumSquare",r,(s,l)=>[`var t = ${l.type.value}(0); var value = ${l.type.value}(0);`,"",`t = ${s.getByIndices("input_indices")}; value += t * t;`,""])},Ht=(e,r,t)=>{if(r.length===0)return t;let s=1,l=1;for(let f=0;f<r.length;f++)r.indexOf(f)===-1?s*=e[f]:l*=e[f];return l<32&&s>1024},lu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?bh(e,r):Xs(e,r)},du=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?mh(e,r):Qs(e,r)},cu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?hh(e,r):eu(e,r)},fu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?gh(e,r):tu(e,r)},pu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?yh(e,r):ru(e,r)},mu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?vh(e,r):nu(e,r)},hu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?wh(e,r):iu(e,r)},gu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?_h(e,r):ou(e,r)},yu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?$h(e,r):au(e,r)},bu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?ph(e,r):su(e,r)}});var vu,wu,_u,Go,$u=ue(()=>{"use strict";xe();ft();eo();vu=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},wu=(e,r)=>{vu(e.inputs);let t=(s,l,f)=>{let d=[];for(let y=0;y<s.rank;y++)(f.indexOf(y)>=0||f.length===0)&&d.push(`input_indices[${y}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${s.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {\n         value = ${s.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",l.setByOffset("global_idx","best_index")]};e.compute(to("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},_u=(e,r)=>{vu(e.inputs);let t=(s,l,f)=>{let d=[];for(let y=0;y<s.rank;y++)(f.indexOf(y)>=0||f.length===0)&&d.push(`input_indices[${y}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${s.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {\n         value = ${s.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",l.setByOffset("global_idx","best_index")]};e.compute(to("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Go=e=>ze(e)});var Ch,Sh,xh,Ah,ro,Ih,Cu,Ho=ue(()=>{"use strict";xe();qi();Me();Ch=(e,r)=>{let t=e[0],s=e[1],l=e[2],f=e[3],d=e[4],y=e[5];if(d&&y)throw new Error("Attention cannot have both past and relative_position_bias");if(t.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let b=t.dims[0],C=t.dims[1],m=t.dims[2];if(l.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(s.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(s.dims[0]!==m)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(l.dims[0]!==s.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let x=l.dims[0]/3,P=x,R=P;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let V of r.qkvHiddenSizes)if(V%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");x=r.qkvHiddenSizes[0],P=r.qkvHiddenSizes[1],R=r.qkvHiddenSizes[2]}let E=C;if(x!==P)throw new Error("qkv_hidden_sizes first element should be same as the second");if(l.dims[0]!==x+P+R)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let k=0;if(d){if(P!==R)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(d.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(d.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(d.dims[1]!==b)throw new Error(\'Input "past" second dimension must be batch_size\');if(d.dims[2]!==r.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(d.dims[4]!==P/r.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');r.pastPresentShareBuffer||(k=d.dims[3])}let U=E+k,j=-1,B=0;if(f)throw new Error("Mask not supported");if(d)throw new Error("past is not supported");if(y)throw new Error("relativePositionBias is not supported");return{batchSize:b,sequenceLength:C,pastSequenceLength:k,kvSequenceLength:E,totalSequenceLength:U,maxSequenceLength:j,inputHiddenSize:m,hiddenSize:x,vHiddenSize:R,headSize:Math.floor(x/r.numHeads),vHeadSize:Math.floor(R/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:B,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Sh=(e,r,t,s)=>{let l=Ye(s),f=64,d=s/l;d<f?f=1:d/8<64&&(f=Math.ceil(d/8));let y=Math.ceil(s/l/f),b=[{type:r.dataType,data:1/s},{type:12,data:d},{type:12,data:y}],C=He(r.dataType,l),m=x=>{let P=oe("x",r.dataType,r.dims,l),R="thread_max_vector";l===2?R="max(thread_max_vector.x, thread_max_vector.y)":l===4&&(R="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let E=_t(r.dataType),k=[{name:"d_inv",type:E},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${f}>;\n  var<workgroup> wgSum: array<f32, ${f}>;\n  ${x.registerUniforms(k).declareVariables(P)}\n  ${x.mainStart([f,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${pt("f32",l,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${Bt(E,l,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${R};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${f}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${pt("f32",l,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${Bt(E,l,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${$t("sumVector",l)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${f}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${pt(E,l,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${Bt(E,l,"x[offset + i]")};\n        x[offset + i] = ${P.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${f};${C};${l}`},getShaderSource:m,getRunData:()=>({outputs:[],dispatchGroup:{x:t},programUniforms:b})},{inputs:[r],outputs:[]})},xh=(e,r,t,s,l,f)=>{let d=[l.batchSize,l.numHeads,l.sequenceLength,l.kvSequenceLength+l.pastSequenceLength],y=f.scale===0?1/Math.sqrt(l.headSize):f.scale,b=Ye(l.headSize),C=l.headSize/b,m=12,x={x:Math.ceil(l.totalSequenceLength/m),y:Math.ceil(l.sequenceLength/m),z:l.batchSize*l.numHeads},P=[{type:12,data:l.sequenceLength},{type:12,data:C},{type:12,data:l.totalSequenceLength},{type:12,data:l.kvSequenceLength},{type:r.dataType,data:y}],R=[r,t],E=U=>{let j=Q("q",r.dataType,r.dims,b),B=Q("key",t.dataType,t.dims,b),V=oe("output",r.dataType,d),N=He(r.dataType),J=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:N}];return`\n  const beta: ${N} = 1.0;\n  const TILE_SIZE = ${m}u;\n\n  var<workgroup> tileQ: array<${j.type.storage}, ${m*m}>;\n  var<workgroup> tileK: array<${j.type.storage}, ${m*m}>;\n  ${U.registerUniforms(J).declareVariables(j,B,V)}\n  ${U.mainStart([m,m,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${pt(N,b)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${$t("value",b)} * uniforms.alpha;\n    }\n  }`},k=e.compute({name:"AttentionProbs",shaderCache:{hint:`${b}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:d,dataType:r.dataType,gpuDataType:0}],dispatchGroup:x,programUniforms:P}),getShaderSource:E},{inputs:R,outputs:[-1]})[0];return Sh(e,k,l.batchSize*l.numHeads*l.sequenceLength,l.totalSequenceLength),k},Ah=(e,r,t,s)=>{let l=[s.batchSize,s.sequenceLength,s.vHiddenSize],f=12,d={x:Math.ceil(s.vHeadSize/f),y:Math.ceil(s.sequenceLength/f),z:s.batchSize*s.numHeads},y=[{type:12,data:s.sequenceLength},{type:12,data:s.totalSequenceLength},{type:12,data:s.vHeadSize},{type:12,data:s.numHeads},{type:12,data:s.vHiddenSize}],b=C=>{let m=Q("probs",r.dataType,r.dims),x=Q("v",t.dataType,t.dims),P=oe("output",r.dataType,l),R=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${f}u;\n  var<workgroup> tileQ: array<${m.type.value}, ${f*f}>;\n  var<workgroup> tileK: array<${m.type.value}, ${f*f}>;\n  ${C.registerUniforms(R).declareVariables(m,x,P)}\n  ${C.mainStart([f,f,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${m.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:l,dataType:r.dataType,gpuDataType:0}],dispatchGroup:d,programUniforms:y}),getShaderSource:b},{inputs:[r,t],outputs:[0]})[0]},ro=(e,r,t,s,l,f,d,y,b,C,m)=>{let x=xh(e,r,t,b,C,m);Ah(e,x,s,C)},Ih=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],s=r.sequenceLength,l=r.inputHiddenSize,f=r.headSize,d=12,y={x:Math.ceil(r.headSize/d),y:Math.ceil(r.sequenceLength/d),z:r.batchSize*r.numHeads},b=[e.inputs[0],e.inputs[1],e.inputs[2]],C=[{type:12,data:s},{type:12,data:l},{type:12,data:f},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],m=x=>{let P=oe("output_q",b[0].dataType,t),R=oe("output_k",b[0].dataType,t),E=oe("output_v",b[0].dataType,t),k=Q("input",b[0].dataType,b[0].dims),U=Q("weight",b[1].dataType,b[1].dims),j=Q("bias",b[2].dataType,b[2].dims),B=k.type.storage,V=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${d}u;\n  var<workgroup> tileInput: array<${B}, ${d*d}>;\n  var<workgroup> tileWeightQ: array<${B}, ${d*d}>;\n  var<workgroup> tileWeightK: array<${B}, ${d*d}>;\n  var<workgroup> tileWeightV: array<${B}, ${d*d}>;\n  ${x.registerUniforms(V).declareVariables(k,U,j,P,R,E)}\n  ${x.mainStart([d,d,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${B}(0);\n    var valueK = ${B}(0);\n    var valueV = ${B}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:y,programUniforms:C}),getShaderSource:m},{inputs:b,outputs:[-1,-1,-1]})},Cu=(e,r)=>{let t=Ch(e.inputs,r),[s,l,f]=Ih(e,t);return ro(e,s,l,f,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t,r)}});var Th,Eh,Ph,Su,xu=ue(()=>{"use strict";Hr();xe();Ue();ft();Me();Th=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(s,l,f)=>{let d=l.length;if(d!==s.length)throw new Error(`${f}: num dimensions != ${d}`);l.forEach((y,b)=>{if(y!==s[b])throw new Error(`${f}: dim[${b}] do not match`)})};if(e[0].dims.length>1){let s=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,s,"Invalid input scale"),t(e[2].dims,s,"Invalid input B"),t(e[3].dims,s,"Invalid input mean"),t(e[4].dims,s,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},Eh=(e,r)=>{let{epsilon:t,spatial:s,format:l}=r,f=e[0].dims,d=s?Ye(f[f.length-1]):1,y=l==="NHWC"&&f.length>1?d:1,b=ee.size(f)/d,C=s,m=C?f.length:f,x=Q("x",e[0].dataType,e[0].dims,d),P=Q("scale",e[1].dataType,e[1].dims,y),R=Q("bias",e[2].dataType,e[2].dims,y),E=Q("inputMean",e[3].dataType,e[3].dims,y),k=Q("inputVar",e[4].dataType,e[4].dims,y),U=oe("y",e[0].dataType,m,d),j=()=>{let V="";if(s)V=`let cOffset = ${f.length===1?"0u":l==="NHWC"?`outputIndices[${f.length-1}] / ${d}`:"outputIndices[1]"};`;else if(l==="NCHW")V=`\n            ${U.indicesSet("outputIndices","0","0")}\n            let cOffset = ${U.indicesToOffset("outputIndices")};`;else{V=`var cIndices = ${P.type.indices}(0);\n                       cIndices[0] = outputIndices[${f.length-1}];`;for(let N=1;N<P.rank;N++)V+=`cIndices[${N}] = outputIndices[${N}];`;V+=`let cOffset = ${P.indicesToOffset("cIndices")};`}return V},B=V=>`\n  const epsilon = ${t};\n  ${V.registerUniform("outputSize","u32").declareVariables(x,P,R,E,k,U)}\n  ${V.mainStart()}\n  ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${U.offsetToIndices(`global_idx * ${d}`)};\n    ${j()}\n    let scale = ${P.getByOffset("cOffset")};\n    let bias = ${R.getByOffset("cOffset")};\n    let inputMean = ${E.getByOffset("cOffset")};\n    let inputVar = ${k.getByOffset("cOffset")};\n    let x = ${x.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${U.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${s}_${d}`,inputDependencies:C?["rank","type","type","type","type"]:void 0},getShaderSource:B,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:C?[{type:12,data:b},...le(f)]:[{type:12,data:b}]})}},Ph=e=>ze(e),Su=(e,r)=>{let{inputs:t,outputCount:s}=e,l=Ph({...r,outputCount:s});if(Gr.webgpu.validateInputContent&&Th(t,l),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Eh(t,l))}});var Oh,kh,Au,Iu=ue(()=>{"use strict";Ue();Me();Oh=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},kh=e=>{let r=e[0].dims,t=e[0].dims[2],s=ee.size(r)/4,l=e[0].dataType,f=Q("input",l,r,4),d=Q("bias",l,[t],4),y=Q("residual",l,r,4),b=oe("output",l,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:m=>`\n  const channels = ${t}u / 4;\n  ${m.declareVariables(f,d,y,b)}\n\n  ${m.mainStart()}\n    ${m.guardAgainstOutOfBoundsWorkgroupSizes(s)}\n    let value = ${f.getByOffset("global_idx")}\n      + ${d.getByOffset("global_idx % channels")} + ${y.getByOffset("global_idx")};\n    ${b.setByOffset("global_idx","value")}\n  }`}},Au=e=>{Oh(e.inputs),e.compute(kh(e.inputs))}});var Rh,Ge,Tu,Eu,Pu,Ou,ku,Ru,Bu,Du,Mu,Bh,zu,Uu,ju,Vu,no,Nu,io,Wu,Gu,Hu,Lu,Fu,qu,Ku,Ju,Yu,Zu,Xu,Qu,el,tl,rl,nl,il,ol,Lo,Fo,al,sl,ul,oo=ue(()=>{"use strict";xe();Ue();ft();Me();Rh=(e,r,t,s,l,f)=>{let d=Math.ceil(r/4),y="";typeof l=="string"?y=`${l}(a)`:y=l("a");let b=Q("inputData",t,[d],4),C=oe("outputData",s,[d],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(b,C)}\n\n  ${f??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${b.getByOffset("global_idx")};\n    ${C.setByOffset("global_idx",y)}\n  }`},Ge=(e,r,t,s,l,f=e.dataType)=>({name:r,shaderCache:{hint:l,inputDependencies:["type"]},getShaderSource:d=>Rh(d,ee.size(e.dims),e.dataType,f,t,s),getRunData:d=>({outputs:[{dims:e.dims,dataType:f}],dispatchGroup:{x:Math.ceil(ee.size(d[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(ee.size(e.dims)/4)}]})}),Tu=e=>{e.compute(Ge(e.inputs[0],"Abs","abs"))},Eu=e=>{e.compute(Ge(e.inputs[0],"Acos","acos"))},Pu=e=>{e.compute(Ge(e.inputs[0],"Acosh","acosh"))},Ou=e=>{e.compute(Ge(e.inputs[0],"Asin","asin"))},ku=e=>{e.compute(Ge(e.inputs[0],"Asinh","asinh"))},Ru=e=>{e.compute(Ge(e.inputs[0],"Atan","atan"))},Bu=e=>{e.compute(Ge(e.inputs[0],"Atanh","atanh"))},Du=e=>ze(e),Mu=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${r.to}`)}e.compute(Ge(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},Bh=e=>{let r=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:Yi,t=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Zi;return ze({min:r,max:t})},zu=(e,r)=>{let t=e.inputs.length===1?r:Bh(e.inputs),s=_t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"Clip",l=>`clamp(${l}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${s}> = vec4(${s}(${t.min}));\n    const clip_max_: vec4<${s}> = vec4(${s}(${t.max}));\n`,t.cacheKey),{inputs:[0]})},Uu=e=>{e.compute(Ge(e.inputs[0],"Ceil","ceil"))},ju=e=>{e.compute(Ge(e.inputs[0],"Cos","cos"))},Vu=e=>{e.compute(Ge(e.inputs[0],"Cosh","cosh"))},no=e=>ze(e),Nu=(e,r)=>{let t=_t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`\n  const elu_alpha_ = ${t}(${r.alpha});\n\n  fn elu_f32(a: ${t}) -> ${t} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,r.cacheKey))},io=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,Wu=e=>{let r=_t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,io(r)))},Gu=e=>{e.compute(Ge(e.inputs[0],"Exp","exp"))},Hu=e=>{e.compute(Ge(e.inputs[0],"Floor","floor"))},Lu=e=>{let r=_t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,io(r)))},Fu=(e,r)=>{let t=_t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},qu=e=>{e.compute(Ge(e.inputs[0],"Not",r=>`!${r}`))},Ku=e=>{e.compute(Ge(e.inputs[0],"Neg",r=>`-${r}`))},Ju=e=>{e.compute(Ge(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},Yu=e=>{let r=_t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},Zu=e=>{e.compute(Ge(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},Xu=e=>ze(e),Qu=(e,r)=>{let t=_t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"HardSigmoid",s=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${s} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},el=e=>{e.compute(Ge(e.inputs[0],"Sin","sin"))},tl=e=>{e.compute(Ge(e.inputs[0],"Sinh","sinh"))},rl=e=>{e.compute(Ge(e.inputs[0],"Sqrt","sqrt"))},nl=e=>{e.compute(Ge(e.inputs[0],"Tan","tan"))},il=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,ol=e=>{e.compute(Ge(e.inputs[0],"Tanh",il))},Lo=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${il("v")};\n}\n`,Fo=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,al=e=>{let r=_t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"FastGelu",Fo,Lo(r),void 0,e.inputs[0].dataType))},sl=(e,r)=>{let t=_t(e.inputs[0].dataType);return e.compute(Ge(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},ul=e=>{e.compute(Ge(e.inputs[0],"Log","log"))}});var Dh,Mh,dl,cl=ue(()=>{"use strict";Ue();Me();oo();Dh=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Mh=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=Q("input",e[0].dataType,e[0].dims,4),s=Q("bias",e[0].dataType,[e[0].dims[2]],4),l=oe("output",e[0].dataType,r,4),f=ee.size(r)/4,d=He(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)}}),getShaderSource:b=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${b.declareVariables(t,s,l)}\n\n  ${io(d)}\n\n  ${b.mainStart()}\n    ${b.guardAgainstOutOfBoundsWorkgroupSizes(f)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${l.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},dl=e=>{Dh(e.inputs),e.compute(Mh(e.inputs))}});var zh,Uh,Lt,fl,pl,ml,hl,gl,yl,bl,vl,wl,_l,$l=ue(()=>{"use strict";xe();Ue();Me();zh=(e,r,t,s,l,f,d,y,b,C,m,x)=>{let P,R;typeof y=="string"?P=R=(B,V)=>`${y}((${B}),(${V}))`:typeof y=="function"?P=R=y:(P=y.scalar,R=y.vector);let E=oe("outputData",m,s.length,4),k=Q("aData",b,r.length,4),U=Q("bData",C,t.length,4),j;if(l)if(f){let B=ee.size(r)===1,V=ee.size(t)===1,N=r.length>0&&r[r.length-1]%4===0,J=t.length>0&&t[t.length-1]%4===0;B||V?j=E.setByOffset("global_idx",R(B?`${k.type.value}(${k.getByOffset("0")}.x)`:k.getByOffset("global_idx"),V?`${U.type.value}(${U.getByOffset("0")}.x)`:U.getByOffset("global_idx"))):j=`\n            let outputIndices = ${E.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${k.broadcastedIndicesToOffset("outputIndices",E)};\n            let offsetB = ${U.broadcastedIndicesToOffset("outputIndices",E)};\n            ${E.setByOffset("global_idx",R(d||N?k.getByOffset("offsetA / 4u"):`${k.type.value}(${k.getByOffset("offsetA / 4u")}[offsetA % 4u])`,d||J?U.getByOffset("offsetB / 4u"):`${U.type.value}(${U.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else j=E.setByOffset("global_idx",R(k.getByOffset("global_idx"),U.getByOffset("global_idx")));else{if(!f)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let B=(V,N,J="")=>{let Y=`aData[indexA${N}][componentA${N}]`,te=`bData[indexB${N}][componentB${N}]`;return`\n            let outputIndices${N} = ${E.offsetToIndices(`global_idx * 4u + ${N}u`)};\n            let offsetA${N} = ${k.broadcastedIndicesToOffset(`outputIndices${N}`,E)};\n            let offsetB${N} = ${U.broadcastedIndicesToOffset(`outputIndices${N}`,E)};\n            let indexA${N} = offsetA${N} / 4u;\n            let indexB${N} = offsetB${N} / 4u;\n            let componentA${N} = offsetA${N} % 4u;\n            let componentB${N} = offsetB${N} % 4u;\n            ${V}[${N}] = ${J}(${P(Y,te)});\n          `};m===9?j=`\n            var data = vec4<u32>(0);\n            ${B("data",0,"u32")}\n            ${B("data",1,"u32")}\n            ${B("data",2,"u32")}\n            ${B("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:j=`\n            ${B("outputData[global_idx]",0)}\n            ${B("outputData[global_idx]",1)}\n            ${B("outputData[global_idx]",2)}\n            ${B("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(k,U,E)}\n\n        ${x??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${j}\n      }`},Uh=(e,r,t,s,l,f,d=t.dataType)=>{let y=!ee.areEqual(t.dims,s.dims),b=t.dims,C=ee.size(t.dims),m=!1,x=!1,P=[y];if(y){let R=Vt.calcShape(t.dims,s.dims,!1);if(!R)throw new Error("Can\'t perform binary op on the given tensors");b=R,C=ee.size(b);let E=ee.size(t.dims)===1,k=ee.size(s.dims)===1,U=t.dims.length>0&&t.dims[t.dims.length-1]%4===0,j=s.dims.length>0&&s.dims[s.dims.length-1]%4===0;P.push(E),P.push(k),P.push(U),P.push(j);let B=1;for(let V=1;V<b.length;V++){let N=t.dims[t.dims.length-V]??1,J=s.dims[s.dims.length-V]??1;if(N===J)B*=N;else break}B%4===0?(x=!0,m=!0):(E||k||U||j)&&(m=!0)}else m=!0;return P.push(m),{name:e,shaderCache:{hint:r+P.map(R=>R.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:R=>zh(R,t.dims,s.dims,b,m,y,x,l,t.dataType,s.dataType,d,f),getRunData:()=>({outputs:[{dims:b,dataType:d}],dispatchGroup:{x:Math.ceil(C/64/4)},programUniforms:[{type:12,data:Math.ceil(ee.size(b)/4)},...le(t.dims,s.dims,b)]})}},Lt=(e,r,t,s,l,f)=>{e.compute(Uh(r,l??"",e.inputs[0],e.inputs[1],t,s,f))},fl=e=>{Lt(e,"Add",(r,t)=>`${r}+${t}`)},pl=e=>{Lt(e,"Div",(r,t)=>`${r}/${t}`)},ml=e=>{Lt(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},hl=e=>{Lt(e,"Mul",(r,t)=>`${r}*${t}`)},gl=e=>{let r=Q("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Lt(e,"Pow",{scalar:(s,l)=>`pow_custom(${s},${l})`,vector:(s,l)=>`pow_vector_custom(${s},${l})`},`\n    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {\n      if (b == ${r}(0.0)) {\n        return ${r}(1.0);\n      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {\n        return ${r}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {\n      // TODO: implement vectorized pow\n      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},yl=e=>{Lt(e,"Sub",(r,t)=>`${r}-${t}`)},bl=e=>{Lt(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},vl=e=>{Lt(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},wl=e=>{Lt(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},_l=e=>{Lt(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}});var Vh,Nh,Wh,Gh,Cl,Sl,xl=ue(()=>{"use strict";xe();Ue();ft();Me();Vh=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,s=e[t],l=s.dataType,f=s.dims.length;e.forEach((d,y)=>{if(y!==t){if(d.dataType!==l)throw new Error("input tensors should be one type");if(d.dims.length!==f)throw new Error("input tensors should have the same shape");d.dims.forEach((b,C)=>{if(C!==r&&b!==s.dims[C])throw new Error("non concat dimensions must match")})}})},Nh=(e,r)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${r});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Wh=(e,r)=>{let t=e.length,s=[];for(let l=0;l<t;++l){let f=r.setByOffset("global_idx",e[l].getByIndices("indices"));t===1?s.push(f):l===0?s.push(`if (inputIndex == ${l}u) { ${f} }`):l===t-1?s.push(`else { ${f} }`):s.push(`else if (inputIndex == ${l}) { ${f} }`)}return s.join(`\n`)},Gh=(e,r,t,s)=>{let l=ee.size(t),f=new Array(e.length),d=new Array(e.length),y=0,b=[],C=[],m=[{type:12,data:l}];for(let k=0;k<e.length;++k)y+=e[k].dims[r],f[k]=y,C.push(e[k].dims.length),d[k]=Q(`input${k}`,s,C[k]),b.push("rank"),m.push({type:12,data:f[k]});for(let k=0;k<e.length;++k)m.push(...le(e[k].dims));m.push(...le(t));let x=oe("output",s,t.length),P=x.indicesGet("indices",r),R=Array.from(Array(f.length).keys()).map(k=>`uniforms.sizeInConcatAxis${k}`).join(","),E=k=>`\n\n  ${(()=>{k.registerUniform("outputSize","u32");for(let U=0;U<e.length;U++)k.registerUniform(`sizeInConcatAxis${U}`,"u32");return k.declareVariables(...d,x)})()}\n\n  ${Nh(f.length,R)}\n\n  ${k.mainStart()}\n    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${x.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${P});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${f.length}u>(${R});\n      ${P} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Wh(d,x)}\n  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:b},getRunData:()=>({outputs:[{dims:t,dataType:s}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:m}),getShaderSource:E}},Cl=(e,r)=>{let t=e.inputs,s=t[0].dims,l=ee.normalizeAxis(r.axis,s.length);Vh(t,l);let f=s.slice();f[l]=t.reduce((y,b)=>y+(b.dims.length>l?b.dims[l]:0),0);let d=t.filter(y=>ee.size(y.dims)>0);e.compute(Gh(d,l,f,t[0].dataType),{inputs:d})},Sl=e=>ze({axis:e.axis})});var Dt,Mt,zt,ao,nr=ue(()=>{"use strict";xe();Ue();Dt=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Mt=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},zt=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},ao=e=>{let r=e?.activation||"";if(r==="HardSigmoid"){let[t,s]=e?.activation_params||[.2,.5];return{activation:r,alpha:t,beta:s}}else if(r==="Clip"){let[t,s]=e?.activation_params||[Yi,Zi];return{activation:r,clipMax:s,clipMin:t}}else if(r==="LeakyRelu"){let[t]=e?.activation_params||[.01];return{activation:r,alpha:t}}return{activation:r}}});var mt,so,uo=ue(()=>{"use strict";mt=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},so=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var lo,qo=ue(()=>{"use strict";lo=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var Hh,Lh,ei,Al,Fh,ti,qh,co,ri=ue(()=>{"use strict";xe();Ue();Me();nr();uo();Hh=(e,r)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${r?", batchIndices":""});\n        `,Lh=(e,r)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,ei=(e,r,t="f32",s,l=!1,f=32,d=!1,y=32)=>{let b=r[1]*e[1],C=r[0]*e[0],m=l?b:f,x=l?f:b,P=m/r[0],R=f/r[1];if(!((l&&P===4&&e[1]===4||!l&&(P===3||P===4))&&m%r[0]===0&&f%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${l} is true, innerElementSize ${P} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${P} must be 3 or 4.\n  tileAWidth ${m} must be divisible by workgroupSize[0]${r[0]}. tileInner ${f} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${P}<${t}>, ${m/P}>, ${x}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${t}>, ${C/e[0]}>, ${f}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${P};\nconst tileInner = ${f};\n\n@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${d?"0":"i32(globalId.z)"};\n  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${b};\n\n  let num_tiles = ${d?`${Math.ceil(y/f)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${d?`i32(globalId.z) * ${y}`:"0"};\n\n  var acc: array<vec4<${t}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${R};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Hh(l,s)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${R}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${P===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Lh(l,P)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Al=(e,r)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${r?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${r?", batchIndices":""});\n            `,Fh=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ti=(e,r,t="f32",s,l=!1,f=32,d=!1,y=32,b=!1)=>{let C=e[1]*r[1],m=e[0]*r[0],x=l?C:f,P=l?f:C;if(!(P%r[1]===0&&x%r[0]===0&&f%r[1]===0))throw new Error(`tileAHight ${P} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${x} must be divisible by workgroupSize[0]${r[0]}, tileInner ${f} must be divisible by workgroupSize[1]${r[1]}`);let R=P/r[1],E=x/r[0],k=f/r[1],U=b?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${C};\n    let globalColStart = i32(workgroupId.x) * ${m};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${P}; inputRow = inputRow + ${r[1]}) {\n        for (var inputCol = localCol; inputCol < ${x}; inputCol = inputCol + ${r[0]}) {\n          ${Al(l,s)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${f}; inputRow = inputRow + ${r[1]}) {\n            for (var inputCol = localCol; inputCol < ${m}; inputCol = inputCol + ${r[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${s?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${t}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${l?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${r[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${r[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${C};\n\nlet tileRowA = i32(localId.y) * ${R};\nlet tileColA = i32(localId.x) * ${E};\nlet tileRowB = i32(localId.y) * ${k};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${R}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${E}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Al(l,s)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${k}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${s?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${t}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${Fh(l)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${t}, ${x}>, ${P}>;\n  var<workgroup> mm_Bsub : array<array<${t}, ${m}>, ${f}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${f};\n\n@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${d?"0":"i32(globalId.z)"};\n    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${d?`${Math.ceil(y/f)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${d?`i32(globalId.z) * ${y}`:"0"};\n\n    var acc : array<array<${t}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${U}\n  }\n`},qh=(e,r,t,s,l,f=!1)=>{let[d,y,b]=l,[C,m,x,P]=s,R=Lr(d,b),E=Lr(y,b),k=He(s[0].type.tensor),U=()=>{let V=m.rank,N=C.rank,J=`var aIndices: ${m.type.indices};`;for(let Y=V-2-1,te=N-1;Y>=0;Y--,te--)J+=`\naIndices[${Y}] = ${N>1?`batchIndices[${te}]`:"batchIndices"};`;return R.forEach(Y=>{J+=`\naIndices[${Y}] = 0;`}),J+=`\naIndices[${V-2}] = u32(row);\n                   aIndices[${V-1}] = u32(colIn);`,J},j=()=>{let V=x.rank,N=C.rank,J=`var bIndices: ${x.type.indices};`;for(let Y=V-2-1,te=N-1;Y>=0;Y--,te--)J+=`\nbIndices[${Y}] = ${N>1?`batchIndices[${te}]`:"batchIndices"};`;return E.forEach(Y=>{J+=`\nbIndices[${Y}] = 0;`}),J+=`\nbIndices[${V-2}] = u32(row);\n                   bIndices[${V-1}] = u32(colIn);`,J};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${C.type.indices}) -> ${mt(e,k)} {\n      var value = ${mt(e,k)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${U()}\n        value = ${m.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${C.type.indices}) -> ${mt(e,k)} {\n      var value = ${mt(e,k)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${j()}\n        value = ${x.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${mt(e,k)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${r?`value = value + ${f?"bias[colIn]":`${mt(e,k)}(bias[row])`};`:""}\n        ${t}\n        ${P.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},co=(e,r,t,s,l=!1)=>{let f=e[0].dims,d=e[1].dims,y=f.slice(0,-2),b=d.slice(0,-2),C=s?s.slice(0,-2):t.slice(0,-2),m=ee.size(C),x=f[f.length-2],P=f[f.length-1],R=d[d.length-1],E=P%4===0&&R%4===0,k=x<=8?[4,1,1]:[4,4,1],U=[8,8,1],j=[Math.ceil(R/U[0]/k[0]),Math.ceil(x/U[1]/k[1]),Math.ceil(m/U[2]/k[2])],B=E?4:1,V=[...y,x,P/B],N=V.length,J=[...b,P,R/B],Y=J.length,te=[m,x,R/B],q=[{type:6,data:x},{type:6,data:R},{type:6,data:P}];Mt(r,q),q.push(...le(C,V,J));let se=["rank","rank"],de=e.length>2;de&&(q.push(...le(e[2].dims)),se.push("rank")),q.push(...le(te));let ke=Ve=>{let Fe=C.length,Ae=Qi("batchDims",e[0].dataType,Fe,1),Te=He(e[0].dataType),ge=Q("a",e[0].dataType,N,B),je=Q("b",e[1].dataType,Y,B),Pe=oe("result",e[0].dataType,te.length,B),be=[ge,je];if(de){let ie=l?B:1;be.push(Q("bias",e[2].dataType,e[2].dims.length,ie))}let Re=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];zt(r,Re);let Oe=He(Pe.type.tensor),We=Dt(r,Pe.type.value,Oe),st=qh(B,de,We,[Ae,ge,je,Pe],[y,b,C],l);return`\n  ${Ve.registerUniforms(Re).registerInternalVariables(Ae).declareVariables(...be,Pe)}\n  ${st}\n  ${E?ei(k,U,Te,Ae):ti(k,U,Te,Ae)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${k};${r.activation};${E};${l}`,inputDependencies:se},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:j[0],y:j[1],z:j[2]},programUniforms:q}),getShaderSource:ke}}});var Kh,Il,Tl=ue(()=>{"use strict";xe();rr();Me();nr();uo();qo();ri();Kh=(e,r,t,s,l=!1,f,d=4,y=4,b=4,C="f32")=>{let m=de=>{switch(de){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${C}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${de} is not supported.`)}},x=de=>{switch(de){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${de} is not supported.`)}},P=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,R=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,E=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",k=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",U=e?"row":"col",j=e?"col":"row",B=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${U} / outWidth;\n    let outCol = ${U} % outWidth;\n\n    let WRow = ${j} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${j} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${j} % inChannels;\n    var resData = ${mt(d,C)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${E} && xCol >= 0 && xCol < ${k}) {\n      ${P}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${m(d)}\n    }\n    return resData;`,V=e?r&&s?`\n    let col = colIn * ${d};\n    ${B}`:`\n    let col = colIn * ${d};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${B}\n    }\n    return ${mt(d,C)}(0.0);`:s&&t?`\n    let col = colIn * ${d};\n    ${B}`:`\n    let col = colIn * ${d};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${B}\n    }\n    return ${mt(d,C)}(0.0);`,N=`${x(y)}`,J=mt(b,C),Y=e?mt(d,C):mt(y,C),te=e?mt(y,C):mt(d,C),q=Dt(f,J,C);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Y} {\n      ${e?V:N}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${te} {\n      ${e?N:V}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${J}) {\n      let col = colIn * ${b};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${R}\n      ${so(l)}\n      ${q}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Il=(e,r,t,s,l,f,d,y)=>{let b=r.format==="NHWC",C=b?e[0].dims[3]:e[0].dims[1],m=t[0],x=b?t[2]:t[3],P=b?t[1]:t[2],R=b?t[3]:t[1],E=b&&(C%4===0||C%3===0)&&R%4===0,k=b?R:x*P,U=b?x*P:R,j=[8,8,1],B=s<=8?[4,1,1]:[4,4,1],V=[Math.ceil(k/j[0]/B[0]),Math.ceil(U/j[1]/B[1]),Math.ceil(m/j[2]/B[2])];Je("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${V}`);let N=E?b&&C%4!==0?3:4:1,J=j[1]*B[1],Y=j[0]*B[0],te=Math.max(j[0]*N,j[1]),q=s%J===0,se=l%Y===0,de=f%te===0,ke=E?[N,4,4]:[1,1,1],Ve=[{type:6,data:s},{type:6,data:l},{type:6,data:f},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];Mt(r,Ve),Ve.push(...le(e[0].dims,e[1].dims));let Fe=["rank","rank"];d&&(Ve.push(...le(e[2].dims)),Fe.push("rank")),Ve.push(...le(t));let Ae=Te=>{let ge=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];zt(r,ge);let je=E?4:1,Pe=He(e[0].dataType),be=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${E?`vec4<${Pe}>`:Pe}) {\n        result[flatIndex] = ${E?`vec4<${Pe}>`:Pe}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${E?`vec4<${Pe}>`:Pe}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${E?"/ 4":""}, value);\n      }`,Re=Q("x",e[0].dataType,e[0].dims.length,N===3?1:N),Oe=Q("w",e[1].dataType,e[1].dims.length,je),We=[Re,Oe],st=oe("result",e[0].dataType,t.length,je);if(d){let ie=Q("bias",e[2].dataType,e[2].dims.length,je);We.push(ie),be+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${E?`vec4<${Pe}>`:Pe} {\n          return bias[coords.${b?"w":"y"}${E?"/ 4":""}];\n        }`}return`\n        ${lo("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${Te.registerUniforms(ge).declareVariables(...We,st)}\n        ${be}\n        ${Kh(b,q,se,de,d,r,ke[0],ke[1],ke[2],Pe)}\n        ${E?ei(B,j,Pe,void 0,!b,te):ti(B,j,Pe,void 0,!b,te,!1,void 0,y)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${N};${E};${q};${se};${de};${J};${Y};${te}`,inputDependencies:Fe},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:V[0],y:V[1],z:V[2]},programUniforms:Ve}),getShaderSource:Ae}}});var Ko,El,Pl=ue(()=>{"use strict";xe();Ue();Me();Jo();nr();Ko=(e,r,t)=>{let s=e.length>2,l=s?"value += b[output_channel];":"",f=e[0].dims,d=e[1].dims,y=d[0]/r.group,b=r.format==="NHWC",C=fo(f,d,r.dilations,r.pads,r.strides,b),m=ee.size(C),x=[{type:12,data:m},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:y}];Mt(r,x),x.push(...le(f,d,C));let P=["rank","rank"];s&&(x.push(...le(e[2].dims)),P.push("rank")),x.push(...le(C));let R=E=>{let k=oe("output",e[0].dataType,C.length),U=He(k.type.tensor),j=Dt(r,k.type.value,U),B=Q("x",e[0].dataType,f.length),V=Q("w",e[1].dataType,d.length),N=[B,V];s&&N.push(Q("b",e[2].dataType,e[2].dims));let J=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return zt(r,J),`\n  ${E.registerUniforms(J).declareVariables(...N,k)}\n\n  ${E.mainStart()}\n    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${k.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${b?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${b?1:2}], outputIndices[${b?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${k.type.value} = ${k.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${b?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${b?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${b?B.get("batch","xHeight","xWidth","input_channel"):B.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${V.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${l}\n    ${j}\n    ${k.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:r.cacheKey,inputDependencies:P},getRunData:()=>({outputs:[{dims:t?t(C):C,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:x}),getShaderSource:R}},El=(e,r,t)=>{let s=e.length>2,l=Ye(t[3]),f=Ye(t[2]),d=ee.size(t)/l/f,y=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/l],b=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/l],C=[t[0],t[1],t[2],t[3]/l],m=[{type:12,data:d},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];Mt(r,m),m.push(...le(y,b,C));let x=(f-1)*r.strides[1]+b[1],P=R=>{let E=oe("output",e[0].dataType,C.length,l),k=He(E.type.tensor),U=Dt(r,E.type.value,k),j=Q("x",e[0].dataType,y.length,l),B=Q("w",e[1].dataType,b.length,l),V=[j,B];s&&V.push(Q("b",e[2].dataType,e[2].dims,l));let N=s?"value += b[output_channel];":"",J=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return zt(r,J),`\n  ${R.registerUniforms(J).declareVariables(...V,E)}\n  ${R.mainStart()}\n    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${f}u;\n    let col = (index1 % width1) * ${f}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${j.type.value}, ${x}>;\n    var values: array<${E.type.value}, ${f}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w\'s height/width.\n    for (var w_height: u32 = 0u; w_height < ${b[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${x}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${j.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${j.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${b[1]}; w_width++) {\n          let w_val = ${B.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${f}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${f}u; i++) {\n      var value = values[i];\n      ${N}\n      ${U}\n      ${E.set("batch","row","col + i","output_channel","value")};\n    }\n  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${l};${f};${x};${b[0]};${b[1]}`,inputDependencies:s?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:m}),getShaderSource:P}}});var Yo,Jh,Ol,Zo=ue(()=>{"use strict";xe();Ue();ri();Me();nr();Yo=(e,r,t,s,l=!1)=>{let f=e[0].dims,d=e[1].dims,y=f[f.length-2],b=d[d.length-1],C=f[f.length-1],m=Ye(b),x=Ye(C),P=Ye(y),R=ee.size(t)/m/P,E=e.length>2,k=s?s.slice(0,-2):t.slice(0,-2),j=[ee.size(k),y,b],B=[{type:12,data:R},{type:12,data:y},{type:12,data:b},{type:12,data:C}];Mt(r,B),B.push(...le(k,f,d)),E&&B.push(...le(e[2].dims)),B.push(...le(j));let V=N=>{let J=Qi("batch_dims",e[0].dataType,k.length),Y=Q("a",e[0].dataType,f.length,x),te=Q("b",e[1].dataType,d.length,m),q=oe("output",e[0].dataType,j.length,m),se=He(q.type.tensor),de=Dt(r,q.type.value,se),ke=[Y,te],Ve="";if(E){let Re=l?m:1;ke.push(Q("bias",e[2].dataType,e[2].dims.length,Re)),Ve=`${l?`value += bias[col / ${Re}];`:`value += ${q.type.value}(bias[row + i]);`}`}let Fe=f.slice(0,-2),Ae=d.slice(0,-2),Te=Lr(Fe,k),ge=Lr(Ae,k),je=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];zt(r,je);let Pe=(Re,Oe)=>{let We=Re.rank,st=Re.name;if(We===2)return`var ${st}_indices = ${Re.type.indices}(0u, 0u);`;let ie=J.rank,ve=`var ${st}_indices: ${Re.type.indices};`;for(let Ee=We-2-1,Ct=ie-1;Ee>=0;Ee--,Ct--)ve+=`\n${st}_indices[${Ee}] = ${ie>1?`batch_indices[${Ct}]`:"batch_indices"};`;return Oe.forEach(Ee=>{ve+=`\n${st}_indices[${Ee}] = 0;`}),ve+=`${st}_indices[${We-2}] = 0u;\n                     ${st}_indices[${We-1}] = 0u;`,ve},be=()=>{let Re=`var a_data: ${Y.type.value};`;for(let Oe=0;Oe<x;Oe++)Re+=`\n              let b_data${Oe} = b[(b_offset + (k + ${Oe}) * uniforms.N + col) / ${m}];`;for(let Oe=0;Oe<P;Oe++){Re+=`a_data = a[(a_offset + (row + ${Oe}) * uniforms.K + k) / ${x}];`;for(let We=0;We<x;We++)Re+=`\n            values[${Oe}] = fma(${te.type.value}(a_data${x===1?"":`[${We}]`}), b_data${We}, values[${Oe}]);\n`}return Re};return`\n  ${N.registerUniforms(je).registerInternalVariables(J).declareVariables(...ke,q)}\n  ${N.mainStart()}\n    ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${m})) * ${m};\n    var index1 = global_idx / (uniforms.N / ${m});\n    let stride1 = uniforms.M / ${P};\n    let row = (index1 % stride1) * ${P};\n    let batch = index1 / stride1;\n\n    ${t.length===2?"":`let batch_indices = ${J.offsetToIndices("batch")};`}\n    ${Pe(Y,Te)}\n    let a_offset = ${Y.indicesToOffset("a_indices")};\n    ${Pe(te,ge)}\n    let b_offset = ${te.indicesToOffset("b_indices")};\n    var values: array<${q.type.value}, ${P}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${x}) {\n      ${be()}\n    }\n    for (var i = 0u; i < ${P}u; i++) {\n      var value = values[i];\n      ${Ve}\n      ${de}\n      let cur_indices = ${q.type.indices}(batch, row + i, col);\n      let offset = ${q.indicesToOffset("cur_indices")};\n      ${q.setByOffset(`offset / ${m}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${m};${x};${P};${l}`,inputDependencies:E?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(R/64)},programUniforms:B}),getShaderSource:V}},Jh=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Ol=e=>{Jh(e.inputs);let r=Vt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can\'t use matmul on the given tensors");let t=r[r.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];t<8&&s<8?e.compute(Yo(e.inputs,{activation:""},r)):e.compute(co(e.inputs,{activation:""},r))}});var fo,Xo,Yh,kl,Qo,Zh,Xh,ea,Jo=ue(()=>{"use strict";Ue();Tl();ri();Pl();nr();Zo();Fr();fo=(e,r,t,s,l,f)=>{let d=e[0],y=e.slice(f?1:2,f?3:4),b=y.length,C=r[0],x=r.slice(2).map((E,k)=>E+(E-1)*(t[k]-1)),R=y.map((E,k)=>E+s[k]+s[k+b]).map((E,k)=>Math.floor((E-x[k]+l[k])/l[k]));return R.splice(0,0,d),R.splice(f?3:1,0,C),R},Xo=[2,3,1,0],Yh=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[1]*r.group;if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let l=e[0].dims.length-2;if(r.dilations.length!==l)throw new Error(`dilations should be ${l}D`);if(r.strides.length!==l)throw new Error(`strides should be ${l}D`);if(r.pads.length!==l*2)throw new Error(`pads should be ${l*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},kl=(e,r)=>{let t=e.kernelShape.slice();for(let f=2;f<r[1].dims.length;++f)t[f-2]===0&&(t[f-2]=r[1].dims[f]);let s=e.pads.slice();yr.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,s,e.format==="NHWC",e.autoPad);let l=Object.assign({},e);return Object.assign(l,{kernelShape:t,pads:s}),l},Qo=e=>{let r=ao(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],l=e.dilations,f=e.group,d=e.kernel_shape,y=e.pads,b=e.strides,C=e.w_is_const();return{autoPad:s,format:t,dilations:l,group:f,kernelShape:d,pads:y,strides:b,wIsConst:C,...r,cacheKey:`${e.format};${r.activation};`}},Zh=(e,r,t)=>{let s=kl(t,r),l=t.format==="NHWC";if(t.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&l&&r[1].dims[0]===t.group&&r[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1){let te=fo(r[0].dims,r[1].dims,t.dilations,s.pads,t.strides,l),q=e.kernelCustomData.wT??e.compute(Ot(r[1],Xo),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=q);let se=[r[0],q];r.length===3&&se.push(r[2]),e.compute(El(se,s,te),{inputs:se})}else e.compute(Ko(r,s));return}let f=r.length===3,d=r[0].dims[l?1:2],y=r[0].dims[l?2:3],b=r[0].dims[l?3:1],C=r[1].dims[2],m=r[1].dims[3],x=fo(r[0].dims,r[1].dims,t.dilations,s.pads,t.strides,l),P=x[l?1:2],R=x[l?2:3],E=x[l?3:1],k=l&&C===d&&m===y&&t.pads[0]===0&&t.pads[1]===0;if(k||C===1&&m===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let Y=x[0],te,q,se,de=[];if(l){let Fe=e.kernelCustomData.wT??e.compute(Ot(r[1],Xo),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Fe),k){let Ae=d*y*b;te=r[0].reshape([1,Y,Ae]),q=Fe.reshape([1,Ae,E]),se=[1,Y,E]}else te=r[0].reshape([Y,d*y,b]),q=Fe.reshape([1,b,E]),se=[Y,P*R,E];de.push(te),de.push(q)}else te=r[0].reshape([Y,b,d*y]),q=r[1].reshape([1,E,b]),se=[Y,E,P*R],de.push(q),de.push(te);f&&de.push(r[2]);let ke=se[2],Ve=de[0].dims[de[0].dims.length-1];ke<8&&Ve<8?e.compute(Yo(de,s,x,se,l),{inputs:de}):e.compute(co(de,s,x,se,l),{inputs:de});return}let U=!0,j=e.kernelCustomData.wT??e.compute(Ot(r[1],Xo),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=j);let B=[r[0],j];f&&B.push(r[2]);let V=l?P*R:E,N=l?E:P*R,J=C*m*b;e.compute(Il(B,s,x,V,N,J,f,U),{inputs:B})},Xh=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let l=[0,r.pads[0],0,r.pads[1]],f=[1].concat(r.strides),d=[1].concat(r.dilations),y=[1].concat(r.kernelShape),b=kl({...r,pads:l,strides:f,dilations:d,kernelShape:y},s);e.compute(Ko(s,b,C=>t?[C[0],C[2],C[3]]:[]))},ea=(e,r)=>{Yh(e.inputs,r),e.inputs[0].dims.length===3?Xh(e,r):Zh(e,e.inputs,r)}});var Qh,Rl,Bl=ue(()=>{"use strict";xe();rr();Me();nr();uo();qo();ri();Qh=(e,r=!1,t,s,l=4)=>{let f=j=>{switch(j){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${s}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${j} is not supported.`)}},d=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,y=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,b=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",C=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",m=e?"row":"col",x=e?"col":"row",P=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${m} / outWidth;\n      let outCol = ${m} % outWidth;\n\n      let WRow = ${x} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${x} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${b}) || fract(xR) > 0.0) {\n        return ${s}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${C}) || fract(xC) > 0.0) {\n        return ${s}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${x} % inChannels;\n      ${d}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${l}];`,R=e?`\n      let col = colIn * ${l};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${P}\n      }\n      return ${s}(0.0);`:`\n      let col = colIn * ${l};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${P}\n      }\n      return ${s}(0.0);`,E=`\n      let col = colIn * ${l};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${f(l)}\n      }\n      return ${s}(0.0);\n      `,k=Dt(t,s);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?R:E}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${s} {\n    ${e?E:R}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${s}) {\n    let col = colIn * ${l};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${y}\n      ${so(r)}\n      ${k}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${l}] = value;\n    }\n  }`},Rl=(e,r,t,s,l,f,d,y)=>{let b=r.format==="NHWC",C=b?e[0].dims[3]:e[0].dims[1],m=t[0],x=b?t[2]:t[3],P=b?t[1]:t[2],R=b?t[3]:t[1],E=b?C%4===0&&R%4===0:x%4===0&&R%4===0,k=b?R:x*P,U=b?x*P:R,j=E?[8,8,1]:[k<=4||U<=4?4:16,k>4&&U<=4?4:16,1],B=E?[4,4,1]:[k<=4?1:4,k>4&&U<=4?1:4,1],V=[Math.ceil(k/j[0]/B[0]),Math.ceil(U/j[1]/B[1]),Math.ceil(m/j[2]/B[2])];Je("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${V}`);let N=E?4:1,J=Math.max(j[0]*N,j[1]),Y=E?4:1,te=[r.kernelShape[b?1:2],r.kernelShape[b?2:3]],q=[te[0]+(r.dilations[0]<=1?0:(te[0]-1)*(r.dilations[0]-1)),te[1]+(r.dilations[1]<=1?0:(te[1]-1)*(r.dilations[1]-1))],se=[q[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),q[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],de=[{type:6,data:s},{type:6,data:l},{type:6,data:f},{type:6,data:r.strides},{type:6,data:r.dilations},{type:6,data:te},{type:6,data:se}];Mt(r,de),de.push(...le(e[0].dims,e[1].dims));let ke=["rank","rank"];d&&(de.push(...le(e[2].dims)),ke.push("rank")),de.push(...le(t));let Ve=Fe=>{let Ae=Q("x",e[0].dataType,e[0].dims.length,Y),Te=Q("w",e[1].dataType,e[1].dims.length,1),ge=oe("result",e[0].dataType,t.length,Y),je=[Ae,Te],Pe="";if(d){let Oe=Q("bias",e[2].dataType,e[2].dims.length,Y);je.push(Oe),Pe+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${Oe.type.value} {\n            return bias[coords.${b?"w":"y"}${E?"/ 4":""}];\n          }`}let be=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:te.length},{name:"pads",type:"i32",length:se.length}];zt(r,be);let Re=He(e[0].dataType,1);if(Re!=="f16"&&Re!=="f32")throw new Error(`elemType ${Re} is not supported.`);return`\n        ${lo("uniforms.result_strides")}\n        ${Fe.registerUniforms(be).declareVariables(...je,ge)};\n        ${Pe}\n        ${Qh(b,d,r,Ae.type.value,N)}\n        ${E?ei(B,j,Re,void 0,!b,J):ti(B,j,Re,void 0,!b,J,!1,void 0,y)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${r.cacheKey};${B};${j};${E}`,inputDependencies:ke},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:V[0],y:V[1],z:V[2]},programUniforms:de}),getShaderSource:Ve}}});var eg,ta,Dl=ue(()=>{"use strict";xe();rr();Ue();Me();eg=(e,r,t,s,l,f=!1,d,y,b=!1)=>{let C=b?1:2,m=b?2:3,x=b?3:1,P=f?2:1,R=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${f?`vec4<${d}>`:d}) {\n    result[flatIndex] = ${f?`vec4<${d}>`:d}(value);\n  }`;s&&(R+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${f?`vec4<${d}>`:d} {\n      return bias[coords.${b?"w":"y"}${f?"/ 4":""}];\n    }`);let E=f?4:1,k=Q("W",r[1].dataType,r[1].dims.length,E),U=Q("Dy",r[0].dataType,r[0].dims.length,E),j=[U,k];s&&j.push(Q("bias",r[2].dataType,[t[x]].length,E));let B=oe("result",r[0].dataType,t.length,E),V=`{\n        let batch: u32 = ${l?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${l?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${l?"global_id.y":"workgroup_id.y"} * ${P};\n        let d1: u32 = ${l?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${d}>, ${P}>;\n        for (var i = 0; i < ${P}; i++) {\n          dotProd[i] = vec4<${d}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${d}(dyCorner.x) + ${d}(wR)) / ${d}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${d}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${d}(dyCorner.y) + ${d}(wC)) / ${d}(uniforms.strides.y);\n            let dyC2 = (${d}(dyCorner.y) + 1.0 + ${d}(wC)) / ${d}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${d}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${d}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${U.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${U.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${d}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${x}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${U.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${U.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${P}; i = i + 1) {\n          let value = dotProd[i] + ${s?"bias[c+i]":`vec4<${d}>(0.0)`};\n          ${B.set("batch","r","c + i","d1","value")};\n        }\n      }`,N=`\n          let outputIndices = ${B.offsetToIndices("global_idx")};\n          let batch = ${B.indicesGet("outputIndices",0)};\n          let d1 = ${B.indicesGet("outputIndices",x)};\n          let r = ${B.indicesGet("outputIndices",C)};\n          let c = ${B.indicesGet("outputIndices",m)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${d}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${d}(dyRCorner) + ${d}(wR)) / ${d}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${d}(uniforms.Dy_shape[${C}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${d}(dyCCorner) + ${d}(wC)) / ${d}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${d}(uniforms.Dy_shape[${m}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${b?U.get("batch","idyR","idyC","inputChannel"):U.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${k.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${s?"bias[d1]":`${d}(0.0)`};\n          ${B.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(y).declareVariables(...j,B)}\n  ${R}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${f?V:N}}`},ta=(e,r,t)=>{let s=e.length>2,l=r.outputShape,f=ee.size(l),d=[Math.ceil(f/64),1,1];Je("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${d}`);let y=r.format==="NHWC",b=["rank","rank"],C=[r.strides[0],r.strides[1]],m=[r.kernelShape[y?1:2],r.kernelShape[y?2:3]],x=[r.dilations[0],r.dilations[1]],P=[m[0]+(r.dilations[0]<=1?0:(r.kernelShape[y?1:2]-1)*(r.dilations[0]-1)),m[1]+(r.dilations[1]<=1?0:(r.kernelShape[y?2:3]-1)*(r.dilations[1]-1))],R=[P[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),P[1]-1-Math.floor(r.pads[1]+r.pads[3])/2],E=!1,k=r.group,U=e[1].dims,j=U[0]/k,B=U[1],V=[{type:6,data:f},{type:12,data:C},{type:12,data:m},{type:12,data:x},{type:12,data:P},{type:6,data:R},{type:12,data:j},{type:12,data:B},...le(e[0].dims,e[1].dims)];s&&(V.push(...le(e[2].dims)),b.push("rank")),V.push(...le(l));let N=d[1]===1&&d[2]===1,J=Y=>{let te=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:C.length},{name:"filter_dims",type:"u32",length:m.length},{name:"dilations",type:"u32",length:m.length},{name:"effective_filter_dims",type:"u32",length:P.length},{name:"pads",type:"i32",length:R.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],q=He(e[0].dataType);return`${eg(Y,e,l,s,N,E,q,te,y)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};`,inputDependencies:b},getRunData:()=>({dispatchGroup:{x:d[0],y:d[1],z:d[2]},outputs:[{dims:t?t(l):l,dataType:e[0].dataType}],programUniforms:V}),getShaderSource:J}}});var tg,rg,ng,Ml,zl,ig,og,ag,sg,Ul,jl=ue(()=>{"use strict";Bl();Dl();nr();Fr();tg=(e,r,t,s,l,f)=>(e-1)*r+t+(s-1)*l+1-f,rg=(e,r,t,s,l)=>{let f=Math.floor(e/2);r==="SAME_UPPER"?(t[s]=f,t[l]=e-f):r==="SAME_LOWER"&&(t[s]=e-f,t[l]=f)},ng=(e,r,t,s,l,f,d,y,b,C)=>{let m=e.length-2,x=C.length===0;if(b.length===0)for(let E=0;E<m;++E)b.push(0);let P=e[0],R=r[y?3:1]*l;for(let E=0,k=e.length-m-(y?1:0);E<m;++E,++k){let U=e[k],j=x?U*d[E]:C[E],B=tg(U,d[E],f[E],r[k],t[E],j);rg(B,s,f,E,E+m),x&&C.push(d[E]*(U-1)+b[E]+(r[k]-1)*t[E]+1-f[E]-f[E+m])}C.splice(0,0,P),C.splice(y?3:1,0,R)},Ml=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((x,P)=>x*P,1)===0){t.length=0;for(let x=2;x<r[1].dims.length;++x)t.push(r[1].dims[x])}let s=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(s?3:1,0,r[1].dims[1]);let l=e.pads.slice(),f=e.outputShape.slice(),d=e.outputPadding.slice(),y=r[0].dims,b=e.dilations.slice();if(b.reduce((x,P)=>x+P,0)===0){let x=r[0].dims.length-2;b=new Array(x).fill(1)}let C=e.strides.slice();if(C.reduce((x,P)=>x+P,0)===0){let x=r[0].dims.length-2;C=new Array(x).fill(1)}ng(y,t,b,e.autoPad,e.group,l,C,s,d,f);let m=Object.assign({},e);return Object.assign(m,{kernelShape:t,pads:l,outputPadding:d,outputShape:f,dilations:b,strides:C}),m},zl=e=>{let r=ao(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],l=e.dilations,f=e.group,d=e.kernelShape,y=e.pads,b=e.strides,C=e.wIsConst(),m=e.outputPadding,x=e.outputShape;return{autoPad:s,format:t,dilations:l,group:f,kernelShape:d,outputPadding:m,outputShape:x,pads:y,strides:b,wIsConst:C,...r,cacheKey:`${e.format};${r.activation};`}},ig=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[0];if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let l=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==l))throw new Error("invalid bias");let f=e[0].dims.length-2;if(r.dilations.reduce((m,x)=>m+x,0)>0&&r.dilations.length!==f)throw new Error(`dilations should be ${f}D`);if(r.strides.reduce((m,x)=>m+x,0)>0&&r.strides.length!==f)throw new Error(`strides should be ${f}D`);if(r.pads.reduce((m,x)=>m+x,0)>0&&r.pads.length!==f*2)throw new Error(`pads should be ${f*2}D`);if(r.outputPadding.length!==f&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${f}D`);if(r.kernelShape.reduce((m,x)=>m+x,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},og=[2,3,1,0],ag=(e,r,t)=>{let s=Ml(t,r),l=t.format==="NHWC",f=s.outputShape,d=f[l?3:1],y=r[0].dims[l?3:1];if(s.group!==1||d===1&&y===1){e.compute(ta(r,s));return}let b=f[l?1:2],C=f[l?2:3],m=r[1].dims[2],x=r[1].dims[3],P=l?b*C:d,R=l?d:b*C,E=m*x*y,k=!0,U=e.kernelCustomData.wT??e.compute(Ot(r[1],og),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=U);let j=[r[0],U],B=r.length===3;B&&(!l&&r[2].dims.length===1?j.push(r[2].reshape([r[2].dims[0],1,1])):j.push(r[2])),e.compute(Rl(j,s,f,P,R,E,B,k),{inputs:j})},sg=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];s.length===3&&s.push(e.inputs[2]);let l=r.kernelShape;(l.length===0||l[0]===0)&&(l=[e.inputs[1].dims[2]]);let f=r.dilations;(f.length===0||f[0]===0)&&(f=[1]);let d=r.strides;(d.length===0||d[0]===0)&&(d=[1]);let y=r.pads;y.length===0&&(y=[0,0]),y=[0,y[0],0,y[1]],d=[1].concat(d),f=[1].concat(f),l=[1].concat(l);let b=Ml({...r,pads:y,strides:d,dilations:f,kernelShape:l},s);e.compute(ta(s,b,C=>t?[C[0],C[2],C[3]]:[C[0],C[1],C[3]]))},Ul=(e,r)=>{ig(e.inputs,r),e.inputs[0].dims.length===3?sg(e,r):ag(e,e.inputs,r)}});var ug,Vl,Nl,Wl=ue(()=>{"use strict";xe();Ue();ft();Me();ug=(e,r,t,s)=>{let l=ee.size(r),f=r.length,d=Q("input",e,f),y=oe("output",e,f),b=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),C=ee.normalizeAxis(b,f),m=x=>{let P=` i32(${d.indicesGet("inputIndices","uniforms.axis")}) `,R=$e("uniforms.input_shape","uniforms.axis",f),E=s.reverse?P+(s.exclusive?" + 1":""):"0",k=s.reverse?R:P+(s.exclusive?"":" + 1");return`\n                ${x.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(d,y)}\n                ${x.mainStart()}\n                  ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${y.offsetToIndices("global_idx")};\n                  var sum = ${y.type.value}(0);\n                  let first : i32 = ${E};\n                  let last : i32 = ${k};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${d.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${d.getByIndices("inputIndices")};\n                  }\n                  ${y.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},{type:6,data:C},...le(r,r)]}),getShaderSource:m}},Vl=(e,r)=>{let t=e.inputs[0].dims,s=e.inputs[0].dataType,l=e.inputs[1];e.compute(ug(s,t,l,r),{inputs:[0]})},Nl=e=>{let r=e.exclusive===1,t=e.reverse===1;return ze({exclusive:r,reverse:t})}});var ra,po,Gl,lg,dg,na,ia,Hl,cg,Ll,Fl,ql=ue(()=>{"use strict";xe();Ue();ft();Me();ra="[a-zA-Z]|\\\\.\\\\.\\\\.",po="("+ra+")+",Gl="^"+po+"$",lg="("+po+",)*"+po,dg="^"+lg+"$",na=class{constructor(r=-1){this.symbolToIndices=new Map,this.inputIndex=r}addSymbol(r,t){let s=this.symbolToIndices.get(r);s===void 0?s=[t]:s.push(t),this.symbolToIndices.set(r,s)}},ia=class{constructor(r,t){this.equation=t;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[s,l]=t.includes("->")?t.split("->",2):[t,""];if(!s.match(RegExp(dg)))throw new Error("Invalid LHS term");if(s.split(",").forEach((y,b)=>{let C=r[b].dims.slice();if(!y.match(RegExp(Gl)))throw new Error("Invalid LHS term");let m=this.processTerm(y,!0,C,b);this.lhs.push(m)}),l==="")l+=[...this.symbolToInfo.entries()].filter(([y,b])=>b.count===1||y==="...").map(([y])=>y).join("");else if(!l.match(RegExp(po)))throw new Error("Invalid RHS");l.match(RegExp(ra,"g"))?.forEach(y=>{if(y==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let b=this.symbolToInfo.get(y);if(b===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(b.dimValue)}}),this.rhs=this.processTerm(l,!1,this.outputDims)}addSymbol(r,t,s){let l=this.symbolToInfo.get(r);if(l!==void 0){if(l.dimValue!==t&&l.count!==1)throw new Error("Dimension mismatch");l.count++,l.inputIndices.push(s)}else l={count:1,dimValue:t,inputIndices:[s]};this.symbolToInfo.set(r,l)}processTerm(r,t,s,l=-1){let f=s.length,d=!1,y=[],b=0;if(!r.match(RegExp(Gl))&&!t&&r!=="")throw new Error("Invalid LHS term");let C=r.match(RegExp(ra,"g")),m=new na(l);return C?.forEach((x,P)=>{if(x==="..."){if(d)throw new Error("Only one ellipsis is allowed per input term");d=!0;let R=f-C.length+1;if(R<0)throw new Error("Ellipsis out of bounds");if(y=s.slice(b,b+R),this.hasEllipsis){if(this.ellipsisDims.length!==y.length||this.ellipsisDims.toString()!==y.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=y;else throw new Error("Ellipsis must be specified in the LHS");for(let E=0;E<y.length;E++){let k=String.fromCharCode("0".charCodeAt(0)+E);m.addSymbol(k,P+E),this.addSymbol(k,s[b++],l)}}else m.addSymbol(x,P+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(x,s[b++],l)}),m}},Hl=e=>e+"_max",cg=(e,r,t,s)=>{let f=e.map(m=>m.length).map((m,x)=>Q(`input${x}`,r,m)),d=ee.size(s),y=oe("output",r,s.length),b=[...t.symbolToInfo.keys()].filter(m=>!t.rhs.symbolToIndices.has(m)),C=m=>{let x=[],P="var prod = 1.0;",R="var sum = 0.0;",E="sum += prod;",k=[],U=[],j=[],B=[],V=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((J,Y)=>{if(t.rhs.symbolToIndices.has(Y)){let te=t.rhs.symbolToIndices.get(Y)?.[0];te!==void 0&&t.lhs.forEach((q,se)=>{if(J.inputIndices.includes(se)){let de=q.symbolToIndices.get(Y);if(de===void 0)throw new Error("Invalid symbol error");de.forEach(ke=>{x.push(`${f[se].indicesSet(`input${se}Indices`,ke,y.indicesGet("outputIndices",te))}`)})}})}else t.lhs.forEach((te,q)=>{if(J.inputIndices.includes(q)){let se=te.symbolToIndices.get(Y);if(se===void 0)throw new Error("Invalid symbol error");se.forEach(de=>{k.push(`${f[q].indicesSet(`input${q}Indices`,de,`${Y}`)}`)}),B.push(`prod *= ${f[q].getByIndices(`input${q}Indices`)};`)}}),U.push(`for(var ${Y}: u32 = 0; ${Y} < uniforms.${Hl(Y)}; ${Y}++) {`),j.push("}")});let N=V?[...x,`let sum = ${f.map((J,Y)=>J.getByIndices(`input${Y}Indices`)).join(" * ")};`]:[...x,R,...U,...k,P,...B,E,...j];return`\n            ${m.registerUniforms(b.map(J=>({name:`${Hl(J)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...f,y)}\n\n            ${m.mainStart()}\n            ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${y.offsetToIndices("global_idx")};\n            ${f.map((J,Y)=>`var input${Y}Indices: ${f[Y].type.indices};`).join(`\n`)}\n            ${N.join(`\n`)};\n            ${y.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let m=b.filter(P=>t.symbolToInfo.has(P)).map(P=>({type:12,data:t.symbolToInfo.get(P)?.dimValue||0}));m.push({type:12,data:d});let x=e.map((P,R)=>[...le(P)]).reduce((P,R)=>P.concat(R),m);return x.push(...le(s)),{outputs:[{dims:s,dataType:r}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:x}},getShaderSource:C}},Ll=(e,r)=>{let t=new ia(e.inputs,r.equation),s=t.outputDims,l=e.inputs.map((f,d)=>f.dims);e.compute(cg(l,e.inputs[0].dataType,t,s))},Fl=e=>{let r=e.equation.replace(/\\s+/g,"");return ze({equation:r})}});var fg,Kl,pg,mg,Jl,Yl=ue(()=>{"use strict";xe();Ue();Me();fg=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=t.length<r.length?0:t.length-r.length,l=r.length<t.length?0:r.length-t.length;for(;s<t.length&&l<r.length;++s,++l)if(t[s]!==r[l]&&t[s]!==1&&r[l]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Kl=(e,r)=>{let t=e.length-r.length,s=[];for(let l=0;l<t;++l)s.push(e[l]);for(let l=0;l<r.length;++l)s.push(r[l]===1?e[l+t]:r[l]);return s},pg=(e,r)=>e.length>r.length?Kl(e,r):Kl(r,e),mg=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=pg(r,t),l=e[0].dataType,f=l===9?4:1,d=Math.ceil(ee.size(s)/f),y=C=>{let m=Q("input",l,r.length,f),x=oe("output",l,s.length,f),P;if(l===9){let R=(E,k,U="")=>`\n          let outputIndices${k} = ${x.offsetToIndices(`outputOffset + ${k}u`)};\n          let offset${k} = ${m.broadcastedIndicesToOffset(`outputIndices${k}`,x)};\n          let index${k} = offset${k} / 4u;\n          let component${k} = offset${k} % 4u;\n          ${E}[${k}] = ${U}(${m.getByOffset(`index${k}`)}[component${k}]);\n        `;P=`\n        let outputOffset = global_idx * ${f};\n        var data = vec4<u32>(0);\n        ${R("data",0,"u32")}\n        ${R("data",1,"u32")}\n        ${R("data",2,"u32")}\n        ${R("data",3,"u32")}\n        ${x.setByOffset("global_idx","data")}\n      }`}else P=`\n        let outputIndices = ${x.offsetToIndices("global_idx")};\n        let inputOffset = ${m.broadcastedIndicesToOffset("outputIndices",x)};\n        ${x.setByOffset("global_idx",m.getByOffset("inputOffset"))}\n      }`;return`\n    ${C.registerUniform("vec_size","u32").declareVariables(m,x)}\n    ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${P}`},b=[{type:12,data:d},...le(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length}`,inputDependencies:["rank"]},getShaderSource:y,getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:b})}},Jl=e=>{fg(e.inputs),e.compute(mg(e.inputs),{inputs:[0]})}});var hg,Zl,Xl=ue(()=>{"use strict";xe();Ue();Me();oo();hg=e=>{let r=e[0].dataType,t=ee.size(e[0].dims),s=ee.size(e[1].dims),l=s%4===0,f=d=>{let y=Q("x",r,[1],4),b=Q("bias",r,[1],4),C=oe("y",r,[1],4),m=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],x=R=>`\n      let bias${R}_offset: u32 = (global_idx * 4 + ${R}) % uniforms.bias_size;\n      let bias${R} = ${b.getByOffset(`bias${R}_offset / 4`)}[bias${R}_offset % 4];`,P=l?`\n      let bias = ${b.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${x(0)}${x(1)}${x(2)}${x(3)}\n      let bias = ${y.type.value}(bias0, bias1, bias2, bias3);`;return`${d.registerUniforms(m).declareVariables(y,b,C)}\n\n    ${Lo(_t(r))}\n\n    ${d.mainStart(Xi)}\n      ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${y.getByOffset("global_idx")};\n      ${P}\n      let x_in = x + bias;\n      ${C.setByOffset("global_idx",Fo("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getShaderSource:f,getRunData:d=>({outputs:[{dims:d[0].dims,dataType:d[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(t/Xi/4)}})}},Zl=e=>{e.inputs.length<2||ee.size(e.inputs[1].dims)===0?al(e):e.compute(hg(e.inputs))}});var gg,yg,Ql,ed,td=ue(()=>{"use strict";xe();Ue();ft();Me();gg=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},yg=(e,r)=>{let t=e[0].dims,s=e[1].dims,l=t.length,f=ee.normalizeAxis(r.axis,l),d=t.slice(0);d.splice(f,1,...s);let y=t[f],b=e[0].dataType===9?4:1,C=Math.ceil(ee.size(d)/b),m=[{type:12,data:C},{type:6,data:y},{type:12,data:f},...le(e[0].dims,e[1].dims,d)],x=P=>{let R=Q("data",e[0].dataType,e[0].dims.length,b),E=Q("inputIndices",e[1].dataType,e[1].dims.length),k=oe("output",e[0].dataType,d.length,b),U=B=>{let V=s.length,N=`var indicesIndices${B}  = ${E.type.indices}(0);`;for(let J=0;J<V;J++)N+=`${V>1?`indicesIndices${B}[${J}]`:`indicesIndices${B}`} = ${d.length>1?`outputIndices${B}[uniforms.axis + ${J}]`:`outputIndices${B}`};`;N+=`\n          var idx${B} = ${E.getByIndices(`indicesIndices${B}`)};\n          if (idx${B} < 0) {\n            idx${B} = idx${B} + uniforms.axisDimLimit;\n          }\n          var dataIndices${B} : ${R.type.indices};\n        `;for(let J=0,Y=0;J<l;J++)J===f?(N+=`${l>1?`dataIndices${B}[${J}]`:`dataIndices${B}`} = u32(idx${B});`,Y+=V):(N+=`${l>1?`dataIndices${B}[${J}]`:`dataIndices${B}`} = ${d.length>1?`outputIndices${B}[${Y}]`:`outputIndices${B}`};`,Y++);return N},j;if(e[0].dataType===9){let B=(V,N,J="")=>`\n          let outputIndices${N} = ${k.offsetToIndices(`outputOffset + ${N}u`)};\n          ${U(N)};\n          let offset${N} = ${R.indicesToOffset(`dataIndices${N}`)};\n          let index${N} = offset${N} / 4u;\n          let component${N} = offset${N} % 4u;\n          ${V}[${N}] = ${J}(${R.getByOffset(`index${N}`)}[component${N}]);\n        `;j=`\n        let outputOffset = global_idx * ${b};\n        var value = vec4<u32>(0);\n        ${B("value",0,"u32")}\n        ${B("value",1,"u32")}\n        ${B("value",2,"u32")}\n        ${B("value",3,"u32")}\n        ${k.setByOffset("global_idx","value")}\n      `}else j=`\n      let outputIndices = ${k.offsetToIndices("global_idx")};\n      ${U("")};\n      let value = ${R.getByIndices("dataIndices")};\n      ${k.setByOffset("global_idx","value")};\n      `;return`\n      ${P.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(R,E,k)}\n      ${P.mainStart()}\n        ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${j}\n      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:m}),getShaderSource:x}},Ql=e=>ze({axis:e.axis}),ed=(e,r)=>{let t=e.inputs;gg(t),e.compute(yg(e.inputs,r))}});var bg,vg,rd,nd,id=ue(()=>{"use strict";xe();Ue();ft();Me();bg=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},vg=(e,r)=>{let t=e[0].dims,s=e[0].dataType,l=t.length,f=e[1].dims,d=e[1].dataType,y=ee.normalizeAxis(r.axis,l),b=t[y],C=f.slice(0),m=ee.size(C),x=Q("input",s,l),P=Q("indicesInput",d,f.length),R=oe("output",s,C.length),E=[{type:12,data:m},{type:6,data:b},{type:12,data:y}];return E.push(...le(t,f,C)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:C,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:E}),getShaderSource:j=>`\n      ${j.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(x,P,R)}\n      ${j.mainStart()}\n      ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${R.offsetToIndices("global_idx")};\n\n      var idx = ${P.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${x.type.indices}(outputIndices);\n      ${x.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${x.getByIndices("inputIndices")};\n\n      ${R.setByOffset("global_idx","value")};\n  }`}},rd=e=>ze({axis:e.axis}),nd=(e,r)=>{let t=e.inputs;bg(t),e.compute(vg(e.inputs,r))}});var wg,_g,od,ad,sd=ue(()=>{"use strict";xe();Ue();Me();wg=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},_g=(e,r)=>{let t=e[0].dims.slice(),s=e[1].dims.slice(),[l,f,d]=Ji.getShapeOfGemmResult(t,r.transA,s,r.transB,e.length===3?e[2].dims:void 0),y=[l,f];if(!y)throw new Error("Can\'t use gemm on the given tensors");let b=ee.size(y),C=[{type:12,data:b},{type:12,data:l},{type:12,data:f},{type:12,data:d},{type:1,data:r.alpha},{type:1,data:r.beta}],m=["type","type"];e.length===3&&(C.push(...le(e[2].dims)),m.push("rank")),C.push(...le(y));let x=P=>{let R="";r.transA&&r.transB?R="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?R="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?R="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(R="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let E=r.alpha===1?"":"value *= uniforms.alpha;",k=Q("a",e[0].dataType,e[0].dims),U=Q("b",e[1].dataType,e[1].dims),j=k.type.value,B=null,V=[k,U];e.length===3&&(B=Q("c",e[2].dataType,e[2].dims.length),V.push(B));let N=oe("output",e[0].dataType,y.length);V.push(N);let J=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${P.registerUniforms(J).declareVariables(...V)}\n\n  ${P.mainStart()}\n    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${j}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${R}\n    }\n\n    ${E}\n    ${(()=>B!=null?`let cOffset = ${B.broadcastedIndicesToOffset("vec2(m, n)",N)}; value += ${j}(uniforms.beta) * ${B.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:y,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:C}),getShaderSource:x}},od=e=>{let r=e.transA,t=e.transB,s=e.alpha,l=e.beta;return{transA:r,transB:t,alpha:s,beta:l,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},ad=(e,r)=>{wg(e.inputs),e.compute(_g(e.inputs,r))}});var $g,Cg,Sg,ud,ld=ue(()=>{"use strict";xe();Ue();Me();$g=(e,r)=>{let t=e[0].dims,s=t,l=2,f=ee.sizeToDimension(t,l),d=ee.sizeFromDimension(t,l),y=Ye(d),b=d/y,C=[t[0],t[1],b],m=["rank","type","type"],x=[{type:12,data:d},{type:12,data:b}];x.push(...le(C,C));let P=R=>{let E=Q("x",e[0].dataType,C.length,y),k=Q("scale",e[1].dataType,e[1].dims),U=Q("bias",e[2].dataType,e[2].dims),j=oe("output",e[0].dataType,C.length,y),B=[E,k,U,j],V=E.type.value,N=y===1?"f32":`vec${y}<f32>`,J=64,Y=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${N}, ${J}>;\n  const workgroupSize = ${J}u;\n  ${R.registerUniforms(Y).declareVariables(...B)}\n  ${R.mainStart(J)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${N}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${N}(${E.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${$t("workgroupShared[0]",y)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${N}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${N}(${E.get("batch","channel","h")}) - ${N}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${$t("workgroupShared[0]",y)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${r.epsilon}));\n    let channelScale = invStdDev * f32(${k.getByOffset("channel")});\n    let channelShift = f32(${U.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${E.get("batch","channel","h")} * ${V}(${N}(channelScale)) + ${V}(${N}(channelShift));\n      ${j.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${r.epsilon};${y}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:f},programUniforms:x}),getShaderSource:P}},Cg=(e,r,t,s,l,f,d,y)=>{let b=Ye(d),C=64,m=b===1?"vec2f":`mat2x${b}f`,x=b===1?"f32":`vec${b}f`,P=(Y,te)=>`${m}(${Y}, ${te})`,R=l*d/b,E=Math.ceil(f/C),k=["type"],U=[{type:12,data:E},{type:12,data:f},{type:12,data:Math.floor(d/b)},{type:12,data:Math.floor(f*d/b)}],j=Y=>{let te=Q("input",r.dataType,r.dims,b);return`\n  ${Y.declareVariables(te)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${m}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${Y.mainStart(C)}\n    let currentImageNumber = global_idx / ${C} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${C}) % uniforms.C;\n    let wgId = global_idx % ${C};\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${pt("f32",b)};\n    var squaredSum = ${pt("f32",b)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${x}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${P("sum","squaredSum")};\n  }`},B=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${b}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:[l,d,C,2],dataType:1}],dispatchGroup:{x:l*d/b},programUniforms:U}),getShaderSource:j},{inputs:[r],outputs:[-1]})[0],V=[{type:12,data:R},{type:12,data:f},{type:12,data:Math.floor(d/b)},{type:12,data:Math.floor(C*d/b)}],N=["type","type","type"],J=Y=>{let te=Q("scale",t.dataType,t.dims,b),q=Q("bias",s.dataType,s.dims,b);return`\n  @group(0) @binding(0) var<storage, read> input : array<${m}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${te.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${q.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${m}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${Y.mainStart()}\n    ${Y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${pt("f32",b)};\n    var squaredSum = ${pt("f32",b)};\n    for (var i: u32 = 0; i < ${C}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${C}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${y}));\n    let channelScale = invStdDev * ${x}(scale[currentChannelNumber]);\n    let channelShift = ${x}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${P("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${b};${y}`,inputDependencies:N},getRunData:()=>({outputs:[{dims:[l,d,2],dataType:1}],dispatchGroup:{x:Math.ceil(R/64)},programUniforms:V}),getShaderSource:J},{inputs:[B,t,s],outputs:[-1]})[0]},Sg=(e,r,t)=>{let s=r[0].dims,l=s,f=s[0],d=s[s.length-1],y=ee.sizeFromDimension(s,1)/d,b=Ye(d),C=ee.size(l)/b,m=[{type:12,data:y},{type:12,data:Math.floor(d/b)}],x=["type","type"],P=Cg(e,r[0],r[1],r[2],f,y,d,t.epsilon),R=E=>{let k=He(r[0].dataType),U=b===1?"vec2f":`mat2x${b}f`,j=b===1?k:`vec${b}<${k}>`,B=Q("input",r[0].dataType,r[0].dims,b),V=oe("output",r[0].dataType,l,b);return`\n  @group(0) @binding(0) var<storage, read> input : array<${B.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${U}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${V.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${E.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${j}(scale[0]), ${j}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${b}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:m}),getShaderSource:R},{inputs:[r[0],P]})},ud=(e,r)=>{r.format==="NHWC"?Sg(e,e.inputs,r):e.compute($g(e.inputs,r))}});var xg,Ag,dd,cd=ue(()=>{"use strict";xe();Ue();Me();xg=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Ag=(e,r,t)=>{let s=e[0].dims,l=e[1],f=e[2],d=s,y=ee.normalizeAxis(r.axis,s.length),b=ee.sizeToDimension(s,y),C=ee.sizeFromDimension(s,y),m=ee.size(l.dims),x=f?ee.size(f.dims):0;if(m!==C||f&&x!==C)throw new Error(`Size of X.shape()[axis:] == ${C}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${m} and bias size of ${x}`);let P=[];for(let N=0;N<s.length;++N)N<y?P.push(s[N]):P.push(1);let R=Ye(C),E=["type","type"],k=[{type:12,data:b},{type:1,data:C},{type:12,data:Math.floor(C/R)},{type:1,data:r.epsilon}];f&&E.push("type");let U=t>1,j=t>2,B=N=>{let J=He(e[0].dataType),Y=[Q("x",e[0].dataType,e[0].dims,R),Q("scale",l.dataType,l.dims,R)];f&&Y.push(Q("bias",f.dataType,f.dims,R)),Y.push(oe("output",e[0].dataType,d,R)),U&&Y.push(oe("mean_data_output",1,P)),j&&Y.push(oe("inv_std_output",1,P));let te=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${N.registerUniforms(te).declareVariables(...Y)}\n  ${N.mainStart()}\n    ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${pt("f32",R)};\n    var mean_square_vector = ${pt("f32",R)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${Bt(J,R,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${$t("mean_vector",R)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${$t("mean_square_vector",R)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${Bt(J,R,"x[j + offset]")};\n      let f32scale = ${Bt(J,R,"scale[j]")};\n      output[j + offset] = ${Y[0].type.value}((f32input - mean) * inv_std_dev * f32scale\n        ${f?`+ ${Bt(J,R,"bias[j]")}`:""}\n      );\n    }\n\n    ${U?"mean_data_output[global_idx] = mean":""};\n    ${j?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`},V=[{dims:d,dataType:e[0].dataType}];return U&&V.push({dims:P,dataType:1}),j&&V.push({dims:P,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${R};${t}`,inputDependencies:E},getRunData:()=>({outputs:V,dispatchGroup:{x:Math.ceil(b/64)},programUniforms:k}),getShaderSource:B}},dd=(e,r)=>{xg(e.inputs),e.compute(Ag(e.inputs,r,e.outputCount))}});var Ig,Tg,fd,pd,md=ue(()=>{"use strict";xe();Ue();ft();Me();Ig=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],s=t.dims.length;if(t.dims[s-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let l=Math.floor((r.k+r.blockSize-1)/r.blockSize),f=r.blockSize/8*r.bits,d=e[1];if(!ee.areEqual(d.dims,[r.n,l,f]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let b=e[2].dims;if(ee.size(b)!==r.n*l)throw new Error("scales input size error.");if(e.length===4){let m=e[3].dims,x=r.bits>4?r.n*l:r.n*Math.floor((l+1)/2);if(ee.size(m)!==x)throw new Error("zeroPoints input size error.")}},Tg=(e,r)=>{let t=e[0].dims,s=t.length,l=t.slice(0,s-1).concat(r.n),f=t[s-2],y=r.blockSize/8*r.bits/4,b=Ye(f),C=Ye(r.n),m=Ye(r.k),x=Ye(y),P=ee.size(l)/C/b,R=[{type:12,data:P},{type:12,data:r.k},{type:12,data:r.n},{type:12,data:r.accuracyLevel},{type:12,data:r.bits},{type:12,data:r.blockSize}],E=t.slice();E.splice(-1,1,r.k/m);let k=ee.convertShape(e[1].dims).slice();k.splice(-1,1,y/x),R.push(...le(E)),R.push(...le(k)),R.push(...le(e[2].dims)),e.length===4&&R.push(...le(ee.convertShape(e[3].dims)));let U=l.slice();U.splice(-1,1,r.n/C),R.push(...le(U));let j=B=>{let V=Q("a",e[0].dataType,E.length,m),N=Q("b",12,k.length,x),J=Q("scales",e[2].dataType,e[2].dims.length),Y=[V,N,J],te=e.length===4?Q("zero_points",12,e[3].dims.length):void 0;te&&Y.push(te);let q=oe("output",e[0].dataType,l.length,C),se=[{name:"output_size",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}],de=Math.floor((r.k+r.blockSize-1)/r.blockSize),ke=He(e[0].dataType),Ve=(()=>{switch(m){case 1:return`array<${ke}, 8>`;case 2:return`mat4x2<${ke}>`;case 4:return`mat2x4<${ke}>`;default:throw new Error(`${m}-component is not supported.`)}})(),Fe=`\n        fn dequantize(quantized: ${Ve}, zero_point: ${ke}, scale: ${ke}) -> ${Ve} {\n          ${(()=>m===1?`var dequantized = ${Ve}(${Array.from({length:8},(ge,je)=>`(quantized[${je}] - zero_point) * scale`).join(", ")});\n              return dequantized;`:`var zero_points: ${Ve} = ${Ve}(${Array(8).fill("zero_point").join(",")});\n              return (quantized - zero_points) * scale;`)()}\n        }`,Ae=`\n        fn ortUnpack8x4snorm(value: u32) -> ${Ve} {\n          var quantized: ${Ve};\n          var offset: u32 = 0;\n          let count: u32 = 4;\n          for (var i: u32 = 0; i < 8u; i++) {\n            var result = ${ke}(extractBits(value, offset, count));\n            ${(()=>{switch(m){case 1:return"quantized[i] = result;";case 2:return"quantized[i / 2][i % 2] = result;";case 4:return"quantized[i / 4][i % 4] = result;";default:throw new Error(`${m}-component is not supported.`)}})()}\n            offset += count;\n          }\n          return quantized;\n        }`,Te=te?`\n          zero_point_offset += 4;\n          if (zero_point_offset == 32) {\n            zero_point_offset = 0;\n            zero_point_index++;\n            zero_point_word = ${te.getByOffset("zero_point_index")};\n          }`:"";return`\n        ${Fe};\n        ${Ae};\n        ${B.registerUniforms(se).declareVariables(...Y,q)}\n        ${B.mainStart()}\n          ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var output_values: array<${q.type.value}, ${b}>;\n          var output_indices = ${q.offsetToIndices("global_idx")};\n          var n = ${q.indicesGet("output_indices",s-1)};\n          var m = ${q.indicesGet("output_indices",s-2)};\n          var a_indices: ${V.type.indices} = output_indices;\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${te?`\n          var zero_point_index: u32 = n * ${C} * ((${de} + 1) / 2) / 4;\n          var zero_point_word: u32 = ${te.getByOffset("zero_point_index")};\n          var zero_point_offset: u32 = 0;`:""}\n          var scale_index = n * ${de*C};\n          var b_indices: ${N.type.indices};\n          for (var c: u32 = 0; c < ${C}; c++) {\n            ${N.indicesSet("b_indices","0",`n * ${C} + c`)};\n            var block_offset: u32 = 0;\n            for (var block: u32 = 0; block < ${de}; block++) {\n              // The scale and zero points are computed per block.\n              let scale = ${J.getByOffset("scale_index")};\n              // The default zero point is 8 for unsigned 4-bit quantization.\n              let zero_point = ${ke}(${te?"extractBits(zero_point_word, zero_point_offset, 4)":8});\n              ${N.indicesSet("b_indices","1","block")};\n              var word_offset: u32 = block_offset;\n              for (var word: u32 = 0; word < ${y}; word += ${x}) {\n                ${N.indicesSet("b_indices","2","word")};\n                let b_data = ${N.getByIndices("b_indices")};\n                for (var i: u32 = 0; i < ${x}; i++) {\n                  let b_value = ${x===1?"b_data":"b_data[word + i]"};\n                  let b_quantized_values: ${Ve} = ortUnpack8x4snorm(b_value);\n                  let b_dequantized_values = dequantize(b_quantized_values, zero_point, scale);\n                  // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n                  var offset: u32 = word_offset;\n                  for (var j: u32 = 0; j < 8/${m}; j++) {\n                    ${V.indicesSet("a_indices",s-1,`offset/${m}`)};\n                    for (var k: u32 = 0; k < ${b}u; k++) {\n                      ${V.indicesSet("a_indices",s-2,`m * ${b} + k`)};\n                      let a_data = ${V.getByIndices("a_indices")};\n                      output_values[k]${C>1?"[c]":""} += ${m===1?"a_data * b_dequantized_values[j]":"dot(a_data, b_dequantized_values[j])"};\n                    }\n                    offset += ${m};\n                  }\n                  word_offset += 8;\n                }\n              }\n              scale_index++;\n              ${Te}\n              block_offset += uniforms.block_size;\n            }\n            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.\n            ${te?`if (zero_point_offset % 8 > 0) {\n                ${Te}\n              }`:""}\n            }\n            for (var k: u32 = 0u; k < ${b}u; k++) {\n              ${q.indicesSet("output_indices",s-2,`${b+" * m + k"}`)};\n              ${q.setByIndices("output_indices","output_values[k]")}\n            }\n        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.cacheKey};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:l,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(P/64)},programUniforms:R}),getShaderSource:j}},fd=(e,r)=>{Ig(e.inputs,r),e.compute(Tg(e.inputs,r))},pd=e=>ze(e)});var Eg,gd,hd,Pg,oa,yd,bd=ue(()=>{"use strict";xe();Ue();ft();qi();Ho();Me();Fr();Eg=(e,r)=>{let t=e[0],s=e[1],l=e[2],f=e[3],d=e[4],y=e[5],b=e[6],C=e[7];if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let m=!1,x=t.dims[0],P=t.dims[1],R=t.dims.length===3?m?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],E=P,k=0,U=0,j=Math.floor(R/r.numHeads);if(b&&C){if(b.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(C.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');k=b.dims[2],U=b.dims[2]}else if(b||C)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let B;if(s){if(t.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(s.dims.length<3||s.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(t.dims[0]!==s.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(s.dims.length===3){if(s.dims[2]!==t.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');B=2,E=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==j)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(l)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');B=5,E=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==j)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');B=0,E=s.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');B=3}if(f){if(f.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(l&&t.dims.length===5&&t.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let V=0;if(d){V=8;let q=d.dims;throw q.length===1?q[0]===x?V=1:q[0]===3*x+2&&(V=3):q.length===2&&q[0]===x&&q[1]===E&&(V=5),V===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let N=!1,J=R;if(l){if(l.dims.length!==3&&l.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(t.dims[0]!==l.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(l.dims.length===3){if(E!==l.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');J=l.dims[2]}else{if(E!==l.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');J=l.dims[1]*l.dims[3],N=!0}}let Y=k+E,te=!1;if(d)throw new Error("Key padding mask is not supported");if(y)throw new Error("extraAddQk is not supported");if(b)throw new Error("pastKey is not supported");if(C)throw new Error("pastValue is not supported");return{batchSize:x,sequenceLength:P,pastSequenceLength:k,kvSequenceLength:E,totalSequenceLength:Y,maxSequenceLength:U,inputHiddenSize:0,hiddenSize:R,vHiddenSize:J,headSize:j,vHeadSize:Math.floor(J/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:V,scale:r.scale,broadcastResPosBias:te,passPastInKv:N,qkvFormat:B}},gd=e=>ze({...e}),hd=ze({perm:[0,2,1,3]}),Pg=(e,r,t,s,l,f,d)=>{let y=[s,l,f],b=ee.size(y),C=[{type:12,data:b},{type:12,data:d},{type:12,data:f}],m=x=>{let P=oe("qkv_with_bias",r.dataType,y),R=Q("qkv",r.dataType,y),E=Q("bias",t.dataType,y),k=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${x.registerUniforms(k).declareVariables(R,E,P)}\n  ${x.mainStart()}\n    ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:y,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:C}),getShaderSource:m},{inputs:[r,t],outputs:[-1]})[0]},oa=(e,r,t,s,l,f,d,y)=>{let b=f;if(d){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return b=Pg(e,f,d,r,s,t*l,y),b=b.reshape([r,s,t,l]),e.compute(Ot(b,hd.perm),{inputs:[b],outputs:[-1]})[0]}else return f.dims.length===3&&(b=f.reshape([r,s,t,l])),e.compute(Ot(b,hd.perm),{inputs:[b],outputs:[-1]})[0]},yd=(e,r)=>{let t=Eg(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let s=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,l=oa(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,e.inputs[0],e.inputs[3],0);if(s)return ro(e,l,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],t,r);let f=oa(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,e.inputs[1],e.inputs[3],t.hiddenSize),d=oa(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,e.inputs[2],e.inputs[3],2*t.hiddenSize);ro(e,l,f,d,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],t,r)}});var Og,kg,Rg,Bg,Dg,Mg,zg,Ug,vd,wd=ue(()=>{"use strict";xe();Ue();Me();Og=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},kg=(e,r,t)=>{let s="";for(let l=r-1;l>=0;--l)s+=`\n            k = i32(${e.indicesGet("indices",l)}) - ${$e("uniforms.pads",l,t)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${$e("uniforms.x_shape",l,r)})) {\n              break;\n            }\n            offset += k * i32(${$e("uniforms.x_strides",l,r)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${s}\n            value = x[offset];\n          }\n      `},Rg=(e,r,t)=>{let s="";for(let l=r-1;l>=0;--l)s+=`\n                k = i32(${e.indicesGet("indices",l)}) - ${$e("uniforms.pads",l,t)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${$e("uniforms.x_shape",l,r)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${$e("uniforms.x_shape",l,r)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${$e("uniforms.x_strides",l,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${s}\n              value = x[offset];\n          `},Bg=(e,r,t)=>{let s="";for(let l=r-1;l>=0;--l)s+=`\n                k = i32(${e.indicesGet("indices",l)}) - ${$e("uniforms.pads",l,t)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${$e("uniforms.x_shape",l,r)})) {\n                  k = i32(${$e("uniforms.x_shape",l,r)}) - 1;\n                }\n                offset += k * i32(${$e("uniforms.x_strides",l,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${s}\n              value = x[offset];\n          `},Dg=(e,r,t)=>{let s="";for(let l=r-1;l>=0;--l)s+=`\n                k = i32(${e.indicesGet("indices",l)}) - ${$e("uniforms.pads",l,t)};\n                if (k < 0)  {\n                  k += i32(${$e("uniforms.x_shape",l,r)}]);\n                }\n                if (k >= i32(${$e("uniforms.x_shape",l,r)})) {\n                  k -= i32(${$e("uniforms.x_shape",l,r)});\n                }\n                offset += k * i32(${$e("uniforms.x_strides",l,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${s}\n              value = x[offset];\n          `},Mg=(e,r,t)=>{switch(t.mode){case 0:return kg(e,r,t.pads.length);case 1:return Rg(e,r,t.pads.length);case 2:return Bg(e,r,t.pads.length);case 3:return Dg(e,r,t.pads.length);default:throw new Error("Invalid mode")}},zg=(e,r)=>{let t=ee.padShape(e[0].dims.slice(),r.pads),s=e[0].dims,l=ee.size(t),f=[{type:12,data:l},{type:12,data:r.pads}];r.mode===0&&f.push({type:e[0].dataType,data:r.value}),f.push(...le(e[0].dims,t));let d=["rank"],y=b=>{let C=oe("output",e[0].dataType,t.length),m=Q("x",e[0].dataType,s.length),x=m.type.value,P=Mg(C,s.length,r),R=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&R.push({name:"constant_value",type:x}),`\n            ${b.registerUniforms(R).declareVariables(m,C)}\n            ${b.mainStart()}\n            ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${C.offsetToIndices("global_idx")};\n\n            var value = ${x}(0);\n            ${P}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ee.size(t)/64)},programUniforms:f}),getShaderSource:y}},Ug=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,l=e[0].dims.length,f=new Int32Array(2*l).fill(0);if(e.length>=4){let y=e[3].getBigInt64Array();for(let b=0;b<y.length;b++)f[Number(y[b])]=Number(t[b]),f[Number(y[b])+l]=Number(t[b+y.length])}else t.forEach((y,b)=>f[Number(b)]=Number(y));let d=[];return f.forEach(y=>d.push(y)),{mode:r.mode,value:s,pads:d}}else return r},vd=(e,r)=>{Og(e.inputs);let t=Ug(e.inputs,r);e.compute(zg(e.inputs,t),{inputs:[0]})}});var mo,_d,$d,Cd,Sd,jg,Vg,xd,Ad,Id,Td,Ed,Pd,Od,kd,Rd,Bd,Dd,Md,zd=ue(()=>{"use strict";Hr();xe();Ue();Me();mo=e=>{if(Gr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},_d=(e,r,t)=>{let s=r.format==="NHWC",l=e.dims.slice();s&&l.splice(1,0,l.pop());let f=Object.hasOwnProperty.call(r,"dilations"),d=r.kernelShape.slice(),y=r.strides.slice(),b=f?r.dilations.slice():[],C=r.pads.slice();yr.adjustPoolAttributes(t,l,d,y,b,C);let m=yr.computePoolOutputShape(t,l,y,b,d,C,r.autoPad),x=Object.assign({},r);f?Object.assign(x,{kernelShape:d,strides:y,pads:C,dilations:b,cacheKey:r.cacheKey}):Object.assign(x,{kernelShape:d,strides:y,pads:C,cacheKey:r.cacheKey});let P=m.slice();return P.push(P.splice(1,1)[0]),[x,s?P:m]},$d=(e,r)=>{let t=r.format==="NHWC",s=ee.size(e),l=ee.size(r.kernelShape),f=[{type:12,data:s},{type:12,data:l}],d=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let y=r.kernelShape[r.kernelShape.length-1],b=r.strides[r.strides.length-1],C=r.pads[r.pads.length/2-1],m=r.pads[r.pads.length-1],x=!!(C+m);f.push({type:12,data:y},{type:12,data:b},{type:12,data:C},{type:12,data:m}),d.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let P=!1;if(r.kernelShape.length===2){let R=r.kernelShape[r.kernelShape.length-2],E=r.strides[r.strides.length-2],k=r.pads[r.pads.length/2-2],U=r.pads[r.pads.length-2];P=!!(k+U),f.push({type:12,data:R},{type:12,data:E},{type:12,data:k},{type:12,data:U}),d.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[f,d,!0,x,P]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let y=ee.computeStrides(r.kernelShape);f.push({type:12,data:y},{type:12,data:r.pads},{type:12,data:r.strides}),d.push({name:"kernelStrides",type:"u32",length:y.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let b=r.pads.reduce((C,m)=>C+m);return[f,d,!!b,!1,!1]}},Cd=(e,r,t,s,l,f,d,y,b,C,m,x)=>{let P=l.format==="NHWC",R=r.type.value,E=oe("output",r.type.tensor,s);if(l.kernelShape.length<=2){let k="",U="",j="",B=t-(P?2:1);if(m?k=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${B}] = indices[${B}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${B}] < 0 || xIndices[${B}]\n                      >= uniforms.x_shape[${B}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${r.indicesToOffset("xIndices")}];\n                  ${f}\n                }`:k=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${B}] = indices[${B}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${r.indicesToOffset("xIndices")}];\n                  ${f}\n                }`,l.kernelShape.length===2){let N=t-(P?3:2);x?U=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${N}] = indices[${N}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${N}] < 0 || xIndices[${N}] >= uniforms.x_shape[${N}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:U=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${N}] = indices[${N}] * uniforms.sh - uniforms.phStart + j;\n                `,j=`\n              }\n            `}return`\n            ${e.registerUniforms(b).declareVariables(r,E)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${E.offsetToIndices("global_idx")};\n              var xIndices = ${E.offsetToIndices("global_idx")};\n\n              var value = ${R}(${y});\n              var pad = 0;\n              ${U}\n              ${k}\n              ${j}\n              ${d}\n\n              output[global_idx] = value;\n            }`}else{if(P)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let k=l.kernelShape.length,U=l.pads.length,j="";return C?j=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${r.indicesToOffset("xIndices")}];\n                ${f}\n              }`:j=`\n              }\n              let x_val = x[${r.indicesToOffset("xIndices")}];\n              ${f}\n            `,`\n            ${e.registerUniforms(b).declareVariables(r,E)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${E.offsetToIndices("global_idx")};\n              var xIndices = ${E.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${k}>;\n\n              var value = ${R}(${y});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${k-1}u; j++) {\n                  offsets[j] = offset / ${$e("uniforms.kernelStrides","j",k)};\n                  offset -= offsets[j] * ${$e("uniforms.kernelStrides","j",k)};\n                }\n                offsets[${k-1}] = offset;\n\n                isPad = false;\n                for (var j = ${t-k}u; j < ${t}u; j++) {\n                  xIndices[j] = indices[j] * ${$e("uniforms.strides",`j - ${t-k}u`,k)}\n                    + offsets[j - ${t-k}u] - ${$e("uniforms.pads","j - 2u",U)};\n                  ${j}\n              }\n              ${d}\n\n              output[global_idx] = value;\n            }`}},Sd=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,jg=e=>`${Sd(e)};${e.countIncludePad}`,Vg=e=>`${Sd(e)};${e.storageOrder};${e.dilations}`,xd=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Ad=(e,r,t,s)=>{let[l,f]=_d(r,s,t),d=Q("x",r.dataType,r.dims.length),y=d.type.value,b="value += x_val;",C="";l.countIncludePad?C+=`value /= ${y}(uniforms.kernelSize);`:C+=`value /= ${y}(i32(uniforms.kernelSize) - pad);`;let[m,x,P,R,E]=$d(f,l);m.push(...le(r.dims,f));let k=["rank"];return{name:e,shaderCache:{hint:`${s.cacheKey};${P};${R};${E}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:f,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ee.size(f)/64)},programUniforms:m}),getShaderSource:U=>Cd(U,d,r.dims.length,f.length,l,b,C,0,x,P,R,E)}},Id=e=>{let r=e.count_include_pad!==0,t=xd(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:r,...t,cacheKey:""};return{...s,cacheKey:jg(s)}},Td=(e,r)=>{mo(e.inputs),e.compute(Ad("AveragePool",e.inputs[0],!1,r))},Ed={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Pd=e=>{let r=e.format;return{format:r,...Ed,cacheKey:r}},Od=(e,r)=>{mo(e.inputs),e.compute(Ad("GlobalAveragePool",e.inputs[0],!0,r))},kd=(e,r,t,s)=>{let[l,f]=_d(r,s,t),d=`\n      value = max(x_val, value);\n    `,y="",b=Q("x",r.dataType,r.dims.length),C=["rank"],[m,x,P,R,E]=$d(f,l);return m.push(...le(r.dims,f)),{name:e,shaderCache:{hint:`${s.cacheKey};${P};${R};${E}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:f,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ee.size(f)/64)},programUniforms:m}),getShaderSource:k=>Cd(k,b,r.dims.length,f.length,l,d,y,-1e5,x,P,R,E)}},Rd=(e,r)=>{mo(e.inputs),e.compute(kd("MaxPool",e.inputs[0],!1,r))},Bd=e=>{let r=e.storage_order,t=e.dilations,s=xd(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let l={storageOrder:r,dilations:t,...s,cacheKey:""};return{...l,cacheKey:Vg(l)}},Dd=e=>{let r=e.format;return{format:r,...Ed,cacheKey:r}},Md=(e,r)=>{mo(e.inputs),e.compute(kd("GlobalMaxPool",e.inputs[0],!0,r))}});var Wg,Gg,Ud,jd=ue(()=>{"use strict";Hr();xe();Me();Wg=(e,r,t)=>{let s=e===r,l=e<r&&t<0,f=e>r&&t>0;if(s||l||f)throw new Error("Range these inputs\' contents are invalid.")},Gg=(e,r,t,s)=>{let l=Math.abs(Math.ceil((r-e)/t)),f=[l],d=l,y=[{type:12,data:d},{type:s,data:e},{type:s,data:t},...le(f)],b=C=>{let m=oe("output",s,f.length),x=m.type.value,P=[{name:"outputSize",type:"u32"},{name:"start",type:x},{name:"delta",type:x}];return`\n        ${C.registerUniforms(P).declareVariables(m)}\n        ${C.mainStart()}\n        ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${x}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:b,getRunData:()=>({outputs:[{dims:f,dataType:s}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y})}},Ud=e=>{let r=0,t=0,s=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),Gr.webgpu.validateInputContent&&Wg(r,t,s),e.compute(Gg(r,t,s,e.inputs[0].dataType),{inputs:[]})}});var Hg,Lg,Fg,qg,Kg,Jg,Yg,Zg,Xg,Qg,ey,Vd,ty,ry,ny,iy,oy,Nd,Wd,Gd=ue(()=>{"use strict";xe();Ue();ft();Me();Hg=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Lg=(e,r,t)=>{r.every(l=>l>=0&&l<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(t).fill(1);return r.forEach((l,f)=>s[l]=e[f]),s},Fg=(e,r,t,s,l,f)=>{let[d,y,b]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],C=e[0].dims.length;if(d>0&&e.length>d&&e[d].dims.length>0)e[d].getFloat32Array().forEach(m=>f.push(m));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(y>0&&e.length>y&&e[y].dims.length>0){if(e[y].getFloat32Array().forEach(m=>s.push(m)),s.length!==0&&s.length!==C&&t>=18&&s.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Hg(s,r),r.axes.length>0&&Lg(s,r.axes,C).forEach((m,x)=>s[x]=m)}if(b>0&&e.length>b&&(e[b].getBigInt64Array().forEach(m=>l.push(Number(m))),l.length!==C||t>=18&&l.length===r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(s.length!==r.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(l.length!==r.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof s<"u"&&typeof l<"u"&&s.length>0&&l.length>C)throw new Error("Resize requires only of scales or sizes to be specified")},qg=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`return ${r}(xResized) / ${r}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${r}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${r}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${r}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +\n                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /\n                        ${r}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);\n                  const adjustment = ${r}(lengthResized) / outputWidth;\n                  const center = ${r}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Kg=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Jg=(e,r,t)=>{let s=new Array(t).fill(0).concat(new Array(t).fill(1)),l=e.length===0?s:e.slice();return r.length>0?(r.forEach((f,d)=>{s[f]=l[d],s[d+t]=l[r.length+d]}),s):l},Yg=(e,r,t,s)=>{let l=[];if(t.length>0)if(s.length>0){if(e.forEach(f=>l.push(f)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((f,d)=>l[f]=t[d])}else t.forEach(f=>l.push(f));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");l=e.map((f,d)=>Math.round(f*r[d]))}return l},Zg=(e,r,t)=>{let s=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(f=>r[f]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(f=>r[f]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let l=e.slice();return t.axes.length>0?(t.axes.forEach(f=>r[f]=s),t.axes.forEach(f=>l[f]=Math.round(e[f]*r[f]))):(r.fill(s,0,r.length),l.forEach((f,d)=>l[d]=Math.round(f*r[d]))),l},Xg=(e,r,t,s,l)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {\n      var original_indices: array<${e.type.value}, ${t.length}>;\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${$e("uniforms.scales","i",s)};\n        var roi_low = ${$e("uniforms.roi","i",l)};\n        var roi_hi = ${$e("uniforms.roi",`i + ${r.length}`,l)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${$e("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${$e("uniforms.output_shape","i",t.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,Qg=(e,r,t,s,l,f,d)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${s.length}; i++) {\n        var output_index = ${r.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${$e("uniforms.scales","i",l)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${$e("uniforms.roi","i",f)};\n          var roi_hi = ${$e("uniforms.roi",`i + ${t.length}`,f)};\n          var input_shape_i = ${$e("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${$e("uniforms.output_shape","i",s.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${d} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,ey=(e,r)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${$e("uniforms.input_shape","i",r.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Vd=(e,r,t,s)=>e.rank>s?`\n    ${e.indicesSet("input_indices",r,"channel")};\n    ${e.indicesSet("input_indices",t,"batch")};\n`:"",ty=(e,r,t,s,l)=>{let[d,y,b,C]=t.length===2?[-1,0,1,-1]:[0,2,3,1],m=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${m} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",y,`max(0, min(row, ${t[y]} - 1))`)};\n      ${e.indicesSet("input_indices",b,`max(0, min(col, ${t[b]} - 1))`)};\n      ${Vd(e,C,d,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${m} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${m} = originalIndices[${y}];\n      var col:${m} = originalIndices[${b}];\n      ${s?`if (row < 0 || row > (${t[y]} - 1) || col < 0 || col > (${t[b]} - 1)) {\n        return ${l};\n      }`:""};\n      row = max(0, min(row, ${t[y]} - 1));\n      col = max(0, min(col, ${t[b]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${t.length>2?`u32(originalIndices[${C}])`:"0"};\n      var batch: u32 =  ${t.length>2?`u32(originalIndices[${d}])`:"0"};\n      var x11: ${m} = getInputValue(batch, channel, row1, col1);\n      var x12: ${m} = getInputValue(batch, channel, row1, col2);\n      var x21: ${m} = getInputValue(batch, channel, row2, col1);\n      var x22: ${m} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${m} = abs(row - ${m}(row1));\n      var dx2: ${m} = abs(${m}(row2) - row);\n      var dy1: ${m} = abs(col - ${m}(col1));\n      var dy2: ${m} = abs(${m}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},ry=(e,r,t,s,l,f,d,y,b,C)=>{let m=t.length===2,x=!0,[P,R]=m?[0,1]:x?[2,3]:[1,2],E=e.type.value,k=U=>{let j=U===P?"row":"col";return`\n      fn ${j}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${E} {\n        var output_index = ${r.indicesGet("output_indices",U)};\n        var originalIdx: ${E} = getOriginalCoordinateFromResizedCoordinate(output_index, ${l[U]},\n        ${s[U]}, ${t[U]}, ${f[U]}, ${f[U]} + ${t.length});\n        var fractOriginalIdx: ${E} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${y} && (originalIdx < 0 || originalIdx > (${t[U]} - 1))) {\n          return ${b};\n        }\n        var data: array<${E}, 4> = array<${E}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${j}: ${E} = originalIdx + ${E}(i);\n          if (${j} < 0 || ${j} >= ${t[U]}) {\n            ${(()=>C?`coefs[i + 1] = 0.0;\n                        continue;`:y?`return ${b};`:`${j} = max(0, min(${j}, ${t[U]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",U,`u32(${j})`)};\n          data[i + 1] = ${U===P?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${k(P)};\n    ${k(R)};\n  fn getCubicInterpolationCoefs(s: ${E}) -> array<${E}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${E}, 4> = array<${E}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${E} = 1.0 - absS;\n    var twoMinusAbsS: ${E} = 2.0 - absS;\n    var onePlusAbsS: ${E} = 1.0 + absS;\n    coeffs[0] = ((${d} * onePlusAbsS - 5 * ${d}) * onePlusAbsS + 8 * ${d}) * onePlusAbsS - 4 * ${d};\n    coeffs[1] = ((${d} + 2) * absS - (${d} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${d} + 2) * oneMinusAbsS - (${d} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${d} * twoMinusAbsS - 5 * ${d}) * twoMinusAbsS + 8 * ${d}) * twoMinusAbsS - 4 * ${d};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${E}, 4>, coefs: array<${E}, 4>) -> ${E} {\n    var coefsSum: ${E} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${E} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},ny=(e,r,t,s,l)=>{let[d,y,b,C,m]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],x=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${x} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",y,`max(0, min(depth, ${t[y]} - 1))`)};\n      ${e.indicesSet("input_indices",b,`max(0, min(height, ${t[b]} - 1))`)};\n      ${e.indicesSet("input_indices",C,`max(0, min(width, ${t[C]} - 1))`)};\n      ${Vd(e,m,d,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${x} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${x} = originalIndices[${y}];\n      var height:${x} = originalIndices[${b}];\n      var width:${x} = originalIndices[${C}];\n      ${s?`if (depth < 0 || depth > (${t[y]} - 1) || height < 0 || height > (${t[b]} - 1) || width < 0 || (width > ${t[C]} - 1)) {\n      return ${l};\n        }`:""};\n\n    depth = max(0, min(depth, ${t[y]} - 1));\n      height = max(0, min(height, ${t[b]} - 1));\n      width = max(0, min(width, ${t[C]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${t.length>3?`u32(originalIndices[${m}])`:"0"};\n      var batch: u32 =  ${t.length>3?`u32(originalIndices[${d}])`:"0"};\n\n      var x111: ${x} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${x} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${x} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${x} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${x} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${x} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${x} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${x} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${x} = abs(depth - ${x}(depth1));\n      var dx2: ${x} = abs(${x}(depth2) - depth);\n      var dy1: ${x} = abs(height - ${x}(height1));\n      var dy2: ${x} = abs(${x}(height2) - height);\n      var dz1: ${x} = abs(width - ${x}(width1));\n      var dz2: ${x} = abs(${x}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},iy=(e,r,t,s,l,f)=>{let d=e.dims,y=Jg(f,r.axes,d.length),b=Yg(d,s,l,r.axes),C=s.slice();s.length===0&&(C=d.map((B,V)=>B===0?1:b[V]/B),r.keepAspectRatioPolicy!=="stretch"&&(b=Zg(d,C,r)));let m=oe("output",e.dataType,b.length),x=Q("input",e.dataType,d.length),P=ee.size(b),R=d.length===b.length&&d.every((B,V)=>B===b[V]),E=r.coordinateTransformMode==="tf_crop_and_resize",k=r.extrapolationValue,U=x.type.value,j=B=>`\n      ${R?"":`\n      ${qg(r.coordinateTransformMode,U)};\n      ${(()=>{switch(r.mode){case"nearest":return`\n              ${ey(x,d)};\n              ${Kg(r.nearestMode,t,U)};\n              ${Qg(x,m,d,b,C.length,y.length,E)};\n              `;case"linear":return`\n              ${Xg(m,d,b,C.length,y.length)};\n              ${(()=>{if(d.length===2||d.length===4)return`${ty(x,m,d,E,k)}`;if(d.length===3||d.length===5)return`${ny(x,m,d,E,k)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(d.length===2||d.length===4)return`${ry(x,m,d,b,C,y,r.cubicCoeffA,E,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${B.registerUniform("output_size","u32").registerUniform("scales","f32",C.length).registerUniform("roi","f32",y.length).declareVariables(x,m)}\n      ${B.mainStart()}\n        ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${R?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${m.offsetToIndices("global_idx")};\n        var input_indices: ${x.type.indices};\n        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${x.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${r.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${d.length===2||d.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${C.length>0?C:""}|${l.length>0?l:""}|${y.length>0?y:""}|${R}|${d}`,inputDependencies:["rank"]},getShaderSource:j,getRunData:()=>({outputs:[{dims:b,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(P/64)},programUniforms:[{type:12,data:P},{type:1,data:C},{type:1,data:y},...le(d,b)]})}},oy=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},Nd=(e,r)=>{let t=[],s=[],l=[],f=oy(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Fg(e.inputs,r,f,t,s,l),e.compute(iy(e.inputs[0],r,f,t,s,l),{inputs:[0]})},Wd=e=>{let r=e.antialias,t=e.axes,s=e.coordinateTransformMode,l=e.cubicCoeffA,f=e.excludeOutside!==0,d=e.extrapolationValue,y=e.keepAspectRatioPolicy,b=e.mode,C=e.nearestMode===""?"simple":e.nearestMode;return ze({antialias:r,axes:t,coordinateTransformMode:s,cubicCoeffA:l,excludeOutside:f,extrapolationValue:d,keepAspectRatioPolicy:y,mode:b,nearestMode:C})}});var ay,sy,Hd,Ld=ue(()=>{"use strict";xe();Ue();Me();ay=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],s=e[2];if(r.dataType!==t.dataType||r.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let l=r.dims[r.dims.length-1],f=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==l)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==f)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==l)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let d=e[3];if(d.dims.length!==1)throw new Error("Beta must be 1D");if(d.dims[d.dims.length-1]!==l)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let d=e[4];if(d.dims.length!==1)throw new Error("Bias must be 1D");if(d.dims[d.dims.length-1]!==l)throw new Error("Bias must have the same hidden size as input")}},sy=(e,r,t,s)=>{let l=e[0].dims,f=ee.size(l),d=l,y=f,b=l.slice(-1)[0],C=s?l.slice(0,-1).concat(1):[],m=e.length>3,x=e.length>4,P=s&&t>1,R=s&&t>2,E=t>3,k=Ye(b),U=[{type:12,data:y},{type:12,data:k},{type:12,data:b},{type:1,data:r.epsilon}],j=V=>{let N=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],J=[Q("x",e[0].dataType,e[0].dims,k),Q("skip",e[1].dataType,e[1].dims,k),Q("gamma",e[2].dataType,e[2].dims,k)];m&&J.push(Q("beta",e[3].dataType,e[3].dims,k)),x&&J.push(Q("bias",e[4].dataType,e[4].dims,k)),J.push(oe("output",e[0].dataType,d,k)),P&&J.push(oe("mean_output",1,C)),R&&J.push(oe("inv_std_output",1,C)),E&&J.push(oe("input_skip_bias_sum",e[0].dataType,d,k));let Y=He(e[0].dataType);return`\n\n      ${V.registerUniforms(N).declareVariables(...J)}\n\n      ${V.mainStart()}\n        ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${pt("f32",k)};\n        var squareSum = ${pt("f32",k)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${x?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${E?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${Bt(Y,k,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${$t("sum",k)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${$t("squareSum",k)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${P?"mean_output[global_idx] = mean;":""}\n        ${R?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${Y}(mean)) * ${Y}(inv_std_dev) * gamma[i] + ${m?"beta[i]":"0.0"};\n        }\n      }`},B=[{dims:d,dataType:e[0].dataType}];return t>1&&B.push({dims:C,dataType:1}),t>2&&B.push({dims:C,dataType:1}),t>3&&B.push({dims:l,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${k};${P};${R};${E}`,inputDependencies:e.map((V,N)=>"type")},getShaderSource:j,getRunData:()=>({outputs:B,dispatchGroup:{x:Math.ceil(y/b/64)},programUniforms:U})}},Hd=(e,r)=>{ay(e.inputs);let s=[0];e.outputCount>1&&s.push(-3),e.outputCount>2&&s.push(-3),e.outputCount>3&&s.push(3),e.compute(sy(e.inputs,r,e.outputCount,!1),{outputs:s})}});var uy,ho,ly,Fd,dy,cy,qd,Kd,Jd=ue(()=>{"use strict";xe();Ue();ft();Me();uy=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},ho=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(s=>t.push(Number(s)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(s=>t.push(Number(s)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},ly=(e,r)=>{if(e.length>1){let t=ho(e,1),s=ho(e,2),l=ho(e,3);return l.length===0&&(l=[...Array(e[0].dims.length).keys()]),ze({starts:t,ends:s,axes:l})}else return r},Fd=(e,r,t,s,l)=>{let f=e;return e<0&&(f+=t[s[r]]),l[r]<0?Math.max(0,Math.min(f,t[s[r]]-1)):Math.max(0,Math.min(f,t[s[r]]))},dy=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${t.length}; i >= 0; i--) {\n            let input_shape_i = ${$e("uniforms.input_shape","i",t.length)};\n            let steps_i = ${$e("uniforms.steps","i",t.length)};\n            let signs_i = ${$e("uniforms.signs","i",t.length)};\n            let starts_i = ${$e("uniforms.starts","i",t.length)};\n            var output_index = ${r.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,cy=(e,r)=>{let t=e[0].dims,s=ee.size(t),l=r.axes.length>0?ee.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],f=ho(e,4);f.forEach(j=>j!==0||(()=>{throw new Error("step cannot be 0")})),f.length===0&&(f=Array(l.length).fill(1));let d=r.starts.map((j,B)=>Fd(j,B,t,l,f)),y=r.ends.map((j,B)=>Fd(j,B,t,l,f));if(l.length!==d.length||l.length!==y.length)throw new Error("start, ends and axes should have the same number of elements");if(l.length!==t.length)for(let j=0;j<t.length;++j)l.includes(j)||(d.splice(j,0,0),y.splice(j,0,t[j]),f.splice(j,0,1));let b=f.map(j=>Math.sign(j));f.forEach((j,B,V)=>{if(j<0){let N=(y[B]-d[B])/j,J=d[B],Y=J+N*f[B];d[B]=Y,y[B]=J,V[B]=-j}});let C=t.slice(0);l.forEach((j,B)=>{C[j]=Math.ceil((y[j]-d[j])/f[j])});let m={dims:C,dataType:e[0].dataType},x=oe("output",e[0].dataType,C.length),P=Q("input",e[0].dataType,e[0].dims.length),R=ee.size(C),E=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:d.length},{name:"signs",type:"i32",length:b.length},{name:"steps",type:"u32",length:f.length}],k=[{type:12,data:R},{type:12,data:d},{type:6,data:b},{type:12,data:f},...le(e[0].dims,C)],U=j=>`\n      ${j.registerUniforms(E).declareVariables(P,x)}\n        ${dy(P,x,t)}\n        ${j.mainStart()}\n          ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${x.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${x.setByOffset("global_idx",P.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${b.length}_${d.length}_${f.length}`,inputDependencies:["rank"]},getShaderSource:U,getRunData:()=>({outputs:[m],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:k})}},qd=(e,r)=>{uy(e.inputs,r);let t=ly(e.inputs,r);e.compute(cy(e.inputs,t),{inputs:[0]})},Kd=e=>{let r=e.starts,t=e.ends,s=e.axes;return ze({starts:r,ends:t,axes:s})}});var fy,py,Yd,Zd,Xd=ue(()=>{"use strict";xe();Ue();ft();Me();fy=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},py=(e,r)=>{let t=e.dims,s=ee.size(t),l=64,f=r.axis;if(f<0&&(f=t.length+f),f<t.length-1)throw new Error("softmax only supports last axis for now.");let d=t[f],y=s/d,b=Ye(d),C=d/b,m=(U,j)=>j===4?`max(max(${U}.x, ${U}.y), max(${U}.z, ${U}.w))`:j===2?`max(${U}.x, ${U}.y)`:j===3?`max(max(${U}.x, ${U}.y), ${U}.z)`:U,x=Q("x",e.dataType,e.dims,b),P=oe("result",e.dataType,e.dims,b),R=x.type.value,E=He(e.dataType)==="f32"?`var threadMax = ${R}(-3.402823e+38f);`:`var threadMax = ${R}(-65504.0h);`,k=U=>`\n      var<workgroup> rowMaxShared : ${R};\n      var<workgroup> rowSumShared : ${R};\n      var<workgroup> threadShared : array<${R}, ${l}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${R} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${R}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${U.registerUniform("packedCols","i32").declareVariables(x,P)}\n      ${U.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${l};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${E}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${R}(${m("threadShared[0]",b)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${R}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${R}(${$t("threadShared[0]",b)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${b}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.dataType}],dispatchGroup:{x:y},programUniforms:[{type:12,data:C}]}),getShaderSource:k}},Yd=(e,r)=>{fy(e.inputs),e.compute(py(e.inputs[0],r))},Zd=e=>ze({axis:e.axis})});var my,hy,gy,yy,by,Qd,ec,tc=ue(()=>{"use strict";xe();Ue();ft();Me();my=e=>{if(!e||e.length<1)throw new Error("too few inputs")},hy=(e,r)=>{let t=[],s=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(l=>t.push(Number(l))),s=t.length),ze({numOutputs:s,axis:r.axis,splitSizes:t})},gy=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${$e("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,yy=e=>{let r=e.length,t=[];for(let s=0;s<r;++s){let l=e[s].setByIndices("indices","input[global_idx]");r===1?t.push(l):s===0?t.push(`if (output_number == ${s}u) { ${l} }`):s===r-1?t.push(`else { ${l} }`):t.push(`else if (output_number == ${s}) { ${l} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${t.join(`\n`)}\n      }`},by=(e,r)=>{let t=e[0].dims,s=ee.size(t),l=e[0].dataType,f=ee.normalizeAxis(r.axis,t.length),d=new Array(r.numOutputs),y=Q("input",l,t.length),b=new Array(r.numOutputs),C=[],m=[],x=0,P=[{type:12,data:s}];for(let E=0;E<r.numOutputs;E++){x+=r.splitSizes[E],b[E]=x;let k=t.slice();k[r.axis]=r.splitSizes[E],m.push(k),d[E]=oe(`output${E}`,l,k.length),C.push({dims:m[E],dataType:e[0].dataType})}P.push({type:12,data:b},...le(t,...m));let R=E=>`\n  ${E.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",b.length).declareVariables(y,...d)}\n  ${gy(b.length)}\n  ${yy(d)}\n\n  ${E.mainStart()}\n    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${y.offsetToIndices("global_idx")};\n    var index = ${y.indicesGet("indices",f)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${$e("uniforms.size_in_split_axis","output_number - 1u",b.length)};\n      ${y.indicesSet("indices",f,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:R,getRunData:()=>({outputs:C,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:P})}},Qd=(e,r)=>{my(e.inputs);let t=e.inputs.length===1?r:hy(e.inputs,r);e.compute(by(e.inputs,t),{inputs:[0]})},ec=e=>{let r=e.axis,t=e.splitSizes,s=e.numOutputs<0?t.length:e.numOutputs;if(s!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ze({axis:r,numOutputs:s,splitSizes:t})}});var rc,vy,wy,_y,nc,ic=ue(()=>{"use strict";xe();Ue();Me();rc=e=>Array.from(e.getBigInt64Array(),Number),vy=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(rc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},wy=(e,r)=>{let t=[];for(let s=0;s<e.length;++s)t.push(e[s]*r[s]);return t},_y=e=>{let r=e[0].dims,t=rc(e[1]),s=wy(r,t),l=ee.size(s),f=e[0].dataType,d=Q("input",f,r.length),y=oe("output",f,s.length),b=C=>`\n      const inputShape = ${d.indices(...r)};\n      ${C.registerUniform("output_size","u32").declareVariables(d,y)}\n      ${C.mainStart()}\n      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${y.offsetToIndices("global_idx")};\n      var input_indices: ${d.type.indices};\n      for (var i = 0; i < ${r.length}; i++) {\n        let input_dim_i = ${d.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${y.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${d.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${y.setByOffset("global_idx",d.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},...le(e[0].dims,s)]}),getShaderSource:b}},nc=e=>{vy(e.inputs),e.compute(_y(e.inputs),{inputs:[0]})}});var $y,Cy,oc,ac=ue(()=>{"use strict";xe();Ue();Me();$y=(e,r,t,s,l)=>{let f=oe("output_data",l,t.length,4),d=Q("a_data",r[1].dataType,r[1].dims.length,4),y=Q("b_data",r[2].dataType,r[2].dims.length,4),b=Q("c_data",r[0].dataType,r[0].dims.length,4),C,m=(x,P,R)=>`select(${P}, ${x}, ${R})`;if(!s)C=f.setByOffset("global_idx",m(d.getByOffset("global_idx"),y.getByOffset("global_idx"),b.getByOffset("global_idx")));else{let x=(P,R,E="")=>{let k=`a_data[index_a${R}][component_a${R}]`,U=`b_data[index_b${R}][component_b${R}]`,j=`bool(c_data[index_c${R}] & (0xffu << (component_c${R} * 8)))`;return`\n            let output_indices${R} = ${f.offsetToIndices(`global_idx * 4u + ${R}u`)};\n            let offset_a${R} = ${d.broadcastedIndicesToOffset(`output_indices${R}`,f)};\n            let offset_b${R} = ${y.broadcastedIndicesToOffset(`output_indices${R}`,f)};\n            let offset_c${R} = ${b.broadcastedIndicesToOffset(`output_indices${R}`,f)};\n            let index_a${R} = offset_a${R} / 4u;\n            let index_b${R} = offset_b${R} / 4u;\n            let index_c${R} = offset_c${R} / 4u;\n            let component_a${R} = offset_a${R} % 4u;\n            let component_b${R} = offset_b${R} % 4u;\n            let component_c${R} = offset_c${R} % 4u;\n            ${P}[${R}] = ${E}(${m(k,U,j)});\n          `};l===9?C=`\n            var data = vec4<u32>(0);\n            ${x("data",0,"u32")}\n            ${x("data",1,"u32")}\n            ${x("data",2,"u32")}\n            ${x("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:C=`\n            ${x("output_data[global_idx]",0)}\n            ${x("output_data[global_idx]",1)}\n            ${x("output_data[global_idx]",2)}\n            ${x("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(b,d,y,f)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${C}\n      }`},Cy=e=>{let r=e[1].dims,t=e[2].dims,s=e[0].dims,l=e[1].dataType,f=!(ee.areEqual(r,t)&&ee.areEqual(t,s)),d=r,y=ee.size(r);if(f){let C=Vt.calcShape(Vt.calcShape(r,t,!1),s,!1);if(!C)throw new Error("Can\'t perform where op on the given tensors");d=C,y=ee.size(d)}let b=Math.ceil(y/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:C=>$y(C,e,d,f,l),getRunData:()=>({outputs:[{dims:d,dataType:l}],dispatchGroup:{x:Math.ceil(y/64/4)},programUniforms:[{type:12,data:b},...le(s,r,t,d)]})}},oc=e=>{e.compute(Cy(e.inputs))}});var sc,uc=ue(()=>{"use strict";$u();Ho();xu();Iu();cl();$l();xl();Jo();jl();Wl();ql();Yl();Xl();td();id();sd();ld();cd();Zo();md();bd();wd();zd();jd();eo();Gd();Ld();Jd();Xd();tc();ic();Fr();oo();ac();sc=new Map([["Abs",[Tu]],["Acos",[Eu]],["Acosh",[Pu]],["Add",[fl]],["ArgMax",[_u,Go]],["ArgMin",[wu,Go]],["Asin",[Ou]],["Asinh",[ku]],["Atan",[Ru]],["Atanh",[Bu]],["Attention",[Cu]],["AveragePool",[Td,Id]],["BatchNormalization",[Su]],["BiasAdd",[Au]],["BiasSplitGelu",[dl]],["Cast",[Mu,Du]],["Ceil",[Uu]],["Clip",[zu]],["Concat",[Cl,Sl]],["Conv",[ea,Qo]],["ConvTranspose",[Ul,zl]],["Cos",[ju]],["Cosh",[Vu]],["CumSum",[Vl,Nl]],["Div",[pl]],["Einsum",[Ll,Fl]],["Elu",[Nu,no]],["Equal",[ml]],["Erf",[Wu]],["Exp",[Gu]],["Expand",[Jl]],["FastGelu",[Zl]],["Floor",[Hu]],["FusedConv",[ea,Qo]],["Gather",[ed,Ql]],["GatherElements",[nd,rd]],["Gelu",[Lu]],["Gemm",[ad,od]],["GlobalAveragePool",[Od,Pd]],["GlobalMaxPool",[Md,Dd]],["Greater",[bl]],["GreaterOrEqual",[wl]],["HardSigmoid",[Qu,Xu]],["InstanceNormalization",[ud]],["LayerNormalization",[dd]],["LeakyRelu",[Fu,no]],["Less",[vl]],["LessOrEqual",[_l]],["Log",[ul]],["MatMul",[Ol]],["MatMulNBits",[fd,pd]],["MaxPool",[Rd,Bd]],["Mul",[hl]],["MultiHeadAttention",[yd,gd]],["Neg",[Ku]],["Not",[qu]],["Pad",[vd]],["Pow",[gl]],["Range",[Ud]],["Reciprocal",[Ju]],["ReduceMin",[mu]],["ReduceMean",[lu]],["ReduceMax",[pu]],["ReduceSum",[gu]],["ReduceProd",[hu]],["ReduceL1",[du]],["ReduceL2",[cu]],["ReduceLogSum",[bu]],["ReduceLogSumExp",[fu]],["ReduceSumSquare",[yu]],["Relu",[Yu]],["Resize",[Nd,Wd]],["Sigmoid",[Zu]],["Sin",[el]],["Sinh",[tl]],["Slice",[qd,Kd]],["SkipLayerNormalization",[Hd]],["Split",[Qd,ec]],["Sqrt",[rl]],["Softmax",[Yd,Zd]],["Sub",[yl]],["Tan",[nl]],["Tanh",[ol]],["ThresholdedRelu",[sl,no]],["Tile",[nc]],["Transpose",[Ys,Zs]],["Where",[oc]]])});var go,lc=ue(()=>{"use strict";Hr();rr();Me();go=class{constructor(r){this.backend=r;this.repo=new Map,this.attributesBound=!1}getArtifact(r){return this.repo.get(r)}setArtifact(r,t){this.repo.set(r,t)}run(r,t,s,l,f){gr(r.programInfo.name);let d=this.backend.device,y=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let b=[];for(let m of t)b.push({binding:b.length,resource:{buffer:m.buffer}});for(let m of s)b.push({binding:b.length,resource:{buffer:m.buffer}});f&&b.push({binding:b.length,resource:f});let C=d.createBindGroup({layout:r.computePipeline.getBindGroupLayout(0),entries:b,label:r.programInfo.name});if(this.backend.sessionStatus==="capturing"){let m={kernelId:this.backend.currentKernelId,computePipeline:r.computePipeline,bindGroup:C,dispatchGroup:l};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(m)}y.setPipeline(r.computePipeline),y.setBindGroup(0,C),y.dispatchWorkgroups(...l),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),tr(r.programInfo.name)}dispose(){}build(r,t){gr(r.name);let s=this.backend.device,l=[];s.features.has("shader-f16")&&l.push("enable f16;");let f=Ks(t),d=r.getShaderSource(f),y=`${l.join(`\n`)}\n${f.additionalImplementations}\n${d}`,b=s.createShaderModule({code:y,label:r.name});Je("verbose",()=>`[WebGPU] ${r.name} shader code: ${y}`);let C=s.createComputePipeline({compute:{module:b,entryPoint:"main"},layout:"auto",label:r.name});return tr(r.name),{programInfo:r,computePipeline:C}}normalizeDispatchGroupSize(r){let t=typeof r=="number"?r:r.x,s=typeof r=="number"?1:r.y||1,l=typeof r=="number"?1:r.z||1,f=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=f&&s<=f&&l<=f)return[t,s,l];let d=t*s*l,y=Math.ceil(Math.sqrt(d));if(y>f){if(y=Math.ceil(Math.cbrt(d)),y>f)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[y,y,y]}else return[y,y,1]}}});var Sy,xy,aa,yo,dc=ue(()=>{"use strict";Hr();xe();rr();Gs();qs();uc();lc();Sy=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let s=0;s<e.length;++s){let l=e[s].dataType;switch(r[s]){case"none":{t.push("");break}case"type":{t.push(`${l}`);break}case"rank":{let f=e[s].dims.length;t.push(`${l};${f}`);break}case"dims":{let f=e[s].dims.join(",");t.push(`${l};${f}`);break}default:throw new Error(`unsupported input dependency: ${r[s]}`)}}return t.join("|")},xy=(e,r,t)=>{let s=e.name;return e.shaderCache?.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+t+`:${Sy(r,e.shaderCache?.inputDependencies??new Array(r.length).fill("dims"))}`,s},aa=class{constructor(r){r&&(this.architecture=r.architecture,this.vendor=r.vendor)}isArchitecture(r){return this.architecture===r}isVendor(r){return this.vendor===r}},yo=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let r=this.kernelCustomData.get(this.currentKernelId);return r||(r={},this.kernelCustomData.set(this.currentKernelId,r)),r}async initialize(r,t){this.env=r;let s=[],l={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:s};t.features.has("chromium-experimental-timestamp-query-inside-passes")?s.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&s.push("timestamp-query"),t.features.has("shader-f16")&&s.push("shader-f16"),this.device=await t.requestDevice(l),this.adapterInfo=new aa(await t.requestAdapterInfo()),this.gpuDataManager=Fs(this),this.programManager=new go(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Ns(r.logLevel,!!r.debug),this.device.onuncapturederror=f=>{f.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${f.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),Object.defineProperty(this.env.webgpu,"adapter",{value:t}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let r=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=r.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;gr(),this.endComputePass();let r;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),r=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(r,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,r,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&r.mapAsync(GPUMapMode.READ).then(()=>{let t=new BigUint64Array(r.getMappedRange()),s=this.pendingQueries.get(r);for(let l=0;l<t.length/2;l++){let f=s[l],d=f.kernelId,y=this.kernels.get(d),b=y.kernelType,C=y.kernelName,m=f.programName,x=f.inputTensorViews,P=f.outputTensorViews,R=t[l*2],E=t[l*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=R);let k=Number(R-this.queryTimeBase),U=Number(E-this.queryTimeBase);if(!Number.isSafeInteger(k)||!Number.isSafeInteger(U))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:x.map(j=>({dims:j.dims,dataType:er(j.dataType)})),outputsMetadata:P.map(j=>({dims:j.dims,dataType:er(j.dataType)})),kernelId:d,kernelType:b,kernelName:C,programName:m,startTime:k,endTime:U});else{let j="";x.forEach((V,N)=>{j+=`input[${N}]: [${V.dims}] | ${er(V.dataType)}, `});let B="";P.forEach((V,N)=>{B+=`output[${N}]: [${V.dims}] | ${er(V.dataType)}, `}),console.log(`[profiling] kernel "${d}|${b}|${C}|${m}" ${j}${B}execution time: ${U-k} ns`)}Ro("GPU",`${m}::${R}::${E}`)}r.unmap(),this.pendingQueries.delete(r)}),tr()}run(r,t,s,l,f){gr(r.name);let d=[];for(let B=0;B<t.length;++B){let V=t[B].data;if(V===0)continue;let N=this.gpuDataManager.get(V);if(!N)throw new Error(`no GPU data for input: ${V}`);d.push(N)}let{outputs:y,dispatchGroup:b,programUniforms:C}=r.getRunData(t),m=s.length===0?y.map((B,V)=>V):s;if(m.length!==y.length)throw new Error(`Output size ${m.length} must be equal to ${y.length}.`);let x=[],P=[];for(let B=0;B<y.length;++B){if(!Number.isInteger(m[B])||m[B]<-3||m[B]>=y.length)throw new Error(`Invalid output index: ${m[B]}`);if(m[B]===-3)continue;let V=m[B]===-1,N=m[B]===-2,J=V||N?f(y[B].dataType,y[B].dims):l(m[B],y[B].dataType,y[B].dims);if(x.push(J),J.data===0)continue;let Y=this.gpuDataManager.get(J.data);if(!Y)throw new Error(`no GPU data for output: ${J.data}`);if(V&&this.temporaryData.push(Y),N){let te=this.kernelPersistentData.get(this.currentKernelId);te||(te=[],this.kernelPersistentData.set(this.currentKernelId,te)),te.push(Y)}P.push(Y)}if(d.length!==t.length||P.length!==x.length){if(P.length===0)return tr(r.name),x;throw new Error(`Program ${r.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let R;if(C){let B=0,V=[];C.forEach(te=>{let q=typeof te.data=="number"?[te.data]:te.data;if(q.length===0)return;let se=te.type===10?2:4,de,ke;te.type===10?(ke=q.length>4?16:q.length>2?8:q.length*se,de=q.length>4?16:se*q.length):(ke=q.length<=2?q.length*se:16,de=16),B=Math.ceil(B/ke)*ke,V.push(B);let Ve=te.type===10?8:4;B+=q.length>4?Math.ceil(q.length/Ve)*de:q.length*se});let N=16;B=Math.ceil(B/N)*N;let J=new ArrayBuffer(B);C.forEach((te,q)=>{let se=V[q],de=typeof te.data=="number"?[te.data]:te.data;if(te.type===6)new Int32Array(J,se,de.length).set(de);else if(te.type===12)new Uint32Array(J,se,de.length).set(de);else if(te.type===10)new Uint16Array(J,se,de.length).set(de);else if(te.type===1)new Float32Array(J,se,de.length).set(de);else throw new Error(`Unsupported uniform type: ${er(te.type)}`)});let Y=this.gpuDataManager.create(B,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Y.buffer,0,J,0,B),this.gpuDataManager.release(Y.id),R={offset:0,size:B,buffer:Y.buffer}}let E=this.programManager.normalizeDispatchGroupSize(b),k=E[1]===1&&E[2]===1,U=xy(r,t,k),j=this.programManager.getArtifact(U);if(j||(j=this.programManager.build(r,E),this.programManager.setArtifact(U,j),Je("info",()=>`[artifact] key: ${U}, programName: ${r.name}`)),Je("info",()=>`[ProgramManager] run "${r.name}" (key=${U}) with ${E[0]}x${E[1]}x${E[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let B={kernelId:this.currentKernelId,programName:j.programInfo.name,inputTensorViews:t,outputTensorViews:x};this.pendingKernels.push(B),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(B)}return this.programManager.run(j,d,P,E,R),tr(r.name),x}upload(r,t){this.gpuDataManager.upload(r,t)}memcpy(r,t){this.gpuDataManager.memcpy(r,t)}async download(r,t){await this.gpuDataManager.download(r,t)}alloc(r){return this.gpuDataManager.create(r).id}free(r){return this.gpuDataManager.release(r)}createKernel(r,t,s,l){let f=sc.get(r);if(!f)throw new Error(`kernel not implemented: ${r}`);let d={kernelType:r,kernelName:l,kernelEntry:f[0],attributes:[f[1],s]};this.kernels.set(t,d)}releaseKernel(r){let t=this.kernelPersistentData.get(r);if(t){for(let s of t)this.gpuDataManager.release(s.id);this.kernelPersistentData.delete(r)}this.kernelCustomData.delete(r),this.kernels.delete(r)}computeKernel(r,t,s){let l=this.kernels.get(r);if(!l)throw new Error(`kernel not created: ${r}`);let f=l.kernelType,d=l.kernelName,y=l.kernelEntry,b=l.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${f}] ${d}" is not allowed to be called recursively`);this.currentKernelId=r,b[0]&&(b[1]=b[0](b[1]),b[0]=void 0),Je("info",()=>`[WebGPU] Start to run kernel "[${f}] ${d}"...`);let C=this.env.debug;this.temporaryData=[];try{return C&&this.device.pushErrorScope("validation"),y(t,b[1]),0}catch(m){return s.push(Promise.resolve(`[WebGPU] Kernel "[${f}] ${d}" failed. ${m}`)),1}finally{C&&s.push(this.device.popErrorScope().then(m=>m?`GPU validation error for kernel "[${f}] ${d}": ${m.message}`:null));for(let m of this.temporaryData)this.gpuDataManager.release(m.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(r,t,s,l){let f=this.sessionExternalDataMapping.get(r);f||(f=new Map,this.sessionExternalDataMapping.set(r,f));let d=f.get(t),y=this.gpuDataManager.registerExternalBuffer(s,l,d?.[1]);return f.set(t,[y,s]),y}unregisterBuffers(r){let t=this.sessionExternalDataMapping.get(r);t&&(t.forEach(s=>this.gpuDataManager.unregisterExternalBuffer(s[1])),this.sessionExternalDataMapping.delete(r))}getBuffer(r){let t=this.gpuDataManager.get(r);if(!t)throw new Error(`no GPU data for buffer: ${r}`);return t.buffer}createDownloader(r,t,s){return async()=>{let l=await Mo(this,r,t);return Ws(l.buffer,s)}}writeTimestamp(r){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,r)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Je("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Je("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Je("info","replay"),this.sessionStatus="replaying";let r=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),s=r.length;this.pendingKernels=[];for(let l=0;l<s;l++){let f=this.getComputePassEncoder(),d=r[l];this.writeTimestamp(this.pendingDispatchNumber*2),f.setPipeline(d.computePipeline),f.setBindGroup(0,d.bindGroup),f.dispatchWorkgroups(...d.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[l]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(r){this.unregisterBuffers(r),this.capturedCommandList.has(r)&&this.capturedCommandList.delete(r),this.capturedPendingKernels.has(r)&&this.capturedPendingKernels.delete(r),this.gpuDataManager.onReleaseSession(r)}onRunStart(r){this.currentSessionId=r,this.setQueryType()}}});var cc={};Ni(cc,{init:()=>Ay});var ni,sa,Ay,fc=ue(()=>{"use strict";xe();dc();rr();Ue();ni=class e{constructor(r,t,s,l){this.module=r;this.dataType=t;this.data=s;this.dims=l}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=ee.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=ee.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=ee.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(ee.size(r)!==ee.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,r)}},sa=class{constructor(r,t,s){this.module=r;this.backend=t;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=t.adapterInfo;let l=r.HEAPU32,f=s>>>2;this.opKernelContext=l[f++];let d=l[f++];this.outputCount=l[f++],this.customDataOffset=l[f++],this.customDataSize=l[f++];let y=[];for(let b=0;b<d;b++){let C=l[f++],m=l[f++],x=l[f++],P=[];for(let R=0;R<x;R++)P.push(l[f++]);y.push(new ni(r,C,m,P))}this.inputs=y}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(r,t){let s=t?.inputs?.map(y=>typeof y=="number"?this.inputs[y]:y)??this.inputs,l=t?.outputs??[],f=(y,b,C)=>new ni(this.module,b,this.output(y,C),C),d=(y,b)=>{let C=Xn(y);if(!C)throw new Error(`Unsupported data type: ${y}`);let m=C*ee.size(b),x=m>0?this.backend.gpuDataManager.create(m).id:0;return new ni(this.module,y,x,b)};return this.backend.run(r,s,l,f,d)}output(r,t){let s=this.module.stackSave();try{let l=this.module.stackAlloc((1+t.length)*4),f=l>>2;this.module.HEAPU32[f++]=t.length;for(let d=0;d<t.length;d++)this.module.HEAPU32[f++]=t[d];return this.module._JsepOutput(this.opKernelContext,r,l)}catch(l){throw new Error(`Failed to generate kernel\'s output[${r}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${l}`)}finally{this.module.stackRestore(s)}}},Ay=async(e,r,t)=>{let s=e.jsepInit;if(!s)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");let l=new yo;await l.initialize(r,t),s(l,f=>l.alloc(f),f=>l.free(f),(f,d,y,b=!1)=>{if(b)Je("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${f}, dst=${d}, size=${y}`),l.memcpy(f,d);else{Je("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${f}, gpuDataId=${d}, size=${y}`);let C=e.HEAPU8.subarray(f>>>0,(f>>>0)+y);l.upload(d,C)}},async(f,d,y)=>{Je("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${f}, dataOffset=${d}, size=${y}`),await l.download(f,()=>e.HEAPU8.subarray(d>>>0,(d>>>0)+y))},(f,d,y)=>l.createKernel(f,d,y,e.UTF8ToString(e._JsepGetNodeName(d))),f=>l.releaseKernel(f),(f,d,y,b)=>{Je("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${y}, kernel=${f}, contextDataOffset=${d}`);let C=new sa(e,l,d);return l.computeKernel(f,C,b)},()=>l.captureBegin(),()=>l.captureEnd(),()=>l.replay())}});var ys;ys=ss();var jm=ms(),To,Eo=!1,Wi=!1,gs=!1,Vm=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Nm=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Wm=(e,r)=>e?r?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":r?"ort-wasm-threaded.wasm":"ort-wasm.wasm",bs=async e=>{if(Eo)return Promise.resolve();if(Wi)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(gs)throw new Error("previous call to \'initializeWebAssembly()\' failed.");Wi=!0;let r=e.initTimeout,t=e.numThreads,s=e.simd,l=Vm(t),f=s&&Nm(),d=e.wasmPaths,y=typeof d=="string"?d:void 0,b=Wm(f,l),C=typeof d=="object"?d[b]:void 0,m=!1,x=[];if(r>0&&x.push(new Promise(P=>{setTimeout(()=>{m=!0,P()},r)})),x.push(new Promise((P,R)=>{let E=l?jm:ys,k={locateFile:(U,j)=>{if(l&&U.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([hs()],{type:"text/javascript"}));if(U.endsWith(".wasm")){if(C)return C;let B=y??j;return b==="ort-wasm-simd.wasm"?B+"ort-wasm-simd.jsep.wasm":b==="ort-wasm-simd-threaded.wasm"?B+"ort-wasm-simd-threaded.jsep.wasm":B+b}return j+U}};if(l)if(k.numThreads=t,typeof Blob>"u")k.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let U=`var ortWasmThreaded=${E.toString()};`;k.mainScriptUrlOrBlob=new Blob([U],{type:"text/javascript"})}E(k).then(U=>{Wi=!1,Eo=!0,To=U,P()},U=>{Wi=!1,gs=!0,R(U)})})),await Promise.race(x),m)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},rt=()=>{if(Eo&&To)return To;throw new Error("WebAssembly is not initialized yet.")};var Qe=(e,r)=>{let t=rt(),s=t.lengthBytesUTF8(e)+1,l=t._malloc(s);return t.stringToUTF8(e,l,s),r.push(l),l},Zn=(e,r,t,s)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([l,f])=>{let d=r?r+l:l;if(typeof f=="object")Zn(f,d+".",t,s);else if(typeof f=="string"||typeof f=="number")s(d,f.toString());else if(typeof f=="boolean")s(d,f?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof f}`)})},Ke=e=>{let r=rt(),t=r.stackSave();try{let s=r.stackAlloc(8);r._OrtGetLastError(s,s+4);let l=r.HEAP32[s/4],f=r.HEAPU32[s/4+1],d=f?r.UTF8ToString(f):"";throw new Error(`${e} ERROR_CODE: ${l}, ERROR_MESSAGE: ${d}`)}finally{r.stackRestore(t)}};var vs=e=>{let r=rt(),t=0,s=[],l=e||{};try{if(e?.logSeverityLevel===void 0)l.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)l.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(l.terminate=!1);let f=0;return e?.tag!==void 0&&(f=Qe(e.tag,s)),t=r._OrtCreateRunOptions(l.logSeverityLevel,l.logVerbosityLevel,!!l.terminate,f),t===0&&Ke("Can\'t create run options."),e?.extra!==void 0&&Zn(e.extra,"",new WeakSet,(d,y)=>{let b=Qe(d,s),C=Qe(y,s);r._OrtAddRunConfigEntry(t,b,C)!==0&&Ke(`Can\'t set a run config entry: ${d} - ${y}.`)}),[t,s]}catch(f){throw t!==0&&r._OrtReleaseRunOptions(t),s.forEach(d=>r._free(d)),f}};var Gm=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Hm=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Lm=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},Fm=(e,r,t)=>{for(let s of r){let l=typeof s=="string"?s:s.name;switch(l){case"webnn":if(l="WEBNN",typeof s!="string"){let d=s;if(d?.deviceType){let y=Qe("deviceType",t),b=Qe(d.deviceType,t);rt()._OrtAddSessionConfigEntry(e,y,b)!==0&&Ke(`Can\'t set a session config entry: \'deviceType\' - ${d.deviceType}.`)}if(d?.numThreads){let y=d.numThreads;(typeof y!="number"||!Number.isInteger(y)||y<0)&&(y=0);let b=Qe("numThreads",t),C=Qe(y.toString(),t);rt()._OrtAddSessionConfigEntry(e,b,C)!==0&&Ke(`Can\'t set a session config entry: \'numThreads\' - ${d.numThreads}.`)}if(d?.powerPreference){let y=Qe("powerPreference",t),b=Qe(d.powerPreference,t);rt()._OrtAddSessionConfigEntry(e,y,b)!==0&&Ke(`Can\'t set a session config entry: \'powerPreference\' - ${d.powerPreference}.`)}}break;case"webgpu":if(l="JS",typeof s!="string"){let d=s;if(d?.preferredLayout){if(d.preferredLayout!=="NCHW"&&d.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${d.preferredLayout}`);let y=Qe("preferredLayout",t),b=Qe(d.preferredLayout,t);rt()._OrtAddSessionConfigEntry(e,y,b)!==0&&Ke(`Can\'t set a session config entry: \'preferredLayout\' - ${d.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${l}`)}let f=Qe(l,t);rt()._OrtAppendExecutionProvider(e,f)!==0&&Ke(`Can\'t append execution provider: ${l}.`)}},ws=e=>{let r=rt(),t=0,s=[],l=e||{};Lm(l);try{let f=Gm(l.graphOptimizationLevel??"all"),d=Hm(l.executionMode??"sequential"),y=typeof l.logId=="string"?Qe(l.logId,s):0,b=l.logSeverityLevel??2;if(!Number.isInteger(b)||b<0||b>4)throw new Error(`log serverity level is not valid: ${b}`);let C=l.logVerbosityLevel??0;if(!Number.isInteger(C)||C<0||C>4)throw new Error(`log verbosity level is not valid: ${C}`);let m=typeof l.optimizedModelFilePath=="string"?Qe(l.optimizedModelFilePath,s):0;if(t=r._OrtCreateSessionOptions(f,!!l.enableCpuMemArena,!!l.enableMemPattern,d,!!l.enableProfiling,0,y,b,C,m),t===0&&Ke("Can\'t create session options."),l.executionProviders&&Fm(t,l.executionProviders,s),l.enableGraphCapture!==void 0){if(typeof l.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${l.enableGraphCapture}`);let x=Qe("enableGraphCapture",s),P=Qe(l.enableGraphCapture.toString(),s);r._OrtAddSessionConfigEntry(t,x,P)!==0&&Ke(`Can\'t set a session config entry: \'enableGraphCapture\' - ${l.enableGraphCapture}.`)}if(l.freeDimensionOverrides)for(let[x,P]of Object.entries(l.freeDimensionOverrides)){if(typeof x!="string")throw new Error(`free dimension override name must be a string: ${x}`);if(typeof P!="number"||!Number.isInteger(P)||P<0)throw new Error(`free dimension override value must be a non-negative integer: ${P}`);let R=Qe(x,s);r._OrtAddFreeDimensionOverride(t,R,P)!==0&&Ke(`Can\'t set a free dimension override: ${x} - ${P}.`)}return l.extra!==void 0&&Zn(l.extra,"",new WeakSet,(x,P)=>{let R=Qe(x,s),E=Qe(P,s);r._OrtAddSessionConfigEntry(t,R,E)!==0&&Ke(`Can\'t set a session config entry: ${x} - ${P}.`)}),[t,s]}catch(f){throw t!==0&&r._OrtReleaseSessionOptions(t),s.forEach(d=>r._free(d)),f}};xe();var $s=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(r){if(r.code==="ERR_FS_FILE_TOO_LARGE"){let t=(void 0)(e),s=[];for await(let l of t)s.push(l);return new Uint8Array(Buffer.concat(s))}throw r}else{let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),s=t?parseInt(t,10):0;if(s<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let l=r.body.getReader(),f;try{f=new ArrayBuffer(s)}catch(y){if(y instanceof RangeError){let b=Math.ceil(s/65536);f=new WebAssembly.Memory({initial:b,maximum:b}).buffer}else throw y}let d=0;for(;;){let{done:y,value:b}=await l.read();if(y)break;let C=b.byteLength;new Uint8Array(f,d,C).set(b),d+=C}return new Uint8Array(f,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var Iy=(e,r)=>{rt()._OrtInit(e,r)!==0&&Ke("Can\'t initialize onnxruntime.")},mc=async e=>{Iy(e.wasm.numThreads,Qn(e.logLevel))},hc=async(e,r)=>{if(r==="webgpu"||r==="webnn"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let t=e.webgpu?.powerPreference;if(t!==void 0&&t!=="low-power"&&t!=="high-performance")throw new Error(`Invalid powerPreference setting: "${t}"`);let s=e.webgpu?.forceFallbackAdapter;if(s!==void 0&&typeof s!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${s}"`);let l=await navigator.gpu.requestAdapter({powerPreference:t,forceFallbackAdapter:s});if(!l)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");let f=(fc(),Wr(cc)).init;await f(rt(),e,l)}},br=new Map,Ty=e=>{let r=rt(),t=r.stackSave();try{let s=r.stackAlloc(8);return r._OrtGetInputOutputCount(e,s,s+4)!==0&&Ke("Can\'t get session input/output count."),[r.HEAP32[s/4],r.HEAP32[s/4+1]]}finally{r.stackRestore(t)}},ua=e=>{let r=rt(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},gc=async(e,r)=>{let t,s,l=rt();Array.isArray(e)?[t,s]=e:e.buffer===l.HEAPU8.buffer?[t,s]=[e.byteOffset,e.byteLength]:[t,s]=ua(e);let f=0,d=0,y=0,b=[],C=[],m=[];try{if([d,b]=ws(r),r?.externalData&&l.mountExternalData){let B=[];for(let V of r.externalData){let N=typeof V=="string"?V:V.path;B.push($s(typeof V=="string"?V:V.data).then(J=>{l.mountExternalData(N,J)}))}await Promise.all(B)}f=await l._OrtCreateSession(t,s,d),f===0&&Ke("Can\'t create a session.");let[x,P]=Ty(f),R=!!r?.enableGraphCapture,E=[],k=[],U=[];for(let B=0;B<x;B++){let V=l._OrtGetInputName(f,B);V===0&&Ke("Can\'t get an input name."),C.push(V),E.push(l.UTF8ToString(V))}for(let B=0;B<P;B++){let V=l._OrtGetOutputName(f,B);V===0&&Ke("Can\'t get an output name."),m.push(V);let N=l.UTF8ToString(V);k.push(N);{if(R&&r?.preferredOutputLocation===void 0){U.push("gpu-buffer");continue}let J=typeof r?.preferredOutputLocation=="string"?r.preferredOutputLocation:r?.preferredOutputLocation?.[N]??"cpu";if(J!=="cpu"&&J!=="cpu-pinned"&&J!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${J}.`);if(R&&J!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${J}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);U.push(J)}}let j=null;return U.some(B=>B==="gpu-buffer")&&(y=l._OrtCreateBinding(f),y===0&&Ke("Can\'t create IO binding."),j={handle:y,outputPreferredLocations:U,outputPreferredLocationsEncoded:U.map(B=>Oo(B))}),br.set(f,[f,C,m,j,R,!1]),[f,E,k]}catch(x){throw C.forEach(P=>l._OrtFree(P)),m.forEach(P=>l._OrtFree(P)),y!==0&&l._OrtReleaseBinding(y),f!==0&&l._OrtReleaseSession(f),x}finally{l._free(t),d!==0&&l._OrtReleaseSessionOptions(d),b.forEach(x=>l._free(x)),l.unmountExternalData?.()}},yc=e=>{let r=rt(),t=br.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,l,f,d,y]=t;d&&(y&&r._OrtClearBoundOutputs(d.handle),r._OrtReleaseBinding(d.handle)),r.jsepOnReleaseSession?.(e),l.forEach(b=>r._OrtFree(b)),f.forEach(b=>r._OrtFree(b)),r._OrtReleaseSession(s),br.delete(e)},pc=(e,r,t,s,l,f=!1)=>{if(!e){r.push(0);return}let d=rt(),y=e[0],b=e[1],C=e[3],m,x;if(y==="string"&&C==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(f&&C!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${l} when enableGraphCapture is true.`);if(C==="gpu-buffer"){let E=e[2].gpuBuffer,k=Xn(Po(y));x=b.reduce((U,j)=>U*j,1)*k,m=d.jsepRegisterBuffer(s,l,E,x)}else{let E=e[2];if(Array.isArray(E)){x=4*E.length,m=d._malloc(x),t.push(m);let k=m/4;for(let U=0;U<E.length;U++){if(typeof E[U]!="string")throw new TypeError(`tensor data at index ${U} is not a string`);d.HEAPU32[k++]=Qe(E[U],t)}}else x=E.byteLength,m=d._malloc(x),t.push(m),d.HEAPU8.set(new Uint8Array(E.buffer,E.byteOffset,x),m)}let P=d.stackSave(),R=d.stackAlloc(4*b.length);try{let E=R/4;b.forEach(U=>d.HEAP32[E++]=U);let k=d._OrtCreateTensor(Po(y),m,x,R,b.length,Oo(C));k===0&&Ke(`Can\'t create tensor for input/output. session=${s}, index=${l}.`),r.push(k)}finally{d.stackRestore(P)}},bc=async(e,r,t,s,l,f)=>{let d=rt(),y=br.get(e);if(!y)throw new Error(`cannot run inference. invalid session id: ${e}`);let b=y[0],C=y[1],m=y[2],x=y[3],P=y[4],R=y[5],E=r.length,k=s.length,U=0,j=[],B=[],V=[],N=[],J=d.stackSave(),Y=d.stackAlloc(E*4),te=d.stackAlloc(E*4),q=d.stackAlloc(k*4),se=d.stackAlloc(k*4);try{[U,j]=vs(f);for(let ge=0;ge<E;ge++)pc(t[ge],B,N,e,r[ge],P);for(let ge=0;ge<k;ge++)pc(l[ge],V,N,e,E+s[ge],P);let de=Y/4,ke=te/4,Ve=q/4,Fe=se/4;for(let ge=0;ge<E;ge++)d.HEAPU32[de++]=B[ge],d.HEAPU32[ke++]=C[r[ge]];for(let ge=0;ge<k;ge++)d.HEAPU32[Ve++]=V[ge],d.HEAPU32[Fe++]=m[s[ge]];if(x&&!R){let{handle:ge,outputPreferredLocations:je,outputPreferredLocationsEncoded:Pe}=x;if(C.length!==E)throw new Error(`input count from feeds (${E}) is expected to be always equal to model\'s input count (${C.length}).`);for(let be=0;be<E;be++){let Re=r[be];await d._OrtBindInput(ge,C[Re],B[be])!==0&&Ke(`Can\'t bind input[${be}] for session=${e}.`)}for(let be=0;be<k;be++){let Re=s[be];l[be]?.[3]?d._OrtBindOutput(ge,m[Re],V[be],0)!==0&&Ke(`Can\'t bind pre-allocated output[${be}] for session=${e}.`):d._OrtBindOutput(ge,m[Re],0,Pe[Re])!==0&&Ke(`Can\'t bind output[${be}] to ${je[be]} for session=${e}.`)}br.set(e,[b,C,m,x,P,!0])}d.jsepOnRunStart?.(b);let Ae;x?Ae=await d._OrtRunWithBinding(b,x.handle,k,q,U):Ae=await d._OrtRun(b,te,Y,E,se,k,q,U),Ae!==0&&Ke("failed to call OrtRun().");let Te=[];for(let ge=0;ge<k;ge++){let je=d.HEAPU32[q/4+ge];if(je===V[ge]){Te.push(l[ge]);continue}let Pe=d.stackSave(),be=d.stackAlloc(4*4),Re=!1,Oe,We=0;try{d._OrtGetTensorData(je,be,be+4,be+8,be+12)!==0&&Ke(`Can\'t access output tensor data on index ${ge}.`);let ie=be/4,ve=d.HEAPU32[ie++];We=d.HEAPU32[ie++];let Ee=d.HEAPU32[ie++],Ct=d.HEAPU32[ie++],nt=[];for(let et=0;et<Ct;et++)nt.push(d.HEAPU32[Ee/4+et]);d._OrtFree(Ee);let it=nt.reduce((et,tt)=>et*tt,1);Oe=er(ve);let Ft=x?.outputPreferredLocations[s[ge]];if(Oe==="string"){if(Ft==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let et=[],tt=We/4;for(let yt=0;yt<it;yt++){let St=d.HEAPU32[tt++],Ut=yt===it-1?void 0:d.HEAPU32[tt]-St;et.push(d.UTF8ToString(St,Ut))}Te.push([Oe,nt,et,"cpu"])}else if(Ft==="gpu-buffer"&&it>0){let et=d.jsepGetBuffer(We),tt=Xn(ve);if(tt===void 0||!_s(Oe))throw new Error(`Unsupported data type: ${Oe}`);Re=!0,Te.push([Oe,nt,{gpuBuffer:et,download:d.jsepCreateDownloader(et,it*tt,Oe),dispose:()=>{d._OrtReleaseTensor(je)}},"gpu-buffer"])}else{let et=Gi(Oe),tt=new et(it);new Uint8Array(tt.buffer,tt.byteOffset,tt.byteLength).set(d.HEAPU8.subarray(We,We+tt.byteLength)),Te.push([Oe,nt,tt,"cpu"])}}finally{d.stackRestore(Pe),Oe==="string"&&We&&d._free(We),Re||d._OrtReleaseTensor(je)}}return x&&!P&&(d._OrtClearBoundOutputs(x.handle),br.set(e,[b,C,m,x,P,!1])),Te}finally{d.stackRestore(J),B.forEach(de=>d._OrtReleaseTensor(de)),V.forEach(de=>d._OrtReleaseTensor(de)),N.forEach(de=>d._free(de)),U!==0&&d._OrtReleaseRunOptions(U),j.forEach(de=>d._free(de))}},vc=e=>{let r=rt(),t=br.get(e);if(!t)throw new Error("invalid session id");let s=t[0],l=r._OrtEndProfiling(s);l===0&&Ke("Can\'t get an profile file name."),r._OrtFree(l)},wc=e=>{let r=[];for(let t of e){let s=t[2];!Array.isArray(s)&&"buffer"in s&&r.push(s.buffer)}return r};self.onmessage=e=>{let{type:r,in:t}=e.data;try{switch(r){case"init-wasm":bs(t.wasm).then(()=>{mc(t).then(()=>{postMessage({type:r})},s=>{postMessage({type:r,err:s})})},s=>{postMessage({type:r,err:s})});break;case"init-ep":{let{epName:s,env:l}=t;hc(l,s).then(()=>{postMessage({type:r})},f=>{postMessage({type:r,err:f})});break}case"copy-from":{let{buffer:s}=t,l=ua(s);postMessage({type:r,out:l});break}case"create":{let{model:s,options:l}=t;gc(s,l).then(f=>{postMessage({type:r,out:f})},f=>{postMessage({type:r,err:f})});break}case"release":yc(t),postMessage({type:r});break;case"run":{let{sessionId:s,inputIndices:l,inputs:f,outputIndices:d,options:y}=t;bc(s,l,f,d,new Array(d.length).fill(null),y).then(b=>{b.some(C=>C[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:b},wc([...f,...b]))},b=>{postMessage({type:r,err:b})});break}case"end-profiling":vc(t),postMessage({type:r});break;default:}}catch(s){postMessage({type:r,err:s})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var Er,jt,bn,ja,Ua,Mo,Do,ii,ni,P0,Da,cp,pp,fp,mp,hp,gp,yp,jo=ae(()=>{"use strict";Mt();lp();ei();Er=()=>!!Ge.wasm.proxy&&typeof document<"u",bn=!1,ja=!1,Ua=!1,Do=new Map,ii=(e,t)=>{let r=Do.get(e);r?r.push(t):Do.set(e,[t])},ni=()=>{if(bn||!ja||Ua||!jt)throw new Error("worker not ready")},P0=e=>{switch(e.data.type){case"init-wasm":bn=!1,e.data.err?(Ua=!0,Mo[1](e.data.err)):(ja=!0,Mo[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=Do.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}default:}},Da=typeof document<"u"?document?.currentScript?.src:void 0,cp=async()=>{if(!ja){if(bn)throw new Error("multiple calls to 'initWasm()' detected.");if(Ua)throw new Error("previous call to 'initWasm()' failed.");if(bn=!0,Er())return Ge.wasm.wasmPaths===void 0&&Da&&Da.indexOf("blob:")!==0&&(Ge.wasm.wasmPaths=Da.substr(0,+Da.lastIndexOf("/")+1)),new Promise((e,t)=>{jt?.terminate();let r=URL.createObjectURL(new Blob([dp()],{type:"text/javascript"}));jt=new Worker(r,{name:"ort-wasm-proxy-worker"}),jt.onerror=s=>t(s),jt.onmessage=P0,URL.revokeObjectURL(r),Mo=[e,t];let o={type:"init-wasm",in:Ge};jt.postMessage(o)});try{await $u(Ge.wasm),await rp(Ge),ja=!0}catch(e){throw Ua=!0,e}finally{bn=!1}}},pp=async e=>{if(Er())return ni(),new Promise((t,r)=>{ii("init-ep",[t,r]);let o={type:"init-ep",in:{epName:e,env:Ge}};jt.postMessage(o)});await ip(Ge,e)},fp=async e=>Er()?(ni(),new Promise((t,r)=>{ii("copy-from",[t,r]);let o={type:"copy-from",in:{buffer:e}};jt.postMessage(o,[e.buffer])})):Bo(e),mp=async(e,t)=>{if(Er()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return ni(),new Promise((r,o)=>{ii("create",[r,o]);let s={type:"create",in:{model:e,options:t}},p=[];e instanceof Uint8Array&&p.push(e.buffer),jt.postMessage(s,p)})}else return np(e,t)},hp=async e=>{if(Er())return ni(),new Promise((t,r)=>{ii("release",[t,r]);let o={type:"release",in:e};jt.postMessage(o)});ap(e)},gp=async(e,t,r,o,s,p)=>{if(Er()){if(r.some(d=>d[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(s.some(d=>d))throw new Error("pre-allocated output tensor is not supported for proxy.");return ni(),new Promise((d,g)=>{ii("run",[d,g]);let b=r,w={type:"run",in:{sessionId:e,inputIndices:t,inputs:b,outputIndices:o,options:p}};jt.postMessage(w,up(b))})}else return op(e,t,r,o,s,p)},yp=async e=>{if(Er())return ni(),new Promise((t,r)=>{ii("end-profiling",[t,r]);let o={type:"end-profiling",in:e};jt.postMessage(o)});sp(e)}});var bp,R0,Na,vp=ae(()=>{"use strict";Mt();jo();Se();oo();bp=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},R0=e=>{switch(e[3]){case"cpu":return new ft(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!pa(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:o,dispose:s}=e[2];return ft.fromGpuBuffer(r,{dataType:t,dims:e[1],download:o,dispose:s})}default:throw new Error(`invalid data location: ${e[3]}`)}},Na=class{async fetchModelAndCopyToWasmMemory(t){return fp(await fn(t))}async loadModel(t,r){St();let o;typeof t=="string"?typeof process<"u"&&process.versions&&process.versions.node?o=await fn(t):o=await this.fetchModelAndCopyToWasmMemory(t):o=t,[this.sessionId,this.inputNames,this.outputNames]=await mp(o,r),wt()}async dispose(){return hp(this.sessionId)}async run(t,r,o){St();let s=[],p=[];Object.entries(t).forEach(S=>{let O=S[0],E=S[1],P=this.inputNames.indexOf(O);if(P===-1)throw new Error(`invalid input '${O}'`);s.push(E),p.push(P)});let d=[],g=[];Object.entries(r).forEach(S=>{let O=S[0],E=S[1],P=this.outputNames.indexOf(O);if(P===-1)throw new Error(`invalid output '${O}'`);d.push(E),g.push(P)});let b=s.map((S,O)=>bp(S,()=>`input "${this.inputNames[p[O]]}"`)),w=d.map((S,O)=>S?bp(S,()=>`output "${this.outputNames[g[O]]}"`):null),f=await gp(this.sessionId,p,b,g,w,o),C={};for(let S=0;S<f.length;S++)C[this.outputNames[g[S]]]=d[S]??R0(f[S]);return wt(),C}startProfiling(){}endProfiling(){yp(this.sessionId)}}});var z0,Wa,wp=ae(()=>{"use strict";Mt();jo();vp();z0=()=>{if((typeof Ge.wasm.initTimeout!="number"||Ge.wasm.initTimeout<0)&&(Ge.wasm.initTimeout=0),typeof Ge.wasm.simd!="boolean"&&(Ge.wasm.simd=!0),typeof Ge.wasm.proxy!="boolean"&&(Ge.wasm.proxy=!1),typeof Ge.wasm.trace!="boolean"&&(Ge.wasm.trace=!1),typeof Ge.wasm.numThreads!="number"||!Number.isInteger(Ge.wasm.numThreads)||Ge.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(Ge.wasm.numThreads=1);let e=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;Ge.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},Wa=class{async init(t){z0(),await cp(),await pp(t)}async createInferenceSessionHandler(t,r){let o=new Na;return await o.loadModel(t,r),Promise.resolve(o)}}});var _p={};xr(_p,{wasmBackend:()=>B0});var B0,$p=ae(()=>{"use strict";wp();B0=new Wa});var D0={};xr(D0,{InferenceSession:()=>tu,TRACE:()=>ln,TRACE_FUNC_BEGIN:()=>St,TRACE_FUNC_END:()=>wt,Tensor:()=>ft,TrainingSession:()=>au,default:()=>M0,env:()=>Ge,registerBackend:()=>ur});Mt();Mt();Mt();var su="1.18.0";var M0=Ja;{let e=($p(),sr(_p)).wasmBackend;ur("webgpu",e,5),ur("webnn",e,5),ur("cpu",e,10),ur("wasm",e,10)}Object.defineProperty(Ge.versions,"web",{value:su,enumerable:!0});return sr(D0);})();
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
//# sourceMappingURL=ort.webgpu.min.js.map
