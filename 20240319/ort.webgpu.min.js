/*!
 * ONNX Runtime Web v1.18.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
"use strict";var ort=(()=>{var Fa=Object.defineProperty;var Mh=Object.getOwnPropertyDescriptor;var Dh=Object.getOwnPropertyNames;var jh=Object.prototype.hasOwnProperty;var se=(e,t)=>()=>(e&&(t=e(e=0)),t);var Xr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),xr=(e,t)=>{for(var r in t)Fa(e,r,{get:t[r],enumerable:!0})},Uh=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of Dh(t))!jh.call(e,s)&&s!==r&&Fa(e,s,{get:()=>t[s],enumerable:!(o=Mh(t,s))||o.enumerable});return e};var sr=e=>Uh(Fa({},"__esModule",{value:!0}),e);var ia,Sr,ur,Nh,na,aa=se(()=>{"use strict";ia=new Map,Sr=[],ur=(e,t,r)=>{if(t&&typeof t.init=="function"&&typeof t.createInferenceSessionHandler=="function"){let o=ia.get(e);if(o===void 0)ia.set(e,{backend:t,priority:r});else{if(o.priority>r)return;if(o.priority===r&&o.backend!==t)throw new Error(`cannot register backend "${e}" using priority ${r}`)}if(r>=0){let s=Sr.indexOf(e);s!==-1&&Sr.splice(s,1);for(let p=0;p<Sr.length;p++)if(ia.get(Sr[p]).priority<=r){Sr.splice(p,0,e);return}Sr.push(e)}return}throw new TypeError("not a valid backend")},Nh=async e=>{let t=ia.get(e);if(!t)return"backend not found.";if(t.initialized)return t.backend;if(t.aborted)return t.error;{let r=!!t.initPromise;try{return r||(t.initPromise=t.backend.init(e)),await t.initPromise,t.initialized=!0,t.backend}catch(o){return r||(t.error=`${o}`,t.aborted=!0),t.error}finally{delete t.initPromise}}},na=async e=>{let t=e.executionProviders||[],r=t.map(y=>typeof y=="string"?y:y.name),o=r.length===0?Sr:r,s,p=[],d=new Set;for(let y of o){let w=await Nh(y);typeof w=="string"?p.push({name:y,err:w}):(s||(s=w),s===w&&d.add(y))}if(!s)throw new Error(`no available backend found. ERR: ${p.map(y=>`[${y.name}] ${y.err}`).join(", ")}`);for(let{name:y,err:w}of p)r.includes(y)&&console.warn(`removing requested execution provider "${y}" from session options because it is not available: ${w}`);let g=t.filter(y=>d.has(typeof y=="string"?y:y.name));return[s,new Proxy(e,{get:(y,w)=>w==="executionProviders"?g:Reflect.get(y,w)})]}});var Bs=se(()=>{"use strict";aa()});var Ms,Ds=se(()=>{"use strict";Ms="1.18.0"});var js,Pt,qa=se(()=>{"use strict";Ds();js="warning",Pt={wasm:{},webgl:{},webgpu:{},versions:{common:Ms},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);js=e}},get logLevel(){return js}};Object.defineProperty(Pt,"logLevel",{enumerable:!0})});var Ne,Us=se(()=>{"use strict";qa();Ne=Pt});var Ns,Ws,Vs=se(()=>{"use strict";Ns=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);r.width=e.dims[3],r.height=e.dims[2];let o=r.getContext("2d");if(o!=null){let s,p;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(s=e.dims[2],p=e.dims[3]):(s=e.dims[3],p=e.dims[2]);let d=t?.format!==void 0?t.format:"RGB",g=t?.norm,y,w;g===void 0||g.mean===void 0?y=[255,255,255,255]:typeof g.mean=="number"?y=[g.mean,g.mean,g.mean,g.mean]:(y=[g.mean[0],g.mean[1],g.mean[2],0],g.mean[3]!==void 0&&(y[3]=g.mean[3])),g===void 0||g.bias===void 0?w=[0,0,0,0]:typeof g.bias=="number"?w=[g.bias,g.bias,g.bias,g.bias]:(w=[g.bias[0],g.bias[1],g.bias[2],0],g.bias[3]!==void 0&&(w[3]=g.bias[3]));let f=p*s,x=0,S=f,O=f*2,E=-1;d==="RGBA"?(x=0,S=f,O=f*2,E=f*3):d==="RGB"?(x=0,S=f,O=f*2):d==="RBG"&&(x=0,O=f,S=f*2);for(let P=0;P<p;P++)for(let j=0;j<s;j++){let U=(e.data[x++]-w[0])*y[0],z=(e.data[S++]-w[1])*y[1],W=(e.data[O++]-w[2])*y[2],N=E===-1?255:(e.data[E++]-w[3])*y[3];o.fillStyle="rgba("+U+","+z+","+W+","+N+")",o.fillRect(j,P,1,1)}if("toDataURL"in r)return r.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},Ws=(e,t)=>{let r=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),o;if(r!=null){let s,p,d;t?.tensorLayout!==void 0&&t.tensorLayout==="NHWC"?(s=e.dims[2],p=e.dims[1],d=e.dims[3]):(s=e.dims[3],p=e.dims[2],d=e.dims[1]);let g=t!==void 0&&t.format!==void 0?t.format:"RGB",y=t?.norm,w,f;y===void 0||y.mean===void 0?w=[255,255,255,255]:typeof y.mean=="number"?w=[y.mean,y.mean,y.mean,y.mean]:(w=[y.mean[0],y.mean[1],y.mean[2],255],y.mean[3]!==void 0&&(w[3]=y.mean[3])),y===void 0||y.bias===void 0?f=[0,0,0,0]:typeof y.bias=="number"?f=[y.bias,y.bias,y.bias,y.bias]:(f=[y.bias[0],y.bias[1],y.bias[2],0],y.bias[3]!==void 0&&(f[3]=y.bias[3]));let x=p*s;if(t!==void 0&&(t.format!==void 0&&d===4&&t.format!=="RGBA"||d===3&&t.format!=="RGB"&&t.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let S=4,O=0,E=1,P=2,j=3,U=0,z=x,W=x*2,N=-1;g==="RGBA"?(U=0,z=x,W=x*2,N=x*3):g==="RGB"?(U=0,z=x,W=x*2):g==="RBG"&&(U=0,W=x,z=x*2),o=r.createImageData(s,p);for(let q=0;q<p*s;O+=S,E+=S,P+=S,j+=S,q++)o.data[O]=(e.data[U++]-f[0])*w[0],o.data[E]=(e.data[z++]-f[1])*w[1],o.data[P]=(e.data[W++]-f[2])*w[2],o.data[j]=N===-1?255:(e.data[N++]-f[3])*w[3]}else throw new Error("Can not access image data");return o}});var Ka,Gs,Hs,Ls,Fs,qs=se(()=>{"use strict";oa();Ka=(e,t)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(t.height===void 0||t.width===void 0)throw new Error("Image height and width must be defined");if(t.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:r,width:o}=t,s=t.norm??{mean:255,bias:0},p,d;typeof s.mean=="number"?p=[s.mean,s.mean,s.mean,s.mean]:p=[s.mean[0],s.mean[1],s.mean[2],s.mean[3]??255],typeof s.bias=="number"?d=[s.bias,s.bias,s.bias,s.bias]:d=[s.bias[0],s.bias[1],s.bias[2],s.bias[3]??0];let g=t.format!==void 0?t.format:"RGBA",y=t.tensorFormat!==void 0&&t.tensorFormat!==void 0?t.tensorFormat:"RGB",w=r*o,f=y==="RGBA"?new Float32Array(w*4):new Float32Array(w*3),x=4,S=0,O=1,E=2,P=3,j=0,U=w,z=w*2,W=-1;g==="RGB"&&(x=3,S=0,O=1,E=2,P=-1),y==="RGBA"?W=w*3:y==="RBG"?(j=0,z=w,U=w*2):y==="BGR"&&(z=0,U=w,j=w*2);for(let q=0;q<w;q++,S+=x,E+=x,O+=x,P+=x)f[j++]=(e[S]+d[0])/p[0],f[U++]=(e[O]+d[1])/p[1],f[z++]=(e[E]+d[2])/p[2],W!==-1&&P!==-1&&(f[W++]=(e[P]+d[3])/p[3]);return y==="RGBA"?new _t("float32",f,[1,4,r,o]):new _t("float32",f,[1,3,r,o])},Gs=async(e,t)=>{let r=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,o=typeof ImageData<"u"&&e instanceof ImageData,s=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,p=typeof e=="string",d,g=t??{},y=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},w=f=>f instanceof HTMLCanvasElement||f instanceof OffscreenCanvas?f.getContext("2d"):null;if(r){let f=y();f.width=e.width,f.height=e.height;let x=w(f);if(x!=null){let S=e.height,O=e.width;if(t!==void 0&&t.resizedHeight!==void 0&&t.resizedWidth!==void 0&&(S=t.resizedHeight,O=t.resizedWidth),t!==void 0){if(g=t,t.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");g.tensorFormat="RGBA",g.height=S,g.width=O}else g.tensorFormat="RGBA",g.height=S,g.width=O;x.drawImage(e,0,0),d=x.getImageData(0,0,O,S).data}else throw new Error("Can not access image data")}else if(o){let f,x;if(t!==void 0&&t.resizedWidth!==void 0&&t.resizedHeight!==void 0?(f=t.resizedHeight,x=t.resizedWidth):(f=e.height,x=e.width),t!==void 0&&(g=t),g.format="RGBA",g.height=f,g.width=x,t!==void 0){let S=y();S.width=x,S.height=f;let O=w(S);if(O!=null)O.putImageData(e,0,0),d=O.getImageData(0,0,x,f).data;else throw new Error("Can not access image data")}else d=e.data}else if(s){if(t===void 0)throw new Error("Please provide image config with format for Imagebitmap");let f=y();f.width=e.width,f.height=e.height;let x=w(f);if(x!=null){let S=e.height,O=e.width;return x.drawImage(e,0,0,O,S),d=x.getImageData(0,0,O,S).data,g.height=S,g.width=O,Ka(d,g)}else throw new Error("Can not access image data")}else{if(p)return new Promise((f,x)=>{let S=y(),O=w(S);if(!e||!O)return x();let E=new Image;E.crossOrigin="Anonymous",E.src=e,E.onload=()=>{S.width=E.width,S.height=E.height,O.drawImage(E,0,0,S.width,S.height);let P=O.getImageData(0,0,S.width,S.height);g.height=S.height,g.width=S.width,f(Ka(P.data,g))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(d!==void 0)return Ka(d,g);throw new Error("Input data provided is not supported - aborted tensor creation")},Hs=(e,t)=>{let{width:r,height:o,download:s,dispose:p}=t,d=[1,o,r,4];return new _t({location:"texture",type:"float32",texture:e,dims:d,download:s,dispose:p})},Ls=(e,t)=>{let{dataType:r,dims:o,download:s,dispose:p}=t;return new _t({location:"gpu-buffer",type:r??"float32",gpuBuffer:e,dims:o,download:s,dispose:p})},Fs=(e,t,r)=>new _t({location:"cpu-pinned",type:e,data:t,dims:r??[t.length]})});var Ir,ln,Ks,Js,Ys=se(()=>{"use strict";Ir=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array]]),ln=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),Ks=!1,Js=()=>{if(!Ks){Ks=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,t=typeof BigUint64Array<"u"&&BigUint64Array.from,r=typeof Float16Array<"u"&&Float16Array.from;e&&(Ir.set("int64",BigInt64Array),ln.set(BigInt64Array,"int64")),t&&(Ir.set("uint64",BigUint64Array),ln.set(BigUint64Array,"uint64")),r?(Ir.set("float16",Float16Array),ln.set(Float16Array,"float16")):Ir.set("float16",Uint16Array)}}});var Zs,Qs,Xs=se(()=>{"use strict";oa();Zs=e=>{let t=1;for(let r=0;r<e.length;r++){let o=e[r];if(typeof o!="number"||!Number.isSafeInteger(o))throw new TypeError(`dims[${r}] must be an integer, got: ${o}`);if(o<0)throw new RangeError(`dims[${r}] must be a non-negative integer, got: ${o}`);t*=o}return t},Qs=(e,t)=>{switch(e.location){case"cpu":return new _t(e.type,e.data,t);case"cpu-pinned":return new _t({location:"cpu-pinned",data:e.data,type:e.type,dims:t});case"texture":return new _t({location:"texture",texture:e.texture,type:e.type,dims:t});case"gpu-buffer":return new _t({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:t});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}});var _t,oa=se(()=>{"use strict";Vs();qs();Ys();Xs();_t=class{constructor(t,r,o){Js();let s,p;if(typeof t=="object"&&"location"in t)switch(this.dataLocation=t.location,s=t.type,p=t.dims,t.location){case"cpu-pinned":{let g=Ir.get(s);if(!g)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(t.data instanceof g))throw new TypeError(`buffer should be of type ${g.name}`);this.cpuData=t.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=t.texture,this.downloader=t.download,this.disposer=t.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=t.gpuBuffer,this.downloader=t.download,this.disposer=t.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let g,y;if(typeof t=="string")if(s=t,y=o,t==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");g=r}else{let w=Ir.get(t);if(w===void 0)throw new TypeError(`Unsupported tensor type: ${t}.`);if(Array.isArray(r)){if(t==="float16"&&w===Uint16Array)throw new TypeError("Creating a float16 tensor from number array is not supported. Please use Uint16Array as data.");t==="uint64"||t==="int64"?g=w.from(r,BigInt):g=w.from(r)}else if(r instanceof w)g=r;else throw new TypeError(`A ${s} tensor's data must be type of ${w}`)}else if(y=r,Array.isArray(t)){if(t.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let w=typeof t[0];if(w==="string")s="string",g=t;else if(w==="boolean")s="bool",g=Uint8Array.from(t);else throw new TypeError(`Invalid element type of data array: ${w}.`)}else{let w=ln.get(t.constructor);if(w===void 0)throw new TypeError(`Unsupported type for tensor data: ${t.constructor}.`);s=w,g=t}if(y===void 0)y=[g.length];else if(!Array.isArray(y))throw new TypeError("A tensor's dims must be a number array");p=y,this.cpuData=g,this.dataLocation="cpu"}let d=Zs(p);if(this.cpuData&&d!==this.cpuData.length)throw new Error(`Tensor's size(${d}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=p,this.size=d}static async fromImage(t,r){return Gs(t,r)}static fromTexture(t,r){return Hs(t,r)}static fromGpuBuffer(t,r){return Ls(t,r)}static fromPinnedBuffer(t,r,o){return Fs(t,r,o)}toDataURL(t){return Ns(this,t)}toImageData(t){return Ws(this,t)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}async getData(t){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,t&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(t){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return Qs(this,t)}}});var pt,sa=se(()=>{"use strict";oa();pt=_t});var dn,eu,It,$t,Ja=se(()=>{"use strict";qa();dn=(e,t)=>{(typeof Pt.trace>"u"?!Pt.wasm.trace:!Pt.trace)||console.timeStamp(`${e}::ORT::${t}`)},eu=(e,t)=>{let r=new Error().stack?.split(/\r\n|\r|\n/g)||[],o=!1;for(let s=0;s<r.length;s++){if(o&&!r[s].includes("TRACE_FUNC")){let p=`FUNC_${e}::${r[s].trim().split(" ")[1]}`;t&&(p+=`::${t}`),dn("CPU",p);return}r[s].includes("TRACE_FUNC")&&(o=!0)}},It=e=>{(typeof Pt.trace>"u"?!Pt.wasm.trace:!Pt.trace)||eu("BEGIN",e)},$t=e=>{(typeof Pt.trace>"u"?!Pt.wasm.trace:!Pt.trace)||eu("END",e)}});var ua,tu=se(()=>{"use strict";aa();sa();Ja();ua=class e{constructor(t){this.handler=t}async run(t,r,o){It();let s={},p={};if(typeof t!="object"||t===null||t instanceof pt||Array.isArray(t))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let d=!0;if(typeof r=="object"){if(r===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(r instanceof pt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(r)){if(r.length===0)throw new TypeError("'fetches' cannot be an empty array.");d=!1;for(let w of r){if(typeof w!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(w)===-1)throw new RangeError(`'fetches' contains invalid output name: ${w}.`);s[w]=null}if(typeof o=="object"&&o!==null)p=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else{let w=!1,f=Object.getOwnPropertyNames(r);for(let x of this.outputNames)if(f.indexOf(x)!==-1){let S=r[x];(S===null||S instanceof pt)&&(w=!0,d=!1,s[x]=S)}if(w){if(typeof o=="object"&&o!==null)p=o;else if(typeof o<"u")throw new TypeError("'options' must be an object.")}else p=r}}else if(typeof r<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let w of this.inputNames)if(typeof t[w]>"u")throw new Error(`input '${w}' is missing in 'feeds'.`);if(d)for(let w of this.outputNames)s[w]=null;let g=await this.handler.run(t,s,p),y={};for(let w in g)if(Object.hasOwnProperty.call(g,w)){let f=g[w];f instanceof pt?y[w]=f:y[w]=new pt(f.type,f.data,f.dims)}return $t(),y}async release(){return this.handler.dispose()}static async create(t,r,o,s){It();let p,d={};if(typeof t=="string"){if(p=t,typeof r=="object"&&r!==null)d=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof Uint8Array){if(p=t,typeof r=="object"&&r!==null)d=r;else if(typeof r<"u")throw new TypeError("'options' must be an object.")}else if(t instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&t instanceof SharedArrayBuffer){let f=t,x=0,S=t.byteLength;if(typeof r=="object"&&r!==null)d=r;else if(typeof r=="number"){if(x=r,!Number.isSafeInteger(x))throw new RangeError("'byteOffset' must be an integer.");if(x<0||x>=f.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${f.byteLength}).`);if(S=t.byteLength-x,typeof o=="number"){if(S=o,!Number.isSafeInteger(S))throw new RangeError("'byteLength' must be an integer.");if(S<=0||x+S>f.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${f.byteLength-x}].`);if(typeof s=="object"&&s!==null)d=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else if(typeof o<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof r<"u")throw new TypeError("'options' must be an object.");p=new Uint8Array(f,x,S)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[g,y]=await na(d),w=await g.createInferenceSessionHandler(p,y);return $t(),new e(w)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}}});var ru,iu=se(()=>{"use strict";tu();ru=ua});var nu=se(()=>{"use strict"});var au=se(()=>{"use strict"});var ou=se(()=>{"use strict"});var su=se(()=>{"use strict"});var Wh,la,uu=se(()=>{"use strict";aa();sa();Wh="Training backend could not be resolved. Make sure you're using the correct configuration & WebAssembly files.",la=class e{constructor(t,r,o){this.handler=t,this.hasOptimizerModel=r,this.hasEvalModel=o}get trainingInputNames(){return this.handler.inputNames}get trainingOutputNames(){return this.handler.outputNames}get evalInputNames(){if(this.hasEvalModel)return this.handler.evalInputNames;throw new Error("This training session has no evalModel loaded.")}get evalOutputNames(){if(this.hasEvalModel)return this.handler.evalOutputNames;throw new Error("This training session has no evalModel loaded.")}static async create(t,r){let o=t.evalModel||"",s=t.optimizerModel||"",p=r||{},[d,g]=await na(p);if(d.createTrainingSessionHandler){let y=await d.createTrainingSessionHandler(t.checkpointState,t.trainModel,o,s,g);return new e(y,!!t.optimizerModel,!!t.evalModel)}else throw new Error(Wh)}typeNarrowingForRunStep(t,r,o,s,p){let d={},g={};if(typeof o!="object"||o===null||o instanceof pt||Array.isArray(o))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let y=!0;if(typeof s=="object"){if(s===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(s instanceof pt)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(s)){if(s.length===0)throw new TypeError("'fetches' cannot be an empty array.");y=!1;for(let w of s){if(typeof w!="string")throw new TypeError("'fetches' must be a string array or an object.");if(r.indexOf(w)===-1)throw new RangeError(`'fetches' contains invalid output name: ${w}.`);d[w]=null}if(typeof p=="object"&&p!==null)g=p;else if(typeof p<"u")throw new TypeError("'options' must be an object.")}else{let w=!1,f=Object.getOwnPropertyNames(s);for(let x of r)if(f.indexOf(x)!==-1){let S=s[x];(S===null||S instanceof pt)&&(w=!0,y=!1,d[x]=S)}if(w){if(typeof p=="object"&&p!==null)g=p;else if(typeof p<"u")throw new TypeError("'options' must be an object.")}else g=s}}else if(typeof s<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let w of t)if(typeof o[w]>"u")throw new Error(`input '${w}' is missing in 'feeds'.`);if(y)for(let w of r)d[w]=null;return[d,g]}convertHandlerReturnTypeToMapOfTensors(t){let r={};for(let o in t)if(Object.hasOwnProperty.call(t,o)){let s=t[o];s instanceof pt?r[o]=s:r[o]=new pt(s.type,s.data,s.dims)}return r}async lazyResetGrad(){await this.handler.lazyResetGrad()}async runTrainStep(t,r,o){let[s,p]=this.typeNarrowingForRunStep(this.trainingInputNames,this.trainingOutputNames,t,r,o),d=await this.handler.runTrainStep(t,s,p);return this.convertHandlerReturnTypeToMapOfTensors(d)}async runOptimizerStep(t){if(this.hasOptimizerModel)await this.handler.runOptimizerStep(t||{});else throw new Error("This TrainingSession has no OptimizerModel loaded.")}async runEvalStep(t,r,o){if(this.hasEvalModel){let[s,p]=this.typeNarrowingForRunStep(this.evalInputNames,this.evalOutputNames,t,r,o),d=await this.handler.runEvalStep(t,s,p);return this.convertHandlerReturnTypeToMapOfTensors(d)}else throw new Error("This TrainingSession has no EvalModel loaded.")}async getParametersSize(t=!0){return this.handler.getParametersSize(t)}async loadParametersBuffer(t,r=!0){let o=await this.getParametersSize(r);if(t.length!==4*o)throw new Error("Size of the buffer passed into loadParametersBuffer must match the number of parameters in the model. Please use getParametersSize method to check.");return this.handler.loadParametersBuffer(t,r)}async getContiguousParameters(t=!0){return this.handler.getContiguousParameters(t)}async release(){return this.handler.dispose()}}});var lu,du=se(()=>{"use strict";uu();lu=la});var Ya={};xr(Ya,{InferenceSession:()=>ru,TRACE:()=>dn,TRACE_FUNC_BEGIN:()=>It,TRACE_FUNC_END:()=>$t,Tensor:()=>pt,TrainingSession:()=>lu,env:()=>Ne,registerBackend:()=>ur});var Dt=se(()=>{"use strict";Bs();Us();iu();sa();nu();au();Ja();ou();su();du()});var Za={};xr(Za,{createReadStream:()=>pu,readFile:()=>Vh,readFileSync:()=>Gh});var Vh,Gh,pu,Qa=se(()=>{Vh=void 0,Gh=void 0,pu=void 0});var Xa={};xr(Xa,{join:()=>Hh});var Hh,eo=se(()=>{Hh=void 0});var hu=Xr((mu,to)=>{"use strict";var fu=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){var r=t,o,s;r.ready=new Promise((i,n)=>{o=i,s=n}),r.mountExternalData=(i,n)=>{(r.jh||(r.jh=new Map)).set(i,n)},r.unmountExternalData=()=>{delete r.jh};let p=()=>{let i=(a,l,c)=>(...m)=>{let b=Ct,v=l?.();m=a(...m);let _=l?.();return v!==_&&(a=_,c(v),l=c=null),Ct!=b?Sn():m},n=a=>async(...l)=>{try{if(r.ih)throw Error("Session already started");let c=r.ih={Kh:l[0],errors:[]},m=await a(...l);if(r.ih!==c)throw Error("Session mismatch");r.qh?.flush();let b=c.errors;if(0<b.length){let v=await Promise.all(b);if(v=v.filter(_=>_),0<v.length)throw Error(v.join(`
`))}return m}finally{r.ih=null}};r._OrtCreateSession=i(r._OrtCreateSession,()=>r._OrtCreateSession,a=>r._OrtCreateSession=a),r._OrtRun=n(i(r._OrtRun,()=>r._OrtRun,a=>r._OrtRun=a)),r._OrtRunWithBinding=n(i(r._OrtRunWithBinding,()=>r._OrtRunWithBinding,a=>r._OrtRunWithBinding=a)),r._OrtBindInput=i(r._OrtBindInput,()=>r._OrtBindInput,a=>r._OrtBindInput=a),p=void 0};r.jsepInit=(i,n)=>{if(p?.(),i==="webgpu"){[r.qh,r.Bh,r.Fh,r.rh,r.Eh,r.Jd,r.Gh,r.Ih,r.Ch,r.Dh,r.Hh]=n;let a=r.qh;r.jsepRegisterBuffer=(l,c,m,b)=>a.registerBuffer(l,c,m,b),r.jsepGetBuffer=l=>a.getBuffer(l),r.jsepCreateDownloader=(l,c,m)=>a.createDownloader(l,c,m),r.jsepOnReleaseSession=l=>{a.onReleaseSession(l)},r.jsepOnRunStart=l=>a.onRunStart(l)}};var d=Object.assign({},r),g="./this.program",y=(i,n)=>{throw n},w=typeof window=="object",f=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",S="",O,E,P;if(x){var j=(Qa(),sr(Za)),U=(eo(),sr(Xa));S=f?U.dirname(S)+"/":__dirname+"/",O=(i,n)=>(i=We(i)?new URL(i):U.normalize(i),j.readFileSync(i,n?void 0:"utf8")),P=i=>(i=O(i,!0),i.buffer||(i=new Uint8Array(i)),i),E=(i,n,a,l=!0)=>{i=We(i)?new URL(i):U.normalize(i),j.readFile(i,l?void 0:"utf8",(c,m)=>{c?a(c):n(l?m.buffer:m)})},!r.thisProgram&&1<process.argv.length&&(g=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),y=(i,n)=>{throw process.exitCode=i,n},r.inspect=()=>"[Emscripten Module object]"}else(w||f)&&(f?S=self.location.href:typeof document<"u"&&document.currentScript&&(S=document.currentScript.src),e&&(S=e),S.indexOf("blob:")!==0?S=S.substr(0,S.replace(/[?#].*/,"").lastIndexOf("/")+1):S="",O=i=>{var n=new XMLHttpRequest;return n.open("GET",i,!1),n.send(null),n.responseText},f&&(P=i=>{var n=new XMLHttpRequest;return n.open("GET",i,!1),n.responseType="arraybuffer",n.send(null),new Uint8Array(n.response)}),E=(i,n,a)=>{var l=new XMLHttpRequest;l.open("GET",i,!0),l.responseType="arraybuffer",l.onload=()=>{l.status==200||l.status==0&&l.response?n(l.response):a()},l.onerror=a,l.send(null)});var z=console.log.bind(console),W=console.error.bind(console);Object.assign(r,d),d=null,typeof WebAssembly!="object"&&ge("no native wasm support detected");var N,q=!1,X,te,ie,J,ne,Ie,Be;function qe(){var i=N.buffer;r.HEAP8=te=new Int8Array(i),r.HEAP16=new Int16Array(i),r.HEAPU8=ie=new Uint8Array(i),r.HEAPU16=new Uint16Array(i),r.HEAP32=J=new Int32Array(i),r.HEAPU32=ne=new Uint32Array(i),r.HEAPF32=Ie=new Float32Array(i),r.HEAPF64=Be=new Float64Array(i)}var Ve=[],ze=[],fe=[],Ge=0,Ae=null,$e=null;function ge(i){throw i="Aborted("+i+")",W(i),q=!0,X=1,i=new WebAssembly.RuntimeError(i+". Build with -sASSERTIONS for more info."),s(i),i}var Te=i=>i.startsWith("data:application/octet-stream;base64,"),We=i=>i.startsWith("file://"),it;if(it="ort-wasm-simd.wasm",!Te(it)){var ae=it;it=r.locateFile?r.locateFile(ae,S):S+ae}function ye(i){if(P)return P(i);throw"both async and sync fetching of the wasm failed"}function Me(i){if(w||f){if(typeof fetch=="function"&&!We(i))return fetch(i,{credentials:"same-origin"}).then(n=>{if(!n.ok)throw"failed to load wasm binary file at '"+i+"'";return n.arrayBuffer()}).catch(()=>ye(i));if(E)return new Promise((n,a)=>{E(i,l=>n(new Uint8Array(l)),a)})}return Promise.resolve().then(()=>ye(i))}function ot(i,n,a){return Me(i).then(l=>WebAssembly.instantiate(l,n)).then(l=>l).then(a,l=>{W(`failed to asynchronously prepare wasm: ${l}`),ge(l)})}function mt(i,n){var a=it;return typeof WebAssembly.instantiateStreaming!="function"||Te(a)||We(a)||x||typeof fetch!="function"?ot(a,i,n):fetch(a,{credentials:"same-origin"}).then(l=>WebAssembly.instantiateStreaming(l,i).then(n,function(c){return W(`wasm streaming compile failed: ${c}`),W("falling back to ArrayBuffer instantiation"),ot(a,i,n)}))}var lt,ht={1367024:(i,n,a,l)=>{if(typeof r>"u"||!r.jh)return 1;if(i=nt(i>>>0),i.startsWith("./")&&(i=i.substring(2)),i=r.jh.get(i),!i)return 2;if(n>>>=0,a>>>=0,n+a>i.byteLength)return 3;try{return ie.set(i.subarray(n,n+a),l>>>0>>>0),0}catch{return 4}},1367525:()=>{r.Ch()},1367556:()=>{r.Dh()},1367585:()=>{r.Hh()},1367610:i=>r.Bh(i),1367643:i=>r.Fh(i),1367675:(i,n,a)=>{r.rh(i,n,a,!0)},1367714:(i,n,a)=>{r.rh(i,n,a)},1367747:i=>{r.Jd("Abs",i,void 0)},1367798:i=>{r.Jd("Neg",i,void 0)},1367849:i=>{r.Jd("Floor",i,void 0)},1367902:i=>{r.Jd("Ceil",i,void 0)},1367954:i=>{r.Jd("Reciprocal",i,void 0)},1368012:i=>{r.Jd("Sqrt",i,void 0)},1368064:i=>{r.Jd("Exp",i,void 0)},1368115:i=>{r.Jd("Erf",i,void 0)},1368166:i=>{r.Jd("Sigmoid",i,void 0)},1368221:(i,n,a)=>{r.Jd("HardSigmoid",i,{alpha:n,beta:a})},1368300:i=>{r.Jd("Log",i,void 0)},1368351:i=>{r.Jd("Sin",i,void 0)},1368402:i=>{r.Jd("Cos",i,void 0)},1368453:i=>{r.Jd("Tan",i,void 0)},1368504:i=>{r.Jd("Asin",i,void 0)},1368556:i=>{r.Jd("Acos",i,void 0)},1368608:i=>{r.Jd("Atan",i,void 0)},1368660:i=>{r.Jd("Sinh",i,void 0)},1368712:i=>{r.Jd("Cosh",i,void 0)},1368764:i=>{r.Jd("Asinh",i,void 0)},1368817:i=>{r.Jd("Acosh",i,void 0)},1368870:i=>{r.Jd("Atanh",i,void 0)},1368923:i=>{r.Jd("Tanh",i,void 0)},1368975:i=>{r.Jd("Not",i,void 0)},1369026:(i,n,a)=>{r.Jd("Clip",i,{min:n,max:a})},1369095:i=>{r.Jd("Clip",i,void 0)},1369147:(i,n)=>{r.Jd("Elu",i,{alpha:n})},1369205:i=>{r.Jd("Relu",i,void 0)},1369257:(i,n)=>{r.Jd("LeakyRelu",i,{alpha:n})},1369321:(i,n)=>{r.Jd("ThresholdedRelu",i,{alpha:n})},1369391:(i,n)=>{r.Jd("Cast",i,{to:n})},1369449:i=>{r.Jd("Add",i,void 0)},1369500:i=>{r.Jd("Sub",i,void 0)},1369551:i=>{r.Jd("Mul",i,void 0)},1369602:i=>{r.Jd("Div",i,void 0)},1369653:i=>{r.Jd("Pow",i,void 0)},1369704:i=>{r.Jd("Equal",i,void 0)},1369757:i=>{r.Jd("Greater",i,void 0)},1369812:i=>{r.Jd("GreaterOrEqual",i,void 0)},1369874:i=>{r.Jd("Less",i,void 0)},1369926:i=>{r.Jd("LessOrEqual",i,void 0)},1369985:(i,n,a,l,c)=>{r.Jd("ReduceMean",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,c>>>0)):[]})},1370144:(i,n,a,l,c)=>{r.Jd("ReduceMax",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,c>>>0)):[]})},1370302:(i,n,a,l,c)=>{r.Jd("ReduceMin",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,c>>>0)):[]})},1370460:(i,n,a,l,c)=>{r.Jd("ReduceProd",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,c>>>0)):[]})},1370619:(i,n,a,l,c)=>{r.Jd("ReduceSum",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,c>>>0)):[]})},1370777:(i,n,a,l,c)=>{r.Jd("ReduceL1",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,c>>>0)):[]})},1370934:(i,n,a,l,c)=>{r.Jd("ReduceL2",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,c>>>0)):[]})},1371091:(i,n,a,l,c)=>{r.Jd("ReduceLogSum",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,c>>>0)):[]})},1371252:(i,n,a,l,c)=>{r.Jd("ReduceSumSquare",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,c>>>0)):[]})},1371416:(i,n,a,l,c)=>{r.Jd("ReduceLogSumExp",i,{keepDims:!!n,noopWithEmptyAxes:!!a,axes:l?Array.from(J.subarray(l>>>0,c>>>0)):[]})},1371580:i=>{r.Jd("Where",i,void 0)},1371633:(i,n,a)=>{r.Jd("Transpose",i,{perm:n?Array.from(J.subarray(n>>>0,a>>>0)):[]})},1371741:(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)=>{r.Jd("ConvTranspose",i,{format:_?"NHWC":"NCHW",autoPad:n,dilations:[a],group:l,kernel_shape:[c],pads:[m,b],strides:[v],wIsConst:()=>!!te[C>>>0],outputPadding:I?Array.from(J.subarray(I>>>0,k>>>0)):[],outputShape:R?Array.from(J.subarray(R>>>0,A>>>0)):[],activation:nt(D)})},1372143:(i,n,a,l,c,m,b,v,_,C,I,k,R,A)=>{r.Jd("ConvTranspose",i,{format:v?"NHWC":"NCHW",autoPad:n,dilations:Array.from(J.subarray(a>>>0,(a>>>0)+2>>>0)),group:l,kernelShape:Array.from(J.subarray(c>>>0,(c>>>0)+2>>>0)),pads:Array.from(J.subarray(m>>>0,(m>>>0)+4>>>0)),strides:Array.from(J.subarray(b>>>0,(b>>>0)+2>>>0)),wIsConst:()=>!!te[_>>>0],outputPadding:C?Array.from(J.subarray(C>>>0,I>>>0)):[],outputShape:k?Array.from(J.subarray(k>>>0,R>>>0)):[],activation:nt(A)})},1372708:(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)=>{r.Jd("ConvTranspose",i,{format:_?"NHWC":"NCHW",autoPad:n,dilations:[a],group:l,kernel_shape:[c],pads:[m,b],strides:[v],wIsConst:()=>!!te[C>>>0],outputPadding:I?Array.from(J.subarray(I>>>0,k>>>0)):[],outputShape:R?Array.from(J.subarray(R>>>0,A>>>0)):[],activation:nt(D)})},1373110:(i,n,a,l,c,m,b,v,_,C,I,k,R,A)=>{r.Jd("ConvTranspose",i,{format:v?"NHWC":"NCHW",autoPad:n,dilations:Array.from(J.subarray(a>>>0,(a>>>0)+2>>>0)),group:l,kernelShape:Array.from(J.subarray(c>>>0,(c>>>0)+2>>>0)),pads:Array.from(J.subarray(m>>>0,(m>>>0)+4>>>0)),strides:Array.from(J.subarray(b>>>0,(b>>>0)+2>>>0)),wIsConst:()=>!!te[_>>>0],outputPadding:C?Array.from(J.subarray(C>>>0,I>>>0)):[],outputShape:k?Array.from(J.subarray(k>>>0,R>>>0)):[],activation:nt(A)})},1373675:(i,n)=>{r.Jd("GlobalAveragePool",i,{format:n?"NHWC":"NCHW"})},1373766:(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)=>{r.Jd("AveragePool",i,{format:G?"NHWC":"NCHW",auto_pad:n,ceil_mode:a,count_include_pad:l,storage_order:c,dilations:[m,b],kernel_shape:[v,_],pads:[C,I,k,R],strides:[A,D]})},1374050:(i,n)=>{r.Jd("GlobalAveragePool",i,{format:n?"NHWC":"NCHW"})},1374141:(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)=>{r.Jd("AveragePool",i,{format:G?"NHWC":"NCHW",auto_pad:n,ceil_mode:a,count_include_pad:l,storage_order:c,dilations:[m,b],kernel_shape:[v,_],pads:[C,I,k,R],strides:[A,D]})},1374425:(i,n)=>{r.Jd("GlobalMaxPool",i,{format:n?"NHWC":"NCHW"})},1374512:(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)=>{r.Jd("MaxPool",i,{format:G?"NHWC":"NCHW",auto_pad:n,ceil_mode:a,count_include_pad:l,storage_order:c,dilations:[m,b],kernel_shape:[v,_],pads:[C,I,k,R],strides:[A,D]})},1374792:(i,n)=>{r.Jd("GlobalMaxPool",i,{format:n?"NHWC":"NCHW"})},1374879:(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)=>{r.Jd("MaxPool",i,{format:G?"NHWC":"NCHW",auto_pad:n,ceil_mode:a,count_include_pad:l,storage_order:c,dilations:[m,b],kernel_shape:[v,_],pads:[C,I,k,R],strides:[A,D]})},1375159:(i,n,a,l,c)=>{r.Jd("Gemm",i,{alpha:n,beta:a,transA:l,transB:c})},1375263:i=>{r.Jd("MatMul",i,void 0)},1375317:(i,n,a,l)=>{r.Jd("ArgMax",i,{keepDims:!!n,selectLastIndex:!!a,axis:l})},1375425:(i,n,a,l)=>{r.Jd("ArgMin",i,{keepDims:!!n,selectLastIndex:!!a,axis:l})},1375533:(i,n)=>{r.Jd("Softmax",i,{axis:n})},1375596:(i,n)=>{r.Jd("Concat",i,{axis:n})},1375656:(i,n,a,l,c)=>{r.Jd("Split",i,{axis:n,numOutputs:a,splitSizes:l?Array.from(J.subarray(l>>>0,c>>>0)):[]})},1375796:i=>{r.Jd("Expand",i,void 0)},1375850:(i,n)=>{r.Jd("Gather",i,{axis:Number(n)})},1375921:(i,n)=>{r.Jd("GatherElements",i,{axis:Number(n)})},1376e3:(i,n,a,l,c,m,b,v,_,C,I)=>{r.Jd("Resize",i,{antialias:n,axes:a?Array.from(J.subarray(a>>>0,l>>>0)):[],coordinateTransformMode:nt(c),cubicCoeffA:m,excludeOutside:b,extrapolationValue:v,keepAspectRatioPolicy:nt(_),mode:nt(C),nearestMode:nt(I)})},1376346:(i,n,a,l,c,m,b)=>{r.Jd("Slice",i,{starts:n?Array.from(J.subarray(n>>>0,a>>>0)):[],ends:l?Array.from(J.subarray(l>>>0,c>>>0)):[],axes:m?Array.from(J.subarray(m>>>0,b>>>0)):[]})},1376562:i=>{r.Jd("Tile",i,void 0)},1376614:(i,n,a)=>{r.Jd("LayerNormalization",i,{axis:Number(n),epsilon:Number(a)})},1376721:(i,n,a)=>{r.Jd("InstanceNormalization",i,{epsilon:n,format:a?"NHWC":"NCHW"})},1376835:(i,n,a)=>{r.Jd("InstanceNormalization",i,{epsilon:n,format:a?"NHWC":"NCHW"})},1376949:i=>{r.Jd("Range",i,void 0)},1377002:(i,n)=>{r.Jd("Einsum",i,{equation:nt(n)})},1377083:(i,n,a,l,c)=>{r.Jd("Pad",i,{mode:n,value:a,pads:l?Array.from(J.subarray(l>>>0,c>>>0)):[]})},1377210:(i,n,a,l,c,m)=>{r.Jd("BatchNormalization",i,{epsilon:n,momentum:a,spatial:!!c,trainingMode:!!l,format:m?"NHWC":"NCHW"})},1377379:(i,n,a,l,c,m)=>{r.Jd("BatchNormalization",i,{epsilon:n,momentum:a,spatial:!!c,trainingMode:!!l,format:m?"NHWC":"NCHW"})},1377548:(i,n,a)=>{r.Jd("CumSum",i,{exclusive:Number(n),reverse:Number(a)})},1377645:(i,n,a,l,c,m,b,v,_)=>{r.Jd("Attention",i,{numHeads:n,isUnidirectional:a,maskFilterValue:l,scale:c,doRotary:m,qkvHiddenSizes:b?Array.from(J.subarray(Number(v)>>>0,Number(v)+b>>>0)):[],pastPresentShareBuffer:!!_})},1377917:i=>{r.Jd("BiasAdd",i,void 0)},1377972:i=>{r.Jd("BiasSplitGelu",i,void 0)},1378033:i=>{r.Jd("FastGelu",i,void 0)},1378089:(i,n,a,l,c,m,b,v,_,C,I,k,R)=>{r.Jd("Conv",i,{format:_?"NHWC":"NCHW",auto_pad:n,dilations:[a],group:l,kernel_shape:[c],pads:m?Array.from(J.subarray(m>>>0,b>>>0)):[],strides:[v],w_is_const:()=>!!te[C>>>0],activation:nt(I),activation_params:k?Array.from(Ie.subarray(k>>>0,R>>>0)):[]})},1378459:(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)=>{r.Jd("Conv",i,{format:k?"NHWC":"NCHW",auto_pad:n,dilations:[a,l],group:c,kernel_shape:[m,b],pads:v?Array.from(J.subarray(v>>>0,_>>>0)):[],strides:[C,I],w_is_const:()=>!!te[R>>>0],activation:nt(A),activation_params:D?Array.from(Ie.subarray(D>>>0,G>>>0)):[]})},1378850:i=>{r.Jd("Gelu",i,void 0)},1378902:(i,n,a,l,c,m)=>{r.Jd("MatMulNBits",i,{k:n,n:a,accuracyLevel:l,bits:c,blockSize:m})},1379029:(i,n,a,l,c,m)=>{r.Jd("MultiHeadAttention",i,{numHeads:n,isUnidirectional:a,maskFilterValue:l,scale:c,doRotary:m})},1379188:(i,n)=>{r.Jd("SkipLayerNormalization",i,{epsilon:n})},1379269:i=>{r.Gh(i)},1379303:(i,n)=>r.Ih(i,n,r.ih.Kh,r.ih.errors)};function st(i){this.name="ExitStatus",this.message=`Program terminated with exit(${i})`,this.status=i}var rt=[],bt=0,Et=0;function Rt(i){this.hh=i,this.dh=i-24,this.Jh=function(n){ne[this.dh+4>>>2>>>0]=n},this.oh=function(){return ne[this.dh+4>>>2>>>0]},this.Ah=function(n){ne[this.dh+8>>>2>>>0]=n},this.sh=function(n){te[this.dh+12>>>0>>>0]=n?1:0},this.xh=function(){return te[this.dh+12>>>0>>>0]!=0},this.th=function(n){te[this.dh+13>>>0>>>0]=n?1:0},this.wh=function(){return te[this.dh+13>>>0>>>0]!=0},this.zh=function(n,a){this.ph(0),this.Jh(n),this.Ah(a)},this.ph=function(n){ne[this.dh+16>>>2>>>0]=n},this.uh=function(){return ne[this.dh+16>>>2>>>0]},this.yh=function(){if(hi(this.oh()))return ne[this.hh>>>2>>>0];var n=this.uh();return n!==0?n:this.hh}}var ir=i=>{var n=Et;if(!n)return er(0),0;var a=new Rt(n);a.ph(n);var l=a.oh();if(!l)return er(0),n;for(var c in i){var m=i[c];if(m===0||m===l)break;if(mi(m,l,a.dh+16))return er(m),n}return er(l),n},nr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,ai=(i,n,a)=>{n>>>=0;var l=n+a;for(a=n;i[a]&&!(a>=l);)++a;if(16<a-n&&i.buffer&&nr)return nr.decode(i.subarray(n,a));for(l="";n<a;){var c=i[n++];if(c&128){var m=i[n++]&63;if((c&224)==192)l+=String.fromCharCode((c&31)<<6|m);else{var b=i[n++]&63;c=(c&240)==224?(c&15)<<12|m<<6|b:(c&7)<<18|m<<12|b<<6|i[n++]&63,65536>c?l+=String.fromCharCode(c):(c-=65536,l+=String.fromCharCode(55296|c>>10,56320|c&1023))}}else l+=String.fromCharCode(c)}return l},nt=(i,n)=>(i>>>=0)?ai(ie,i,n):"",kr=i=>{for(var n=0,a=0;a<i.length;++a){var l=i.charCodeAt(a);127>=l?n++:2047>=l?n+=2:55296<=l&&57343>=l?(n+=4,++a):n+=3}return n},ar=(i,n,a,l)=>{if(a>>>=0,!(0<l))return 0;var c=a;l=a+l-1;for(var m=0;m<i.length;++m){var b=i.charCodeAt(m);if(55296<=b&&57343>=b){var v=i.charCodeAt(++m);b=65536+((b&1023)<<10)|v&1023}if(127>=b){if(a>=l)break;n[a++>>>0]=b}else{if(2047>=b){if(a+1>=l)break;n[a++>>>0]=192|b>>6}else{if(65535>=b){if(a+2>=l)break;n[a++>>>0]=224|b>>12}else{if(a+3>=l)break;n[a++>>>0]=240|b>>18,n[a++>>>0]=128|b>>12&63}n[a++>>>0]=128|b>>6&63}n[a++>>>0]=128|b&63}}return n[a>>>0]=0,a-c},zt=i=>i%4===0&&(i%100!==0||i%400===0),oi=[0,31,60,91,121,152,182,213,244,274,305,335],wn=[0,31,59,90,120,151,181,212,243,273,304,334],si=i=>{var n=kr(i)+1,a=Mr(n);return a&&ar(i,ie,a,n),a},ui=[],Or=(i,n)=>{ui.length=0;for(var a;a=ie[i++>>>0];){var l=a!=105;l&=a!=112,n+=l&&n%8?4:0,ui.push(a==112?ne[n>>>2>>>0]:a==105?J[n>>>2>>>0]:Be[n>>>3>>>0]),n+=l?8:4}return ui},pr={},Pr=()=>{if(!Rr){var i={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:g||"./this.program"},n;for(n in pr)pr[n]===void 0?delete i[n]:i[n]=pr[n];var a=[];for(n in i)a.push(`${n}=${i[n]}`);Rr=a}return Rr},Rr,Xt=[null,[],[]],li=[31,29,31,30,31,30,31,31,30,31,30,31],di=[31,28,31,30,31,30,31,31,30,31,30,31];function ut(i){var n=Array(kr(i)+1);return ar(i,n,0,n.length),n}function _n(i,n,a,l){function c(A,D,G){for(A=typeof A=="number"?A.toString():A||"";A.length<D;)A=G[0]+A;return A}function m(A,D){return c(A,D,"0")}function b(A,D){function G(oe){return 0>oe?-1:0<oe?1:0}var ee;return(ee=G(A.getFullYear()-D.getFullYear()))===0&&(ee=G(A.getMonth()-D.getMonth()))===0&&(ee=G(A.getDate()-D.getDate())),ee}function v(A){switch(A.getDay()){case 0:return new Date(A.getFullYear()-1,11,29);case 1:return A;case 2:return new Date(A.getFullYear(),0,3);case 3:return new Date(A.getFullYear(),0,2);case 4:return new Date(A.getFullYear(),0,1);case 5:return new Date(A.getFullYear()-1,11,31);case 6:return new Date(A.getFullYear()-1,11,30)}}function _(A){var D=A.fh;for(A=new Date(new Date(A.gh+1900,0,1).getTime());0<D;){var G=A.getMonth(),ee=(zt(A.getFullYear())?li:di)[G];if(D>ee-A.getDate())D-=ee-A.getDate()+1,A.setDate(1),11>G?A.setMonth(G+1):(A.setMonth(0),A.setFullYear(A.getFullYear()+1));else{A.setDate(A.getDate()+D);break}}return G=new Date(A.getFullYear()+1,0,4),D=v(new Date(A.getFullYear(),0,4)),G=v(G),0>=b(D,A)?0>=b(G,A)?A.getFullYear()+1:A.getFullYear():A.getFullYear()-1}i>>>=0,n>>>=0,a>>>=0,l>>>=0;var C=ne[l+40>>>2>>>0];l={Nh:J[l>>>2>>>0],Mh:J[l+4>>>2>>>0],kh:J[l+8>>>2>>>0],nh:J[l+12>>>2>>>0],lh:J[l+16>>>2>>>0],gh:J[l+20>>>2>>>0],eh:J[l+24>>>2>>>0],fh:J[l+28>>>2>>>0],Ph:J[l+32>>>2>>>0],Lh:J[l+36>>>2>>>0],Oh:C?nt(C):""},a=nt(a),C={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var I in C)a=a.replace(new RegExp(I,"g"),C[I]);var k="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),R="January February March April May June July August September October November December".split(" ");C={"%a":A=>k[A.eh].substring(0,3),"%A":A=>k[A.eh],"%b":A=>R[A.lh].substring(0,3),"%B":A=>R[A.lh],"%C":A=>m((A.gh+1900)/100|0,2),"%d":A=>m(A.nh,2),"%e":A=>c(A.nh,2," "),"%g":A=>_(A).toString().substring(2),"%G":A=>_(A),"%H":A=>m(A.kh,2),"%I":A=>(A=A.kh,A==0?A=12:12<A&&(A-=12),m(A,2)),"%j":A=>{for(var D=0,G=0;G<=A.lh-1;D+=(zt(A.gh+1900)?li:di)[G++]);return m(A.nh+D,3)},"%m":A=>m(A.lh+1,2),"%M":A=>m(A.Mh,2),"%n":()=>`
`,"%p":A=>0<=A.kh&&12>A.kh?"AM":"PM","%S":A=>m(A.Nh,2),"%t":()=>"	","%u":A=>A.eh||7,"%U":A=>m(Math.floor((A.fh+7-A.eh)/7),2),"%V":A=>{var D=Math.floor((A.fh+7-(A.eh+6)%7)/7);if(2>=(A.eh+371-A.fh-2)%7&&D++,D)D==53&&(G=(A.eh+371-A.fh)%7,G==4||G==3&&zt(A.gh)||(D=1));else{D=52;var G=(A.eh+7-A.fh-1)%7;(G==4||G==5&&zt(A.gh%400-1))&&D++}return m(D,2)},"%w":A=>A.eh,"%W":A=>m(Math.floor((A.fh+7-(A.eh+6)%7)/7),2),"%y":A=>(A.gh+1900).toString().substring(2),"%Y":A=>A.gh+1900,"%z":A=>{A=A.Lh;var D=0<=A;return A=Math.abs(A)/60,(D?"+":"-")+("0000"+(A/60*100+A%60)).slice(-4)},"%Z":A=>A.Oh,"%%":()=>"%"},a=a.replace(/%%/g,"\0\0");for(I in C)a.includes(I)&&(a=a.replace(new RegExp(I,"g"),C[I](l)));return a=a.replace(/\0\0/g,"%"),I=ut(a),I.length>n?0:(te.set(I,i>>>0),I.length-1)}var Fe=i=>{try{i()}catch(n){ge(n)}};function $n(){var i=M,n={};for(let[a,l]of Object.entries(i))n[a]=typeof l=="function"?function(){fr.push(a);try{return l.apply(null,arguments)}finally{q||(fr.pop(),Ct&&Bt===1&&fr.length===0&&(Bt=0,Fe(Os),typeof Fibers<"u"&&Fibers.Qh()))}}:l;return n}var Bt=0,Ct=null,Cn=0,fr=[],xn={},be={},zr=0,Br=null,Ga=[];function Sn(){return new Promise((i,n)=>{Br={resolve:i,reject:n}})}function Ha(){var i=Mr(65548),n=i+12;ne[i>>>2>>>0]=n,ne[i+4>>>2>>>0]=n+65536,n=fr[0];var a=xn[n];return a===void 0&&(a=zr++,xn[n]=a,be[a]=n),J[i+8>>>2>>>0]=a,i}function In(i){if(!q){if(Bt===0){var n=!1,a=!1;i((l=0)=>{if(!q&&(Cn=l,n=!0,a)){Bt=2,Fe(()=>Ps(Ct)),typeof Browser<"u"&&Browser.mh.vh&&Browser.mh.resume(),l=!1;try{var c=(0,M[be[J[Ct+8>>>2>>>0]]])()}catch(v){c=v,l=!0}var m=!1;if(!Ct){var b=Br;b&&(Br=null,(l?b.reject:b.resolve)(c),m=!0)}if(l&&!m)throw c}}),a=!0,n||(Bt=1,Ct=Ha(),typeof Browser<"u"&&Browser.mh.vh&&Browser.mh.pause(),Fe(()=>ks(Ct)))}else Bt===2?(Bt=0,Fe(Rs),Dr(Ct),Ct=null,Ga.forEach(l=>{if(!q)try{l();try{X=X=l=X,r.onExit?.(l),q=!0,y(l,new st(l))}catch(c){c instanceof st||c=="unwind"||y(1,c)}}catch(c){c instanceof st||c=="unwind"||y(1,c)}})):ge(`invalid state: ${Bt}`);return Cn}}function An(i){return In(n=>{i().then(n)})}var Tn={Ia:function(i,n,a){return An(async()=>{await r.Eh(i,n,a)})},t:function(i){return i=new Rt(i>>>0),i.xh()||(i.sh(!0),bt--),i.th(!1),rt.push(i),fi(i.hh),i.yh()},C:()=>{H(0,0);var i=rt.pop();pi(i.hh),Et=0},a:function(){return ir([])},l:function(i){return ir([i>>>0])},w:function(i,n){return ir([i>>>0,n>>>0])},p:function(i,n,a){return ir([i>>>0,n>>>0,a>>>0])},pa:()=>{var i=rt.pop();i||ge("no exception to throw");var n=i.hh;throw i.wh()||(rt.push(i),i.th(!0),i.sh(!1),bt++),Et=n,Et},r:function(i,n,a){throw i>>>=0,new Rt(i).zh(n>>>0,a>>>0),Et=i,bt++,Et},ca:()=>bt,f:function(i){throw Et||=i>>>0,Et},qa:function(){return 0},uc:function(){},Qa:function(){},Sa:function(){},Ka:function(){return 0},_b:function(){},_a:function(){},Pb:function(){},Ea:function(){},Ra:function(){},Oa:function(){},jc:function(){},Pa:function(){},Yc:()=>1,Uc:function(i,n,a){i=n+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*n:NaN,a>>>=0,i=new Date(1e3*i),J[a>>>2>>>0]=i.getUTCSeconds(),J[a+4>>>2>>>0]=i.getUTCMinutes(),J[a+8>>>2>>>0]=i.getUTCHours(),J[a+12>>>2>>>0]=i.getUTCDate(),J[a+16>>>2>>>0]=i.getUTCMonth(),J[a+20>>>2>>>0]=i.getUTCFullYear()-1900,J[a+24>>>2>>>0]=i.getUTCDay(),J[a+28>>>2>>>0]=(i.getTime()-Date.UTC(i.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Vc:function(i,n,a){i=n+2097152>>>0<4194305-!!i?(i>>>0)+4294967296*n:NaN,a>>>=0,i=new Date(1e3*i),J[a>>>2>>>0]=i.getSeconds(),J[a+4>>>2>>>0]=i.getMinutes(),J[a+8>>>2>>>0]=i.getHours(),J[a+12>>>2>>>0]=i.getDate(),J[a+16>>>2>>>0]=i.getMonth(),J[a+20>>>2>>>0]=i.getFullYear()-1900,J[a+24>>>2>>>0]=i.getDay(),J[a+28>>>2>>>0]=(zt(i.getFullYear())?oi:wn)[i.getMonth()]+i.getDate()-1|0,J[a+36>>>2>>>0]=-(60*i.getTimezoneOffset()),n=new Date(i.getFullYear(),6,1).getTimezoneOffset();var l=new Date(i.getFullYear(),0,1).getTimezoneOffset();J[a+32>>>2>>>0]=(n!=l&&i.getTimezoneOffset()==Math.min(l,n))|0},Wc:function(i){i>>>=0;var n=new Date(J[i+20>>>2>>>0]+1900,J[i+16>>>2>>>0],J[i+12>>>2>>>0],J[i+8>>>2>>>0],J[i+4>>>2>>>0],J[i>>>2>>>0],0),a=J[i+32>>>2>>>0],l=n.getTimezoneOffset(),c=new Date(n.getFullYear(),6,1).getTimezoneOffset(),m=new Date(n.getFullYear(),0,1).getTimezoneOffset(),b=Math.min(m,c);return 0>a?J[i+32>>>2>>>0]=+(c!=m&&b==l):0<a!=(b==l)&&(c=Math.max(m,c),n.setTime(n.getTime()+6e4*((0<a?b:c)-l))),J[i+24>>>2>>>0]=n.getDay(),J[i+28>>>2>>>0]=(zt(n.getFullYear())?oi:wn)[n.getMonth()]+n.getDate()-1|0,J[i>>>2>>>0]=n.getSeconds(),J[i+4>>>2>>>0]=n.getMinutes(),J[i+8>>>2>>>0]=n.getHours(),J[i+12>>>2>>>0]=n.getDate(),J[i+16>>>2>>>0]=n.getMonth(),J[i+20>>>2>>>0]=n.getYear(),i=n.getTime(),isNaN(i)?(J[mr()>>>2>>>0]=61,i=-1):i/=1e3,er((lt=i,1<=+Math.abs(lt)?0<lt?+Math.floor(lt/4294967296)>>>0:~~+Math.ceil((lt-+(~~lt>>>0))/4294967296)>>>0:0)),i>>>0},Sc:function(){return-52},Tc:function(){},Ma:function(i,n,a){function l(_){return(_=_.toTimeString().match(/\(([A-Za-z ]+)\)$/))?_[1]:"GMT"}a>>>=0;var c=new Date().getFullYear(),m=new Date(c,0,1),b=new Date(c,6,1);c=m.getTimezoneOffset();var v=b.getTimezoneOffset();ne[i>>>0>>>2>>>0]=60*Math.max(c,v),J[n>>>0>>>2>>>0]=+(c!=v),i=l(m),n=l(b),i=si(i),n=si(n),v<c?(ne[a>>>2>>>0]=i,ne[a+4>>>2>>>0]=n):(ne[a>>>2>>>0]=n,ne[a+4>>>2>>>0]=i)},ha:()=>{ge("")},x:function(i,n,a){return i>>>=0,n=Or(n>>>0,a>>>0),ht[i].apply(null,n)},za:function(i,n,a){return i>>>=0,n=Or(n>>>0,a>>>0),ht[i].apply(null,n)},Ga:()=>Date.now(),Na:function(){return 4294901760},H:()=>performance.now(),Eb:function(i,n,a){return n>>>=0,ie.copyWithin(i>>>0>>>0,n>>>0,n+(a>>>0)>>>0)},La:function(i){i>>>=0;var n=ie.length;if(4294901760<i)return!1;for(var a=1;4>=a;a*=2){var l=n*(1+.2/a);l=Math.min(l,i+100663296);var c=Math;l=Math.max(i,l);e:{c=(c.min.call(c,4294901760,l+(65536-l%65536)%65536)-N.buffer.byteLength+65535)/65536;try{N.grow(c),qe();var m=1;break e}catch{}m=void 0}if(m)return!0}return!1},jb:function(i,n){i>>>=0,n>>>=0;var a=0;return Pr().forEach((l,c)=>{var m=n+a;for(c=ne[i+4*c>>>2>>>0]=m,m=0;m<l.length;++m)te[c++>>>0>>>0]=l.charCodeAt(m);te[c>>>0>>>0]=0,a+=l.length+1}),0},ub:function(i,n){i>>>=0,n>>>=0;var a=Pr();ne[i>>>2>>>0]=a.length;var l=0;return a.forEach(c=>l+=c.length+1),ne[n>>>2>>>0]=l,0},ma:()=>52,Da:function(){return 52},Xc:function(){return 70},Ca:function(i,n,a,l){n>>>=0,a>>>=0,l>>>=0;for(var c=0,m=0;m<a;m++){var b=ne[n>>>2>>>0],v=ne[n+4>>>2>>>0];n+=8;for(var _=0;_<v;_++){var C=ie[b+_>>>0],I=Xt[i];C===0||C===10?((i===1?z:W)(ai(I,0)),I.length=0):I.push(C)}c+=v}return ne[l>>>2>>>0]=c,0},ga:Qp,Zc:Wf,la:Cf,L:gf,I:Zp,_c:Nf,da:$f,B:ff,z:Hp,b:kp,Ba:Vp,$:Wp,g:Tp,ra:Df,h:Ap,E:Bf,i:Bp,$c:jf,j:zp,u:Rp,s:Lp,n:Yp,W:Xp,Q:kf,J:qp,na:cf,_:mf,ja:Of,xb:ah,fb:_h,Cc:nm,bb:Sh,db:Ch,Ta:zh,Qb:Wm,Kc:Yf,hb:vh,Va:Ph,Ob:Vm,eb:$h,lc:wm,Rc:Vf,tc:pm,gb:wh,cb:xh,Bb:eh,pc:gm,sc:fm,kc:_m,Qc:Gf,Ya:Eh,ab:Ih,ob:fh,lb:gh,$a:Ah,nc:bm,Ib:Km,kb:yh,Ua:Rh,Tb:jm,Hc:Xf,Pc:Hf,Ac:om,nb:mh,Za:Th,qc:hm,d:Pp,X:sf,q:Op,Y:Mf,N:_f,fa:tf,e:Ep,Aa:ef,F:zf,aa:lf,R:yf,wb:oh,ba:rf,c:Mp,xa:af,ad:Pf,ua:bf,k:Dp,wa:uf,m:jp,ya:nf,va:df,Ha:If,o:Up,ec:Im,fc:Sm,dc:Am,ka:xf,y:Fp,A:Gp,D:Jp,Z:Rf,ta:vf,ea:of,P:hf,K:Np,O:pf,oa:Kp,V:wf,ia:Uf,S:Tf,sa:Ef,T:Af,U:Sf,Wa:Oh,oc:ym,Xb:zm,M:rh,sb:lh,hc:Cm,Sb:Um,Db:Qm,Ab:th,Fa:qf,Nb:Gm,zb:ih,Fb:Zm,Rb:Nm,Hb:Jm,ic:$m,mb:hh,Kb:Fm,tb:uh,qb:ch,wc:dm,Fc:tm,rb:dh,Lb:Lm,Lc:Jf,ib:bh,Bc:am,Ic:Qf,Nc:Ff,Dc:im,pb:ph,Ec:rm,yb:nh,Jb:qm,Mc:Kf,Oc:Lf,yc:um,Cb:Xm,Yb:Rm,vb:sh,Gc:em,Zb:Pm,Mb:Hm,mc:vm,Jc:Zf,vc:cm,Gb:Ym,Wb:Bm,xc:lm,rc:mm,Xa:kh,zc:sm,Ub:Dm,Vb:Mm,ac:km,bc:Em,gc:xm,cc:Tm,$b:Om,v:function(i){return i>>>0},Ja:_n,G:function(i,n,a,l){return _n(i>>>0,n>>>0,a>>>0,l>>>0)}},M=function(){function i(a){return M=a.exports,M=$n(),M=Bh(),N=M.bd,qe(),ze.unshift(M.cd),Ge--,Ge==0&&(Ae!==null&&(clearInterval(Ae),Ae=null),$e&&(a=$e,$e=null,a())),M}var n={a:Tn};if(Ge++,r.instantiateWasm)try{return r.instantiateWasm(n,i)}catch(a){W(`Module.instantiateWasm callback failed with error: ${a}`),s(a)}return mt(n,function(a){i(a.instance)}).catch(s),{}}();r._OrtInit=(i,n)=>(r._OrtInit=M.dd)(i,n),r._OrtGetLastError=(i,n)=>(r._OrtGetLastError=M.ed)(i,n),r._OrtCreateSessionOptions=(i,n,a,l,c,m,b,v,_,C)=>(r._OrtCreateSessionOptions=M.fd)(i,n,a,l,c,m,b,v,_,C),r._OrtAppendExecutionProvider=(i,n)=>(r._OrtAppendExecutionProvider=M.gd)(i,n),r._OrtAddFreeDimensionOverride=(i,n,a)=>(r._OrtAddFreeDimensionOverride=M.hd)(i,n,a),r._OrtAddSessionConfigEntry=(i,n,a)=>(r._OrtAddSessionConfigEntry=M.id)(i,n,a),r._OrtReleaseSessionOptions=i=>(r._OrtReleaseSessionOptions=M.jd)(i),r._OrtCreateSession=(i,n,a)=>(r._OrtCreateSession=M.kd)(i,n,a),r._OrtReleaseSession=i=>(r._OrtReleaseSession=M.ld)(i),r._OrtGetInputOutputCount=(i,n,a)=>(r._OrtGetInputOutputCount=M.md)(i,n,a),r._OrtGetInputName=(i,n)=>(r._OrtGetInputName=M.nd)(i,n),r._OrtGetOutputName=(i,n)=>(r._OrtGetOutputName=M.od)(i,n),r._OrtFree=i=>(r._OrtFree=M.pd)(i),r._OrtCreateTensor=(i,n,a,l,c,m)=>(r._OrtCreateTensor=M.qd)(i,n,a,l,c,m),r._OrtGetTensorData=(i,n,a,l,c)=>(r._OrtGetTensorData=M.rd)(i,n,a,l,c),r._OrtReleaseTensor=i=>(r._OrtReleaseTensor=M.sd)(i),r._OrtCreateRunOptions=(i,n,a,l)=>(r._OrtCreateRunOptions=M.td)(i,n,a,l),r._OrtAddRunConfigEntry=(i,n,a)=>(r._OrtAddRunConfigEntry=M.ud)(i,n,a),r._OrtReleaseRunOptions=i=>(r._OrtReleaseRunOptions=M.vd)(i),r._OrtCreateBinding=i=>(r._OrtCreateBinding=M.wd)(i),r._OrtBindInput=(i,n,a)=>(r._OrtBindInput=M.xd)(i,n,a),r._OrtBindOutput=(i,n,a,l)=>(r._OrtBindOutput=M.yd)(i,n,a,l),r._OrtClearBoundOutputs=i=>(r._OrtClearBoundOutputs=M.zd)(i),r._OrtReleaseBinding=i=>(r._OrtReleaseBinding=M.Ad)(i),r._OrtRunWithBinding=(i,n,a,l,c)=>(r._OrtRunWithBinding=M.Bd)(i,n,a,l,c),r._OrtRun=(i,n,a,l,c,m,b,v)=>(r._OrtRun=M.Cd)(i,n,a,l,c,m,b,v),r._OrtEndProfiling=i=>(r._OrtEndProfiling=M.Dd)(i),r._JsepOutput=(i,n,a)=>(r._JsepOutput=M.Ed)(i,n,a),r._JsepGetNodeName=i=>(r._JsepGetNodeName=M.Fd)(i);var mr=()=>(mr=M.Gd)(),Mr=r._malloc=i=>(Mr=r._malloc=M.Hd)(i),Dr=r._free=i=>(Dr=r._free=M.Id)(i),H=(i,n)=>(H=M.Kd)(i,n),er=i=>(er=M.Ld)(i),L=()=>(L=M.Md)(),F=i=>(F=M.Nd)(i),ci=i=>(ci=M.Od)(i),pi=i=>(pi=M.Pd)(i),fi=i=>(fi=M.Qd)(i),mi=(i,n,a)=>(mi=M.Rd)(i,n,a),hi=i=>(hi=M.Sd)(i),gi=r.dynCall_vii=(i,n,a)=>(gi=r.dynCall_vii=M.Td)(i,n,a),yi=r.dynCall_iiii=(i,n,a,l)=>(yi=r.dynCall_iiii=M.Ud)(i,n,a,l),bi=r.dynCall_iii=(i,n,a)=>(bi=r.dynCall_iii=M.Vd)(i,n,a),vi=r.dynCall_ii=(i,n)=>(vi=r.dynCall_ii=M.Wd)(i,n),xt=r.dynCall_iiiiiii=(i,n,a,l,c,m,b)=>(xt=r.dynCall_iiiiiii=M.Xd)(i,n,a,l,c,m,b),jr=r.dynCall_vi=(i,n)=>(jr=r.dynCall_vi=M.Yd)(i,n),Ur=r.dynCall_v=i=>(Ur=r.dynCall_v=M.Zd)(i),En=r.dynCall_iiiiii=(i,n,a,l,c,m)=>(En=r.dynCall_iiiiii=M._d)(i,n,a,l,c,m),Nt=r.dynCall_iiij=(i,n,a,l,c)=>(Nt=r.dynCall_iiij=M.$d)(i,n,a,l,c),kn=r.dynCall_iiiii=(i,n,a,l,c)=>(kn=r.dynCall_iiiii=M.ae)(i,n,a,l,c),Mt=r.dynCall_viii=(i,n,a,l)=>(Mt=r.dynCall_viii=M.be)(i,n,a,l),wi=r.dynCall_viiiii=(i,n,a,l,c,m)=>(wi=r.dynCall_viiiii=M.ce)(i,n,a,l,c,m),_i=r.dynCall_viiii=(i,n,a,l,c)=>(_i=r.dynCall_viiii=M.de)(i,n,a,l,c),vt=r.dynCall_viiiiii=(i,n,a,l,c,m,b)=>(vt=r.dynCall_viiiiii=M.ee)(i,n,a,l,c,m,b),Nr=r.dynCall_viiji=(i,n,a,l,c,m)=>(Nr=r.dynCall_viiji=M.fe)(i,n,a,l,c,m),dt=r.dynCall_viiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k)=>(dt=r.dynCall_viiiiiiiiiii=M.ge)(i,n,a,l,c,m,b,v,_,C,I,k),St=r.dynCall_viiijjjii=(i,n,a,l,c,m,b,v,_,C,I,k)=>(St=r.dynCall_viiijjjii=M.he)(i,n,a,l,c,m,b,v,_,C,I,k),$i=r.dynCall_iij=(i,n,a,l)=>($i=r.dynCall_iij=M.ie)(i,n,a,l),On=r.dynCall_iif=(i,n,a)=>(On=r.dynCall_iif=M.je)(i,n,a),Pn=r.dynCall_iid=(i,n,a)=>(Pn=r.dynCall_iid=M.ke)(i,n,a),Ci=r.dynCall_jii=(i,n,a)=>(Ci=r.dynCall_jii=M.le)(i,n,a),Rn=r.dynCall_i=i=>(Rn=r.dynCall_i=M.me)(i),zn=r.dynCall_viiiiiiii=(i,n,a,l,c,m,b,v,_)=>(zn=r.dynCall_viiiiiiii=M.ne)(i,n,a,l,c,m,b,v,_),Bn=r.dynCall_viiiiij=(i,n,a,l,c,m,b,v)=>(Bn=r.dynCall_viiiiij=M.oe)(i,n,a,l,c,m,b,v),Mn=r.dynCall_ji=(i,n)=>(Mn=r.dynCall_ji=M.pe)(i,n),Dn=r.dynCall_viij=(i,n,a,l,c)=>(Dn=r.dynCall_viij=M.qe)(i,n,a,l,c),jn=r.dynCall_iiiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k)=>(jn=r.dynCall_iiiiiiiiiiii=M.re)(i,n,a,l,c,m,b,v,_,C,I,k),xi=r.dynCall_viiiiiiiii=(i,n,a,l,c,m,b,v,_,C)=>(xi=r.dynCall_viiiiiiiii=M.se)(i,n,a,l,c,m,b,v,_,C),Wr=r.dynCall_ij=(i,n,a)=>(Wr=r.dynCall_ij=M.te)(i,n,a),hr=r.dynCall_iiiiij=(i,n,a,l,c,m,b)=>(hr=r.dynCall_iiiiij=M.ue)(i,n,a,l,c,m,b),Vr=r.dynCall_j=i=>(Vr=r.dynCall_j=M.ve)(i),Gr=r.dynCall_vij=(i,n,a,l)=>(Gr=r.dynCall_vij=M.we)(i,n,a,l),Si=r.dynCall_viijjjiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)=>(Si=r.dynCall_viijjjiiiiii=M.xe)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D),gr=r.dynCall_viiijiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R)=>(gr=r.dynCall_viiijiiiiiii=M.ye)(i,n,a,l,c,m,b,v,_,C,I,k,R),Un=r.dynCall_iiiiiiii=(i,n,a,l,c,m,b,v)=>(Un=r.dynCall_iiiiiiii=M.ze)(i,n,a,l,c,m,b,v),Wt=r.dynCall_viiiiiii=(i,n,a,l,c,m,b,v)=>(Wt=r.dynCall_viiiiiii=M.Ae)(i,n,a,l,c,m,b,v),kt=r.dynCall_iiiiiiiij=(i,n,a,l,c,m,b,v,_,C)=>(kt=r.dynCall_iiiiiiiij=M.Be)(i,n,a,l,c,m,b,v,_,C),Ii=r.dynCall_viiiiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A)=>(Ii=r.dynCall_viiiiiiiiiiiii=M.Ce)(i,n,a,l,c,m,b,v,_,C,I,k,R,A),yr=r.dynCall_iiiiiiiii=(i,n,a,l,c,m,b,v,_)=>(yr=r.dynCall_iiiiiiiii=M.De)(i,n,a,l,c,m,b,v,_),Ai=r.dynCall_iiiiijiiiii=(i,n,a,l,c,m,b,v,_,C,I,k)=>(Ai=r.dynCall_iiiiijiiiii=M.Ee)(i,n,a,l,c,m,b,v,_,C,I,k),Ti=r.dynCall_vijjjiiij=(i,n,a,l,c,m,b,v,_,C,I,k,R)=>(Ti=r.dynCall_vijjjiiij=M.Fe)(i,n,a,l,c,m,b,v,_,C,I,k,R),Nn=r.dynCall_fi=(i,n)=>(Nn=r.dynCall_fi=M.Ge)(i,n),Hr=r.dynCall_fii=(i,n,a)=>(Hr=r.dynCall_fii=M.He)(i,n,a),Wn=r.dynCall_di=(i,n)=>(Wn=r.dynCall_di=M.Ie)(i,n),Vn=r.dynCall_dii=(i,n,a)=>(Vn=r.dynCall_dii=M.Je)(i,n,a),Gn=r.dynCall_vijj=(i,n,a,l,c,m)=>(Gn=r.dynCall_vijj=M.Ke)(i,n,a,l,c,m),Hn=r.dynCall_iiiiiiiiii=(i,n,a,l,c,m,b,v,_,C)=>(Hn=r.dynCall_iiiiiiiiii=M.Le)(i,n,a,l,c,m,b,v,_,C),Ln=r.dynCall_viijiii=(i,n,a,l,c,m,b,v)=>(Ln=r.dynCall_viijiii=M.Me)(i,n,a,l,c,m,b,v),Ei=r.dynCall_viid=(i,n,a,l)=>(Ei=r.dynCall_viid=M.Ne)(i,n,a,l),br=r.dynCall_viffiii=(i,n,a,l,c,m,b)=>(br=r.dynCall_viffiii=M.Oe)(i,n,a,l,c,m,b),Fn=r.dynCall_viifiii=(i,n,a,l,c,m,b)=>(Fn=r.dynCall_viifiii=M.Pe)(i,n,a,l,c,m,b),Lr=r.dynCall_viiiiidiidi=(i,n,a,l,c,m,b,v,_,C,I)=>(Lr=r.dynCall_viiiiidiidi=M.Qe)(i,n,a,l,c,m,b,v,_,C,I),ki=r.dynCall_viiiiiiiiidi=(i,n,a,l,c,m,b,v,_,C,I,k)=>(ki=r.dynCall_viiiiiiiiidi=M.Re)(i,n,a,l,c,m,b,v,_,C,I,k),qn=r.dynCall_jiii=(i,n,a,l)=>(qn=r.dynCall_jiii=M.Se)(i,n,a,l),Kn=r.dynCall_vjiiiiii=(i,n,a,l,c,m,b,v,_)=>(Kn=r.dynCall_vjiiiiii=M.Te)(i,n,a,l,c,m,b,v,_),Oi=r.dynCall_viiid=(i,n,a,l,c)=>(Oi=r.dynCall_viiid=M.Ue)(i,n,a,l,c),Jn=r.dynCall_viiiiiiiiiji=(i,n,a,l,c,m,b,v,_,C,I,k,R)=>(Jn=r.dynCall_viiiiiiiiiji=M.Ve)(i,n,a,l,c,m,b,v,_,C,I,k,R),tr=r.dynCall_viji=(i,n,a,l,c)=>(tr=r.dynCall_viji=M.We)(i,n,a,l,c),Pi=r.dynCall_vijjjjjjjjjjjjji=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at,ct,wt)=>(Pi=r.dynCall_vijjjjjjjjjjjjji=M.Xe)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at,ct,wt),Ri=r.dynCall_viiiji=(i,n,a,l,c,m,b)=>(Ri=r.dynCall_viiiji=M.Ye)(i,n,a,l,c,m,b),zi=r.dynCall_vijjjiiji=(i,n,a,l,c,m,b,v,_,C,I,k,R)=>(zi=r.dynCall_vijjjiiji=M.Ze)(i,n,a,l,c,m,b,v,_,C,I,k,R),Bi=r.dynCall_iiiji=(i,n,a,l,c,m)=>(Bi=r.dynCall_iiiji=M._e)(i,n,a,l,c,m),Mi=r.dynCall_iiijiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)=>(Mi=r.dynCall_iiijiiiiiiiiii=M.$e)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D),Fr=r.dynCall_vj=(i,n,a)=>(Fr=r.dynCall_vj=M.af)(i,n,a),Di=r.dynCall_jjj=(i,n,a,l,c)=>(Di=r.dynCall_jjj=M.bf)(i,n,a,l,c),qr=r.dynCall_iiijiiiiii=(i,n,a,l,c,m,b,v,_,C,I)=>(qr=r.dynCall_iiijiiiiii=M.cf)(i,n,a,l,c,m,b,v,_,C,I),ji=r.dynCall_vfiii=(i,n,a,l,c)=>(ji=r.dynCall_vfiii=M.df)(i,n,a,l,c),Kr=r.dynCall_viiiiff=(i,n,a,l,c,m,b)=>(Kr=r.dynCall_viiiiff=M.ef)(i,n,a,l,c,m,b),Ui=r.dynCall_viiiiiff=(i,n,a,l,c,m,b,v)=>(Ui=r.dynCall_viiiiiff=M.ff)(i,n,a,l,c,m,b,v),Ni=r.dynCall_viiff=(i,n,a,l,c)=>(Ni=r.dynCall_viiff=M.gf)(i,n,a,l,c),Wi=r.dynCall_viiiiiiiiifiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A)=>(Wi=r.dynCall_viiiiiiiiifiii=M.hf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A),Vi=r.dynCall_viiiiiiiijj=(i,n,a,l,c,m,b,v,_,C,I,k,R)=>(Vi=r.dynCall_viiiiiiiijj=M.jf)(i,n,a,l,c,m,b,v,_,C,I,k,R),Gi=r.dynCall_iiiiiiiiiiiiiifii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee)=>(Gi=r.dynCall_iiiiiiiiiiiiiifii=M.kf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee),Yn=r.dynCall_viiiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R)=>(Yn=r.dynCall_viiiiiiiiiiii=M.lf)(i,n,a,l,c,m,b,v,_,C,I,k,R),Hi=r.dynCall_iiiiiiiiiiiiiiiiifii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he)=>(Hi=r.dynCall_iiiiiiiiiiiiiiiiifii=M.mf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he),Li=r.dynCall_vijjiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k)=>(Li=r.dynCall_vijjiiiiii=M.nf)(i,n,a,l,c,m,b,v,_,C,I,k),Fi=r.dynCall_iiiijjj=(i,n,a,l,c,m,b,v,_,C)=>(Fi=r.dynCall_iiiijjj=M.of)(i,n,a,l,c,m,b,v,_,C),Zn=r.dynCall_viiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I)=>(Zn=r.dynCall_viiiiiiiiii=M.pf)(i,n,a,l,c,m,b,v,_,C,I),Qn=r.dynCall_iiijjj=(i,n,a,l,c,m,b,v,_)=>(Qn=r.dynCall_iiijjj=M.qf)(i,n,a,l,c,m,b,v,_),qi=r.dynCall_fffffff=(i,n,a,l,c,m,b)=>(qi=r.dynCall_fffffff=M.rf)(i,n,a,l,c,m,b),Ki=r.dynCall_viiiij=(i,n,a,l,c,m,b)=>(Ki=r.dynCall_viiiij=M.sf)(i,n,a,l,c,m,b),vr=r.dynCall_viiiiiijiifiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)=>(vr=r.dynCall_viiiiiijiifiii=M.tf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D),Xn=r.dynCall_vjjjjjjffjifiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe)=>(Xn=r.dynCall_vjjjjjjffjifiiiiii=M.uf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe),ea=r.dynCall_viiiiiiffjifiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe)=>(ea=r.dynCall_viiiiiiffjifiiiii=M.vf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe),me=r.dynCall_viiiiiiffjfiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee)=>(me=r.dynCall_viiiiiiffjfiiiii=M.wf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee),Ji=r.dynCall_viiiiiiffjiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)=>(Ji=r.dynCall_viiiiiiffjiiiii=M.xf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G),wr=r.dynCall_vjjjjjjjjfffiiifiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at,ct,wt)=>(wr=r.dynCall_vjjjjjjjjfffiiifiiiii=M.yf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at,ct,wt),or=r.dynCall_vjjjjjjfffifijiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe)=>(or=r.dynCall_vjjjjjjfffifijiiiii=M.zf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe),Ot=r.dynCall_vjjjjjjfffifiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke)=>(Ot=r.dynCall_vjjjjjjfffifiiiiii=M.Af)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke),Yi=r.dynCall_vjjjjjjjjfffjifiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at,ct,wt,Cr)=>(Yi=r.dynCall_vjjjjjjjjfffjifiiiiii=M.Bf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at,ct,wt,Cr),Zi=r.dynCall_vijjfffiii=(i,n,a,l,c,m,b,v,_,C,I,k)=>(Zi=r.dynCall_vijjfffiii=M.Cf)(i,n,a,l,c,m,b,v,_,C,I,k),Qi=r.dynCall_vijiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A)=>(Qi=r.dynCall_vijiiiiiiiiii=M.Df)(i,n,a,l,c,m,b,v,_,C,I,k,R,A),Jr=r.dynCall_viiiiiiijiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A)=>(Jr=r.dynCall_viiiiiiijiiii=M.Ef)(i,n,a,l,c,m,b,v,_,C,I,k,R,A),Yr=r.dynCall_vijjjjjjifiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce)=>(Yr=r.dynCall_vijjjjjjifiiiii=M.Ff)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce),Xi=r.dynCall_viifi=(i,n,a,l,c)=>(Xi=r.dynCall_viifi=M.Gf)(i,n,a,l,c),en=r.dynCall_vjjjjjiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)=>(en=r.dynCall_vjjjjjiiii=M.Hf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D),Zr=r.dynCall_vjjjjfiii=(i,n,a,l,c,m,b,v,_,C,I,k,R)=>(Zr=r.dynCall_vjjjjfiii=M.If)(i,n,a,l,c,m,b,v,_,C,I,k,R),_r=r.dynCall_viiiiiijiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)=>(_r=r.dynCall_viiiiiijiiiiii=M.Jf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D),Qr=r.dynCall_vijjii=(i,n,a,l,c,m,b,v)=>(Qr=r.dynCall_vijjii=M.Kf)(i,n,a,l,c,m,b,v),tn=r.dynCall_viiiiijjiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)=>(tn=r.dynCall_viiiiijjiiiii=M.Lf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D),rn=r.dynCall_iiiiiji=(i,n,a,l,c,m,b,v)=>(rn=r.dynCall_iiiiiji=M.Mf)(i,n,a,l,c,m,b,v),nn=r.dynCall_iiiiji=(i,n,a,l,c,m,b)=>(nn=r.dynCall_iiiiji=M.Nf)(i,n,a,l,c,m,b),an=r.dynCall_viiiiijiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A)=>(an=r.dynCall_viiiiijiiiiii=M.Of)(i,n,a,l,c,m,b,v,_,C,I,k,R,A),on=r.dynCall_viiijiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k)=>(on=r.dynCall_viiijiiiiii=M.Pf)(i,n,a,l,c,m,b,v,_,C,I,k),ta=r.dynCall_viijj=(i,n,a,l,c,m,b)=>(ta=r.dynCall_viijj=M.Qf)(i,n,a,l,c,m,b),$r=r.dynCall_viiiijii=(i,n,a,l,c,m,b,v,_)=>($r=r.dynCall_viiiijii=M.Rf)(i,n,a,l,c,m,b,v,_),sn=r.dynCall_viijjiii=(i,n,a,l,c,m,b,v,_,C)=>(sn=r.dynCall_viijjiii=M.Sf)(i,n,a,l,c,m,b,v,_,C),u=r.dynCall_ijii=(i,n,a,l,c)=>(u=r.dynCall_ijii=M.Tf)(i,n,a,l,c),h=r.dynCall_viiiiijjji=(i,n,a,l,c,m,b,v,_,C,I,k,R)=>(h=r.dynCall_viiiiijjji=M.Uf)(i,n,a,l,c,m,b,v,_,C,I,k,R),$=r.dynCall_vijjjjiij=(i,n,a,l,c,m,b,v,_,C,I,k,R,A)=>($=r.dynCall_vijjjjiij=M.Vf)(i,n,a,l,c,m,b,v,_,C,I,k,R,A),T=r.dynCall_viiiiijij=(i,n,a,l,c,m,b,v,_,C,I)=>(T=r.dynCall_viiiiijij=M.Wf)(i,n,a,l,c,m,b,v,_,C,I),B=r.dynCall_viiiiiijij=(i,n,a,l,c,m,b,v,_,C,I,k)=>(B=r.dynCall_viiiiiijij=M.Xf)(i,n,a,l,c,m,b,v,_,C,I,k),V=r.dynCall_vijiii=(i,n,a,l,c,m,b)=>(V=r.dynCall_vijiii=M.Yf)(i,n,a,l,c,m,b),Y=r.dynCall_viiifii=(i,n,a,l,c,m,b)=>(Y=r.dynCall_viiifii=M.Zf)(i,n,a,l,c,m,b),re=r.dynCall_viiiiiiiiifi=(i,n,a,l,c,m,b,v,_,C,I,k)=>(re=r.dynCall_viiiiiiiiifi=M._f)(i,n,a,l,c,m,b,v,_,C,I,k),ce=r.dynCall_iiijiiii=(i,n,a,l,c,m,b,v,_)=>(ce=r.dynCall_iiijiiii=M.$f)(i,n,a,l,c,m,b,v,_),le=r.dynCall_viiiiiijjiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)=>(le=r.dynCall_viiiiiijjiiiii=M.ag)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G),ve=r.dynCall_viiiiiiijiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)=>(ve=r.dynCall_viiiiiiijiiiiii=M.bg)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G),Ee=r.dynCall_vif=(i,n,a)=>(Ee=r.dynCall_vif=M.cg)(i,n,a),Ue=r.dynCall_viif=(i,n,a,l)=>(Ue=r.dynCall_viif=M.dg)(i,n,a,l),K=r.dynCall_fiii=(i,n,a,l)=>(K=r.dynCall_fiii=M.eg)(i,n,a,l),we=r.dynCall_diii=(i,n,a,l)=>(we=r.dynCall_diii=M.fg)(i,n,a,l),De=r.dynCall_viiiiiifii=(i,n,a,l,c,m,b,v,_,C)=>(De=r.dynCall_viiiiiifii=M.gg)(i,n,a,l,c,m,b,v,_,C),Ft=r.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at)=>(Ft=r.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=M.hg)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at),un=r.dynCall_viijji=(i,n,a,l,c,m,b,v)=>(un=r.dynCall_viijji=M.ig)(i,n,a,l,c,m,b,v),No=r.dynCall_iiiiiiiiiiiji=(i,n,a,l,c,m,b,v,_,C,I,k,R,A)=>(No=r.dynCall_iiiiiiiiiiiji=M.jg)(i,n,a,l,c,m,b,v,_,C,I,k,R,A),Wo=r.dynCall_viifiifijjjii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)=>(Wo=r.dynCall_viifiifijjjii=M.kg)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G),Vo=r.dynCall_viiiiiiiiiiiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce)=>(Vo=r.dynCall_viiiiiiiiiiiiiiiiiiii=M.lg)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce),Go=r.dynCall_viiiiifiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R)=>(Go=r.dynCall_viiiiifiiiiii=M.mg)(i,n,a,l,c,m,b,v,_,C,I,k,R),Ho=r.dynCall_vijiiiiiiijjii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee)=>(Ho=r.dynCall_vijiiiiiiijjii=M.ng)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee),Lo=r.dynCall_viiiiiiiiiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe)=>(Lo=r.dynCall_viiiiiiiiiiiiiiiiii=M.og)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe),Fo=r.dynCall_viiiiiiiiiiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he)=>(Fo=r.dynCall_viiiiiiiiiiiiiiiiiii=M.pg)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he),qo=r.dynCall_viiiiiiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)=>(qo=r.dynCall_viiiiiiiiiiiiiii=M.qg)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G),Ko=r.dynCall_viiiiiiiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee)=>(Ko=r.dynCall_viiiiiiiiiiiiiiii=M.rg)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee),Jo=r.dynCall_viiiijjj=(i,n,a,l,c,m,b,v,_,C,I)=>(Jo=r.dynCall_viiiijjj=M.sg)(i,n,a,l,c,m,b,v,_,C,I),Yo=r.dynCall_iiiiid=(i,n,a,l,c,m)=>(Yo=r.dynCall_iiiiid=M.tg)(i,n,a,l,c,m),Zo=r.dynCall_viiiiiiijjj=(i,n,a,l,c,m,b,v,_,C,I,k,R,A)=>(Zo=r.dynCall_viiiiiiijjj=M.ug)(i,n,a,l,c,m,b,v,_,C,I,k,R,A),Qo=r.dynCall_iiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I)=>(Qo=r.dynCall_iiiiiiiiiii=M.vg)(i,n,a,l,c,m,b,v,_,C,I),Xo=r.dynCall_iiiiiiiiiiiiiiiiiifi=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he)=>(Xo=r.dynCall_iiiiiiiiiiiiiiiiiifi=M.wg)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he),es=r.dynCall_viiif=(i,n,a,l,c)=>(es=r.dynCall_viiif=M.xg)(i,n,a,l,c),ts=r.dynCall_viiijiiiii=(i,n,a,l,c,m,b,v,_,C,I)=>(ts=r.dynCall_viiijiiiii=M.yg)(i,n,a,l,c,m,b,v,_,C,I),rs=r.dynCall_viiij=(i,n,a,l,c,m)=>(rs=r.dynCall_viiij=M.zg)(i,n,a,l,c,m),is=r.dynCall_iijjj=(i,n,a,l,c,m,b,v)=>(is=r.dynCall_iijjj=M.Ag)(i,n,a,l,c,m,b,v),ns=r.dynCall_viiiiji=(i,n,a,l,c,m,b,v)=>(ns=r.dynCall_viiiiji=M.Bg)(i,n,a,l,c,m,b,v),as=r.dynCall_iijjji=(i,n,a,l,c,m,b,v,_)=>(as=r.dynCall_iijjji=M.Cg)(i,n,a,l,c,m,b,v,_),os=r.dynCall_ijijji=(i,n,a,l,c,m,b,v,_)=>(os=r.dynCall_ijijji=M.Dg)(i,n,a,l,c,m,b,v,_),ss=r.dynCall_viiijjiii=(i,n,a,l,c,m,b,v,_,C,I)=>(ss=r.dynCall_viiijjiii=M.Eg)(i,n,a,l,c,m,b,v,_,C,I),us=r.dynCall_iiiiijji=(i,n,a,l,c,m,b,v,_,C)=>(us=r.dynCall_iiiiijji=M.Fg)(i,n,a,l,c,m,b,v,_,C),ls=r.dynCall_iiiifi=(i,n,a,l,c,m)=>(ls=r.dynCall_iiiifi=M.Gg)(i,n,a,l,c,m),ds=r.dynCall_iiijii=(i,n,a,l,c,m,b)=>(ds=r.dynCall_iiijii=M.Hg)(i,n,a,l,c,m,b),cs=r.dynCall_iiiiiiiiijii=(i,n,a,l,c,m,b,v,_,C,I,k,R)=>(cs=r.dynCall_iiiiiiiiijii=M.Ig)(i,n,a,l,c,m,b,v,_,C,I,k,R),ps=r.dynCall_iiiijjii=(i,n,a,l,c,m,b,v,_,C)=>(ps=r.dynCall_iiiijjii=M.Jg)(i,n,a,l,c,m,b,v,_,C),fs=r.dynCall_iiiiiijjjii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A)=>(fs=r.dynCall_iiiiiijjjii=M.Kg)(i,n,a,l,c,m,b,v,_,C,I,k,R,A),ms=r.dynCall_iiijiii=(i,n,a,l,c,m,b,v)=>(ms=r.dynCall_iiijiii=M.Lg)(i,n,a,l,c,m,b,v),hs=r.dynCall_iiiiiiiijjjfi=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)=>(hs=r.dynCall_iiiiiiiijjjfi=M.Mg)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G),gs=r.dynCall_iijiiii=(i,n,a,l,c,m,b,v)=>(gs=r.dynCall_iijiiii=M.Ng)(i,n,a,l,c,m,b,v),ys=r.dynCall_iijjjii=(i,n,a,l,c,m,b,v,_,C)=>(ys=r.dynCall_iijjjii=M.Og)(i,n,a,l,c,m,b,v,_,C),bs=r.dynCall_jij=(i,n,a,l)=>(bs=r.dynCall_jij=M.Pg)(i,n,a,l),vs=r.dynCall_iiji=(i,n,a,l,c)=>(vs=r.dynCall_iiji=M.Qg)(i,n,a,l,c),ws=r.dynCall_iiif=(i,n,a,l)=>(ws=r.dynCall_iiif=M.Rg)(i,n,a,l),_s=r.dynCall_vidi=(i,n,a,l)=>(_s=r.dynCall_vidi=M.Sg)(i,n,a,l),$s=r.dynCall_vjiii=(i,n,a,l,c,m)=>($s=r.dynCall_vjiii=M.Tg)(i,n,a,l,c,m),Cs=r.dynCall_iiiij=(i,n,a,l,c,m)=>(Cs=r.dynCall_iiiij=M.Ug)(i,n,a,l,c,m),xs=r.dynCall_viiijii=(i,n,a,l,c,m,b,v)=>(xs=r.dynCall_viiijii=M.Vg)(i,n,a,l,c,m,b,v),Ss=r.dynCall_viijiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A)=>(Ss=r.dynCall_viijiiiiiiiii=M.Wg)(i,n,a,l,c,m,b,v,_,C,I,k,R,A),Is=r.dynCall_fiiii=(i,n,a,l,c)=>(Is=r.dynCall_fiiii=M.Xg)(i,n,a,l,c),As=r.dynCall_jfi=(i,n,a)=>(As=r.dynCall_jfi=M.Yg)(i,n,a),Ts=r.dynCall_viiiiiiiiiiiiii=(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)=>(Ts=r.dynCall_viiiiiiiiiiiiii=M.Zg)(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D),Es=r.dynCall_jiij=(i,n,a,l,c)=>(Es=r.dynCall_jiij=M._g)(i,n,a,l,c),ks=i=>(ks=M.$g)(i),Os=()=>(Os=M.ah)(),Ps=i=>(Ps=M.bh)(i),Rs=()=>(Rs=M.ch)();r.___start_em_js=1379415,r.___stop_em_js=1379576;function Ap(i,n,a,l){var c=L();try{return yi(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Tp(i,n,a){var l=L();try{return bi(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function Ep(i,n,a){var l=L();try{gi(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function kp(i,n){var a=L();try{return vi(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function Op(i,n){var a=L();try{jr(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function Pp(i){var n=L();try{Ur(i)}catch(a){if(F(n),a!==a+0)throw a;H(1,0)}}function Rp(i,n,a,l,c,m,b){var v=L();try{return xt(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function zp(i,n,a,l,c,m){var b=L();try{return En(i,n,a,l,c,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function Bp(i,n,a,l,c){var m=L();try{return kn(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function Mp(i,n,a,l){var c=L();try{Mt(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Dp(i,n,a,l,c){var m=L();try{_i(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function jp(i,n,a,l,c,m){var b=L();try{wi(i,n,a,l,c,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function Up(i,n,a,l,c,m,b){var v=L();try{vt(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Np(i,n,a,l,c,m,b,v,_,C,I,k){var R=L();try{dt(i,n,a,l,c,m,b,v,_,C,I,k)}catch(A){if(F(R),A!==A+0)throw A;H(1,0)}}function Wp(i,n,a){var l=L();try{return On(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function Vp(i,n,a){var l=L();try{return Pn(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function Gp(i,n,a,l,c,m,b,v,_){var C=L();try{zn(i,n,a,l,c,m,b,v,_)}catch(I){if(F(C),I!==I+0)throw I;H(1,0)}}function Hp(i){var n=L();try{return Rn(i)}catch(a){if(F(n),a!==a+0)throw a;H(1,0)}}function Lp(i,n,a,l,c,m,b,v){var _=L();try{return Un(i,n,a,l,c,m,b,v)}catch(C){if(F(_),C!==C+0)throw C;H(1,0)}}function Fp(i,n,a,l,c,m,b,v){var _=L();try{Wt(i,n,a,l,c,m,b,v)}catch(C){if(F(_),C!==C+0)throw C;H(1,0)}}function qp(i,n,a,l,c,m,b,v,_,C,I,k){var R=L();try{return jn(i,n,a,l,c,m,b,v,_,C,I,k)}catch(A){if(F(R),A!==A+0)throw A;H(1,0)}}function Kp(i,n,a,l,c,m,b,v,_,C,I,k,R,A){var D=L();try{Ii(i,n,a,l,c,m,b,v,_,C,I,k,R,A)}catch(G){if(F(D),G!==G+0)throw G;H(1,0)}}function Jp(i,n,a,l,c,m,b,v,_,C){var I=L();try{xi(i,n,a,l,c,m,b,v,_,C)}catch(k){if(F(I),k!==k+0)throw k;H(1,0)}}function Yp(i,n,a,l,c,m,b,v,_){var C=L();try{return yr(i,n,a,l,c,m,b,v,_)}catch(I){if(F(C),I!==I+0)throw I;H(1,0)}}function Zp(i,n){var a=L();try{return Nn(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function Qp(i,n){var a=L();try{return Wn(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function Xp(i,n,a,l,c,m,b,v,_,C){var I=L();try{return Hn(i,n,a,l,c,m,b,v,_,C)}catch(k){if(F(I),k!==k+0)throw k;H(1,0)}}function ef(i,n,a,l){var c=L();try{Ei(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function tf(i,n,a,l,c,m,b){var v=L();try{br(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function rf(i,n,a,l,c,m,b){var v=L();try{Fn(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function nf(i,n,a,l,c,m,b,v,_,C,I){var k=L();try{Lr(i,n,a,l,c,m,b,v,_,C,I)}catch(R){if(F(k),R!==R+0)throw R;H(1,0)}}function af(i,n,a,l,c){var m=L();try{Oi(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function of(i,n,a,l,c,m,b,v,_,C,I,k,R,A){var D=L();try{Wi(i,n,a,l,c,m,b,v,_,C,I,k,R,A)}catch(G){if(F(D),G!==G+0)throw G;H(1,0)}}function sf(i,n,a,l,c){var m=L();try{ji(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function uf(i,n,a,l,c,m,b){var v=L();try{Kr(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function lf(i,n,a,l,c){var m=L();try{Ni(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function df(i,n,a,l,c,m,b,v){var _=L();try{Ui(i,n,a,l,c,m,b,v)}catch(C){if(F(_),C!==C+0)throw C;H(1,0)}}function cf(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee){var oe=L();try{return Gi(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee)}catch(pe){if(F(oe),pe!==pe+0)throw pe;H(1,0)}}function pf(i,n,a,l,c,m,b,v,_,C,I,k,R){var A=L();try{Yn(i,n,a,l,c,m,b,v,_,C,I,k,R)}catch(D){if(F(A),D!==D+0)throw D;H(1,0)}}function ff(i,n,a,l,c){var m=L();try{return Is(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function mf(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he){var Ce=L();try{return Hi(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he)}catch(Se){if(F(Ce),Se!==Se+0)throw Se;H(1,0)}}function hf(i,n,a,l,c,m,b,v,_,C,I){var k=L();try{Zn(i,n,a,l,c,m,b,v,_,C,I)}catch(R){if(F(k),R!==R+0)throw R;H(1,0)}}function gf(i,n,a,l,c,m,b){var v=L();try{return qi(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function yf(i,n,a,l,c){var m=L();try{Xi(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function bf(i,n,a,l,c,m,b){var v=L();try{Y(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function vf(i,n,a,l,c,m,b,v,_,C,I,k){var R=L();try{re(i,n,a,l,c,m,b,v,_,C,I,k)}catch(A){if(F(R),A!==A+0)throw A;H(1,0)}}function wf(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D){var G=L();try{Ts(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function _f(i,n,a){var l=L();try{Ee(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function $f(i,n,a,l){var c=L();try{return K(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Cf(i,n,a,l){var c=L();try{return we(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function xf(i,n,a,l,c,m,b,v,_,C){var I=L();try{De(i,n,a,l,c,m,b,v,_,C)}catch(k){if(F(I),k!==k+0)throw k;H(1,0)}}function Sf(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce){var Se=L();try{Vo(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce)}catch(je){if(F(Se),je!==je+0)throw je;H(1,0)}}function If(i,n,a,l,c,m,b,v,_,C,I,k,R){var A=L();try{Go(i,n,a,l,c,m,b,v,_,C,I,k,R)}catch(D){if(F(A),D!==D+0)throw D;H(1,0)}}function Af(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he){var Ce=L();try{Fo(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he)}catch(Se){if(F(Ce),Se!==Se+0)throw Se;H(1,0)}}function Tf(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee){var oe=L();try{Ko(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee)}catch(pe){if(F(oe),pe!==pe+0)throw pe;H(1,0)}}function Ef(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe){var he=L();try{Lo(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe)}catch(Ce){if(F(he),Ce!==Ce+0)throw Ce;H(1,0)}}function kf(i,n,a,l,c,m,b,v,_,C,I){var k=L();try{return Qo(i,n,a,l,c,m,b,v,_,C,I)}catch(R){if(F(k),R!==R+0)throw R;H(1,0)}}function Of(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he){var Ce=L();try{return Xo(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he)}catch(Se){if(F(Ce),Se!==Se+0)throw Se;H(1,0)}}function Pf(i,n,a,l,c){var m=L();try{es(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function Rf(i,n,a,l,c,m,b,v,_,C,I,k){var R=L();try{ki(i,n,a,l,c,m,b,v,_,C,I,k)}catch(A){if(F(R),A!==A+0)throw A;H(1,0)}}function zf(i,n,a,l){var c=L();try{Ue(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Bf(i,n,a,l,c,m){var b=L();try{return ls(i,n,a,l,c,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function Mf(i,n,a,l){var c=L();try{_s(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Df(i,n,a,l){var c=L();try{return ws(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function jf(i,n,a,l,c,m){var b=L();try{return Yo(i,n,a,l,c,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function Uf(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G){var ee=L();try{qo(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)}catch(oe){if(F(ee),oe!==oe+0)throw oe;H(1,0)}}function Nf(i,n,a){var l=L();try{return Hr(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function Wf(i,n,a){var l=L();try{return Vn(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function Vf(i,n,a,l,c){var m=L();try{return Nt(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function Gf(i,n,a,l){var c=L();try{return $i(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Hf(i,n,a){var l=L();try{return Ci(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function Lf(i,n,a,l){var c=L();try{Gr(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Ff(i,n,a,l,c,m){var b=L();try{Nr(i,n,a,l,c,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function qf(i,n,a,l,c,m,b,v){var _=L();try{Bn(i,n,a,l,c,m,b,v)}catch(C){if(F(_),C!==C+0)throw C;H(1,0)}}function Kf(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D){var G=L();try{Si(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Jf(i,n,a,l,c,m,b,v,_,C,I,k,R){var A=L();try{gr(i,n,a,l,c,m,b,v,_,C,I,k,R)}catch(D){if(F(A),D!==D+0)throw D;H(1,0)}}function Yf(i,n,a,l,c,m,b,v,_,C,I,k){var R=L();try{return Ai(i,n,a,l,c,m,b,v,_,C,I,k)}catch(A){if(F(R),A!==A+0)throw A;H(1,0)}}function Zf(i,n,a,l,c,m,b,v,_,C,I,k,R){var A=L();try{Ti(i,n,a,l,c,m,b,v,_,C,I,k,R)}catch(D){if(F(A),D!==D+0)throw D;H(1,0)}}function Qf(i,n,a,l,c){var m=L();try{Dn(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function Xf(i,n){var a=L();try{return Mn(i,n)}catch(l){if(F(a),l!==l+0)throw l;H(1,0)}}function em(i,n,a,l,c,m){var b=L();try{Gn(i,n,a,l,c,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function tm(i,n,a,l,c,m,b,v){var _=L();try{xs(i,n,a,l,c,m,b,v)}catch(C){if(F(_),C!==C+0)throw C;H(1,0)}}function rm(i,n,a,l,c,m,b){var v=L();try{ta(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function im(i,n,a,l,c,m,b,v){var _=L();try{Ln(i,n,a,l,c,m,b,v)}catch(C){if(F(_),C!==C+0)throw C;H(1,0)}}function nm(i,n,a,l,c,m,b,v,_,C){var I=L();try{return kt(i,n,a,l,c,m,b,v,_,C)}catch(k){if(F(I),k!==k+0)throw k;H(1,0)}}function am(i,n,a,l,c,m,b,v,_,C,I,k){var R=L();try{St(i,n,a,l,c,m,b,v,_,C,I,k)}catch(A){if(F(R),A!==A+0)throw A;H(1,0)}}function om(i,n,a,l){var c=L();try{return qn(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function sm(i,n,a,l,c,m,b,v,_){var C=L();try{Kn(i,n,a,l,c,m,b,v,_)}catch(I){if(F(C),I!==I+0)throw I;H(1,0)}}function um(i,n,a,l,c){var m=L();try{tr(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function lm(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at,ct,wt){var Cr=L();try{Pi(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at,ct,wt)}catch(rr){if(F(Cr),rr!==rr+0)throw rr;H(1,0)}}function dm(i,n,a,l,c,m,b){var v=L();try{Ri(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function cm(i,n,a,l,c,m,b,v,_,C,I,k,R){var A=L();try{zi(i,n,a,l,c,m,b,v,_,C,I,k,R)}catch(D){if(F(A),D!==D+0)throw D;H(1,0)}}function pm(i,n,a,l,c,m){var b=L();try{return Bi(i,n,a,l,c,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function fm(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D){var G=L();try{return Mi(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function mm(i,n,a){var l=L();try{Fr(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function hm(i,n,a,l,c){var m=L();try{return Di(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function gm(i,n,a,l,c,m,b,v,_,C,I){var k=L();try{return qr(i,n,a,l,c,m,b,v,_,C,I)}catch(R){if(F(k),R!==R+0)throw R;H(1,0)}}function ym(i,n,a,l,c,m,b,v,_,C,I,k,R){var A=L();try{Vi(i,n,a,l,c,m,b,v,_,C,I,k,R)}catch(D){if(F(A),D!==D+0)throw D;H(1,0)}}function bm(i,n,a){var l=L();try{return Wr(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function vm(i,n,a,l,c,m,b,v,_,C,I,k){var R=L();try{Li(i,n,a,l,c,m,b,v,_,C,I,k)}catch(A){if(F(R),A!==A+0)throw A;H(1,0)}}function wm(i,n,a,l,c,m,b,v,_,C){var I=L();try{return Fi(i,n,a,l,c,m,b,v,_,C)}catch(k){if(F(I),k!==k+0)throw k;H(1,0)}}function _m(i,n,a,l,c,m,b,v,_){var C=L();try{return Qn(i,n,a,l,c,m,b,v,_)}catch(I){if(F(C),I!==I+0)throw I;H(1,0)}}function $m(i,n,a,l,c,m,b){var v=L();try{Ki(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Cm(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D){var G=L();try{vr(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function xm(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe){var Xe=L();try{Xn(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe)}catch(at){if(F(Xe),at!==at+0)throw at;H(1,0)}}function Sm(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe){var pe=L();try{ea(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe)}catch(he){if(F(pe),he!==he+0)throw he;H(1,0)}}function Im(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee){var oe=L();try{me(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee)}catch(pe){if(F(oe),pe!==pe+0)throw pe;H(1,0)}}function Am(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G){var ee=L();try{Ji(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)}catch(oe){if(F(ee),oe!==oe+0)throw oe;H(1,0)}}function Tm(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at,ct,wt){var Cr=L();try{wr(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at,ct,wt)}catch(rr){if(F(Cr),rr!==rr+0)throw rr;H(1,0)}}function Em(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe){var at=L();try{or(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe)}catch(ct){if(F(at),ct!==ct+0)throw ct;H(1,0)}}function km(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke){var Qe=L();try{Ot(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke)}catch(Xe){if(F(Qe),Xe!==Xe+0)throw Xe;H(1,0)}}function Om(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at,ct,wt,Cr){var rr=L();try{Yi(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at,ct,wt,Cr)}catch(La){if(F(rr),La!==La+0)throw La;H(1,0)}}function Pm(i,n,a,l,c,m,b,v,_,C,I,k){var R=L();try{Zi(i,n,a,l,c,m,b,v,_,C,I,k)}catch(A){if(F(R),A!==A+0)throw A;H(1,0)}}function Rm(i,n,a,l,c,m,b,v,_,C,I,k,R,A){var D=L();try{Qi(i,n,a,l,c,m,b,v,_,C,I,k,R,A)}catch(G){if(F(D),G!==G+0)throw G;H(1,0)}}function zm(i,n,a,l,c,m,b,v,_,C,I,k,R,A){var D=L();try{Jr(i,n,a,l,c,m,b,v,_,C,I,k,R,A)}catch(G){if(F(D),G!==G+0)throw G;H(1,0)}}function Bm(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce){var Se=L();try{Yr(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce)}catch(je){if(F(Se),je!==je+0)throw je;H(1,0)}}function Mm(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D){var G=L();try{en(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Dm(i,n,a,l,c,m,b,v,_,C,I,k,R){var A=L();try{Zr(i,n,a,l,c,m,b,v,_,C,I,k,R)}catch(D){if(F(A),D!==D+0)throw D;H(1,0)}}function jm(i,n,a){var l=L();try{return As(i,n,a)}catch(c){if(F(l),c!==c+0)throw c;H(1,0)}}function Um(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D){var G=L();try{_r(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Nm(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D){var G=L();try{tn(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Wm(i,n,a,l,c,m,b,v){var _=L();try{return rn(i,n,a,l,c,m,b,v)}catch(C){if(F(_),C!==C+0)throw C;H(1,0)}}function Vm(i,n,a,l,c,m,b){var v=L();try{return nn(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Gm(i,n,a,l,c,m,b,v,_,C,I,k,R,A){var D=L();try{an(i,n,a,l,c,m,b,v,_,C,I,k,R,A)}catch(G){if(F(D),G!==G+0)throw G;H(1,0)}}function Hm(i,n,a,l,c,m,b,v){var _=L();try{Qr(i,n,a,l,c,m,b,v)}catch(C){if(F(_),C!==C+0)throw C;H(1,0)}}function Lm(i,n,a,l,c,m,b,v,_,C,I,k){var R=L();try{on(i,n,a,l,c,m,b,v,_,C,I,k)}catch(A){if(F(R),A!==A+0)throw A;H(1,0)}}function Fm(i,n,a,l,c,m,b,v,_){var C=L();try{$r(i,n,a,l,c,m,b,v,_)}catch(I){if(F(C),I!==I+0)throw I;H(1,0)}}function qm(i,n,a,l,c,m,b,v,_,C){var I=L();try{sn(i,n,a,l,c,m,b,v,_,C)}catch(k){if(F(I),k!==k+0)throw k;H(1,0)}}function Km(i,n,a,l,c){var m=L();try{return u(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function Jm(i,n,a,l,c,m,b,v,_,C,I,k,R){var A=L();try{h(i,n,a,l,c,m,b,v,_,C,I,k,R)}catch(D){if(F(A),D!==D+0)throw D;H(1,0)}}function Ym(i,n,a,l,c,m,b,v,_,C,I,k,R,A){var D=L();try{$(i,n,a,l,c,m,b,v,_,C,I,k,R,A)}catch(G){if(F(D),G!==G+0)throw G;H(1,0)}}function Zm(i,n,a,l,c,m,b,v,_,C,I){var k=L();try{T(i,n,a,l,c,m,b,v,_,C,I)}catch(R){if(F(k),R!==R+0)throw R;H(1,0)}}function Qm(i,n,a,l,c,m,b,v,_,C,I,k){var R=L();try{B(i,n,a,l,c,m,b,v,_,C,I,k)}catch(A){if(F(R),A!==A+0)throw A;H(1,0)}}function Xm(i,n,a,l,c,m,b){var v=L();try{V(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function eh(i,n,a,l,c,m,b,v,_){var C=L();try{return ce(i,n,a,l,c,m,b,v,_)}catch(I){if(F(C),I!==I+0)throw I;H(1,0)}}function th(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G){var ee=L();try{le(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)}catch(oe){if(F(ee),oe!==oe+0)throw oe;H(1,0)}}function rh(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G){var ee=L();try{ve(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)}catch(oe){if(F(ee),oe!==oe+0)throw oe;H(1,0)}}function ih(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at){var ct=L();try{Ft(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee,oe,pe,he,Ce,Se,je,Ke,Qe,Xe,at)}catch(wt){if(F(ct),wt!==wt+0)throw wt;H(1,0)}}function nh(i,n,a,l,c,m,b,v){var _=L();try{un(i,n,a,l,c,m,b,v)}catch(C){if(F(_),C!==C+0)throw C;H(1,0)}}function ah(i,n,a,l,c,m,b,v,_,C,I,k,R,A){var D=L();try{return No(i,n,a,l,c,m,b,v,_,C,I,k,R,A)}catch(G){if(F(D),G!==G+0)throw G;H(1,0)}}function oh(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G){var ee=L();try{Wo(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)}catch(oe){if(F(ee),oe!==oe+0)throw oe;H(1,0)}}function sh(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee){var oe=L();try{Ho(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G,ee)}catch(pe){if(F(oe),pe!==pe+0)throw pe;H(1,0)}}function uh(i,n,a,l,c,m,b,v,_,C,I){var k=L();try{Jo(i,n,a,l,c,m,b,v,_,C,I)}catch(R){if(F(k),R!==R+0)throw R;H(1,0)}}function lh(i,n,a,l,c,m,b,v,_,C,I,k,R,A){var D=L();try{Zo(i,n,a,l,c,m,b,v,_,C,I,k,R,A)}catch(G){if(F(D),G!==G+0)throw G;H(1,0)}}function dh(i,n,a,l,c,m,b,v,_,C,I){var k=L();try{ts(i,n,a,l,c,m,b,v,_,C,I)}catch(R){if(F(k),R!==R+0)throw R;H(1,0)}}function ch(i,n,a,l,c,m){var b=L();try{rs(i,n,a,l,c,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function ph(i,n,a,l,c,m,b,v,_,C,I,k,R,A){var D=L();try{Ss(i,n,a,l,c,m,b,v,_,C,I,k,R,A)}catch(G){if(F(D),G!==G+0)throw G;H(1,0)}}function fh(i,n,a,l,c,m,b,v){var _=L();try{return is(i,n,a,l,c,m,b,v)}catch(C){if(F(_),C!==C+0)throw C;H(1,0)}}function mh(i,n,a,l,c){var m=L();try{return Es(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function hh(i,n,a,l,c,m,b,v){var _=L();try{ns(i,n,a,l,c,m,b,v)}catch(C){if(F(_),C!==C+0)throw C;H(1,0)}}function gh(i,n,a,l,c,m,b,v,_){var C=L();try{return as(i,n,a,l,c,m,b,v,_)}catch(I){if(F(C),I!==I+0)throw I;H(1,0)}}function yh(i,n,a,l,c,m,b,v,_){var C=L();try{return os(i,n,a,l,c,m,b,v,_)}catch(I){if(F(C),I!==I+0)throw I;H(1,0)}}function bh(i,n,a,l,c,m,b,v,_,C,I){var k=L();try{ss(i,n,a,l,c,m,b,v,_,C,I)}catch(R){if(F(k),R!==R+0)throw R;H(1,0)}}function vh(i,n,a,l,c,m,b,v,_,C){var I=L();try{return us(i,n,a,l,c,m,b,v,_,C)}catch(k){if(F(I),k!==k+0)throw k;H(1,0)}}function wh(i,n,a,l,c,m,b){var v=L();try{return ds(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function _h(i,n,a,l,c,m,b,v,_,C,I,k,R){var A=L();try{return cs(i,n,a,l,c,m,b,v,_,C,I,k,R)}catch(D){if(F(A),D!==D+0)throw D;H(1,0)}}function $h(i,n,a,l,c,m,b,v,_,C){var I=L();try{return ps(i,n,a,l,c,m,b,v,_,C)}catch(k){if(F(I),k!==k+0)throw k;H(1,0)}}function Ch(i,n,a,l,c,m,b,v,_,C,I,k,R,A){var D=L();try{return fs(i,n,a,l,c,m,b,v,_,C,I,k,R,A)}catch(G){if(F(D),G!==G+0)throw G;H(1,0)}}function xh(i,n,a,l,c,m,b,v){var _=L();try{return ms(i,n,a,l,c,m,b,v)}catch(C){if(F(_),C!==C+0)throw C;H(1,0)}}function Sh(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G){var ee=L();try{return hs(i,n,a,l,c,m,b,v,_,C,I,k,R,A,D,G)}catch(oe){if(F(ee),oe!==oe+0)throw oe;H(1,0)}}function Ih(i,n,a,l,c,m,b,v){var _=L();try{return gs(i,n,a,l,c,m,b,v)}catch(C){if(F(_),C!==C+0)throw C;H(1,0)}}function Ah(i,n,a,l,c,m,b,v,_,C){var I=L();try{return ys(i,n,a,l,c,m,b,v,_,C)}catch(k){if(F(I),k!==k+0)throw k;H(1,0)}}function Th(i,n,a,l){var c=L();try{return bs(i,n,a,l)}catch(m){if(F(c),m!==m+0)throw m;H(1,0)}}function Eh(i,n,a,l,c){var m=L();try{return vs(i,n,a,l,c)}catch(b){if(F(m),b!==b+0)throw b;H(1,0)}}function kh(i,n,a,l,c,m){var b=L();try{$s(i,n,a,l,c,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function Oh(i,n,a,l,c,m,b,v,_,C,I,k,R){var A=L();try{Jn(i,n,a,l,c,m,b,v,_,C,I,k,R)}catch(D){if(F(A),D!==D+0)throw D;H(1,0)}}function Ph(i,n,a,l,c,m){var b=L();try{return Cs(i,n,a,l,c,m)}catch(v){if(F(b),v!==v+0)throw v;H(1,0)}}function Rh(i){var n=L();try{return Vr(i)}catch(a){if(F(n),a!==a+0)throw a;H(1,0)}}function zh(i,n,a,l,c,m,b){var v=L();try{return hr(i,n,a,l,c,m,b)}catch(_){if(F(v),_!==_+0)throw _;H(1,0)}}function Bh(){var i=M;i=Object.assign({},i);var n=l=>()=>l()>>>0,a=l=>c=>l(c)>>>0;return i.Gd=n(i.Gd),i.Hd=a(i.Hd),i.Md=n(i.Md),i.Od=a(i.Od),i}r.stackAlloc=ci,r.stackSave=L,r.stackRestore=F,r.UTF8ToString=nt,r.stringToUTF8=(i,n,a)=>ar(i,ie,n,a),r.lengthBytesUTF8=kr;var ra;$e=function i(){ra||zs(),ra||($e=i)};function zs(){if(!(0<Ge)){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;){var i=r.preRun.shift();Ve.unshift(i)}for(;0<Ve.length;)Ve.shift()(r);if(!(0<Ge||ra||(ra=!0,r.calledRun=!0,q))){for(;0<ze.length;)ze.shift()(r);for(o(r);0<fe.length;)fe.shift()(r)}}}return zs(),t.ready}})();typeof mu=="object"&&typeof to=="object"?to.exports=fu:typeof define=="function"&&define.amd&&define([],()=>fu)});var gu=Xr(()=>{});var yu=Xr(()=>{});var bu={};xr(bu,{cpus:()=>Lh});var Lh,vu=se(()=>{Lh=void 0});var $u=Xr((_u,ro)=>{"use strict";var wu=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(t={}){function r(){return fe.buffer!=ge.buffer&&ht(),ge}function o(){return fe.buffer!=ge.buffer&&ht(),Te}function s(){return fe.buffer!=ge.buffer&&ht(),We}function p(){return fe.buffer!=ge.buffer&&ht(),it}function d(){return fe.buffer!=ge.buffer&&ht(),ae}function g(){return fe.buffer!=ge.buffer&&ht(),ye}function y(){return fe.buffer!=ge.buffer&&ht(),Me}function w(){return fe.buffer!=ge.buffer&&ht(),lt}var f=t,x,S;f.ready=new Promise((u,h)=>{x=u,S=h}),f.mountExternalData=(u,h)=>{(f.Fb||(f.Fb=new Map)).set(u,h)},f.unmountExternalData=()=>{delete f.Fb};let O=()=>{let u=($,T,B)=>(...V)=>{let Y=kt,re=T?.();V=$(...V);let ce=T?.();return re!==ce&&($=ce,B(re),T=B=null),kt!=Y?Vn():V},h=$=>async(...T)=>{try{if(f.Eb)throw Error("Session already started");let B=f.Eb={kc:T[0],errors:[]},V=await $(...T);if(f.Eb!==B)throw Error("Session mismatch");f.Ob?.flush();let Y=B.errors;if(0<Y.length){let re=await Promise.all(Y);if(re=re.filter(ce=>ce),0<re.length)throw Error(re.join(`
`))}return V}finally{f.Eb=null}};f._OrtCreateSession=u(f._OrtCreateSession,()=>f._OrtCreateSession,$=>f._OrtCreateSession=$),f._OrtRun=h(u(f._OrtRun,()=>f._OrtRun,$=>f._OrtRun=$)),f._OrtRunWithBinding=h(u(f._OrtRunWithBinding,()=>f._OrtRunWithBinding,$=>f._OrtRunWithBinding=$)),f._OrtBindInput=u(f._OrtBindInput,()=>f._OrtBindInput,$=>f._OrtBindInput=$),O=void 0};f.jsepInit=(u,h)=>{if(O?.(),u==="webgpu"){[f.Ob,f.ac,f.ec,f.Pb,f.dc,f.eb,f.fc,f.ic,f.bc,f.cc,f.hc]=h;let $=f.Ob;f.jsepRegisterBuffer=(T,B,V,Y)=>$.registerBuffer(T,B,V,Y),f.jsepGetBuffer=T=>$.getBuffer(T),f.jsepCreateDownloader=(T,B,V)=>$.createDownloader(T,B,V),f.jsepOnReleaseSession=T=>{$.onReleaseSession(T)},f.jsepOnRunStart=T=>$.onRunStart(T)}};var E=Object.assign({},f),P="./this.program",j=(u,h)=>{throw h},U=typeof window=="object",z=typeof importScripts=="function",W=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",N=f.ENVIRONMENT_IS_PTHREAD||!1,q="";function X(u){return f.locateFile?f.locateFile(u,q):q+u}var te,ie,J;if(W){var ne=(Qa(),sr(Za)),Ie=(eo(),sr(Xa));q=z?Ie.dirname(q)+"/":__dirname+"/",te=(h,$)=>(h=ar(h)?new URL(h):Ie.normalize(h),ne.readFileSync(h,$?void 0:"utf8")),J=h=>(h=te(h,!0),h.buffer||(h=new Uint8Array(h)),h),ie=(h,$,T,B=!0)=>{h=ar(h)?new URL(h):Ie.normalize(h),ne.readFile(h,B?void 0:"utf8",(V,Y)=>{V?T(V):$(B?Y.buffer:Y)})},!f.thisProgram&&1<process.argv.length&&(P=process.argv[1].replace(/\\/g,"/")),process.argv.slice(2),j=(h,$)=>{throw process.exitCode=h,$},f.inspect=()=>"[Emscripten Module object]";let u;try{u=gu()}catch(h){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),h}global.Worker=u.Worker}else(U||z)&&(z?q=self.location.href:typeof document<"u"&&document.currentScript&&(q=document.currentScript.src),typeof e<"u"&&e&&(q=e),q.indexOf("blob:")!==0?q=q.substr(0,q.replace(/[?#].*/,"").lastIndexOf("/")+1):q="",W||(te=u=>{var h=new XMLHttpRequest;return h.open("GET",u,!1),h.send(null),h.responseText},z&&(J=u=>{var h=new XMLHttpRequest;return h.open("GET",u,!1),h.responseType="arraybuffer",h.send(null),new Uint8Array(h.response)}),ie=(u,h,$)=>{var T=new XMLHttpRequest;T.open("GET",u,!0),T.responseType="arraybuffer",T.onload=()=>{T.status==200||T.status==0&&T.response?h(T.response):$()},T.onerror=$,T.send(null)}));W&&typeof performance>"u"&&(global.performance=yu().performance);var Be=console.log.bind(console),qe=console.error.bind(console);W&&(Be=(...u)=>ne.writeSync(1,u.join(" ")+`
`),qe=(...u)=>ne.writeSync(2,u.join(" ")+`
`));var Ve=Be,ze=qe;Object.assign(f,E),E=null,typeof WebAssembly!="object"&&nt("no native wasm support detected");var fe,Ge,Ae=!1,$e,ge,Te,We,it,ae,ye,Me,ot,mt,lt;function ht(){var u=fe.buffer;f.HEAP8=ge=new Int8Array(u),f.HEAP16=We=new Int16Array(u),f.HEAPU8=Te=new Uint8Array(u),f.HEAPU16=it=new Uint16Array(u),f.HEAP32=ae=new Int32Array(u),f.HEAPU32=ye=new Uint32Array(u),f.HEAPF32=Me=new Float32Array(u),f.HEAPF64=lt=new Float64Array(u),f.HEAP64=ot=new BigInt64Array(u),f.HEAPU64=mt=new BigUint64Array(u)}var st=16777216;if(N)fe=f.wasmMemory;else if(f.wasmMemory)fe=f.wasmMemory;else if(fe=new WebAssembly.Memory({initial:st/65536,maximum:65536,shared:!0}),!(fe.buffer instanceof SharedArrayBuffer))throw ze("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),W&&ze("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");ht(),st=fe.buffer.byteLength;var rt=[],bt=[],Et=[],Rt=0,ir=null,nr=null;function ai(){if(Rt--,Rt==0&&(ir!==null&&(clearInterval(ir),ir=null),nr)){var u=nr;nr=null,u()}}function nt(u){throw u="Aborted("+u+")",ze(u),Ae=!0,$e=1,u=new WebAssembly.RuntimeError(u+". Build with -sASSERTIONS for more info."),S(u),u}var kr=u=>u.startsWith("data:application/octet-stream;base64,"),ar=u=>u.startsWith("file://"),zt;zt="ort-wasm-simd-threaded.wasm",kr(zt)||(zt=X(zt));function oi(u){if(J)return J(u);throw"both async and sync fetching of the wasm failed"}function wn(u){if(U||z){if(typeof fetch=="function"&&!ar(u))return fetch(u,{credentials:"same-origin"}).then(h=>{if(!h.ok)throw"failed to load wasm binary file at '"+u+"'";return h.arrayBuffer()}).catch(()=>oi(u));if(ie)return new Promise((h,$)=>{ie(u,T=>h(new Uint8Array(T)),$)})}return Promise.resolve().then(()=>oi(u))}function si(u,h,$){return wn(u).then(T=>WebAssembly.instantiate(T,h)).then(T=>T).then($,T=>{ze(`failed to asynchronously prepare wasm: ${T}`),nt(T)})}function ui(u,h){var $=zt;return typeof WebAssembly.instantiateStreaming!="function"||kr($)||ar($)||W||typeof fetch!="function"?si($,u,h):fetch($,{credentials:"same-origin"}).then(T=>WebAssembly.instantiateStreaming(T,u).then(h,function(B){return ze(`wasm streaming compile failed: ${B}`),ze("falling back to ArrayBuffer instantiation"),si($,u,h)}))}var Or={949596:(u,h,$,T)=>{if(typeof f>"u"||!f.Fb)return 1;if(u=ut(u>>>0),u.startsWith("./")&&(u=u.substring(2)),u=f.Fb.get(u),!u)return 2;if(h>>>=0,$>>>=0,T>>>=0,h+$>u.byteLength)return 3;try{return o().set(u.subarray(h,h+$),T>>>0),0}catch{return 4}},950097:()=>{f.bc()},950128:()=>{f.cc()},950157:()=>{f.hc()},950182:u=>f.ac(u),950215:u=>f.ec(u),950247:(u,h,$)=>{f.Pb(u,h,$,!0)},950286:(u,h,$)=>{f.Pb(u,h,$)},950319:u=>{f.eb("Abs",u,void 0)},950370:u=>{f.eb("Neg",u,void 0)},950421:u=>{f.eb("Floor",u,void 0)},950474:u=>{f.eb("Ceil",u,void 0)},950526:u=>{f.eb("Reciprocal",u,void 0)},950584:u=>{f.eb("Sqrt",u,void 0)},950636:u=>{f.eb("Exp",u,void 0)},950687:u=>{f.eb("Erf",u,void 0)},950738:u=>{f.eb("Sigmoid",u,void 0)},950793:(u,h,$)=>{f.eb("HardSigmoid",u,{alpha:h,beta:$})},950872:u=>{f.eb("Log",u,void 0)},950923:u=>{f.eb("Sin",u,void 0)},950974:u=>{f.eb("Cos",u,void 0)},951025:u=>{f.eb("Tan",u,void 0)},951076:u=>{f.eb("Asin",u,void 0)},951128:u=>{f.eb("Acos",u,void 0)},951180:u=>{f.eb("Atan",u,void 0)},951232:u=>{f.eb("Sinh",u,void 0)},951284:u=>{f.eb("Cosh",u,void 0)},951336:u=>{f.eb("Asinh",u,void 0)},951389:u=>{f.eb("Acosh",u,void 0)},951442:u=>{f.eb("Atanh",u,void 0)},951495:u=>{f.eb("Tanh",u,void 0)},951547:u=>{f.eb("Not",u,void 0)},951598:(u,h,$)=>{f.eb("Clip",u,{min:h,max:$})},951667:u=>{f.eb("Clip",u,void 0)},951719:(u,h)=>{f.eb("Elu",u,{alpha:h})},951777:u=>{f.eb("Relu",u,void 0)},951829:(u,h)=>{f.eb("LeakyRelu",u,{alpha:h})},951893:(u,h)=>{f.eb("ThresholdedRelu",u,{alpha:h})},951963:(u,h)=>{f.eb("Cast",u,{to:h})},952021:u=>{f.eb("Add",u,void 0)},952072:u=>{f.eb("Sub",u,void 0)},952123:u=>{f.eb("Mul",u,void 0)},952174:u=>{f.eb("Div",u,void 0)},952225:u=>{f.eb("Pow",u,void 0)},952276:u=>{f.eb("Equal",u,void 0)},952329:u=>{f.eb("Greater",u,void 0)},952384:u=>{f.eb("GreaterOrEqual",u,void 0)},952446:u=>{f.eb("Less",u,void 0)},952498:u=>{f.eb("LessOrEqual",u,void 0)},952557:(u,h,$,T,B)=>{f.eb("ReduceMean",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:T?Array.from(d().subarray(T>>>0,B>>>0)):[]})},952716:(u,h,$,T,B)=>{f.eb("ReduceMax",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:T?Array.from(d().subarray(T>>>0,B>>>0)):[]})},952874:(u,h,$,T,B)=>{f.eb("ReduceMin",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:T?Array.from(d().subarray(T>>>0,B>>>0)):[]})},953032:(u,h,$,T,B)=>{f.eb("ReduceProd",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:T?Array.from(d().subarray(T>>>0,B>>>0)):[]})},953191:(u,h,$,T,B)=>{f.eb("ReduceSum",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:T?Array.from(d().subarray(T>>>0,B>>>0)):[]})},953349:(u,h,$,T,B)=>{f.eb("ReduceL1",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:T?Array.from(d().subarray(T>>>0,B>>>0)):[]})},953506:(u,h,$,T,B)=>{f.eb("ReduceL2",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:T?Array.from(d().subarray(T>>>0,B>>>0)):[]})},953663:(u,h,$,T,B)=>{f.eb("ReduceLogSum",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:T?Array.from(d().subarray(T>>>0,B>>>0)):[]})},953824:(u,h,$,T,B)=>{f.eb("ReduceSumSquare",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:T?Array.from(d().subarray(T>>>0,B>>>0)):[]})},953988:(u,h,$,T,B)=>{f.eb("ReduceLogSumExp",u,{keepDims:!!h,noopWithEmptyAxes:!!$,axes:T?Array.from(d().subarray(T>>>0,B>>>0)):[]})},954152:u=>{f.eb("Where",u,void 0)},954205:(u,h,$)=>{f.eb("Transpose",u,{perm:h?Array.from(d().subarray(h>>>0,$>>>0)):[]})},954313:(u,h,$,T,B,V,Y,re,ce,le,ve,Ee,Ue,K,we)=>{f.eb("ConvTranspose",u,{format:ce?"NHWC":"NCHW",autoPad:h,dilations:[$],group:T,kernel_shape:[B],pads:[V,Y],strides:[re],wIsConst:()=>!!r()[le>>>0],outputPadding:ve?Array.from(d().subarray(ve>>>0,Ee>>>0)):[],outputShape:Ue?Array.from(d().subarray(Ue>>>0,K>>>0)):[],activation:ut(we)})},954715:(u,h,$,T,B,V,Y,re,ce,le,ve,Ee,Ue,K)=>{f.eb("ConvTranspose",u,{format:re?"NHWC":"NCHW",autoPad:h,dilations:Array.from(d().subarray($>>>0,($>>>0)+2>>>0)),group:T,kernelShape:Array.from(d().subarray(B>>>0,(B>>>0)+2>>>0)),pads:Array.from(d().subarray(V>>>0,(V>>>0)+4>>>0)),strides:Array.from(d().subarray(Y>>>0,(Y>>>0)+2>>>0)),wIsConst:()=>!!r()[ce>>>0],outputPadding:le?Array.from(d().subarray(le>>>0,ve>>>0)):[],outputShape:Ee?Array.from(d().subarray(Ee>>>0,Ue>>>0)):[],activation:ut(K)})},955280:(u,h,$,T,B,V,Y,re,ce,le,ve,Ee,Ue,K,we)=>{f.eb("ConvTranspose",u,{format:ce?"NHWC":"NCHW",autoPad:h,dilations:[$],group:T,kernel_shape:[B],pads:[V,Y],strides:[re],wIsConst:()=>!!r()[le>>>0],outputPadding:ve?Array.from(d().subarray(ve>>>0,Ee>>>0)):[],outputShape:Ue?Array.from(d().subarray(Ue>>>0,K>>>0)):[],activation:ut(we)})},955682:(u,h,$,T,B,V,Y,re,ce,le,ve,Ee,Ue,K)=>{f.eb("ConvTranspose",u,{format:re?"NHWC":"NCHW",autoPad:h,dilations:Array.from(d().subarray($>>>0,($>>>0)+2>>>0)),group:T,kernelShape:Array.from(d().subarray(B>>>0,(B>>>0)+2>>>0)),pads:Array.from(d().subarray(V>>>0,(V>>>0)+4>>>0)),strides:Array.from(d().subarray(Y>>>0,(Y>>>0)+2>>>0)),wIsConst:()=>!!r()[ce>>>0],outputPadding:le?Array.from(d().subarray(le>>>0,ve>>>0)):[],outputShape:Ee?Array.from(d().subarray(Ee>>>0,Ue>>>0)):[],activation:ut(K)})},956247:(u,h)=>{f.eb("GlobalAveragePool",u,{format:h?"NHWC":"NCHW"})},956338:(u,h,$,T,B,V,Y,re,ce,le,ve,Ee,Ue,K,we,De)=>{f.eb("AveragePool",u,{format:De?"NHWC":"NCHW",auto_pad:h,ceil_mode:$,count_include_pad:T,storage_order:B,dilations:[V,Y],kernel_shape:[re,ce],pads:[le,ve,Ee,Ue],strides:[K,we]})},956622:(u,h)=>{f.eb("GlobalAveragePool",u,{format:h?"NHWC":"NCHW"})},956713:(u,h,$,T,B,V,Y,re,ce,le,ve,Ee,Ue,K,we,De)=>{f.eb("AveragePool",u,{format:De?"NHWC":"NCHW",auto_pad:h,ceil_mode:$,count_include_pad:T,storage_order:B,dilations:[V,Y],kernel_shape:[re,ce],pads:[le,ve,Ee,Ue],strides:[K,we]})},956997:(u,h)=>{f.eb("GlobalMaxPool",u,{format:h?"NHWC":"NCHW"})},957084:(u,h,$,T,B,V,Y,re,ce,le,ve,Ee,Ue,K,we,De)=>{f.eb("MaxPool",u,{format:De?"NHWC":"NCHW",auto_pad:h,ceil_mode:$,count_include_pad:T,storage_order:B,dilations:[V,Y],kernel_shape:[re,ce],pads:[le,ve,Ee,Ue],strides:[K,we]})},957364:(u,h)=>{f.eb("GlobalMaxPool",u,{format:h?"NHWC":"NCHW"})},957451:(u,h,$,T,B,V,Y,re,ce,le,ve,Ee,Ue,K,we,De)=>{f.eb("MaxPool",u,{format:De?"NHWC":"NCHW",auto_pad:h,ceil_mode:$,count_include_pad:T,storage_order:B,dilations:[V,Y],kernel_shape:[re,ce],pads:[le,ve,Ee,Ue],strides:[K,we]})},957731:(u,h,$,T,B)=>{f.eb("Gemm",u,{alpha:h,beta:$,transA:T,transB:B})},957835:u=>{f.eb("MatMul",u,void 0)},957889:(u,h,$,T)=>{f.eb("ArgMax",u,{keepDims:!!h,selectLastIndex:!!$,axis:T})},957997:(u,h,$,T)=>{f.eb("ArgMin",u,{keepDims:!!h,selectLastIndex:!!$,axis:T})},958105:(u,h)=>{f.eb("Softmax",u,{axis:h})},958168:(u,h)=>{f.eb("Concat",u,{axis:h})},958228:(u,h,$,T,B)=>{f.eb("Split",u,{axis:h,numOutputs:$,splitSizes:T?Array.from(d().subarray(T>>>0,B>>>0)):[]})},958368:u=>{f.eb("Expand",u,void 0)},958422:(u,h)=>{f.eb("Gather",u,{axis:Number(h)})},958493:(u,h)=>{f.eb("GatherElements",u,{axis:Number(h)})},958572:(u,h,$,T,B,V,Y,re,ce,le,ve)=>{f.eb("Resize",u,{antialias:h,axes:$?Array.from(d().subarray($>>>0,T>>>0)):[],coordinateTransformMode:ut(B),cubicCoeffA:V,excludeOutside:Y,extrapolationValue:re,keepAspectRatioPolicy:ut(ce),mode:ut(le),nearestMode:ut(ve)})},958918:(u,h,$,T,B,V,Y)=>{f.eb("Slice",u,{starts:h?Array.from(d().subarray(h>>>0,$>>>0)):[],ends:T?Array.from(d().subarray(T>>>0,B>>>0)):[],axes:V?Array.from(d().subarray(V>>>0,Y>>>0)):[]})},959134:u=>{f.eb("Tile",u,void 0)},959186:(u,h,$)=>{f.eb("LayerNormalization",u,{axis:Number(h),epsilon:Number($)})},959293:(u,h,$)=>{f.eb("InstanceNormalization",u,{epsilon:h,format:$?"NHWC":"NCHW"})},959407:(u,h,$)=>{f.eb("InstanceNormalization",u,{epsilon:h,format:$?"NHWC":"NCHW"})},959521:u=>{f.eb("Range",u,void 0)},959574:(u,h)=>{f.eb("Einsum",u,{equation:ut(h)})},959655:(u,h,$,T,B)=>{f.eb("Pad",u,{mode:h,value:$,pads:T?Array.from(d().subarray(T>>>0,B>>>0)):[]})},959782:(u,h,$,T,B,V)=>{f.eb("BatchNormalization",u,{epsilon:h,momentum:$,spatial:!!B,trainingMode:!!T,format:V?"NHWC":"NCHW"})},959951:(u,h,$,T,B,V)=>{f.eb("BatchNormalization",u,{epsilon:h,momentum:$,spatial:!!B,trainingMode:!!T,format:V?"NHWC":"NCHW"})},960120:(u,h,$)=>{f.eb("CumSum",u,{exclusive:Number(h),reverse:Number($)})},960217:(u,h,$,T,B,V,Y,re,ce)=>{f.eb("Attention",u,{numHeads:h,isUnidirectional:$,maskFilterValue:T,scale:B,doRotary:V,qkvHiddenSizes:Y?Array.from(d().subarray(Number(re)>>>0,Number(re)+Y>>>0)):[],pastPresentShareBuffer:!!ce})},960489:u=>{f.eb("BiasAdd",u,void 0)},960544:u=>{f.eb("BiasSplitGelu",u,void 0)},960605:u=>{f.eb("FastGelu",u,void 0)},960661:(u,h,$,T,B,V,Y,re,ce,le,ve,Ee,Ue)=>{f.eb("Conv",u,{format:ce?"NHWC":"NCHW",auto_pad:h,dilations:[$],group:T,kernel_shape:[B],pads:V?Array.from(d().subarray(V>>>0,Y>>>0)):[],strides:[re],w_is_const:()=>!!r()[le>>>0],activation:ut(ve),activation_params:Ee?Array.from(y().subarray(Ee>>>0,Ue>>>0)):[]})},961031:(u,h,$,T,B,V,Y,re,ce,le,ve,Ee,Ue,K,we,De)=>{f.eb("Conv",u,{format:Ee?"NHWC":"NCHW",auto_pad:h,dilations:[$,T],group:B,kernel_shape:[V,Y],pads:re?Array.from(d().subarray(re>>>0,ce>>>0)):[],strides:[le,ve],w_is_const:()=>!!r()[Ue>>>0],activation:ut(K),activation_params:we?Array.from(y().subarray(we>>>0,De>>>0)):[]})},961422:u=>{f.eb("Gelu",u,void 0)},961474:(u,h,$,T,B,V)=>{f.eb("MatMulNBits",u,{k:h,n:$,accuracyLevel:T,bits:B,blockSize:V})},961601:(u,h,$,T,B,V)=>{f.eb("MultiHeadAttention",u,{numHeads:h,isUnidirectional:$,maskFilterValue:T,scale:B,doRotary:V})},961760:(u,h)=>{f.eb("SkipLayerNormalization",u,{epsilon:h})},961841:u=>{f.fc(u)},961875:(u,h)=>f.ic(u,h,f.Eb.kc,f.Eb.errors)};function pr(u){this.name="ExitStatus",this.message=`Program terminated with exit(${u})`,this.status=u}var Pr=u=>{u.terminate(),u.onmessage=()=>{}},Rr=u=>{be.yb.length==0&&(fr(),be.Qb(be.yb[0]));var h=be.yb.pop();if(!h)return 6;be.zb.push(h),be.pb[u.xb]=h,h.xb=u.xb;var $={cmd:"run",start_routine:u.lc,arg:u.Wb,pthread_ptr:u.xb};return W&&h.unref(),h.postMessage($,u.rc),0},Xt=0,li=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,di=(u,h,$)=>{h>>>=0;var T=h+$;for($=h;u[$]&&!($>=T);)++$;if(16<$-h&&u.buffer&&li)return li.decode(u.buffer instanceof SharedArrayBuffer?u.slice(h,$):u.subarray(h,$));for(T="";h<$;){var B=u[h++];if(B&128){var V=u[h++]&63;if((B&224)==192)T+=String.fromCharCode((B&31)<<6|V);else{var Y=u[h++]&63;B=(B&240)==224?(B&15)<<12|V<<6|Y:(B&7)<<18|V<<12|Y<<6|u[h++]&63,65536>B?T+=String.fromCharCode(B):(B-=65536,T+=String.fromCharCode(55296|B>>10,56320|B&1023))}}else T+=String.fromCharCode(B)}return T},ut=(u,h)=>(u>>>=0)?di(o(),u,h):"",_n=u=>{var h=Zr();return u=u(),_r(h),u};function Fe(u,h){var $=arguments.length-2,T=arguments;return _n(()=>{for(var B=2*$,V=Qr(8*B),Y=V>>>3,re=0;re<$;re++){var ce=T[2+re];typeof ce=="bigint"?(ot[Y+2*re]=1n,ot[Y+2*re+1]=ce):(ot[Y+2*re]=0n,w()[Y+2*re+1>>>0]=ce)}return Qi(u,B,V,h)})}function $n(u){if(N)return Fe(0,1,u);$e=u,0<Xt||(be.mc(),f.onExit?.(u),Ae=!0),j(u,new pr(u))}var Bt=u=>{if($e=u,N)throw Br(u),"unwind";$n(u)},Ct=u=>{u instanceof pr||u=="unwind"||j(1,u)};function Cn(){for(var u=f.numThreads;u--;)fr();rt.unshift(()=>{Rt++,xn(()=>ai())})}function fr(){var u=X("ort-wasm-simd-threaded.worker.js");u=new Worker(u),be.yb.push(u)}function xn(u){N?u():Promise.all(be.yb.map(be.Qb)).then(u)}var be={yb:[],zb:[],Vb:[],pb:{},Ib(){N?(be.receiveObjectTransfer=be.jc,be.threadInitTLS=be.Ub,be.setExitStatus=be.Tb):Cn()},Tb:u=>$e=u,vc:["$terminateWorker"],mc:()=>{for(var u of be.zb)Pr(u);for(u of be.yb)Pr(u);be.yb=[],be.zb=[],be.pb=[]},Sb:u=>{var h=u.xb;delete be.pb[h],be.yb.push(u),be.zb.splice(be.zb.indexOf(u),1),u.xb=0,Jr(h)},jc(){},Ub(){be.Vb.forEach(u=>u())},Qb:u=>new Promise(h=>{u.onmessage=V=>{V=V.data;var Y=V.cmd;if(V.targetThread&&V.targetThread!=wr()){var re=be.pb[V.targetThread];re?re.postMessage(V,V.transferList):ze(`Internal error! Worker sent a message "${Y}" to target pthread ${V.targetThread}, but that thread no longer exists!`)}else Y==="checkMailbox"?hr():Y==="spawnThread"?Rr(V):Y==="cleanupThread"?be.Sb(be.pb[V.thread]):Y==="killThread"?(V=V.thread,Y=be.pb[V],delete be.pb[V],Pr(Y),Jr(V),be.zb.splice(be.zb.indexOf(Y),1),Y.xb=0):Y==="cancelThread"?be.pb[V.thread].postMessage({cmd:"cancel"}):Y==="loaded"?(u.loaded=!0,W&&!u.xb&&u.unref(),h(u)):Y==="alert"?alert(`Thread ${V.threadId}: ${V.text}`):V.target==="setimmediate"?u.postMessage(V):Y==="callHandler"?f[V.handler](...V.args):Y&&ze(`worker sent an unknown command ${Y}`)},u.onerror=V=>{throw ze(`worker sent an error! ${V.filename}:${V.lineno}: ${V.message}`),V},W&&(u.on("message",V=>u.onmessage({data:V})),u.on("error",V=>u.onerror(V)));var $=[],T=["onExit"],B;for(B of T)f.hasOwnProperty(B)&&$.push(B);u.postMessage({cmd:"load",handlers:$,urlOrBlob:f.mainScriptUrlOrBlob||e,wasmMemory:fe,wasmModule:Ge})})};f.PThread=be;var zr=u=>{for(;0<u.length;)u.shift()(f)};f.establishStackSpace=()=>{var u=wr(),h=g()[u+52>>>2>>>0];u=g()[u+56>>>2>>>0],en(h,h-u),_r(h)};function Br(u){if(N)return Fe(1,0,u);Bt(u)}f.invokeEntryPoint=(u,h)=>{u=tn.apply(null,[u,h]),0<Xt?be.Tb(u):Yr(u)};function Ga(u){this.Db=u-24,this.tc=function(h){g()[this.Db+4>>>2>>>0]=h},this.Mb=function(h){g()[this.Db+8>>>2>>>0]=h},this.Ib=function(h,$){this.Kb(),this.tc(h),this.Mb($)},this.Kb=function(){g()[this.Db+16>>>2>>>0]=0}}var Sn=0,Ha=0;function In(u,h,$,T){return N?Fe(2,1,u,h,$,T):An(u,h,$,T)}function An(u,h,$,T){if(u>>>=0,h>>>=0,$>>>=0,T>>>=0,typeof SharedArrayBuffer>"u")return ze("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var B=[];return N&&B.length===0?In(u,h,$,T):(u={lc:$,xb:u,Wb:T,rc:B},N?(u.uc="spawnThread",postMessage(u,B),0):Rr(u))}function Tn(u,h,$){return N?Fe(3,1,u,h,$):0}function M(u,h){if(N)return Fe(4,1,u,h)}var mr=u=>{for(var h=0,$=0;$<u.length;++$){var T=u.charCodeAt($);127>=T?h++:2047>=T?h+=2:55296<=T&&57343>=T?(h+=4,++$):h+=3}return h},Mr=(u,h,$,T)=>{if($>>>=0,!(0<T))return 0;var B=$;T=$+T-1;for(var V=0;V<u.length;++V){var Y=u.charCodeAt(V);if(55296<=Y&&57343>=Y){var re=u.charCodeAt(++V);Y=65536+((Y&1023)<<10)|re&1023}if(127>=Y){if($>=T)break;h[$++>>>0]=Y}else{if(2047>=Y){if($+1>=T)break;h[$++>>>0]=192|Y>>6}else{if(65535>=Y){if($+2>=T)break;h[$++>>>0]=224|Y>>12}else{if($+3>=T)break;h[$++>>>0]=240|Y>>18,h[$++>>>0]=128|Y>>12&63}h[$++>>>0]=128|Y>>6&63}h[$++>>>0]=128|Y&63}}return h[$>>>0]=0,$-B},Dr=(u,h,$)=>Mr(u,o(),h,$);function H(u,h){if(N)return Fe(5,1,u,h)}function er(u,h,$){if(N)return Fe(6,1,u,h,$)}function L(u,h,$){return N?Fe(7,1,u,h,$):0}function F(u,h){if(N)return Fe(8,1,u,h)}function ci(u,h,$){if(N)return Fe(9,1,u,h,$)}function pi(u,h,$,T){if(N)return Fe(10,1,u,h,$,T)}function fi(u,h,$,T){if(N)return Fe(11,1,u,h,$,T)}function mi(u,h,$,T){if(N)return Fe(12,1,u,h,$,T)}function hi(u){if(N)return Fe(13,1,u)}function gi(u,h){if(N)return Fe(14,1,u,h)}function yi(u,h,$){if(N)return Fe(15,1,u,h,$)}var bi=u=>{if(u===null)return"null";var h=typeof u;return h==="object"||h==="array"||h==="function"?u.toString():""+u},vi,xt=u=>{for(var h="";o()[u>>>0];)h+=vi[o()[u++>>>0]];return h},jr={},Ur={},En={},Nt;function kn(u,h,$={}){var T=h.name;if(!u)throw new Nt(`type "${T}" must have a positive integer typeid pointer`);if(Ur.hasOwnProperty(u)){if($.Zb)return;throw new Nt(`Cannot register type '${T}' twice`)}Ur[u]=h,delete En[u],jr.hasOwnProperty(u)&&(h=jr[u],delete jr[u],h.forEach(B=>B()))}function Mt(u,h,$={}){if(!("argPackAdvance"in h))throw new TypeError("registerType registeredInstance requires argPackAdvance");kn(u,h,$)}var wi=(u,h,$)=>{switch(h){case 1:return $?T=>r()[T>>>0>>>0]:T=>o()[T>>>0>>>0];case 2:return $?T=>s()[T>>>1>>>0]:T=>p()[T>>>1>>>0];case 4:return $?T=>d()[T>>>2>>>0]:T=>g()[T>>>2>>>0];case 8:return $?T=>ot[T>>>3]:T=>mt[T>>>3];default:throw new TypeError(`invalid integer width (${h}): ${u}`)}};function _i(){this.wb=[void 0],this.Nb=[]}var vt=new _i;function Nr(u){u>>>=0,u>=vt.Db&&--vt.get(u).Rb===0&&vt.Mb(u)}var dt=u=>{if(!u)throw new Nt("Cannot use deleted val. handle = "+u);return vt.get(u).value},St=u=>{switch(u){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return vt.Kb({Rb:1,value:u})}};function $i(u){return this.fromWireType(d()[u>>>2>>>0])}var On=(u,h)=>{switch(h){case 4:return function($){return this.fromWireType(y()[$>>>2>>>0])};case 8:return function($){return this.fromWireType(w()[$>>>3>>>0])};default:throw new TypeError(`invalid float width (${h}): ${u}`)}};function Pn(u){return this.fromWireType(g()[u>>>2>>>0])}var Ci=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Rn=(u,h)=>{for(var $=u>>1,T=$+h/2;!($>=T)&&p()[$>>>0];)++$;if($<<=1,32<$-u&&Ci)return Ci.decode(o().slice(u,$));for($="",T=0;!(T>=h/2);++T){var B=s()[u+2*T>>>1>>>0];if(B==0)break;$+=String.fromCharCode(B)}return $},zn=(u,h,$)=>{if($??=2147483647,2>$)return 0;$-=2;var T=h;$=$<2*u.length?$/2:u.length;for(var B=0;B<$;++B){var V=u.charCodeAt(B);s()[h>>>1>>>0]=V,h+=2}return s()[h>>>1>>>0]=0,h-T},Bn=u=>2*u.length,Mn=(u,h)=>{for(var $=0,T="";!($>=h/4);){var B=d()[u+4*$>>>2>>>0];if(B==0)break;++$,65536<=B?(B-=65536,T+=String.fromCharCode(55296|B>>10,56320|B&1023)):T+=String.fromCharCode(B)}return T},Dn=(u,h,$)=>{if(h>>>=0,$??=2147483647,4>$)return 0;var T=h;$=T+$-4;for(var B=0;B<u.length;++B){var V=u.charCodeAt(B);if(55296<=V&&57343>=V){var Y=u.charCodeAt(++B);V=65536+((V&1023)<<10)|Y&1023}if(d()[h>>>2>>>0]=V,h+=4,h+4>$)break}return d()[h>>>2>>>0]=0,h-T},jn=u=>{for(var h=0,$=0;$<u.length;++$){var T=u.charCodeAt($);55296<=T&&57343>=T&&++$,h+=4}return h},xi=()=>{if(!(0<Xt))try{N?Yr($e):Bt($e)}catch(u){Ct(u)}};function Wr(u){u>>>=0,typeof Atomics.sc=="function"&&(Atomics.sc(d(),u>>>2,u).value.then(hr),u+=128,Atomics.store(d(),u>>>2,1))}f.__emscripten_thread_mailbox_await=Wr;var hr=()=>{var u=wr();if(u&&(Wr(u),!Ae))try{Xi(),xi()}catch(h){Ct(h)}};f.checkMailbox=hr;var Vr=[],Gr=(u,h)=>{var $=Ur[u];if($===void 0)throw u=Yi(u),$=xt(u),Ot(u),new Nt(h+" has unknown type "+$);return $},Si=(u,h,$)=>{var T=[];return u=u.toWireType(T,$),T.length&&(g()[h>>>2>>>0]=St(T)),u},gr=u=>{try{u()}catch(h){nt(h)}};function Un(){var u=me,h={};for(let[$,T]of Object.entries(u))h[$]=typeof T=="function"?function(){yr.push($);try{return T.apply(null,arguments)}finally{Ae||(yr.pop(),kt&&Wt===1&&yr.length===0&&(Wt=0,Xt+=1,gr(nn),typeof Fibers<"u"&&Fibers.xc()))}}:T;return h}var Wt=0,kt=null,Ii=0,yr=[],Ai={},Ti={},Nn=0,Hr=null,Wn=[];function Vn(){return new Promise((u,h)=>{Hr={resolve:u,reject:h}})}function Gn(){var u=or(65548),h=u+12;g()[u>>>2>>>0]=h,g()[u+4>>>2>>>0]=h+65536,h=yr[0];var $=Ai[h];return $===void 0&&($=Nn++,Ai[h]=$,Ti[$]=h),h=$,d()[u+8>>>2>>>0]=h,u}function Hn(){var u=d()[kt+8>>>2>>>0];return u=me[Ti[u]],--Xt,u()}function Ln(u){if(!Ae){if(Wt===0){var h=!1,$=!1;u((T=0)=>{if(!Ae&&(Ii=T,h=!0,$)){Wt=2,gr(()=>an(kt)),typeof Browser<"u"&&Browser.Jb.Yb&&Browser.Jb.resume(),T=!1;try{var B=Hn()}catch(re){B=re,T=!0}var V=!1;if(!kt){var Y=Hr;Y&&(Hr=null,(T?Y.reject:Y.resolve)(B),V=!0)}if(T&&!V)throw B}}),$=!0,h||(Wt=1,kt=Gn(),typeof Browser<"u"&&Browser.Jb.Yb&&Browser.Jb.pause(),gr(()=>rn(kt)))}else Wt===2?(Wt=0,gr(on),Ot(kt),kt=null,Wn.forEach(T=>{if(!Ae)try{T(),xi()}catch(B){Ct(B)}})):nt(`invalid state: ${Wt}`);return Ii}}function Ei(u){return Ln(h=>{u().then(h)})}var br=[],Fn={},Lr=u=>{var h=Fn[u];return h===void 0?xt(u):h},ki=()=>typeof globalThis=="object"?globalThis:Function("return this")(),qn=u=>{var h=br.length;return br.push(u),h},Kn=(u,h)=>{for(var $=Array(u),T=0;T<u;++T)$[T]=Gr(g()[h+4*T>>>2>>>0],"parameter "+T);return $},Oi=(u,h)=>Object.defineProperty(h,"name",{value:u});function Jn(u){var h=Function;if(!(h instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof h} which is not a function`);var $=Oi(h.name||"unknownFunctionName",function(){});return $.prototype=h.prototype,$=new $,u=h.apply($,u),u instanceof Object?u:$}var tr=u=>u%4===0&&(u%100!==0||u%400===0),Pi=[0,31,60,91,121,152,182,213,244,274,305,335],Ri=[0,31,59,90,120,151,181,212,243,273,304,334];function zi(u,h,$,T,B,V,Y){return N?Fe(16,1,u,h,$,T,B,V,Y):-52}function Bi(u,h,$,T,B,V){if(N)return Fe(17,1,u,h,$,T,B,V)}var Mi=u=>{var h=mr(u)+1,$=or(h);return $&&Dr(u,$,h),$},Fr=[],Di=(u,h)=>{Fr.length=0;for(var $;$=o()[u++>>>0];){var T=$!=105;T&=$!=112,h+=T&&h%8?4:0,Fr.push($==112?g()[h>>>2>>>0]:$==106?ot[h>>>3]:$==105?d()[h>>>2>>>0]:w()[h>>>3>>>0]),h+=T?8:4}return Fr},qr={},ji=()=>{if(!Kr){var u={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:P||"./this.program"},h;for(h in qr)qr[h]===void 0?delete u[h]:u[h]=qr[h];var $=[];for(h in u)$.push(`${h}=${u[h]}`);Kr=$}return Kr},Kr;function Ui(u,h){if(N)return Fe(18,1,u,h);u>>>=0,h>>>=0;var $=0;return ji().forEach((T,B)=>{var V=h+$;for(B=g()[u+4*B>>>2>>>0]=V,V=0;V<T.length;++V)r()[B++>>>0>>>0]=T.charCodeAt(V);r()[B>>>0>>>0]=0,$+=T.length+1}),0}function Ni(u,h){if(N)return Fe(19,1,u,h);u>>>=0,h>>>=0;var $=ji();g()[u>>>2>>>0]=$.length;var T=0;return $.forEach(B=>T+=B.length+1),g()[h>>>2>>>0]=T,0}function Wi(u){return N?Fe(20,1,u):52}function Vi(u,h,$,T){return N?Fe(21,1,u,h,$,T):52}function Gi(u,h,$,T){return N?Fe(22,1,u,h,$,T):70}var Yn=[null,[],[]];function Hi(u,h,$,T){if(N)return Fe(23,1,u,h,$,T);h>>>=0,$>>>=0,T>>>=0;for(var B=0,V=0;V<$;V++){var Y=g()[h>>>2>>>0],re=g()[h+4>>>2>>>0];h+=8;for(var ce=0;ce<re;ce++){var le=o()[Y+ce>>>0],ve=Yn[u];le===0||le===10?((u===1?Ve:ze)(di(ve,0)),ve.length=0):ve.push(le)}B+=re}return g()[T>>>2>>>0]=B,0}var Li=[31,29,31,30,31,30,31,31,30,31,30,31],Fi=[31,28,31,30,31,30,31,31,30,31,30,31];function Zn(u){var h=Array(mr(u)+1);return Mr(u,h,0,h.length),h}var Qn=(u,h)=>{r().set(u,h>>>0)};function qi(u,h,$,T){function B(K,we,De){for(K=typeof K=="number"?K.toString():K||"";K.length<we;)K=De[0]+K;return K}function V(K,we){return B(K,we,"0")}function Y(K,we){function De(un){return 0>un?-1:0<un?1:0}var Ft;return(Ft=De(K.getFullYear()-we.getFullYear()))===0&&(Ft=De(K.getMonth()-we.getMonth()))===0&&(Ft=De(K.getDate()-we.getDate())),Ft}function re(K){switch(K.getDay()){case 0:return new Date(K.getFullYear()-1,11,29);case 1:return K;case 2:return new Date(K.getFullYear(),0,3);case 3:return new Date(K.getFullYear(),0,2);case 4:return new Date(K.getFullYear(),0,1);case 5:return new Date(K.getFullYear()-1,11,31);case 6:return new Date(K.getFullYear()-1,11,30)}}function ce(K){var we=K.Ab;for(K=new Date(new Date(K.Bb+1900,0,1).getTime());0<we;){var De=K.getMonth(),Ft=(tr(K.getFullYear())?Li:Fi)[De];if(we>Ft-K.getDate())we-=Ft-K.getDate()+1,K.setDate(1),11>De?K.setMonth(De+1):(K.setMonth(0),K.setFullYear(K.getFullYear()+1));else{K.setDate(K.getDate()+we);break}}return De=new Date(K.getFullYear()+1,0,4),we=re(new Date(K.getFullYear(),0,4)),De=re(De),0>=Y(we,K)?0>=Y(De,K)?K.getFullYear()+1:K.getFullYear():K.getFullYear()-1}u>>>=0,h>>>=0,$>>>=0,T>>>=0;var le=g()[T+40>>>2>>>0];T={pc:d()[T>>>2>>>0],oc:d()[T+4>>>2>>>0],Gb:d()[T+8>>>2>>>0],Lb:d()[T+12>>>2>>>0],Hb:d()[T+16>>>2>>>0],Bb:d()[T+20>>>2>>>0],vb:d()[T+24>>>2>>>0],Ab:d()[T+28>>>2>>>0],wc:d()[T+32>>>2>>>0],nc:d()[T+36>>>2>>>0],qc:le?ut(le):""},$=ut($),le={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ve in le)$=$.replace(new RegExp(ve,"g"),le[ve]);var Ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),Ue="January February March April May June July August September October November December".split(" ");le={"%a":K=>Ee[K.vb].substring(0,3),"%A":K=>Ee[K.vb],"%b":K=>Ue[K.Hb].substring(0,3),"%B":K=>Ue[K.Hb],"%C":K=>V((K.Bb+1900)/100|0,2),"%d":K=>V(K.Lb,2),"%e":K=>B(K.Lb,2," "),"%g":K=>ce(K).toString().substring(2),"%G":K=>ce(K),"%H":K=>V(K.Gb,2),"%I":K=>(K=K.Gb,K==0?K=12:12<K&&(K-=12),V(K,2)),"%j":K=>{for(var we=0,De=0;De<=K.Hb-1;we+=(tr(K.Bb+1900)?Li:Fi)[De++]);return V(K.Lb+we,3)},"%m":K=>V(K.Hb+1,2),"%M":K=>V(K.oc,2),"%n":()=>`
`,"%p":K=>0<=K.Gb&&12>K.Gb?"AM":"PM","%S":K=>V(K.pc,2),"%t":()=>"	","%u":K=>K.vb||7,"%U":K=>V(Math.floor((K.Ab+7-K.vb)/7),2),"%V":K=>{var we=Math.floor((K.Ab+7-(K.vb+6)%7)/7);if(2>=(K.vb+371-K.Ab-2)%7&&we++,we)we==53&&(De=(K.vb+371-K.Ab)%7,De==4||De==3&&tr(K.Bb)||(we=1));else{we=52;var De=(K.vb+7-K.Ab-1)%7;(De==4||De==5&&tr(K.Bb%400-1))&&we++}return V(we,2)},"%w":K=>K.vb,"%W":K=>V(Math.floor((K.Ab+7-(K.vb+6)%7)/7),2),"%y":K=>(K.Bb+1900).toString().substring(2),"%Y":K=>K.Bb+1900,"%z":K=>{K=K.nc;var we=0<=K;return K=Math.abs(K)/60,(we?"+":"-")+("0000"+(K/60*100+K%60)).slice(-4)},"%Z":K=>K.qc,"%%":()=>"%"},$=$.replace(/%%/g,"\0\0");for(ve in le)$.includes(ve)&&($=$.replace(new RegExp(ve,"g"),le[ve](T)));return $=$.replace(/\0\0/g,"%"),ve=Zn($),ve.length>h?0:(Qn(ve,u),ve.length-1)}be.Ib();for(var Ki=Array(256),vr=0;256>vr;++vr)Ki[vr]=String.fromCharCode(vr);vi=Ki,Nt=f.BindingError=class extends Error{constructor(u){super(u),this.name="BindingError"}},f.InternalError=class extends Error{constructor(u){super(u),this.name="InternalError"}},Object.assign(_i.prototype,{get(u){return this.wb[u]},has(u){return this.wb[u]!==void 0},Kb(u){var h=this.Nb.pop()||this.wb.length;return this.wb[h]=u,h},Mb(u){this.wb[u]=void 0,this.Nb.push(u)}}),vt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),vt.Db=vt.wb.length,f.count_emval_handles=()=>{for(var u=0,h=vt.Db;h<vt.wb.length;++h)vt.wb[h]!==void 0&&++u;return u};var Xn=[$n,Br,In,Tn,M,H,er,L,F,ci,pi,fi,mi,hi,gi,yi,zi,Bi,Ui,Ni,Wi,Vi,Gi,Hi],ea={ua:function(u,h,$){return Ei(async()=>{await f.dc(u,h,$)})},b:function(u,h,$){throw u>>>=0,new Ga(u).Ib(h>>>0,$>>>0),Sn=u,Ha++,Sn},fa:function(u){Zi(u>>>0,!z,1,!U,131072,!1),be.Ub()},D:function(u){u>>>=0,N?postMessage({cmd:"cleanupThread",thread:u}):be.Sb(be.pb[u])},X:An,z:Tn,la:M,T:H,V:er,ma:L,ja:F,ca:ci,ia:pi,H:fi,U:mi,R:hi,ka:gi,S:yi,K:function(u,h,$,T,B){u>>>=0,h>>>=0,$>>>=0,h=xt(h);var V=h.indexOf("u")!=-1;V&&(B=(1n<<64n)-1n),Mt(u,{name:h,fromWireType:Y=>Y,toWireType:function(Y,re){if(typeof re!="bigint"&&typeof re!="number")throw new TypeError(`Cannot convert "${bi(re)}" to ${this.name}`);if(re<T||re>B)throw new TypeError(`Passing a number "${bi(re)}" from JS side to C/C++ side to an argument of type "${h}", which is outside the valid range [${T}, ${B}]!`);return re},argPackAdvance:8,readValueFromPointer:wi(h,$,!V),Cb:null})},sa:function(u,h,$,T){u>>>=0,h=xt(h>>>0),Mt(u,{name:h,fromWireType:function(B){return!!B},toWireType:function(B,V){return V?$:T},argPackAdvance:8,readValueFromPointer:function(B){return this.fromWireType(o()[B>>>0])},Cb:null})},ra:function(u,h){u>>>=0,h=xt(h>>>0),Mt(u,{name:h,fromWireType:$=>{var T=dt($);return Nr($),T},toWireType:($,T)=>St(T),argPackAdvance:8,readValueFromPointer:$i,Cb:null})},J:function(u,h,$){u>>>=0,$>>>=0,h=xt(h>>>0),Mt(u,{name:h,fromWireType:T=>T,toWireType:(T,B)=>B,argPackAdvance:8,readValueFromPointer:On(h,$),Cb:null})},v:function(u,h,$,T,B){if(u>>>=0,$>>>=0,h=xt(h>>>0),B===-1&&(B=4294967295),B=re=>re,T===0){var V=32-8*$;B=re=>re<<V>>>V}var Y=h.includes("unsigned")?function(re,ce){return ce>>>0}:function(re,ce){return ce};Mt(u,{name:h,fromWireType:B,toWireType:Y,argPackAdvance:8,readValueFromPointer:wi(h,$,T!==0),Cb:null})},o:function(u,h,$){function T(V){var Y=g()[V>>>2>>>0];return V=g()[V+4>>>2>>>0],new B(r().buffer,V,Y)}u>>>=0;var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][h];$=xt($>>>0),Mt(u,{name:$,fromWireType:T,argPackAdvance:8,readValueFromPointer:T},{Zb:!0})},L:function(u,h){u>>>=0,h=xt(h>>>0);var $=h==="std::string";Mt(u,{name:h,fromWireType:function(T){var B=g()[T>>>2>>>0],V=T+4;if($)for(var Y=V,re=0;re<=B;++re){var ce=V+re;if(re==B||o()[ce>>>0]==0){if(Y=ut(Y,ce-Y),le===void 0)var le=Y;else le+=String.fromCharCode(0),le+=Y;Y=ce+1}}else{for(le=Array(B),re=0;re<B;++re)le[re]=String.fromCharCode(o()[V+re>>>0]);le=le.join("")}return Ot(T),le},toWireType:function(T,B){B instanceof ArrayBuffer&&(B=new Uint8Array(B));var V=typeof B=="string";if(!(V||B instanceof Uint8Array||B instanceof Uint8ClampedArray||B instanceof Int8Array))throw new Nt("Cannot pass non-string to std::string");var Y=$&&V?mr(B):B.length,re=or(4+Y+1),ce=re+4;if(g()[re>>>2>>>0]=Y,$&&V)Dr(B,ce,Y+1);else if(V)for(V=0;V<Y;++V){var le=B.charCodeAt(V);if(255<le)throw Ot(ce),new Nt("String has UTF-16 code units that do not fit in 8 bits");o()[ce+V>>>0]=le}else for(V=0;V<Y;++V)o()[ce+V>>>0]=B[V];return T!==null&&T.push(Ot,re),re},argPackAdvance:8,readValueFromPointer:Pn,Cb(T){Ot(T)}})},B:function(u,h,$){if(u>>>=0,h>>>=0,$>>>=0,$=xt($),h===2)var T=Rn,B=zn,V=Bn,Y=()=>p(),re=1;else h===4&&(T=Mn,B=Dn,V=jn,Y=()=>g(),re=2);Mt(u,{name:$,fromWireType:ce=>{for(var le=g()[ce>>>2>>>0],ve=Y(),Ee,Ue=ce+4,K=0;K<=le;++K){var we=ce+4+K*h;(K==le||ve[we>>>re]==0)&&(Ue=T(Ue,we-Ue),Ee===void 0?Ee=Ue:(Ee+=String.fromCharCode(0),Ee+=Ue),Ue=we+h)}return Ot(ce),Ee},toWireType:(ce,le)=>{if(typeof le!="string")throw new Nt(`Cannot pass non-string to C++ string type ${$}`);var ve=V(le),Ee=or(4+ve+h);return g()[Ee>>>2]=ve>>re,B(le,Ee+4,ve+h),ce!==null&&ce.push(Ot,Ee),Ee},argPackAdvance:8,readValueFromPointer:$i,Cb(ce){Ot(ce)}})},ta:function(u,h){u>>>=0,h=xt(h>>>0),Mt(u,{$b:!0,name:h,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,P:function(u,h){u>>>=0,u==h>>>0?setTimeout(()=>hr()):N?postMessage({targetThread:u,cmd:"checkMailbox"}):(u=be.pb[u])&&u.postMessage({cmd:"checkMailbox"})},Y:function(u,h,$,T){h>>>=0,$/=2,Vr.length=$,T=T>>>0>>>3;for(var B=0;B<$;B++)Vr[B]=ot[T+2*B]?ot[T+2*B+1]:w()[T+2*B+1>>>0];return u=0>u?Or[-u-1]:Xn[u],be.Xb=h,h=u.apply(null,Vr),be.Xb=0,h},ea:Wr,pa:function(u){W&&be.pb[u>>>0].ref()},t:function(u,h,$){return h>>>=0,$>>>=0,u=dt(u>>>0),h=Gr(h,"emval::as"),Si(h,$,u)},y:function(u){return u>>>=0,Ei(()=>(u=dt(u),u.then(St)))},p:function(u,h,$,T){return $>>>=0,T>>>=0,u=br[u>>>0],h=dt(h>>>0),u(null,h,$,T)},k:function(u,h,$,T,B){return $>>>=0,T>>>=0,B>>>=0,u=br[u>>>0],h=dt(h>>>0),$=Lr($),u(h,h[$],T,B)},c:Nr,C:function(u,h){return h>>>=0,u=dt(u>>>0),h=dt(h),u==h},n:function(u){return u>>>=0,u===0?St(ki()):(u=Lr(u),St(ki()[u]))},j:function(u,h,$){h=Kn(u,h>>>0);var T=h.shift();u--;var B=`return function (obj, func, destructorsRef, args) {
`,V=0,Y=[];$===0&&Y.push("obj");for(var re=["retType"],ce=[T],le=0;le<u;++le)Y.push("arg"+le),re.push("argType"+le),ce.push(h[le]),B+=`  var arg${le} = argType${le}.readValueFromPointer(args${V?"+"+V:""});
`,V+=h[le].argPackAdvance;for(B+=`  var rv = ${$===1?"new func":"func.call"}(${Y.join(", ")});
`,le=0;le<u;++le)h[le].deleteObject&&(B+=`  argType${le}.deleteObject(arg${le});
`);return T.$b||(re.push("emval_returnValue"),ce.push(Si),B+=`  return emval_returnValue(retType, destructorsRef, rv);
`),re.push(B+`};
`),u=Jn(re).apply(null,ce),$=`methodCaller<(${h.map(ve=>ve.name).join(", ")}) => ${T.name}>`,qn(Oi($,u))},s:function(u,h){return h>>>=0,u=dt(u>>>0),h=dt(h),St(u[h])},e:function(u){u>>>=0,4<u&&(vt.get(u).Rb+=1)},w:function(){return St([])},m:function(u){u=dt(u>>>0);for(var h=Array(u.length),$=0;$<u.length;$++)h[$]=u[$];return St(h)},g:function(u){return St(Lr(u>>>0))},l:function(){return St({})},i:function(u){u>>>=0;for(var h=dt(u);h.length;){var $=h.pop();h.pop()($)}Nr(u)},h:function(u,h,$){h>>>=0,$>>>=0,u=dt(u>>>0),h=dt(h),$=dt($),u[h]=$},d:function(u,h){return h>>>=0,u=Gr(u>>>0,"_emval_take_value"),u=u.readValueFromPointer(h),St(u)},$:function(u,h){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),h>>>=0,u=new Date(1e3*u),d()[h>>>2>>>0]=u.getUTCSeconds(),d()[h+4>>>2>>>0]=u.getUTCMinutes(),d()[h+8>>>2>>>0]=u.getUTCHours(),d()[h+12>>>2>>>0]=u.getUTCDate(),d()[h+16>>>2>>>0]=u.getUTCMonth(),d()[h+20>>>2>>>0]=u.getUTCFullYear()-1900,d()[h+24>>>2>>>0]=u.getUTCDay(),u=(u.getTime()-Date.UTC(u.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,d()[h+28>>>2>>>0]=u},aa:function(u,h){u=-9007199254740992>u||9007199254740992<u?NaN:Number(u),h>>>=0,u=new Date(1e3*u),d()[h>>>2>>>0]=u.getSeconds(),d()[h+4>>>2>>>0]=u.getMinutes(),d()[h+8>>>2>>>0]=u.getHours(),d()[h+12>>>2>>>0]=u.getDate(),d()[h+16>>>2>>>0]=u.getMonth(),d()[h+20>>>2>>>0]=u.getFullYear()-1900,d()[h+24>>>2>>>0]=u.getDay();var $=(tr(u.getFullYear())?Pi:Ri)[u.getMonth()]+u.getDate()-1|0;d()[h+28>>>2>>>0]=$,d()[h+36>>>2>>>0]=-(60*u.getTimezoneOffset()),$=new Date(u.getFullYear(),6,1).getTimezoneOffset();var T=new Date(u.getFullYear(),0,1).getTimezoneOffset();u=($!=T&&u.getTimezoneOffset()==Math.min(T,$))|0,d()[h+32>>>2>>>0]=u},ba:function(u){u>>>=0;var h=new Date(d()[u+20>>>2>>>0]+1900,d()[u+16>>>2>>>0],d()[u+12>>>2>>>0],d()[u+8>>>2>>>0],d()[u+4>>>2>>>0],d()[u>>>2>>>0],0),$=d()[u+32>>>2>>>0],T=h.getTimezoneOffset(),B=new Date(h.getFullYear(),6,1).getTimezoneOffset(),V=new Date(h.getFullYear(),0,1).getTimezoneOffset(),Y=Math.min(V,B);return 0>$?d()[u+32>>>2>>>0]=+(B!=V&&Y==T):0<$!=(Y==T)&&(B=Math.max(V,B),h.setTime(h.getTime()+6e4*((0<$?Y:B)-T))),d()[u+24>>>2>>>0]=h.getDay(),$=(tr(h.getFullYear())?Pi:Ri)[h.getMonth()]+h.getDate()-1|0,d()[u+28>>>2>>>0]=$,d()[u>>>2>>>0]=h.getSeconds(),d()[u+4>>>2>>>0]=h.getMinutes(),d()[u+8>>>2>>>0]=h.getHours(),d()[u+12>>>2>>>0]=h.getDate(),d()[u+16>>>2>>>0]=h.getMonth(),d()[u+20>>>2>>>0]=h.getYear(),u=h.getTime(),isNaN(u)?(d()[Ji()>>>2>>>0]=61,u=-1):u/=1e3,BigInt(u)},Z:zi,_:Bi,O:function(u,h,$){function T(le){return(le=le.toTimeString().match(/\(([A-Za-z ]+)\)$/))?le[1]:"GMT"}u>>>=0,h>>>=0,$>>>=0;var B=new Date().getFullYear(),V=new Date(B,0,1),Y=new Date(B,6,1);B=V.getTimezoneOffset();var re=Y.getTimezoneOffset(),ce=Math.max(B,re);g()[u>>>2>>>0]=60*ce,d()[h>>>2>>>0]=+(B!=re),u=T(V),h=T(Y),u=Mi(u),h=Mi(h),re<B?(g()[$>>>2>>>0]=u,g()[$+4>>>2>>>0]=h):(g()[$>>>2>>>0]=h,g()[$+4>>>2>>>0]=u)},q:()=>{nt("")},f:function(u,h,$){return u>>>=0,h=Di(h>>>0,$>>>0),Or[u].apply(null,h)},M:function(u,h,$){return u>>>=0,h=Di(h>>>0,$>>>0),Or[u].apply(null,h)},E:()=>{},I:()=>Date.now(),oa:()=>{throw Xt+=1,"unwind"},Q:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>W?(vu(),sr(bu)).cpus().length:navigator.hardwareConcurrency,N:function(u){u>>>=0;var h=o().length;if(u<=h||4294901760<u)return!1;for(var $=1;4>=$;$*=2){var T=h*(1+.2/$);T=Math.min(T,u+100663296);var B=Math;T=Math.max(u,T);e:{B=(B.min.call(B,4294901760,T+(65536-T%65536)%65536)-fe.buffer.byteLength+65535)/65536;try{fe.grow(B),ht();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1},ga:Ui,ha:Ni,W:Bt,A:Wi,G:Vi,da:Gi,F:Hi,a:fe||f.wasmMemory,na:qi,r:function(u,h,$,T){return qi(u>>>0,h>>>0,$>>>0,T>>>0)}},me=function(){function u($,T){return me=$.exports,me=Un(),me=ta(),be.Vb.push(me.bb),bt.unshift(me.va),Ge=T,ai(),me}var h={a:ea};if(Rt++,f.instantiateWasm)try{return f.instantiateWasm(h,u)}catch($){ze(`Module.instantiateWasm callback failed with error: ${$}`),S($)}return ui(h,function($){u($.instance,$.module)}).catch(S),{}}();f._OrtInit=(u,h)=>(f._OrtInit=me.wa)(u,h),f._OrtGetLastError=(u,h)=>(f._OrtGetLastError=me.xa)(u,h),f._OrtCreateSessionOptions=(u,h,$,T,B,V,Y,re,ce,le)=>(f._OrtCreateSessionOptions=me.ya)(u,h,$,T,B,V,Y,re,ce,le),f._OrtAppendExecutionProvider=(u,h)=>(f._OrtAppendExecutionProvider=me.za)(u,h),f._OrtAddFreeDimensionOverride=(u,h,$)=>(f._OrtAddFreeDimensionOverride=me.Aa)(u,h,$),f._OrtAddSessionConfigEntry=(u,h,$)=>(f._OrtAddSessionConfigEntry=me.Ba)(u,h,$),f._OrtReleaseSessionOptions=u=>(f._OrtReleaseSessionOptions=me.Ca)(u),f._OrtCreateSession=(u,h,$)=>(f._OrtCreateSession=me.Da)(u,h,$),f._OrtReleaseSession=u=>(f._OrtReleaseSession=me.Ea)(u),f._OrtGetInputOutputCount=(u,h,$)=>(f._OrtGetInputOutputCount=me.Fa)(u,h,$),f._OrtGetInputName=(u,h)=>(f._OrtGetInputName=me.Ga)(u,h),f._OrtGetOutputName=(u,h)=>(f._OrtGetOutputName=me.Ha)(u,h),f._OrtFree=u=>(f._OrtFree=me.Ia)(u),f._OrtCreateTensor=(u,h,$,T,B,V)=>(f._OrtCreateTensor=me.Ja)(u,h,$,T,B,V),f._OrtGetTensorData=(u,h,$,T,B)=>(f._OrtGetTensorData=me.Ka)(u,h,$,T,B),f._OrtReleaseTensor=u=>(f._OrtReleaseTensor=me.La)(u),f._OrtCreateRunOptions=(u,h,$,T)=>(f._OrtCreateRunOptions=me.Ma)(u,h,$,T),f._OrtAddRunConfigEntry=(u,h,$)=>(f._OrtAddRunConfigEntry=me.Na)(u,h,$),f._OrtReleaseRunOptions=u=>(f._OrtReleaseRunOptions=me.Oa)(u),f._OrtCreateBinding=u=>(f._OrtCreateBinding=me.Pa)(u),f._OrtBindInput=(u,h,$)=>(f._OrtBindInput=me.Qa)(u,h,$),f._OrtBindOutput=(u,h,$,T)=>(f._OrtBindOutput=me.Ra)(u,h,$,T),f._OrtClearBoundOutputs=u=>(f._OrtClearBoundOutputs=me.Sa)(u),f._OrtReleaseBinding=u=>(f._OrtReleaseBinding=me.Ta)(u),f._OrtRunWithBinding=(u,h,$,T,B)=>(f._OrtRunWithBinding=me.Ua)(u,h,$,T,B),f._OrtRun=(u,h,$,T,B,V,Y,re)=>(f._OrtRun=me.Va)(u,h,$,T,B,V,Y,re),f._OrtEndProfiling=u=>(f._OrtEndProfiling=me.Wa)(u),f._JsepOutput=(u,h,$)=>(f._JsepOutput=me.Xa)(u,h,$),f._JsepGetNodeName=u=>(f._JsepGetNodeName=me.Ya)(u);var Ji=()=>(Ji=me.Za)(),wr=f._pthread_self=()=>(wr=f._pthread_self=me._a)(),or=f._malloc=u=>(or=f._malloc=me.$a)(u),Ot=f._free=u=>(Ot=f._free=me.ab)(u);f.__emscripten_tls_init=()=>(f.__emscripten_tls_init=me.bb)();var Yi=u=>(Yi=me.cb)(u);f.__embind_initialize_bindings=()=>(f.__embind_initialize_bindings=me.db)();var Zi=f.__emscripten_thread_init=(u,h,$,T,B,V)=>(Zi=f.__emscripten_thread_init=me.fb)(u,h,$,T,B,V);f.__emscripten_thread_crashed=()=>(f.__emscripten_thread_crashed=me.gb)();var Qi=(u,h,$,T)=>(Qi=me.hb)(u,h,$,T),Jr=u=>(Jr=me.ib)(u),Yr=f.__emscripten_thread_exit=u=>(Yr=f.__emscripten_thread_exit=me.jb)(u),Xi=()=>(Xi=me.kb)(),en=(u,h)=>(en=me.lb)(u,h),Zr=()=>(Zr=me.mb)(),_r=u=>(_r=me.nb)(u),Qr=u=>(Qr=me.ob)(u),tn=f.dynCall_ii=(u,h)=>(tn=f.dynCall_ii=me.qb)(u,h),rn=u=>(rn=me.rb)(u),nn=()=>(nn=me.sb)(),an=u=>(an=me.tb)(u),on=()=>(on=me.ub)();f.___start_em_js=961987,f.___stop_em_js=962148;function ta(){var u=me;u=Object.assign({},u);var h=T=>()=>T()>>>0,$=T=>B=>T(B)>>>0;return u.Za=h(u.Za),u._a=h(u._a),u.$a=$(u.$a),u.cb=$(u.cb),u.emscripten_main_runtime_thread_id=h(u.emscripten_main_runtime_thread_id),u.mb=h(u.mb),u.ob=$(u.ob),u}f.wasmMemory=fe,f.stackAlloc=Qr,f.stackSave=Zr,f.stackRestore=_r,f.keepRuntimeAlive=()=>0<Xt,f.UTF8ToString=ut,f.stringToUTF8=Dr,f.lengthBytesUTF8=mr,f.ExitStatus=pr,f.PThread=be;var $r;nr=function u(){$r||sn(),$r||(nr=u)};function sn(){if(!(0<Rt))if(N)x(f),N||zr(bt),startWorker(f);else{if(f.preRun)for(typeof f.preRun=="function"&&(f.preRun=[f.preRun]);f.preRun.length;)rt.unshift(f.preRun.shift());zr(rt),0<Rt||$r||($r=!0,f.calledRun=!0,Ae||(N||zr(bt),x(f),N||zr(Et)))}}return sn(),t.ready}})();typeof _u=="object"&&typeof ro=="object"?ro.exports=wu:typeof define=="function"&&define.amd&&define([],()=>wu)});var Cu=Xr((Wb,Fh)=>{Fh.exports='"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\n'});var Su,qh,io,no,da,xu,Kh,Jh,Yh,Iu,et,ei=se(()=>{"use strict";Su=hu();qh=$u(),no=!1,da=!1,xu=!1,Kh=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Jh=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Yh=(e,t)=>e?t?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":t?"ort-wasm-threaded.wasm":"ort-wasm.wasm",Iu=async e=>{if(no)return Promise.resolve();if(da)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(xu)throw new Error("previous call to 'initializeWebAssembly()' failed.");da=!0;let t=e.initTimeout,r=e.numThreads,o=e.simd,s=Kh(r),p=o&&Jh(),d=e.wasmPaths,g=typeof d=="string"?d:void 0,y=Yh(p,s),w=typeof d=="object"?d[y]:void 0,f=!1,x=[];if(t>0&&x.push(new Promise(S=>{setTimeout(()=>{f=!0,S()},t)})),x.push(new Promise((S,O)=>{let E=s?qh:Su,P={locateFile:(j,U)=>{if(s&&j.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([Cu()],{type:"text/javascript"}));if(j.endsWith(".wasm")){if(w)return w;let z=g??U;return y==="ort-wasm-simd.wasm"?z+"ort-wasm-simd.jsep.wasm":y==="ort-wasm-simd-threaded.wasm"?z+"ort-wasm-simd-threaded.jsep.wasm":z+y}return U+j}};if(s)if(P.numThreads=r,typeof Blob>"u")P.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let j=`var ortWasmThreaded=${E.toString()};`;P.mainScriptUrlOrBlob=new Blob([j],{type:"text/javascript"})}E(P).then(j=>{da=!1,no=!0,io=j,S()},j=>{da=!1,xu=!0,O(j)})})),await Promise.race(x),f)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)},et=()=>{if(no&&io)return io;throw new Error("WebAssembly is not initialized yet.")}});var tt,cn,Je,ca=se(()=>{"use strict";ei();tt=(e,t)=>{let r=et(),o=r.lengthBytesUTF8(e)+1,s=r._malloc(o);return r.stringToUTF8(e,s,o),t.push(s),s},cn=(e,t,r,o)=>{if(typeof e=="object"&&e!==null){if(r.has(e))throw new Error("Circular reference in options");r.add(e)}Object.entries(e).forEach(([s,p])=>{let d=t?t+s:s;if(typeof p=="object")cn(p,d+".",r,o);else if(typeof p=="string"||typeof p=="number")o(d,p.toString());else if(typeof p=="boolean")o(d,p?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof p}`)})},Je=e=>{let t=et(),r=t.stackSave();try{let o=t.stackAlloc(8);t._OrtGetLastError(o,o+4);let s=t.HEAP32[o/4],p=t.HEAPU32[o/4+1],d=p?t.UTF8ToString(p):"";throw new Error(`${e} ERROR_CODE: ${s}, ERROR_MESSAGE: ${d}`)}finally{t.stackRestore(r)}}});var Au,Tu=se(()=>{"use strict";ei();ca();Au=e=>{let t=et(),r=0,o=[],s=e||{};try{if(e?.logSeverityLevel===void 0)s.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)s.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(s.terminate=!1);let p=0;return e?.tag!==void 0&&(p=tt(e.tag,o)),r=t._OrtCreateRunOptions(s.logSeverityLevel,s.logVerbosityLevel,!!s.terminate,p),r===0&&Je("Can't create run options."),e?.extra!==void 0&&cn(e.extra,"",new WeakSet,(d,g)=>{let y=tt(d,o),w=tt(g,o);t._OrtAddRunConfigEntry(r,y,w)!==0&&Je(`Can't set a run config entry: ${d} - ${g}.`)}),[r,o]}catch(p){throw r!==0&&t._OrtReleaseRunOptions(r),o.forEach(d=>t._free(d)),p}}});var Zh,Qh,Xh,eg,Eu,ku=se(()=>{"use strict";ei();ca();Zh=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Qh=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Xh=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(r=>(typeof r=="string"?r:r.name)==="webgpu")&&(e.enableMemPattern=!1)},eg=(e,t,r)=>{for(let o of t){let s=typeof o=="string"?o:o.name;switch(s){case"webnn":if(s="WEBNN",typeof o!="string"){let d=o;if(d?.deviceType){let g=tt("deviceType",r),y=tt(d.deviceType,r);et()._OrtAddSessionConfigEntry(e,g,y)!==0&&Je(`Can't set a session config entry: 'deviceType' - ${d.deviceType}.`)}if(d?.numThreads){let g=d.numThreads;(typeof g!="number"||!Number.isInteger(g)||g<0)&&(g=0);let y=tt("numThreads",r),w=tt(g.toString(),r);et()._OrtAddSessionConfigEntry(e,y,w)!==0&&Je(`Can't set a session config entry: 'numThreads' - ${d.numThreads}.`)}if(d?.powerPreference){let g=tt("powerPreference",r),y=tt(d.powerPreference,r);et()._OrtAddSessionConfigEntry(e,g,y)!==0&&Je(`Can't set a session config entry: 'powerPreference' - ${d.powerPreference}.`)}}break;case"webgpu":if(s="JS",typeof o!="string"){let d=o;if(d?.preferredLayout){if(d.preferredLayout!=="NCHW"&&d.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${d.preferredLayout}`);let g=tt("preferredLayout",r),y=tt(d.preferredLayout,r);et()._OrtAddSessionConfigEntry(e,g,y)!==0&&Je(`Can't set a session config entry: 'preferredLayout' - ${d.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${s}`)}let p=tt(s,r);et()._OrtAppendExecutionProvider(e,p)!==0&&Je(`Can't append execution provider: ${s}.`)}},Eu=e=>{let t=et(),r=0,o=[],s=e||{};Xh(s);try{let p=Zh(s.graphOptimizationLevel??"all"),d=Qh(s.executionMode??"sequential"),g=typeof s.logId=="string"?tt(s.logId,o):0,y=s.logSeverityLevel??2;if(!Number.isInteger(y)||y<0||y>4)throw new Error(`log serverity level is not valid: ${y}`);let w=s.logVerbosityLevel??0;if(!Number.isInteger(w)||w<0||w>4)throw new Error(`log verbosity level is not valid: ${w}`);let f=typeof s.optimizedModelFilePath=="string"?tt(s.optimizedModelFilePath,o):0;if(r=t._OrtCreateSessionOptions(p,!!s.enableCpuMemArena,!!s.enableMemPattern,d,!!s.enableProfiling,0,g,y,w,f),r===0&&Je("Can't create session options."),s.executionProviders&&eg(r,s.executionProviders,o),s.enableGraphCapture!==void 0){if(typeof s.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${s.enableGraphCapture}`);let x=tt("enableGraphCapture",o),S=tt(s.enableGraphCapture.toString(),o);t._OrtAddSessionConfigEntry(r,x,S)!==0&&Je(`Can't set a session config entry: 'enableGraphCapture' - ${s.enableGraphCapture}.`)}if(s.freeDimensionOverrides)for(let[x,S]of Object.entries(s.freeDimensionOverrides)){if(typeof x!="string")throw new Error(`free dimension override name must be a string: ${x}`);if(typeof S!="number"||!Number.isInteger(S)||S<0)throw new Error(`free dimension override value must be a non-negative integer: ${S}`);let O=tt(x,o);t._OrtAddFreeDimensionOverride(r,O,S)!==0&&Je(`Can't set a free dimension override: ${x} - ${S}.`)}return s.extra!==void 0&&cn(s.extra,"",new WeakSet,(x,S)=>{let O=tt(x,o),E=tt(S,o);t._OrtAddSessionConfigEntry(r,O,E)!==0&&Je(`Can't set a session config entry: ${x} - ${S}.`)}),[r,o]}catch(p){throw r!==0&&t._OrtReleaseSessionOptions(r),o.forEach(d=>t._free(d)),p}}});var ao,lr,pn,pa,fn,fa,oo,xe=se(()=>{"use strict";ao=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},lr=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},pn=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],pa=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},fn=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},fa=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",oo=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var mn,so=se(()=>{"use strict";mn=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(t){if(t.code==="ERR_FS_FILE_TOO_LARGE"){let r=(void 0)(e),o=[];for await(let s of r)o.push(s);return new Uint8Array(Buffer.concat(o))}throw t}else{let t=await fetch(e);if(!t.ok)throw new Error(`failed to load external data file: ${e}`);let r=t.headers.get("Content-Length"),o=r?parseInt(r,10):0;if(o<1073741824)return new Uint8Array(await t.arrayBuffer());{if(!t.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let s=t.body.getReader(),p;try{p=new ArrayBuffer(o)}catch(g){if(g instanceof RangeError){let y=Math.ceil(o/65536);p=new WebAssembly.Memory({initial:y,maximum:y}).buffer}else throw g}let d=0;for(;;){let{done:g,value:y}=await s.read();if(g)break;let w=y.byteLength;new Uint8Array(p,d,w).set(y),d+=w}return new Uint8Array(p,0,o)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}});var tg,rg,Ou,Pu,Ru,ig,Ye,dr=se(()=>{"use strict";xe();tg=["V","I","W","E","F"],rg=(e,t)=>{console.log(`[${tg[e]},${new Date().toISOString()}]${t}`)},Ru=(e,t)=>{Ou=e,Pu=t},ig=(e,t)=>{let r=fn(e),o=fn(Ou);r>=o&&rg(r,typeof t=="function"?t():t)},Ye=(...e)=>{Pu&&ig(...e)}});var zu,Bu=se(()=>{"use strict";xe();zu=(e,t)=>new(pa(t))(e)});var ma=se(()=>{"use strict"});var ha,ng,Mu,lo,uo,ju,Uu=se(()=>{"use strict";dr();ma();ha=e=>Math.ceil(e/16)*16,ng=1,Mu=()=>ng++,lo=async(e,t,r,o)=>{let s=ha(r),p=e.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let d=e.getCommandEncoder();e.endComputePass(),d.copyBufferToBuffer(t,0,p,0,s),e.flush(),await p.mapAsync(GPUMapMode.READ);let g=p.getMappedRange();if(o){let y=o();return y.set(new Uint8Array(g,0,r)),y}else return new Uint8Array(g.slice(0,r))}finally{p.destroy()}},uo=class{constructor(t){this.backend=t;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(t,r){let o=r.buffer,s=r.byteOffset,p=r.byteLength,d=ha(p),g=this.storageCache.get(t);if(!g)throw new Error("gpu data for uploading does not exist");if(g.originalSize!==p)throw new Error(`inconsistent data size. gpu data size=${g.originalSize}, data size=${p}`);let y=this.backend.device.createBuffer({mappedAtCreation:!0,size:d,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),w=y.getMappedRange();new Uint8Array(w).set(new Uint8Array(o,s,p)),y.unmap();let f=this.backend.getCommandEncoder();this.backend.endComputePass(),f.copyBufferToBuffer(y,0,g.gpuData.buffer,0,d),Ye("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${t})`),this.buffersForUploadingPending.push(y)}memcpy(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(o.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let p=ha(o.originalSize),d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(o.gpuData.buffer,0,s.gpuData.buffer,0,p)}registerExternalBuffer(t,r,o){let s;if(o){if(s=this.externalBuffers.get(o),s===void 0)throw new Error("previous buffer is not registered");if(t===o)return Ye("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);this.externalBuffers.delete(o)}else s=Mu();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:t},originalSize:r}),this.externalBuffers.set(t,s),Ye("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(t){let r=this.externalBuffers.get(t);r!==void 0&&(this.storageCache.delete(r),this.externalBuffers.delete(t),Ye("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${r}`))}create(t,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let o=ha(t),s,p=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,d=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(p||d){let y=p?this.freeBuffers:this.freeUniformBuffers,w=y.get(o);w||(w=[],y.set(o,w)),w.length>0?s=w.pop():s=this.backend.device.createBuffer({size:o,usage:r})}else s=this.backend.device.createBuffer({size:o,usage:r});let g={id:Mu(),type:0,buffer:s};return this.storageCache.set(g.id,{gpuData:g,originalSize:t}),Ye("verbose",()=>`[WebGPU] GpuDataManager.create(size=${t}) => id=${g.id}`),g}get(t){return this.storageCache.get(t)?.gpuData}release(t){let r=this.storageCache.get(t);if(!r)throw new Error("releasing data does not exist");return Ye("verbose",()=>`[WebGPU] GpuDataManager.release(id=${t}), gpuDataId=${r.gpuData.id}`),this.storageCache.delete(t),this.buffersPending.push(r.gpuData.buffer),r.originalSize}async download(t,r){let o=this.storageCache.get(t);if(!o)throw new Error("data does not exist");await lo(this.backend,o.gpuData.buffer,o.originalSize,r)}refreshPendingBuffers(){for(let t of this.buffersForUploadingPending)t.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let t of this.buffersPending)(t.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(t.size).push(t):(t.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(t.size).push(t):t.destroy();this.buffersPending=[]}else{let t=this.capturedPendingBuffers.get(this.backend.currentSessionId);t||(t=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,t));for(let r of this.buffersPending)t.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(t=>{t.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(t){let r=this.capturedPendingBuffers.get(t);r&&(r.forEach(o=>{o.destroy()}),this.capturedPendingBuffers.delete(t))}},ju=(...e)=>new uo(...e)});var co,Pe,ft=se(()=>{"use strict";co=class{constructor(t){Object.assign(this,t)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(t=>`${this[t]}`).join(";")),this.key}},Pe=e=>new co(e)});var po,qt,Q,Ar,ga,ya,ba,Re=se(()=>{"use strict";po=class{static calcMatMulShape(t,r){return t[1]!==r[0]?void 0:[t[0],r[1]]}},qt=class{static calcShape(t,r,o=!1){let s=t.length,p=r.length;if(s===0)return r;if(p===0)return t;let d=Math.max(t.length,r.length),g=new Array(d);if(o){if(s<2||p<2)return;let y=po.calcMatMulShape([t[s-2],t[s-1]],[r[p-2],r[p-1]]);if(y===void 0)return;[g[d-2],g[d-1]]=y}for(let y=o?3:1;y<=d;y++){let w=s-y<0?1:t[s-y],f=p-y<0?1:r[p-y];if(w!==f&&w>1&&f>1)return;let x=Math.max(w,f);if(w&&f)g[d-y]=Math.max(w,f);else{if(x>1)return;g[d-y]=0}}return g}static isValidBroadcast(t,r){let o=t.length,s=r.length;if(o>s)return!1;for(let p=1;p<=o;p++)if(t[o-p]!==1&&t[o-p]!==r[s-p])return!1;return!0}},Q=class e{static size(t){return e.getSizeFromDimensionRange(t,0,t.length)}static convertShape(t,r=4){let o=t.length;if(o===0)return[];let s=new Array(o),p=o-1;for(;p>=0;){if(t[p]%r===0){s[p]=t[p]/r;break}if(r%t[p]!==0)throw new Error("cannot convert shape");s[p]=1,r/=t[p],p--}for(p--;p>=0;p--)s[p]=t[p];return s}static sizeFromDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeFromDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,r,t.length)}static sizeToDimension(t,r){if(r<0||r>t.length)throw new Error(`invalid dimension of ${r} for sizeToDimension as Tensor has ${t.length} dimensions.`);return e.getSizeFromDimensionRange(t,0,r)}static getSizeFromDimensionRange(t,r,o){let s=1;for(let p=r;p<o;p++){if(t[p]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");s*=t[p]}return s}static computeStrides(t){let r=t.length;if(r===0)return[];if(r===1)return[1];let o=new Array(r);o[r-1]=1,o[r-2]=t[r-1];for(let s=r-3;s>=0;--s)o[s]=o[s+1]*t[s+1];return o}static normalizeAxis(t,r){if(t<-r&&t>=r)throw new Error("unsupported axis for this operation.");return t<0?t+r:t}static normalizeAxes(t,r){return t.map(o=>this.normalizeAxis(o,r??t.length))}static sortBasedOnPerm(t,r){return r?r.map(o=>t[o]):t.slice().reverse()}static padShape(t,r){let o=t.length;return t.map((s,p)=>s+r[p]+r[p+o])}static areEqual(t,r){return t.length!==r.length?!1:t.every((o,s)=>o===r[s])}},Ar=class e{static adjustPoolAttributes(t,r,o,s,p,d){if(!t&&o.length!==r.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(t)for(let g=0;g<r.length-2;g++)g>=o.length?o.push(r[g+2]):o[g]=r[g+2];for(let g=0;g<o.length;g++)if(g<s.length){if(s[g]<0)throw new Error("strides should be greater than or equal to 1")}else s.push(1);for(let g=0;g<o.length;g++)if(g<p.length){if(p[g]<0)throw new Error("dilations should be greater than or equal to 1")}else p.push(1);for(let g=0;g<o.length*2;g++)if(g<d.length){if(d[g]<0)throw new Error("pad should be greater than or equal to 1")}else d.push(0);for(let g=0;g<o.length;g++){if(o[g]<=0)throw new Error("kernel shapes need to be greater than 0");if(d[g]>=o[g]||d[g+o.length]>=o[g])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(t,r,o,s,p,d,g){if(g){if(p.length!==2*(t.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(r.length!==t.length-2)throw new Error("length of strides should be the length of data dimensions");if(s.length!==t.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let y=0;y<t.length-2;y++)e.adjustPadAndReturnShape(t[y+(d?1:2)],r[y],o[y],s[y],p,y,y+t.length-2,g)}}static computePoolOutputShape(t,r,o,s,p,d,g){if(r.length<=0)throw new Error("input shape must be of size greater than 0");let y=[r[0],r[1]];return e.computeShapeHelper(t,r,y,o,s,p,d,g),y}static computeConvOutputShape(t,r,o,s,p,d,g){if(t.length<=0||r.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let y=[t[0],r[0]];return e.computeShapeHelper(!1,t,y,o,s,p,d,g),y}static computeShapeHelper(t,r,o,s,p,d,g,y){if(t)for(let w=0;w<r.length-2;w++)o.push(1);else for(let w=0;w<r.length-2;w++)o.push(e.adjustPadAndReturnShape(r[w+2],s[w],p[w],d[w],g,w,w+r.length-2,y))}static adjustPadAndReturnShape(t,r,o,s,p,d,g,y){let w=o*(s-1)+1;if(y&&y!=="NOTSET")switch(y){case"VALID":return p[d]=0,p[g]=0,Math.floor((t-w)/r+1);case"SAME_LOWER":case"SAME_UPPER":if(o!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let x=((t+r-1)/r-1)*r+s-t;return p[d]=Math.floor(y==="SAME_LOWER"?(x+1)/2:x/2),p[g]=x-p[d],Math.floor((t+x-s)/r+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((t+p[d]+p[g]-w)/r+1)}},ga=class{static getShapeOfGemmResult(t,r,o,s,p){if(t.length!==2||o.length!==2)throw new Error("shape need to be of size 2");let d,g,y;r?(d=t[1],g=t[0]):(d=t[0],g=t[1]);let w=-1;if(s?(y=o[0],w=1):(y=o[1],w=0),o[w]!==g)throw new Error("dimension mismatch");if(d<=0||y<=0||g<=0)throw new Error("invalid shape specified");if(p&&!qt.isValidBroadcast(p,[d,y]))throw new Error("gemm: invalid bias shape for broadcast");return[d,y,g]}},ya=-34028234663852886e22,ba=34028234663852886e22});var va,mo,Le,At,de,Ze,gt,Vt,Tt,_e,ho,Z,ue,wa,fo,Nu,ti,Oe=se(()=>{"use strict";xe();Re();va=64,mo=(e,t)=>{if(t===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return t>1?`vec${t}<f16>`:"f16";case 1:return t>1?`vec${t}<f32>`:"f32";case 6:return t>1?`vec${t}<i32>`:"i32";case 12:return t>1?`vec${t}<u32>`:"u32";case 7:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(t>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(t!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},Le=(e,t=1)=>{let r=mo(e,t);return typeof r=="string"?r:r[0]},At=(e,t=1)=>{let r=mo(e,t);return typeof r=="string"?r:r[1]},de=(...e)=>{let t=[];return e.forEach(r=>{r.length!==0&&t.push({type:12,data:r},{type:12,data:Q.computeStrides(r)})}),t},Ze=e=>e%4===0?4:e%2===0?2:1,gt=(e="f32",t,r="0")=>!t||t===1?`${e}(${r})`:`vec${t}<${e}>(${r})`,Vt=(e,t,r)=>e==="f32"?r:t===1?`f32(${r})`:`vec${t}f(${r})`,Tt=(e,t)=>t===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:t===2?`(${e}.x + ${e}.y)`:t===3?`(${e}.x + ${e}.y + ${e}.z)`:e,_e=(e,t,r,o)=>e.startsWith("uniforms.")&&r>4?typeof t=="string"?o==="f16"?`${e}[(${t}) / 8][(${t}) % 8 / 4][(${t}) % 8 % 4]`:`${e}[(${t}) / 4][(${t}) % 4]`:o==="f16"?`${e}[${Math.floor(t/8)}][${Math.floor(t%8/4)}][${t%8%4}]`:`${e}[${Math.floor(t/4)}][${t%4}]`:r>1?`${e}[${t}]`:e,ho=(e,t,r,o,s)=>{let p=typeof r=="number",d=p?r:r.length,g=[...new Array(d).keys()],y=d<2?"u32":d<=4?`vec${d}<u32>`:`array<u32, ${d}>`,w=mo(t,s),f=typeof w=="string"?w:w[1],x=typeof w=="string"?w:w[0],S={indices:y,value:f,storage:x,tensor:t},O=ae=>typeof ae=="string"?ae:`${ae}u`,E={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},P=p?"uniforms.":"",j=`${P}${e}_shape`,U=`${P}${e}_strides`,z="";for(let ae=0;ae<d-1;ae++)z+=`
    let dim${ae} = current / ${_e(U,ae,d)};
    let rest${ae} = current % ${_e(U,ae,d)};
    indices[${ae}] = dim${ae};
    current = rest${ae};
    `;z+=`indices[${d-1}] = current;`;let W=d<2?"":`
  fn o2i_${e}(offset: u32) -> ${S.indices} {
    var indices: ${S.indices};
    var current = offset;
    ${z}
    return indices;
  }`,N=ae=>(E.offsetToIndices=!0,d<2?ae:`o2i_${e}(${ae})`),q=[];if(d>=2)for(let ae=d-1;ae>=0;ae--)q.push(`${_e(U,ae,d)} * (indices[${ae}])`);let X=d<2?"":`
  fn i2o_${e}(indices: ${S.indices}) -> u32 {
    return ${q.join("+")};
  }`,te=ae=>(E.indicesToOffset=!0,d<2?ae:`i2o_${e}(${ae})`),ie=(...ae)=>d===0?"0u":`${S.indices}(${ae.map(O).join(",")})`,J=(ae,ye)=>d<2?`${ae}`:`${_e(ae,ye,d)}`,ne=(ae,ye,Me)=>d<2?`${ae}=${Me};`:`${_e(ae,ye,d)}=${Me};`,Ie={},Be=(ae,ye)=>{E.broadcastedIndicesToOffset=!0;let Me=`${ye.name}broadcastedIndicesTo${e}Offset`;if(Me in Ie)return`${Me}(${ae})`;let ot=[];for(let mt=d-1;mt>=0;mt--){let lt=ye.indicesGet("outputIndices",mt+ye.rank-d);ot.push(`${J(U,mt)} * (${lt} % ${J(j,mt)})`)}return Ie[Me]=`fn ${Me}(outputIndices: ${ye.type.indices}) -> u32 {
             return ${ot.length>0?ot.join("+"):"0u"};
           }`,`${Me}(${ae})`},qe=(ae,ye)=>(()=>{if(S.storage===S.value)return`${e}[${ae}]=${ye};`;if(S.storage==="vec2<u32>"&&S.value==="i32")return`${e}[${ae}]=vec2<u32>(u32(${ye}), select(0u, 0xFFFFFFFFu, ${ye} < 0));`;if(S.storage==="vec2<u32>"&&S.value==="u32")return`${e}[${ae}]=vec2<u32>(u32(${ye}), 0u);`;if(S.storage==="u32"&&S.value==="vec4<bool>")return`${e}[${ae}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ye}));`;throw new Error(`not supported combination of storage type ${S.storage} and value type ${S.value} yet`)})(),Ve=ae=>(()=>{if(S.storage===S.value)return`${e}[${ae}]`;if(S.storage==="vec2<u32>"&&S.value==="i32")return`i32(${e}[${ae}].x)`;if(S.storage==="vec2<u32>"&&S.value==="u32")return`u32(${e}[${ae}].x)`;if(S.storage==="u32"&&S.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${ae}] & 0xFFu), bool(${e}[${ae}] & 0xFF00u), bool(${e}[${ae}] & 0xFF0000u), bool(${e}[${ae}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${S.storage} and value type ${S.value} yet`)})(),ze=d<2?"":`
  fn get_${e}ByIndices(indices: ${S.indices}) -> ${f} {
    return ${Ve(`i2o_${e}(indices)`)};
  }`,fe=d<2?"":(()=>{let ae=g.map(Me=>`d${Me}: u32`).join(", "),ye=g.map(Me=>`d${Me}`).join(", ");return`
  fn get_${e}(${ae}) -> ${f} {
    return get_${e}ByIndices(${ie(ye)});
  }`})(),Ge=(...ae)=>{if(ae.length!==d)throw new Error(`indices length must be ${d}`);let ye=ae.map(O).join(",");return d===0?Ve("0u"):d===1?Ve(ye[0]):(E.get=!0,E.getByIndices=!0,E.indicesToOffset=!0,`get_${e}(${ye})`)},Ae=ae=>d<2?Ve(ae):(E.getByIndices=!0,E.indicesToOffset=!0,`get_${e}ByIndices(${ae})`),$e=d<2?"":`
  fn set_${e}ByIndices(indices: ${S.indices}, value: ${f}) {
    ${qe(`i2o_${e}(indices)`,"value")}
  }`,ge=d<2?"":(()=>{let ae=g.map(Me=>`d${Me}: u32`).join(", "),ye=g.map(Me=>`d${Me}`).join(", ");return`
  fn set_${e}(${ae}, value: ${f}) {
    set_${e}ByIndices(${ie(ye)}, value);
  }`})();return{impl:()=>{let ae=[],ye=!1;return E.offsetToIndices&&(ae.push(W),ye=!0),E.indicesToOffset&&(ae.push(X),ye=!0),E.broadcastedIndicesToOffset&&(Object.values(Ie).forEach(Me=>ae.push(Me)),ye=!0),E.set&&(ae.push(ge),ye=!0),E.setByIndices&&(ae.push($e),ye=!0),E.get&&(ae.push(fe),ye=!0),E.getByIndices&&(ae.push(ze),ye=!0),!p&&ye&&ae.unshift(`const ${j} = ${S.indices}(${r.join(",")});`,`const ${U} = ${S.indices}(${Q.computeStrides(r).join(",")});`),ae.join(`
`)},type:S,offsetToIndices:N,indicesToOffset:te,broadcastedIndicesToOffset:Be,indices:ie,indicesGet:J,indicesSet:ne,set:(...ae)=>{if(ae.length!==d+1)throw new Error(`indices length must be ${d}`);let ye=ae[d];if(typeof ye!="string")throw new Error("value must be string");let Me=ae.slice(0,d).map(O).join(",");return d===0?qe("0u",ye):d===1?qe(Me[0],ye):(E.set=!0,E.setByIndices=!0,E.indicesToOffset=!0,`set_${e}(${Me}, ${ye})`)},setByOffset:qe,setByIndices:(ae,ye)=>d<2?qe(ae,ye):(E.setByIndices=!0,E.indicesToOffset=!0,`set_${e}ByIndices(${ae}, ${ye});`),get:Ge,getByOffset:Ve,getByIndices:Ae,usage:o,name:e,strides:U,shape:j,rank:d}},Z=(e,t,r,o=1)=>ho(e,t,r,"input",o),ue=(e,t,r,o=1)=>ho(e,t,r,"output",o),wa=(e,t,r,o=1)=>ho(e,t,r,"internal",o),fo=class{constructor(t){this.normalizedDispatchGroup=t;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(t){return`if (global_idx >= ${typeof t=="number"?`${t}u`:t}) { return; }`}mainStart(t=va){let r=typeof t=="number"?t:t[0],o=typeof t=="number"?1:t[1],s=typeof t=="number"?1:t[2],p=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,d=p?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,g=p?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${r*o*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${o}, ${s})
  fn main(${d}) {
    ${g}
  `}appendVariableUniforms(t){t.rank!==0&&(t.shape.startsWith("uniforms.")&&this.uniforms.push({name:t.shape.replace("uniforms.",""),type:"u32",length:t.rank}),t.strides.startsWith("uniforms.")&&this.uniforms.push({name:t.strides.replace("uniforms.",""),type:"u32",length:t.rank}))}declareVariable(t,r){if(t.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(t),this.appendVariableUniforms(t);let o=t.usage==="input"?"read":"read_write",s=t.type.storage;return`@group(0) @binding(${r}) var<storage, ${o}> ${t.name}: array<${s}>;`}declareVariables(...t){return t.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(t){if(t.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(t),this.appendVariableUniforms(t)}registerInternalVariables(...t){return t.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(t,r,o=1){return this.uniforms.push({name:t,type:r,length:o}),this}registerUniforms(t){return this.uniforms=this.uniforms.concat(t),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let t=[];for(let{name:r,type:o,length:s}of this.uniforms)if(s&&s>4)o==="f16"?t.push(`@align(16) ${r}:array<mat2x4<${o}>, ${Math.ceil(s/8)}>`):t.push(`${r}:array<vec4<${o}>, ${Math.ceil(s/4)}>`);else{let p=s==null||s===1?o:`vec${s}<${o}>`;t.push(`${r}:${p}`)}return`
      struct Uniforms { ${t.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(t=>t.impl()).join(`
`)+this.internalVariables.map(t=>t.impl()).join(`
`)}},Nu=e=>new fo(e),ti=(e,t)=>{let r=e.length,o=[];for(let s=0;s<r;s++){let p=r-1-s,d=e[p]||1;(t[t.length-1-s]||1)>1&&d===1&&o.unshift(p)}return o}});var ag,Wu,og,sg,jt,Vu,Gu,ri=se(()=>{"use strict";xe();Re();ft();Oe();ag=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Wu=(e,t)=>t&&t.length!==e?[...new Array(e).keys()].reverse():t,og=(e,t)=>Q.sortBasedOnPerm(e,Wu(e.length,t)),sg=(e,t,r,o)=>{let s=[];s.push(`fn perm(i: ${o.type.indices}) -> ${r.type.indices} {
    var a: ${r.type.indices};`);for(let p=0;p<t;++p)s.push(r.indicesSet("a",e[p],`i[${p}]`));return s.push("return a;}"),s.join(`
`)},jt=(e,t)=>{let r=e.dataType,o=e.dims.length,s=Wu(o,t),p=og(e.dims,s),d=ue("output",r,p.length),g=Z("a",r,o),y=w=>`
  ${w.registerUniform("output_size","u32").declareVariables(g,d)}

  ${sg(s,o,g,d)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${d.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${d.setByOffset("global_idx",g.getByIndices("aIndices"))}
  }`;return{name:"Transpose",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:w=>{let f=Q.size(p);return{outputs:[{dims:p,dataType:w[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...de(w[0].dims,p)]}},getShaderSource:y}},Vu=(e,t)=>{ag(e.inputs),e.compute(jt(e.inputs[0],t.perm))},Gu=e=>Pe({perm:e.perm})});var ug,lg,dg,cg,pg,fg,mg,hg,gg,yg,Kt,Hu,Lu,Fu,qu,Ku,Ju,Yu,Zu,Qu,Xu,el=se(()=>{"use strict";xe();Re();Oe();_a();ri();ug={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},lg={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},dg={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},cg={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},pg=(e,t)=>{let r=[];for(let o=t-e;o<t;++o)r.push(o);return r},fg=(e,t)=>{let r=[],o=e.length;for(let p=0;p<o;p++)t.indexOf(p)===-1&&r.push(e[p]);let s=t.map(p=>e[p]);return[r,s]},mg=(e,t)=>{let r=e.length+t.length,o=[],s=0;for(let p=0;p<r;p++)t.indexOf(p)===-1?o.push(e[s++]):o.push(1);return o},hg=(e,t)=>{for(let r=0;r<e.length;++r)if(e[e.length-r-1]!==t-1-r)return!1;return!0},gg=(e,t)=>{let r=[];if(!hg(e,t)){for(let o=0;o<t;++o)e.indexOf(o)===-1&&r.push(o);e.forEach(o=>r.push(o))}return r},yg=(e,t,r,o,s,p,d)=>{let g=r[0].dims,y=Q.size(p),w=Q.size(d),f=Z("_A",r[0].dataType,g),x=ue("output",s,p),S=32,O=`
          var<workgroup> aBestValues : array<f32, ${S}>;
       `;return{name:e,shaderCache:t,getShaderSource:P=>`
        ${P.registerUniform("reduceSize","u32").declareVariables(f,x)}
        ${O}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${P.mainStart(S)}

          let outputIndex = global_idx / ${S};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${dg[o]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${S}) {
           let candidate = f32(${f.getByOffset("offset + k")});
           bestValue = ${ug[o]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${S}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${lg[o]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${x.setByOffset("outputIndex",`${o==="mean"?`${x.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${x.type.storage}(${cg[o]})`}`)};
         }
        }`,getRunData:()=>({outputs:[{dims:p,dataType:s}],dispatchGroup:{x:y},programUniforms:[{type:12,data:w}]})}},Kt=(e,t,r,o)=>{let s=e.inputs.length===1?r:go(e.inputs,r),p=s.axes;p.length===0&&!s.noopWithEmptyAxes&&(p=e.inputs[0].dims.map((O,E)=>E));let d=Q.normalizeAxes(p,e.inputs[0].dims.length),g=d,y=e.inputs[0],w=gg(g,e.inputs[0].dims.length);w.length>0&&(y=e.compute(jt(e.inputs[0],w),{inputs:[0],outputs:[-1]})[0],g=pg(g.length,y.dims.length));let[f,x]=fg(y.dims,g),S=f;s.keepDims&&(S=mg(f,d)),e.compute(yg(t,{hint:s.cacheKey,inputDependencies:["type"]},[y],o,e.inputs[0].dataType,S,x),{inputs:[y]})},Hu=(e,t)=>{Kt(e,"ReduceMeanShared",t,"mean")},Lu=(e,t)=>{Kt(e,"ReduceL1Shared",t,"l1")},Fu=(e,t)=>{Kt(e,"ReduceL2Shared",t,"l2")},qu=(e,t)=>{Kt(e,"ReduceLogSumExpShared",t,"logSumExp")},Ku=(e,t)=>{Kt(e,"ReduceMaxShared",t,"max")},Ju=(e,t)=>{Kt(e,"ReduceMinShared",t,"min")},Yu=(e,t)=>{Kt(e,"ReduceProdShared",t,"prod")},Zu=(e,t)=>{Kt(e,"ReduceSumShared",t,"sum")},Qu=(e,t)=>{Kt(e,"ReduceSumSquareShared",t,"sumSquare")},Xu=(e,t)=>{Kt(e,"ReduceLogSumShared",t,"logSum")}});var Jt,bg,$a,go,Yt,vg,wg,_g,$g,Cg,xg,Sg,Ig,Ag,Tg,Zt,tl,rl,il,nl,al,ol,sl,ul,ll,dl,_a=se(()=>{"use strict";xe();Re();ft();Oe();el();Jt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},bg=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],$a=(e,t,r,o,s,p,d=!1,g=!1)=>{let y=[],w=r[0].dims,f=w.length,x=Q.normalizeAxes(s,f),S=!g&&x.length===0;w.forEach((j,U)=>{S||x.indexOf(U)>=0?d&&y.push(1):y.push(j)});let O=y.length,E=Q.size(y);return{name:e,shaderCache:t,getShaderSource:j=>{let U=[],z=Z("_A",r[0].dataType,f),W=ue("output",p,O),N=o(z,W,x),q=N[2];for(let X=0,te=0;X<f;X++)S||x.indexOf(X)>=0?(d&&te++,q=`for(var j${X}: u32 = 0; j${X} < ${w[X]}; j${X}++) {
                  ${N[2].includes("last_index")?`let last_index = j${X};`:""}
                  ${z.indicesSet("input_indices",X,`j${X}`)}
                  ${q}
                }`):(U.push(`${z.indicesSet("input_indices",X,W.indicesGet("output_indices",te))};`),te++);return`

        ${j.registerUniform("output_size","u32").declareVariables(z,W)}

        ${j.mainStart()}
          ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${z.type.indices};
          let output_indices = ${W.offsetToIndices("global_idx")};

          ${U.join(`
`)}
          ${N[0]}       // init ops for reduce max/min
          ${N[1]}
          ${q}
          ${N[3]}
          ${N.length===4?W.setByOffset("global_idx","value"):N.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:y,dataType:p}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},...de(w,y)]})}},go=(e,t)=>{let r=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(o=>r.push(Number(o))),Pe({axes:r,keepDims:t.keepDims,noopWithEmptyAxes:t.noopWithEmptyAxes})},Yt=(e,t,r,o)=>{let s=e.inputs,p=s.length===1?r:go(s,r);e.compute($a(t,{hint:p.cacheKey,inputDependencies:["rank"]},[s[0]],p.noopWithEmptyAxes&&p.axes.length===0?bg:o,p.axes,s[0].dataType,p.keepDims,p.noopWithEmptyAxes),{inputs:[0]})},vg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceLogSum",t,(o,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,"value = log(value);"])},wg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceL1",t,(o,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${o.getByIndices("input_indices")});`,""])},_g=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceL2",t,(o,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},$g=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceLogSumExp",t,(o,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${o.getByIndices("input_indices")});`,"value = log(value);"])},Cg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceMax",t,(o,s,p)=>{let d=[];for(let g=0;g<o.rank;g++)(p.indexOf(g)>=0||p.length===0)&&d.push(o.indicesSet("input_indices",g,0));return[`${d.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = max(value, ${o.getByIndices("input_indices")});`,""]})},xg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceMean",t,(o,s,p)=>{let d=1;for(let g=0;g<o.rank;g++)(p.indexOf(g)>=0||p.length===0)&&(d*=e.inputs[0].dims[g]);return["var sum = f32(0);","",`sum += f32(${o.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${d});`]})},Sg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceMin",t,(o,s,p)=>{let d=[];for(let g=0;g<o.rank;g++)(p.indexOf(g)>=0||p.length===0)&&d.push(`input_indices[${g}] = 0;`);return[`${d.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};`,`value = min(value, ${o.getByIndices("input_indices")});`,""]})},Ig=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceProd",t,(o,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${o.getByIndices("input_indices")};`,""])},Ag=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceSum",t,(o,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${o.getByIndices("input_indices")};`,""])},Tg=(e,t)=>{Jt(e.inputs),Yt(e,"ReduceSumSquare",t,(o,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${o.getByIndices("input_indices")}; value += t * t;`,""])},Zt=(e,t,r)=>{if(t.length===0)return r;let o=1,s=1;for(let p=0;p<t.length;p++)t.indexOf(p)===-1?o*=e[p]:s*=e[p];return s<32&&o>1024},tl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?xg(e,t):Hu(e,t)},rl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?wg(e,t):Lu(e,t)},il=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?_g(e,t):Fu(e,t)},nl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?$g(e,t):qu(e,t)},al=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Cg(e,t):Ku(e,t)},ol=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Sg(e,t):Ju(e,t)},sl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ig(e,t):Yu(e,t)},ul=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Ag(e,t):Zu(e,t)},ll=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?Tg(e,t):Qu(e,t)},dl=(e,t)=>{Zt(e.inputs[0].dims,t.axes,t.noopWithEmptyAxes)?vg(e,t):Xu(e,t)}});var cl,pl,fl,yo,ml=se(()=>{"use strict";xe();ft();_a();cl=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},pl=(e,t)=>{cl(e.inputs);let r=(o,s,p)=>{let d=[];for(let g=0;g<o.rank;g++)(p.indexOf(g)>=0||p.length===0)&&d.push(`input_indices[${g}] = 0;`);return[`${d.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?"<=":"<"} value) {
         value = ${o.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]};e.compute($a("ArgMin",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},fl=(e,t)=>{cl(e.inputs);let r=(o,s,p)=>{let d=[];for(let g=0;g<o.rank;g++)(p.indexOf(g)>=0||p.length===0)&&d.push(`input_indices[${g}] = 0;`);return[`${d.join(`
`)}`,`var value = ${o.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${o.getByIndices("input_indices")} ${t.selectLastIndex>0?">=":">"} value) {
         value = ${o.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",s.setByOffset("global_idx","best_index")]};e.compute($a("argMax",{hint:t.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],r,[t.axis],7,t.keepDims),{inputs:[0]})},yo=e=>Pe(e)});var Eg,kg,Og,Pg,Ca,Rg,hl,bo=se(()=>{"use strict";xe();ma();Oe();Eg=(e,t)=>{let r=e[0],o=e[1],s=e[2],p=e[3],d=e[4],g=e[5];if(d&&g)throw new Error("Attention cannot have both past and relative_position_bias");if(r.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let y=r.dims[0],w=r.dims[1],f=r.dims[2];if(s.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(o.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(o.dims[0]!==f)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(s.dims[0]!==o.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let x=s.dims[0]/3,S=x,O=S;if(t.qkvHiddenSizes.length>0){if(t.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let W of t.qkvHiddenSizes)if(W%t.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");x=t.qkvHiddenSizes[0],S=t.qkvHiddenSizes[1],O=t.qkvHiddenSizes[2]}let E=w;if(x!==S)throw new Error("qkv_hidden_sizes first element should be same as the second");if(s.dims[0]!==x+S+O)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let P=0;if(d){if(S!==O)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(d.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(d.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(d.dims[1]!==y)throw new Error('Input "past" second dimension must be batch_size');if(d.dims[2]!==t.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(d.dims[4]!==S/t.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');t.pastPresentShareBuffer||(P=d.dims[3])}let j=E+P,U=-1,z=0;if(p)throw new Error("Mask not supported");if(d)throw new Error("past is not supported");if(g)throw new Error("relativePositionBias is not supported");return{batchSize:y,sequenceLength:w,pastSequenceLength:P,kvSequenceLength:E,totalSequenceLength:j,maxSequenceLength:U,inputHiddenSize:f,hiddenSize:x,vHiddenSize:O,headSize:Math.floor(x/t.numHeads),vHeadSize:Math.floor(O/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:z,scale:t.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},kg=(e,t,r,o)=>{let s=Ze(o),p=64,d=o/s;d<p?p=1:d/8<64&&(p=Math.ceil(d/8));let g=Math.ceil(o/s/p),y=[{type:t.dataType,data:1/o},{type:12,data:d},{type:12,data:g}],w=Le(t.dataType,s),f=x=>{let S=ue("x",t.dataType,t.dims,s),O="thread_max_vector";s===2?O="max(thread_max_vector.x, thread_max_vector.y)":s===4&&(O="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let E=At(t.dataType),P=[{name:"d_inv",type:E},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`
  var<workgroup> wgMax: array<f32, ${p}>;
  var<workgroup> wgSum: array<f32, ${p}>;
  ${x.registerUniforms(P).declareVariables(S)}
  ${x.mainStart([p,1,1])}
    let localOffset = local_idx * uniforms.elements_per_wg;
    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;

    var thread_max_vector = ${gt("f32",s,"-3.402823e+38f")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      thread_max_vector = max(${Vt(E,s,"x[offset + i]")}, thread_max_vector);
    }
    wgMax[local_idx] = ${O};
    workgroupBarrier();

    var maxValue = -3.402823e+38f;
    for (var i = 0u; i < ${p}; i++) {
      maxValue = max(wgMax[i], maxValue);
    }

    var sumVector = ${gt("f32",s,"0")};
    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
      sumVector += exp(${Vt(E,s,"x[offset + i]")} - maxValue);
    }
    wgSum[local_idx] = ${Tt("sumVector",s)};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${p}; i++) {
      sum += wgSum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        x[offset + i] = ${gt(E,s,"uniforms.d_inv")};
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {
        let f32input = ${Vt(E,s,"x[offset + i]")};
        x[offset + i] = ${S.type.value}(exp(f32input - maxValue) / sum);
      }
    }
  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${p};${w};${s}`},getShaderSource:f,getRunData:()=>({outputs:[],dispatchGroup:{x:r},programUniforms:y})},{inputs:[t],outputs:[]})},Og=(e,t,r,o,s,p)=>{let d=[s.batchSize,s.numHeads,s.sequenceLength,s.kvSequenceLength+s.pastSequenceLength],g=p.scale===0?1/Math.sqrt(s.headSize):p.scale,y=Ze(s.headSize),w=s.headSize/y,f=12,x={x:Math.ceil(s.totalSequenceLength/f),y:Math.ceil(s.sequenceLength/f),z:s.batchSize*s.numHeads},S=[{type:12,data:s.sequenceLength},{type:12,data:w},{type:12,data:s.totalSequenceLength},{type:12,data:s.kvSequenceLength},{type:t.dataType,data:g}],O=[t,r],E=j=>{let U=Z("q",t.dataType,t.dims,y),z=Z("key",r.dataType,r.dims,y),W=ue("output",t.dataType,d),N=Le(t.dataType),q=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:N}];return`
  const beta: ${N} = 1.0;
  const TILE_SIZE = ${f}u;

  var<workgroup> tileQ: array<${U.type.storage}, ${f*f}>;
  var<workgroup> tileK: array<${U.type.storage}, ${f*f}>;
  ${j.registerUniforms(q).declareVariables(U,z,W)}
  ${j.mainStart([f,f,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let lm = m + local_id.y;
    let ln = n + local_id.x;

    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;
    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;

    var value = ${gt(N,y)};
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];
      }

      workgroupBarrier();
    }

    let headOffset = headIdx * uniforms.M * uniforms.N;
    if (lm < uniforms.M && ln < uniforms.N) {
      let outputIdx = headOffset + lm * uniforms.N + ln;
      output[outputIdx] = ${Tt("value",y)} * uniforms.alpha;
    }
  }`},P=e.compute({name:"AttentionProbs",shaderCache:{hint:`${y}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:d,dataType:t.dataType,gpuDataType:0}],dispatchGroup:x,programUniforms:S}),getShaderSource:E},{inputs:O,outputs:[-1]})[0];return kg(e,P,s.batchSize*s.numHeads*s.sequenceLength,s.totalSequenceLength),P},Pg=(e,t,r,o)=>{let s=[o.batchSize,o.sequenceLength,o.vHiddenSize],p=12,d={x:Math.ceil(o.vHeadSize/p),y:Math.ceil(o.sequenceLength/p),z:o.batchSize*o.numHeads},g=[{type:12,data:o.sequenceLength},{type:12,data:o.totalSequenceLength},{type:12,data:o.vHeadSize},{type:12,data:o.numHeads},{type:12,data:o.vHiddenSize}],y=w=>{let f=Z("probs",t.dataType,t.dims),x=Z("v",r.dataType,r.dims),S=ue("output",t.dataType,s),O=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`
  const TILE_SIZE = ${p}u;
  var<workgroup> tileQ: array<${f.type.value}, ${p*p}>;
  var<workgroup> tileK: array<${f.type.value}, ${p*p}>;
  ${w.registerUniforms(O).declareVariables(f,x,S)}
  ${w.mainStart([p,p,1])}
   let headIdx = workgroup_id.z;
   let m = workgroup_id.y * TILE_SIZE + local_id.y;
   let n = workgroup_id.x * TILE_SIZE + local_id.x;

   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;
   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;

   var value = ${f.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
     if (m < uniforms.M && w + local_id.x < uniforms.K) {
       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
     }
     if (n < uniforms.N && w + local_id.y < uniforms.K) {
       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];
     }
     workgroupBarrier();
     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;
   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + currentBatchHeadNumber * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:s,dataType:t.dataType,gpuDataType:0}],dispatchGroup:d,programUniforms:g}),getShaderSource:y},{inputs:[t,r],outputs:[0]})[0]},Ca=(e,t,r,o,s,p,d,g,y,w,f)=>{let x=Og(e,t,r,y,w,f);Pg(e,x,o,w)},Rg=(e,t)=>{let r=[t.batchSize,t.numHeads,t.sequenceLength,t.headSize],o=t.sequenceLength,s=t.inputHiddenSize,p=t.headSize,d=12,g={x:Math.ceil(t.headSize/d),y:Math.ceil(t.sequenceLength/d),z:t.batchSize*t.numHeads},y=[e.inputs[0],e.inputs[1],e.inputs[2]],w=[{type:12,data:o},{type:12,data:s},{type:12,data:p},{type:12,data:t.numHeads},{type:12,data:t.headSize},{type:12,data:t.hiddenSize},{type:12,data:t.hiddenSize+t.hiddenSize+t.vHiddenSize}],f=x=>{let S=ue("output_q",y[0].dataType,r),O=ue("output_k",y[0].dataType,r),E=ue("output_v",y[0].dataType,r),P=Z("input",y[0].dataType,y[0].dims),j=Z("weight",y[1].dataType,y[1].dims),U=Z("bias",y[2].dataType,y[2].dims),z=P.type.storage,W=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${d}u;
  var<workgroup> tileInput: array<${z}, ${d*d}>;
  var<workgroup> tileWeightQ: array<${z}, ${d*d}>;
  var<workgroup> tileWeightK: array<${z}, ${d*d}>;
  var<workgroup> tileWeightV: array<${z}, ${d*d}>;
  ${x.registerUniforms(W).declareVariables(P,j,U,S,O,E)}
  ${x.mainStart([d,d,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE + local_id.y;
    let n = workgroup_id.x * TILE_SIZE + local_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${z}(0);
    var valueK = ${z}(0);
    var valueV = ${z}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:r,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:g,programUniforms:w}),getShaderSource:f},{inputs:y,outputs:[-1,-1,-1]})},hl=(e,t)=>{let r=Eg(e.inputs,t),[o,s,p]=Rg(e,r);return Ca(e,o,s,p,e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t)}});var zg,Bg,Mg,gl,yl=se(()=>{"use strict";Dt();xe();Re();ft();Oe();zg=(e,t)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let r=(o,s,p)=>{let d=s.length;if(d!==o.length)throw new Error(`${p}: num dimensions != ${d}`);s.forEach((g,y)=>{if(g!==o[y])throw new Error(`${p}: dim[${y}] do not match`)})};if(e[0].dims.length>1){let o=t.format==="NHWC"?t.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,t.spatial?2:void 0);r(e[1].dims,o,"Invalid input scale"),r(e[2].dims,o,"Invalid input B"),r(e[3].dims,o,"Invalid input mean"),r(e[4].dims,o,"Invalid input var")}else r(e[1].dims,[1],"Invalid input scale"),r(e[2].dims,[1],"Invalid input B"),r(e[3].dims,[1],"Invalid input mean"),r(e[4].dims,[1],"Invalid input var")},Bg=(e,t)=>{let{epsilon:r,spatial:o,format:s}=t,p=e[0].dims,d=o?Ze(p[p.length-1]):1,g=s==="NHWC"&&p.length>1?d:1,y=Q.size(p)/d,w=o,f=w?p.length:p,x=Z("x",e[0].dataType,e[0].dims,d),S=Z("scale",e[1].dataType,e[1].dims,g),O=Z("bias",e[2].dataType,e[2].dims,g),E=Z("inputMean",e[3].dataType,e[3].dims,g),P=Z("inputVar",e[4].dataType,e[4].dims,g),j=ue("y",e[0].dataType,f,d),U=()=>{let W="";if(o)W=`let cOffset = ${p.length===1?"0u":s==="NHWC"?`outputIndices[${p.length-1}] / ${d}`:"outputIndices[1]"};`;else if(s==="NCHW")W=`
            ${j.indicesSet("outputIndices","0","0")}
            let cOffset = ${j.indicesToOffset("outputIndices")};`;else{W=`var cIndices = ${S.type.indices}(0);
                       cIndices[0] = outputIndices[${p.length-1}];`;for(let N=1;N<S.rank;N++)W+=`cIndices[${N}] = outputIndices[${N}];`;W+=`let cOffset = ${S.indicesToOffset("cIndices")};`}return W},z=W=>`
  const epsilon = ${r};
  ${W.registerUniform("outputSize","u32").declareVariables(x,S,O,E,P,j)}
  ${W.mainStart()}
  ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${j.offsetToIndices(`global_idx * ${d}`)};
    ${U()}
    let scale = ${S.getByOffset("cOffset")};
    let bias = ${O.getByOffset("cOffset")};
    let inputMean = ${E.getByOffset("cOffset")};
    let inputVar = ${P.getByOffset("cOffset")};
    let x = ${x.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${j.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${t.epsilon}_${t.format}_${o}_${d}`,inputDependencies:w?["rank","type","type","type","type"]:void 0},getShaderSource:z,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w?[{type:12,data:y},...de(p)]:[{type:12,data:y}]})}},Mg=e=>Pe(e),gl=(e,t)=>{let{inputs:r,outputCount:o}=e,s=Mg({...t,outputCount:o});if(Ne.webgpu.validateInputContent&&zg(r,s),t.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Bg(r,s))}});var Dg,jg,bl,vl=se(()=>{"use strict";Re();Oe();Dg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},jg=e=>{let t=e[0].dims,r=e[0].dims[2],o=Q.size(t)/4,s=e[0].dataType,p=Z("input",s,t,4),d=Z("bias",s,[r],4),g=Z("residual",s,t,4),y=ue("output",s,t,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)}}),getShaderSource:f=>`
  const channels = ${r}u / 4;
  ${f.declareVariables(p,d,g,y)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes(o)}
    let value = ${p.getByOffset("global_idx")}
      + ${d.getByOffset("global_idx % channels")} + ${g.getByOffset("global_idx")};
    ${y.setByOffset("global_idx","value")}
  }`}},bl=e=>{Dg(e.inputs),e.compute(jg(e.inputs))}});var Ug,He,wl,_l,$l,Cl,xl,Sl,Il,Al,Tl,Ng,El,kl,Ol,Pl,xa,Rl,Sa,zl,Bl,Ml,Dl,jl,Ul,Nl,Wl,Vl,Gl,Hl,Ll,Fl,ql,Kl,Jl,Yl,Zl,vo,wo,Ql,Xl,ed,Ia=se(()=>{"use strict";xe();Re();ft();Oe();Ug=(e,t,r,o,s,p)=>{let d=Math.ceil(t/4),g="";typeof s=="string"?g=`${s}(a)`:g=s("a");let y=Z("inputData",r,[d],4),w=ue("outputData",o,[d],4);return`
      ${e.registerUniform("vec_size","u32").declareVariables(y,w)}

  ${p??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${y.getByOffset("global_idx")};
    ${w.setByOffset("global_idx",g)}
  }`},He=(e,t,r,o,s,p=e.dataType)=>({name:t,shaderCache:{hint:s,inputDependencies:["type"]},getShaderSource:d=>Ug(d,Q.size(e.dims),e.dataType,p,r,o),getRunData:d=>({outputs:[{dims:e.dims,dataType:p}],dispatchGroup:{x:Math.ceil(Q.size(d[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(Q.size(e.dims)/4)}]})}),wl=e=>{e.compute(He(e.inputs[0],"Abs","abs"))},_l=e=>{e.compute(He(e.inputs[0],"Acos","acos"))},$l=e=>{e.compute(He(e.inputs[0],"Acosh","acosh"))},Cl=e=>{e.compute(He(e.inputs[0],"Asin","asin"))},xl=e=>{e.compute(He(e.inputs[0],"Asinh","asinh"))},Sl=e=>{e.compute(He(e.inputs[0],"Atan","atan"))},Il=e=>{e.compute(He(e.inputs[0],"Atanh","atanh"))},Al=e=>Pe(e),Tl=(e,t)=>{let r;switch(t.to){case 10:r="vec4<f16>";break;case 1:r="vec4<f32>";break;case 12:r="vec4<u32>";break;case 6:r="vec4<i32>";break;case 9:r="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${t.to}`)}e.compute(He(e.inputs[0],"Cast",r,void 0,t.cacheKey,t.to))},Ng=e=>{let t=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:ya,r=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:ba;return Pe({min:t,max:r})},El=(e,t)=>{let r=e.inputs.length===1?t:Ng(e.inputs),o=At(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Clip",s=>`clamp(${s}, clip_min_, clip_max_)`,`
    const clip_min_: vec4<${o}> = vec4(${o}(${r.min}));
    const clip_max_: vec4<${o}> = vec4(${o}(${r.max}));
`,r.cacheKey),{inputs:[0]})},kl=e=>{e.compute(He(e.inputs[0],"Ceil","ceil"))},Ol=e=>{e.compute(He(e.inputs[0],"Cos","cos"))},Pl=e=>{e.compute(He(e.inputs[0],"Cosh","cosh"))},xa=e=>Pe(e),Rl=(e,t)=>{let r=At(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Elu",o=>`elu_vf32(${o})`,`
  const elu_alpha_ = ${r}(${t.alpha});

  fn elu_f32(a: ${r}) -> ${r} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${r}>) -> vec4<${r}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,t.cacheKey))},Sa=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,zl=e=>{let t=At(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Erf",r=>`erf_vf32(${r})`,Sa(t)))},Bl=e=>{e.compute(He(e.inputs[0],"Exp","exp"))},Ml=e=>{e.compute(He(e.inputs[0],"Floor","floor"))},Dl=e=>{let t=At(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Gelu",r=>`0.5 * ${r} * (1.0 + erf_vf32(${r} * 0.7071067811865475))`,Sa(t)))},jl=(e,t)=>{let r=At(e.inputs[0].dataType);e.compute(He(e.inputs[0],"LeakyRelu",o=>`select(leaky_relu_alpha_ * ${o}, ${o}, ${o} >= vec4<${r}>(0.0))`,`const leaky_relu_alpha_ = ${r}(${t.alpha});`,t.cacheKey))},Ul=e=>{e.compute(He(e.inputs[0],"Not",t=>`!${t}`))},Nl=e=>{e.compute(He(e.inputs[0],"Neg",t=>`-${t}`))},Wl=e=>{e.compute(He(e.inputs[0],"Reciprocal",t=>`1.0/${t}`))},Vl=e=>{let t=At(e.inputs[0].dataType);e.compute(He(e.inputs[0],"Relu",r=>`select(vec4<${t}>(0.0), ${r}, ${r} > vec4<${t}>(0.0))`))},Gl=e=>{e.compute(He(e.inputs[0],"Sigmoid",t=>`(1.0 / (1.0 + exp(-${t})))`))},Hl=e=>Pe(e),Ll=(e,t)=>{let r=At(e.inputs[0].dataType);e.compute(He(e.inputs[0],"HardSigmoid",o=>`max(vec4<${r}>(0.0), min(vec4<${r}>(1.0), ${t.alpha} * ${o} + vec4<${r}>(${t.beta})))`,void 0,t.cacheKey))},Fl=e=>{e.compute(He(e.inputs[0],"Sin","sin"))},ql=e=>{e.compute(He(e.inputs[0],"Sinh","sinh"))},Kl=e=>{e.compute(He(e.inputs[0],"Sqrt","sqrt"))},Jl=e=>{e.compute(He(e.inputs[0],"Tan","tan"))},Yl=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,Zl=e=>{e.compute(He(e.inputs[0],"Tanh",Yl))},vo=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${Yl("v")};
}
`,wo=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,Ql=e=>{let t=At(e.inputs[0].dataType);e.compute(He(e.inputs[0],"FastGelu",wo,vo(t),void 0,e.inputs[0].dataType))},Xl=(e,t)=>{let r=At(e.inputs[0].dataType);return e.compute(He(e.inputs[0],"ThresholdedRelu",o=>`select(vec4<${r}>(0.0), ${o}, ${o} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${r}>(${t.alpha});`,t.cacheKey)),0},ed=e=>{e.compute(He(e.inputs[0],"Log","log"))}});var Wg,Vg,rd,id=se(()=>{"use strict";Re();Oe();Ia();Wg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Vg=e=>{let t=e[0].dims.slice();t[2]=t[2]/2;let r=Z("input",e[0].dataType,e[0].dims,4),o=Z("bias",e[0].dataType,[e[0].dims[2]],4),s=ue("output",e[0].dataType,t,4),p=Q.size(t)/4,d=Le(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)}}),getShaderSource:y=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${y.declareVariables(r,o,s)}

  ${Sa(d)}

  ${y.mainStart()}
    ${y.guardAgainstOutOfBoundsWorkgroupSizes(p)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${s.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},rd=e=>{Wg(e.inputs),e.compute(Vg(e.inputs))}});var Gg,Hg,Qt,nd,ad,od,sd,ud,ld,dd,cd,pd,fd,md=se(()=>{"use strict";xe();Re();Oe();Gg=(e,t,r,o,s,p,d,g,y,w,f,x)=>{let S,O;typeof g=="string"?S=O=(z,W)=>`${g}((${z}),(${W}))`:typeof g=="function"?S=O=g:(S=g.scalar,O=g.vector);let E=ue("outputData",f,o.length,4),P=Z("aData",y,t.length,4),j=Z("bData",w,r.length,4),U;if(s)if(p){let z=Q.size(t)===1,W=Q.size(r)===1,N=t.length>0&&t[t.length-1]%4===0,q=r.length>0&&r[r.length-1]%4===0;z||W?U=E.setByOffset("global_idx",O(z?`${P.type.value}(${P.getByOffset("0")}.x)`:P.getByOffset("global_idx"),W?`${j.type.value}(${j.getByOffset("0")}.x)`:j.getByOffset("global_idx"))):U=`
            let outputIndices = ${E.offsetToIndices("global_idx * 4u")};
            let offsetA = ${P.broadcastedIndicesToOffset("outputIndices",E)};
            let offsetB = ${j.broadcastedIndicesToOffset("outputIndices",E)};
            ${E.setByOffset("global_idx",O(d||N?P.getByOffset("offsetA / 4u"):`${P.type.value}(${P.getByOffset("offsetA / 4u")}[offsetA % 4u])`,d||q?j.getByOffset("offsetB / 4u"):`${j.type.value}(${j.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else U=E.setByOffset("global_idx",O(P.getByOffset("global_idx"),j.getByOffset("global_idx")));else{if(!p)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let z=(W,N,q="")=>{let X=`aData[indexA${N}][componentA${N}]`,te=`bData[indexB${N}][componentB${N}]`;return`
            let outputIndices${N} = ${E.offsetToIndices(`global_idx * 4u + ${N}u`)};
            let offsetA${N} = ${P.broadcastedIndicesToOffset(`outputIndices${N}`,E)};
            let offsetB${N} = ${j.broadcastedIndicesToOffset(`outputIndices${N}`,E)};
            let indexA${N} = offsetA${N} / 4u;
            let indexB${N} = offsetB${N} / 4u;
            let componentA${N} = offsetA${N} % 4u;
            let componentB${N} = offsetB${N} % 4u;
            ${W}[${N}] = ${q}(${S(X,te)});
          `};f===9?U=`
            var data = vec4<u32>(0);
            ${z("data",0,"u32")}
            ${z("data",1,"u32")}
            ${z("data",2,"u32")}
            ${z("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:U=`
            ${z("outputData[global_idx]",0)}
            ${z("outputData[global_idx]",1)}
            ${z("outputData[global_idx]",2)}
            ${z("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(P,j,E)}

        ${x??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${U}
      }`},Hg=(e,t,r,o,s,p,d=r.dataType)=>{let g=!Q.areEqual(r.dims,o.dims),y=r.dims,w=Q.size(r.dims),f=!1,x=!1,S=[g];if(g){let O=qt.calcShape(r.dims,o.dims,!1);if(!O)throw new Error("Can't perform binary op on the given tensors");y=O,w=Q.size(y);let E=Q.size(r.dims)===1,P=Q.size(o.dims)===1,j=r.dims.length>0&&r.dims[r.dims.length-1]%4===0,U=o.dims.length>0&&o.dims[o.dims.length-1]%4===0;S.push(E),S.push(P),S.push(j),S.push(U);let z=1;for(let W=1;W<y.length;W++){let N=r.dims[r.dims.length-W]??1,q=o.dims[o.dims.length-W]??1;if(N===q)z*=N;else break}z%4===0?(x=!0,f=!0):(E||P||j||U)&&(f=!0)}else f=!0;return S.push(f),{name:e,shaderCache:{hint:t+S.map(O=>O.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:O=>Gg(O,r.dims,o.dims,y,f,g,x,s,r.dataType,o.dataType,d,p),getRunData:()=>({outputs:[{dims:y,dataType:d}],dispatchGroup:{x:Math.ceil(w/64/4)},programUniforms:[{type:12,data:Math.ceil(Q.size(y)/4)},...de(r.dims,o.dims,y)]})}},Qt=(e,t,r,o,s,p)=>{e.compute(Hg(t,s??"",e.inputs[0],e.inputs[1],r,o,p))},nd=e=>{Qt(e,"Add",(t,r)=>`${t}+${r}`)},ad=e=>{Qt(e,"Div",(t,r)=>`${t}/${r}`)},od=e=>{Qt(e,"Equal",{scalar:(t,r)=>`u32(${t}==${r})`,vector:(t,r)=>`vec4<u32>(${t}==${r})`},void 0,void 0,9)},sd=e=>{Qt(e,"Mul",(t,r)=>`${t}*${r}`)},ud=e=>{let t=Z("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Qt(e,"Pow",{scalar:(o,s)=>`pow_custom(${o},${s})`,vector:(o,s)=>`pow_vector_custom(${o},${s})`},`
    fn pow_custom(a : ${t}, b : ${t}) -> ${t} {
      if (b == ${t}(0.0)) {
        return ${t}(1.0);
      } else if (a < ${t}(0.0) && f32(b) != floor(f32(b))) {
        return ${t}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${t}(1.0), round(f32(abs(b) % ${t}(2.0))) != 1.0) * ${t}(${t==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${t}>, b : vec4<${t}>) -> vec4<${t}> {
      // TODO: implement vectorized pow
      return vec4<${t}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},ld=e=>{Qt(e,"Sub",(t,r)=>`${t}-${r}`)},dd=e=>{Qt(e,"Greater",{scalar:(t,r)=>`u32(${t}>${r})`,vector:(t,r)=>`vec4<u32>(${t}>${r})`},void 0,void 0,9)},cd=e=>{Qt(e,"Less",{scalar:(t,r)=>`u32(${t}<${r})`,vector:(t,r)=>`vec4<u32>(${t}<${r})`},void 0,void 0,9)},pd=e=>{Qt(e,"GreaterOrEqual",{scalar:(t,r)=>`u32(${t}>=${r})`,vector:(t,r)=>`vec4<u32>(${t}>=${r})`},void 0,void 0,9)},fd=e=>{Qt(e,"LessOrEqual",{scalar:(t,r)=>`u32(${t}<=${r})`,vector:(t,r)=>`vec4<u32>(${t}<=${r})`},void 0,void 0,9)}});var Fg,qg,Kg,Jg,hd,gd,yd=se(()=>{"use strict";xe();Re();ft();Oe();Fg=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");let r=0,o=e[r],s=o.dataType,p=o.dims.length;e.forEach((d,g)=>{if(g!==r){if(d.dataType!==s)throw new Error("input tensors should be one type");if(d.dims.length!==p)throw new Error("input tensors should have the same shape");d.dims.forEach((y,w)=>{if(w!==t&&y!==o.dims[w])throw new Error("non concat dimensions must match")})}})},qg=(e,t)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${t});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,Kg=(e,t)=>{let r=e.length,o=[];for(let s=0;s<r;++s){let p=t.setByOffset("global_idx",e[s].getByIndices("indices"));r===1?o.push(p):s===0?o.push(`if (inputIndex == ${s}u) { ${p} }`):s===r-1?o.push(`else { ${p} }`):o.push(`else if (inputIndex == ${s}) { ${p} }`)}return o.join(`
`)},Jg=(e,t,r,o)=>{let s=Q.size(r),p=new Array(e.length),d=new Array(e.length),g=0,y=[],w=[],f=[{type:12,data:s}];for(let P=0;P<e.length;++P)g+=e[P].dims[t],p[P]=g,w.push(e[P].dims.length),d[P]=Z(`input${P}`,o,w[P]),y.push("rank"),f.push({type:12,data:p[P]});for(let P=0;P<e.length;++P)f.push(...de(e[P].dims));f.push(...de(r));let x=ue("output",o,r.length),S=x.indicesGet("indices",t),O=Array.from(Array(p.length).keys()).map(P=>`uniforms.sizeInConcatAxis${P}`).join(","),E=P=>`

  ${(()=>{P.registerUniform("outputSize","u32");for(let j=0;j<e.length;j++)P.registerUniform(`sizeInConcatAxis${j}`,"u32");return P.declareVariables(...d,x)})()}

  ${qg(p.length,O)}

  ${P.mainStart()}
    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${x.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${S});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${p.length}u>(${O});
      ${S} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${Kg(d,x)}
  }`;return{name:"Concat",shaderCache:{hint:`${t}`,inputDependencies:y},getRunData:()=>({outputs:[{dims:r,dataType:o}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:f}),getShaderSource:E}},hd=(e,t)=>{let r=e.inputs,o=r[0].dims,s=Q.normalizeAxis(t.axis,o.length);Fg(r,s);let p=o.slice();p[s]=r.reduce((g,y)=>g+(y.dims.length>s?y.dims[s]:0),0);let d=r.filter(g=>Q.size(g.dims)>0);e.compute(Jg(d,s,p,r[0].dataType),{inputs:d})},gd=e=>Pe({axis:e.axis})});var Gt,Ht,Lt,Aa,cr=se(()=>{"use strict";xe();Re();Gt=(e,t,r="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${t}(0.0));`;case"Sigmoid":return`value = (${t}(1.0) / (${t}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${t}(${r}(uniforms.clip_min)), ${t}(${r}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${t}(0.0), min(${t}(1.0), ${r}(uniforms.alpha) * value + ${r}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${r}(uniforms.alpha) * value, value, value >= ${t}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},Ht=(e,t)=>{e.activation==="Clip"?t.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?t.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&t.push({type:1,data:e.alpha})},Lt=(e,t)=>{e.activation==="Clip"?t.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?t.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&t.push({name:"alpha",type:"f32"})},Aa=e=>{let t=e?.activation||"";if(t==="HardSigmoid"){let[r,o]=e?.activation_params||[.2,.5];return{activation:t,alpha:r,beta:o}}else if(t==="Clip"){let[r,o]=e?.activation_params||[ya,ba];return{activation:t,clipMax:o,clipMin:r}}else if(t==="LeakyRelu"){let[r]=e?.activation_params||[.01];return{activation:t,alpha:r}}return{activation:t}}});var yt,Ta,Ea=se(()=>{"use strict";yt=(e,t)=>{switch(e){case 1:return t;case 2:return`vec2<${t}>`;case 3:return`vec3<${t}>`;case 4:return`vec4<${t}>`;default:throw new Error(`${e}-component is not supported.`)}},Ta=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `});var ka,_o=se(()=>{"use strict";ka=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`});var Yg,Zg,hn,bd,Qg,gn,Xg,Oa,yn=se(()=>{"use strict";xe();Re();Oe();cr();Ea();Yg=(e,t)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${t?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${t?", batchIndices":""});
        `,Zg=(e,t)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${t===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${t===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,hn=(e,t,r="f32",o,s=!1,p=32,d=!1,g=32)=>{let y=t[1]*e[1],w=t[0]*e[0],f=s?y:p,x=s?p:y,S=f/t[0],O=p/t[1];if(!((s&&S===4&&e[1]===4||!s&&(S===3||S===4))&&f%t[0]===0&&p%t[1]===0&&e[0]===4))throw new Error(`If transposeA ${s} is true, innerElementSize ${S} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${S} must be 3 or 4.
  tileAWidth ${f} must be divisible by workgroupSize[0]${t[0]}. tileInner ${p} must be divisible by workgroupSize[1] ${t[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${S}<${r}>, ${f/S}>, ${x}>;
var<workgroup> mm_Bsub: array<array<vec4<${r}>, ${w/e[0]}>, ${p}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${S};
const tileInner = ${p};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${d?"0":"i32(globalId.z)"};
  ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${y};

  let num_tiles = ${d?`${Math.ceil(g/p)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${d?`i32(globalId.z) * ${g}`:"0"};

  var acc: array<vec4<${r}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${O};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${Yg(s,o)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${O}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${o?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${S===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${Zg(s,S)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},bd=(e,t)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${t?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${t?", batchIndices":""});
            `,Qg=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",gn=(e,t,r="f32",o,s=!1,p=32,d=!1,g=32,y=!1)=>{let w=e[1]*t[1],f=e[0]*t[0],x=s?w:p,S=s?p:w;if(!(S%t[1]===0&&x%t[0]===0&&p%t[1]===0))throw new Error(`tileAHight ${S} must be divisible by workgroupSize[1]${t[1]}, tileAWidth ${x} must be divisible by workgroupSize[0]${t[0]}, tileInner ${p} must be divisible by workgroupSize[1]${t[1]}`);let O=S/t[1],E=x/t[0],P=p/t[1],j=y?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${w};
    let globalColStart = i32(workgroupId.x) * ${f};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${S}; inputRow = inputRow + ${t[1]}) {
        for (var inputCol = localCol; inputCol < ${x}; inputCol = inputCol + ${t[0]}) {
          ${bd(s,o)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${p}; inputRow = inputRow + ${t[1]}) {
            for (var inputCol = localCol; inputCol < ${f}; inputCol = inputCol + ${t[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${o?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${r}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${t[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${s?`mm_Asub[k][localRow + innerRow * ${t[1]}];`:`mm_Asub[localRow + innerRow * ${t[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${t[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${t[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${w};

let tileRowA = i32(localId.y) * ${O};
let tileColA = i32(localId.x) * ${E};
let tileRowB = i32(localId.y) * ${P};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${O}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${E}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${bd(s,o)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${P}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${o?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${r}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${Qg(s)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${r}, ${x}>, ${S}>;
  var<workgroup> mm_Bsub : array<array<${r}, ${f}>, ${p}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${p};

@compute @workgroup_size(${t[0]}, ${t[1]}, ${t[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${d?"0":"i32(globalId.z)"};
    ${o?`let batchIndices = ${o.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${d?`${Math.ceil(g/p)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${d?`i32(globalId.z) * ${g}`:"0"};

    var acc : array<array<${r}, colPerThread>, rowPerThread>;

    // Without this initialization strange values show up in acc.
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = 0.0;
      }
    }
    ${j}
  }
`},Xg=(e,t,r,o,s,p=!1)=>{let[d,g,y]=s,[w,f,x,S]=o,O=ti(d,y),E=ti(g,y),P=Le(o[0].type.tensor),j=()=>{let W=f.rank,N=w.rank,q=`var aIndices: ${f.type.indices};`;for(let X=W-2-1,te=N-1;X>=0;X--,te--)q+=`
aIndices[${X}] = ${N>1?`batchIndices[${te}]`:"batchIndices"};`;return O.forEach(X=>{q+=`
aIndices[${X}] = 0;`}),q+=`
aIndices[${W-2}] = u32(row);
                   aIndices[${W-1}] = u32(colIn);`,q},U=()=>{let W=x.rank,N=w.rank,q=`var bIndices: ${x.type.indices};`;for(let X=W-2-1,te=N-1;X>=0;X--,te--)q+=`
bIndices[${X}] = ${N>1?`batchIndices[${te}]`:"batchIndices"};`;return E.forEach(X=>{q+=`
bIndices[${X}] = 0;`}),q+=`
bIndices[${W-2}] = u32(row);
                   bIndices[${W-1}] = u32(colIn);`,q};return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${w.type.indices}) -> ${yt(e,P)} {
      var value = ${yt(e,P)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        ${j()}
        value = ${f.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${w.type.indices}) -> ${yt(e,P)} {
      var value = ${yt(e,P)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        ${U()}
        value = ${x.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${yt(e,P)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${t?`value = value + ${p?"bias[colIn]":`${yt(e,P)}(bias[row])`};`:""}
        ${r}
        ${S.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},Oa=(e,t,r,o,s=!1)=>{let p=e[0].dims,d=e[1].dims,g=p.slice(0,-2),y=d.slice(0,-2),w=o?o.slice(0,-2):r.slice(0,-2),f=Q.size(w),x=p[p.length-2],S=p[p.length-1],O=d[d.length-1],E=S%4===0&&O%4===0,P=x<=8?[4,1,1]:[4,4,1],j=[8,8,1],U=[Math.ceil(O/j[0]/P[0]),Math.ceil(x/j[1]/P[1]),Math.ceil(f/j[2]/P[2])],z=E?4:1,W=[...g,x,S/z],N=W.length,q=[...y,S,O/z],X=q.length,te=[f,x,O/z],ie=[{type:6,data:x},{type:6,data:O},{type:6,data:S}];Ht(t,ie),ie.push(...de(w,W,q));let J=["rank","rank"],ne=e.length>2;ne&&(ie.push(...de(e[2].dims)),J.push("rank")),ie.push(...de(te));let Ie=Be=>{let qe=w.length,Ve=wa("batchDims",e[0].dataType,qe,1),ze=Le(e[0].dataType),fe=Z("a",e[0].dataType,N,z),Ge=Z("b",e[1].dataType,X,z),Ae=ue("result",e[0].dataType,te.length,z),$e=[fe,Ge];if(ne){let ae=s?z:1;$e.push(Z("bias",e[2].dataType,e[2].dims.length,ae))}let ge=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Lt(t,ge);let Te=Le(Ae.type.tensor),We=Gt(t,Ae.type.value,Te),it=Xg(z,ne,We,[Ve,fe,Ge,Ae],[g,y,w],s);return`
  ${Be.registerUniforms(ge).registerInternalVariables(Ve).declareVariables(...$e,Ae)}
  ${it}
  ${E?hn(P,j,ze,Ve):gn(P,j,ze,Ve)}
                   `};return{name:"MatMul",shaderCache:{hint:`${P};${t.activation};${E};${s}`,inputDependencies:J},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:U[0],y:U[1],z:U[2]},programUniforms:ie}),getShaderSource:Ie}}});var ey,vd,wd=se(()=>{"use strict";xe();dr();Oe();cr();Ea();_o();yn();ey=(e,t,r,o,s=!1,p,d=4,g=4,y=4,w="f32")=>{let f=ne=>{switch(ne){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${w}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${ne} is not supported.`)}},x=ne=>{switch(ne){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${ne} is not supported.`)}},S=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,O=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,E=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",P=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",j=e?"row":"col",U=e?"col":"row",z=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${j} / outWidth;
    let outCol = ${j} % outWidth;

    let WRow = ${U} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${U} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${U} % inChannels;
    var resData = ${yt(d,w)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${E} && xCol >= 0 && xCol < ${P}) {
      ${S}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${f(d)}
    }
    return resData;`,W=e?t&&o?`
    let col = colIn * ${d};
    ${z}`:`
    let col = colIn * ${d};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${z}
    }
    return ${yt(d,w)}(0.0);`:o&&r?`
    let col = colIn * ${d};
    ${z}`:`
    let col = colIn * ${d};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${z}
    }
    return ${yt(d,w)}(0.0);`,N=`${x(g)}`,q=yt(y,w),X=e?yt(d,w):yt(g,w),te=e?yt(g,w):yt(d,w),ie=Gt(p,q,w);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${X} {
      ${e?W:N}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${te} {
      ${e?N:W}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${q}) {
      let col = colIn * ${y};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${O}
      ${Ta(s)}
      ${ie}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},vd=(e,t,r,o,s,p,d,g)=>{let y=t.format==="NHWC",w=y?e[0].dims[3]:e[0].dims[1],f=r[0],x=y?r[2]:r[3],S=y?r[1]:r[2],O=y?r[3]:r[1],E=y&&(w%4===0||w%3===0)&&O%4===0,P=y?O:x*S,j=y?x*S:O,U=[8,8,1],z=o<=8?[4,1,1]:[4,4,1],W=[Math.ceil(P/U[0]/z[0]),Math.ceil(j/U[1]/z[1]),Math.ceil(f/U[2]/z[2])];Ye("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${W}`);let N=E?y&&w%4!==0?3:4:1,q=U[1]*z[1],X=U[0]*z[0],te=Math.max(U[0]*N,U[1]),ie=o%q===0,J=s%X===0,ne=p%te===0,Ie=E?[N,4,4]:[1,1,1],Be=[{type:6,data:o},{type:6,data:s},{type:6,data:p},{type:6,data:[t.pads[0],t.pads[1]]},{type:6,data:t.strides},{type:6,data:t.dilations}];Ht(t,Be),Be.push(...de(e[0].dims,e[1].dims));let qe=["rank","rank"];d&&(Be.push(...de(e[2].dims)),qe.push("rank")),Be.push(...de(r));let Ve=ze=>{let fe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Lt(t,fe);let Ge=E?4:1,Ae=Le(e[0].dataType),$e=`
      fn setOutputAtIndex(flatIndex : i32, value : ${E?`vec4<${Ae}>`:Ae}) {
        result[flatIndex] = ${E?`vec4<${Ae}>`:Ae}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${E?`vec4<${Ae}>`:Ae}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${E?"/ 4":""}, value);
      }`,ge=Z("x",e[0].dataType,e[0].dims.length,N===3?1:N),Te=Z("w",e[1].dataType,e[1].dims.length,Ge),We=[ge,Te],it=ue("result",e[0].dataType,r.length,Ge);if(d){let ae=Z("bias",e[2].dataType,e[2].dims.length,Ge);We.push(ae),$e+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${E?`vec4<${Ae}>`:Ae} {
          return bias[coords.${y?"w":"y"}${E?"/ 4":""}];
        }`}return`
        ${ka("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${ze.registerUniforms(fe).declareVariables(...We,it)}
        ${$e}
        ${ey(y,ie,J,ne,d,t,Ie[0],Ie[1],Ie[2],Ae)}
        ${E?hn(z,U,Ae,void 0,!y,te):gn(z,U,Ae,void 0,!y,te,!1,void 0,g)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${t.cacheKey};${N};${E};${ie};${J};${ne};${q};${X};${te}`,inputDependencies:qe},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]},programUniforms:Be}),getShaderSource:Ve}}});var $o,_d,$d=se(()=>{"use strict";xe();Re();Oe();Co();cr();$o=(e,t,r)=>{let o=e.length>2,s=o?"value += b[output_channel];":"",p=e[0].dims,d=e[1].dims,g=d[0]/t.group,y=t.format==="NHWC",w=Pa(p,d,t.dilations,t.pads,t.strides,y),f=Q.size(w),x=[{type:12,data:f},{type:12,data:t.dilations},{type:12,data:[t.strides[0],t.strides[1]]},{type:12,data:[t.pads[0],t.pads[1]]},{type:12,data:g}];Ht(t,x),x.push(...de(p,d,w));let S=["rank","rank"];o&&(x.push(...de(e[2].dims)),S.push("rank")),x.push(...de(w));let O=E=>{let P=ue("output",e[0].dataType,w.length),j=Le(P.type.tensor),U=Gt(t,P.type.value,j),z=Z("x",e[0].dataType,p.length),W=Z("w",e[1].dataType,d.length),N=[z,W];o&&N.push(Z("b",e[2].dataType,e[2].dims));let q=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:t.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Lt(t,q),`
  ${E.registerUniforms(q).declareVariables(...N,P)}

  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${P.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${y?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${y?1:2}], outputIndices[${y?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel / uniforms.output_channels_per_group;

    var value: ${P.type.value} = ${P.type.value}(0);
    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[${y?1:2}]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[${y?2:3}]) {
            continue;
          }

          let xVal = ${y?z.get("batch","xHeight","xWidth","input_channel"):z.get("batch","input_channel","xHeight","xWidth")};
          let wVal = ${W.get("output_channel","wInChannel","wHeight","wWidth")};
          value += xVal*wVal;
        }
      }
    }
    ${s}
    ${U}
    ${P.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:t.cacheKey,inputDependencies:S},getRunData:()=>({outputs:[{dims:r?r(w):w,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:x}),getShaderSource:O}},_d=(e,t,r)=>{let o=e.length>2,s=Ze(r[3]),p=Ze(r[2]),d=Q.size(r)/s/p,g=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/s],y=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/s],w=[r[0],r[1],r[2],r[3]/s],f=[{type:12,data:d},{type:6,data:[t.strides[0],t.strides[1]]},{type:6,data:[t.pads[0],t.pads[1]]}];Ht(t,f),f.push(...de(g,y,w));let x=(p-1)*t.strides[1]+y[1],S=O=>{let E=ue("output",e[0].dataType,w.length,s),P=Le(E.type.tensor),j=Gt(t,E.type.value,P),U=Z("x",e[0].dataType,g.length,s),z=Z("w",e[1].dataType,y.length,s),W=[U,z];o&&W.push(Z("b",e[2].dataType,e[2].dims,s));let N=o?"value += b[output_channel];":"",q=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Lt(t,q),`
  ${O.registerUniforms(q).declareVariables(...W,E)}
  ${O.mainStart()}
    ${O.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${p}u;
    let col = (index1 % width1) * ${p}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${U.type.value}, ${x}>;
    var values: array<${E.type.value}, ${p}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${y[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${x}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${U.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${U.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${y[1]}; w_width++) {
          let w_val = ${z.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${p}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${p}u; i++) {
      var value = values[i];
      ${N}
      ${j}
      ${E.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${t.cacheKey};${s};${p};${x};${y[0]};${y[1]}`,inputDependencies:o?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:f}),getShaderSource:S}}});var xo,ty,Cd,So=se(()=>{"use strict";xe();Re();yn();Oe();cr();xo=(e,t,r,o,s=!1)=>{let p=e[0].dims,d=e[1].dims,g=p[p.length-2],y=d[d.length-1],w=p[p.length-1],f=Ze(y),x=Ze(w),S=Ze(g),O=Q.size(r)/f/S,E=e.length>2,P=o?o.slice(0,-2):r.slice(0,-2),U=[Q.size(P),g,y],z=[{type:12,data:O},{type:12,data:g},{type:12,data:y},{type:12,data:w}];Ht(t,z),z.push(...de(P,p,d)),E&&z.push(...de(e[2].dims)),z.push(...de(U));let W=N=>{let q=wa("batch_dims",e[0].dataType,P.length),X=Z("a",e[0].dataType,p.length,x),te=Z("b",e[1].dataType,d.length,f),ie=ue("output",e[0].dataType,U.length,f),J=Le(ie.type.tensor),ne=Gt(t,ie.type.value,J),Ie=[X,te],Be="";if(E){let ge=s?f:1;Ie.push(Z("bias",e[2].dataType,e[2].dims.length,ge)),Be=`${s?`value += bias[col / ${ge}];`:`value += ${ie.type.value}(bias[row + i]);`}`}let qe=p.slice(0,-2),Ve=d.slice(0,-2),ze=ti(qe,P),fe=ti(Ve,P),Ge=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Lt(t,Ge);let Ae=(ge,Te)=>{let We=ge.rank,it=ge.name;if(We===2)return`var ${it}_indices = ${ge.type.indices}(0u, 0u);`;let ae=q.rank,ye=`var ${it}_indices: ${ge.type.indices};`;for(let Me=We-2-1,ot=ae-1;Me>=0;Me--,ot--)ye+=`
${it}_indices[${Me}] = ${ae>1?`batch_indices[${ot}]`:"batch_indices"};`;return Te.forEach(Me=>{ye+=`
${it}_indices[${Me}] = 0;`}),ye+=`${it}_indices[${We-2}] = 0u;
                     ${it}_indices[${We-1}] = 0u;`,ye},$e=()=>{let ge=`var a_data: ${X.type.value};`;for(let Te=0;Te<x;Te++)ge+=`
              let b_data${Te} = b[(b_offset + (k + ${Te}) * uniforms.N + col) / ${f}];`;for(let Te=0;Te<S;Te++){ge+=`a_data = a[(a_offset + (row + ${Te}) * uniforms.K + k) / ${x}];`;for(let We=0;We<x;We++)ge+=`
            values[${Te}] = fma(${te.type.value}(a_data${x===1?"":`[${We}]`}), b_data${We}, values[${Te}]);
`}return ge};return`
  ${N.registerUniforms(Ge).registerInternalVariables(q).declareVariables(...Ie,ie)}
  ${N.mainStart()}
    ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${f})) * ${f};
    var index1 = global_idx / (uniforms.N / ${f});
    let stride1 = uniforms.M / ${S};
    let row = (index1 % stride1) * ${S};
    let batch = index1 / stride1;

    ${r.length===2?"":`let batch_indices = ${q.offsetToIndices("batch")};`}
    ${Ae(X,ze)}
    let a_offset = ${X.indicesToOffset("a_indices")};
    ${Ae(te,fe)}
    let b_offset = ${te.indicesToOffset("b_indices")};
    var values: array<${ie.type.value}, ${S}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${x}) {
      ${$e()}
    }
    for (var i = 0u; i < ${S}u; i++) {
      var value = values[i];
      ${Be}
      ${ne}
      let cur_indices = ${ie.type.indices}(batch, row + i, col);
      let offset = ${ie.indicesToOffset("cur_indices")};
      ${ie.setByOffset(`offset / ${f}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${t.activation};${f};${x};${S};${s}`,inputDependencies:E?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(O/64)},programUniforms:z}),getShaderSource:W}},ty=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Cd=e=>{ty(e.inputs);let t=qt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!t)throw new Error("Can't use matmul on the given tensors");let r=t[t.length-1],o=e.inputs[0].dims[e.inputs[0].dims.length-1];r<8&&o<8?e.compute(xo(e.inputs,{activation:""},t)):e.compute(Oa(e.inputs,{activation:""},t))}});var Pa,Io,ry,xd,Ao,iy,ny,To,Co=se(()=>{"use strict";Re();wd();yn();$d();cr();So();ri();Pa=(e,t,r,o,s,p)=>{let d=e[0],g=e.slice(p?1:2,p?3:4),y=g.length,w=t[0],x=t.slice(2).map((E,P)=>E+(E-1)*(r[P]-1)),O=g.map((E,P)=>E+o[P]+o[P+y]).map((E,P)=>Math.floor((E-x[P]+s[P])/s[P]));return O.splice(0,0,d),O.splice(p?3:1,0,w),O},Io=[2,3,1,0],ry=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[1]*t.group;if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let s=e[0].dims.length-2;if(t.dilations.length!==s)throw new Error(`dilations should be ${s}D`);if(t.strides.length!==s)throw new Error(`strides should be ${s}D`);if(t.pads.length!==s*2)throw new Error(`pads should be ${s*2}D`);if(t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},xd=(e,t)=>{let r=e.kernelShape.slice();for(let p=2;p<t[1].dims.length;++p)r[p-2]===0&&(r[p-2]=t[1].dims[p]);let o=e.pads.slice();Ar.adjustPadsBasedOnAutoPad(t[0].dims,e.strides,e.dilations,r,o,e.format==="NHWC",e.autoPad);let s=Object.assign({},e);return Object.assign(s,{kernelShape:r,pads:o}),s},Ao=e=>{let t=Aa(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],s=e.dilations,p=e.group,d=e.kernel_shape,g=e.pads,y=e.strides,w=e.w_is_const();return{autoPad:o,format:r,dilations:s,group:p,kernelShape:d,pads:g,strides:y,wIsConst:w,...t,cacheKey:`${e.format};${t.activation};`}},iy=(e,t,r)=>{let o=xd(r,t),s=r.format==="NHWC";if(r.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&s&&t[1].dims[0]===r.group&&t[1].dims[1]===1&&r.dilations[0]===1&&r.dilations[1]===1){let te=Pa(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,s),ie=e.kernelCustomData.wT??e.compute(jt(t[1],Io),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=ie);let J=[t[0],ie];t.length===3&&J.push(t[2]),e.compute(_d(J,o,te),{inputs:J})}else e.compute($o(t,o));return}let p=t.length===3,d=t[0].dims[s?1:2],g=t[0].dims[s?2:3],y=t[0].dims[s?3:1],w=t[1].dims[2],f=t[1].dims[3],x=Pa(t[0].dims,t[1].dims,r.dilations,o.pads,r.strides,s),S=x[s?1:2],O=x[s?2:3],E=x[s?3:1],P=s&&w===d&&f===g&&r.pads[0]===0&&r.pads[1]===0;if(P||w===1&&f===1&&r.dilations[0]===1&&r.dilations[1]===1&&r.strides[0]===1&&r.strides[1]===1&&r.pads[0]===0&&r.pads[1]===0){let X=x[0],te,ie,J,ne=[];if(s){let qe=e.kernelCustomData.wT??e.compute(jt(t[1],Io),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];if(r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=qe),P){let Ve=d*g*y;te=t[0].reshape([1,X,Ve]),ie=qe.reshape([1,Ve,E]),J=[1,X,E]}else te=t[0].reshape([X,d*g,y]),ie=qe.reshape([1,y,E]),J=[X,S*O,E];ne.push(te),ne.push(ie)}else te=t[0].reshape([X,y,d*g]),ie=t[1].reshape([1,E,y]),J=[X,E,S*O],ne.push(ie),ne.push(te);p&&ne.push(t[2]);let Ie=J[2],Be=ne[0].dims[ne[0].dims.length-1];Ie<8&&Be<8?e.compute(xo(ne,o,x,J,s),{inputs:ne}):e.compute(Oa(ne,o,x,J,s),{inputs:ne});return}let j=!0,U=e.kernelCustomData.wT??e.compute(jt(t[1],Io),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=U);let z=[t[0],U];p&&z.push(t[2]);let W=s?S*O:E,N=s?E:S*O,q=w*f*y;e.compute(vd(z,o,x,W,N,q,p,j),{inputs:z})},ny=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&o.push(e.inputs[2]);let s=[0,t.pads[0],0,t.pads[1]],p=[1].concat(t.strides),d=[1].concat(t.dilations),g=[1].concat(t.kernelShape),y=xd({...t,pads:s,strides:p,dilations:d,kernelShape:g},o);e.compute($o(o,y,w=>r?[w[0],w[2],w[3]]:[]))},To=(e,t)=>{ry(e.inputs,t),e.inputs[0].dims.length===3?ny(e,t):iy(e,e.inputs,t)}});var ay,Sd,Id=se(()=>{"use strict";xe();dr();Oe();cr();Ea();_o();yn();ay=(e,t=!1,r,o,s=4)=>{let p=U=>{switch(U){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`
            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);
            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);
            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);
            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];
            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];
            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];
            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];
            return ${o}(v0, v1, v2, v3);
            `;default:throw new Error(`innerElementSize ${U} is not supported.`)}},d=e?`
      let coord = vec4<i32>(batch, iXR, iXC, xCh);
      `:`
      let coord = vec4<i32>(batch, xCh, iXR, iXC);
      `,g=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,y=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",w=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",f=e?"row":"col",x=e?"col":"row",S=`
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      let outRow = ${f} / outWidth;
      let outCol = ${f} % outWidth;

      let WRow = ${x} / (uniforms.filter_dims[1] * inChannels);
      let WCol = ${x} / inChannels % uniforms.filter_dims[1];
      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);
      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);
      if (xR < 0.0 || xR >= f32(${y}) || fract(xR) > 0.0) {
        return ${o}(0.0);
      }
      if (xC < 0.0 || xC >= f32(${w}) || fract(xC) > 0.0) {
        return ${o}(0.0);
      }
      let iXR = i32(xR);
      let iXC = i32(xC);
      let xCh = ${x} % inChannels;
      ${d}
      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${s}];`,O=e?`
      let col = colIn * ${s};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
        ${S}
      }
      return ${o}(0.0);`:`
      let col = colIn * ${s};
      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
        ${S}
      }
      return ${o}(0.0);`,E=`
      let col = colIn * ${s};
      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};
      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);
      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];
      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {
        let rowInner = row % inChannels;
        let coord = vec4<i32>(coordX, coordY, col, rowInner);
        ${p(s)}
      }
      return ${o}(0.0);
      `,P=Gt(r,o);return`
  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${e?O:E}
  }

  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${o} {
    ${e?E:O}
  }

  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${o}) {
    let col = colIn * ${s};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
      var value = valueInput;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${g}
      ${Ta(t)}
      ${P}
      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${s}] = value;
    }
  }`},Sd=(e,t,r,o,s,p,d,g)=>{let y=t.format==="NHWC",w=y?e[0].dims[3]:e[0].dims[1],f=r[0],x=y?r[2]:r[3],S=y?r[1]:r[2],O=y?r[3]:r[1],E=y?w%4===0&&O%4===0:x%4===0&&O%4===0,P=y?O:x*S,j=y?x*S:O,U=E?[8,8,1]:[P<=4||j<=4?4:16,P>4&&j<=4?4:16,1],z=E?[4,4,1]:[P<=4?1:4,P>4&&j<=4?1:4,1],W=[Math.ceil(P/U[0]/z[0]),Math.ceil(j/U[1]/z[1]),Math.ceil(f/U[2]/z[2])];Ye("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${W}`);let N=E?4:1,q=Math.max(U[0]*N,U[1]),X=E?4:1,te=[t.kernelShape[y?1:2],t.kernelShape[y?2:3]],ie=[te[0]+(t.dilations[0]<=1?0:(te[0]-1)*(t.dilations[0]-1)),te[1]+(t.dilations[1]<=1?0:(te[1]-1)*(t.dilations[1]-1))],J=[ie[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),ie[1]-1-Math.floor((t.pads[1]+t.pads[3])/2)],ne=[{type:6,data:o},{type:6,data:s},{type:6,data:p},{type:6,data:t.strides},{type:6,data:t.dilations},{type:6,data:te},{type:6,data:J}];Ht(t,ne),ne.push(...de(e[0].dims,e[1].dims));let Ie=["rank","rank"];d&&(ne.push(...de(e[2].dims)),Ie.push("rank")),ne.push(...de(r));let Be=qe=>{let Ve=Z("x",e[0].dataType,e[0].dims.length,X),ze=Z("w",e[1].dataType,e[1].dims.length,1),fe=ue("result",e[0].dataType,r.length,X),Ge=[Ve,ze],Ae="";if(d){let Te=Z("bias",e[2].dataType,e[2].dims.length,X);Ge.push(Te),Ae+=`
          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${Te.type.value} {
            return bias[coords.${y?"w":"y"}${E?"/ 4":""}];
          }`}let $e=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:te.length},{name:"pads",type:"i32",length:J.length}];Lt(t,$e);let ge=Le(e[0].dataType,1);if(ge!=="f16"&&ge!=="f32")throw new Error(`elemType ${ge} is not supported.`);return`
        ${ka("uniforms.result_strides")}
        ${qe.registerUniforms($e).declareVariables(...Ge,fe)};
        ${Ae}
        ${ay(y,d,t,Ve.type.value,N)}
        ${E?hn(z,U,ge,void 0,!y,q):gn(z,U,ge,void 0,!y,q,!1,void 0,g)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${t.cacheKey};${z};${U};${E}`,inputDependencies:Ie},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]},programUniforms:ne}),getShaderSource:Be}}});var oy,Eo,Ad=se(()=>{"use strict";xe();dr();Re();Oe();oy=(e,t,r,o,s,p=!1,d,g,y=!1)=>{let w=y?1:2,f=y?2:3,x=y?3:1,S=p?2:1,O=`
  fn setOutputAtIndex(flatIndex : u32, value : ${p?`vec4<${d}>`:d}) {
    result[flatIndex] = ${p?`vec4<${d}>`:d}(value);
  }`;o&&(O+=`
    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${p?`vec4<${d}>`:d} {
      return bias[coords.${y?"w":"y"}${p?"/ 4":""}];
    }`);let E=p?4:1,P=Z("W",t[1].dataType,t[1].dims.length,E),j=Z("Dy",t[0].dataType,t[0].dims.length,E),U=[j,P];o&&U.push(Z("bias",t[2].dataType,[r[x]].length,E));let z=ue("result",t[0].dataType,r.length,E),W=`{
        let batch: u32 = ${s?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];
        let r = ${s?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];
        let c = ${s?"global_id.y":"workgroup_id.y"} * ${S};
        let d1: u32 = ${s?"global_id.x":"workgroup_id.x"} * 4;

        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        var dotProd: array<vec4<${d}>, ${S}>;
        for (var i = 0; i < ${S}; i++) {
          dotProd[i] = vec4<${d}>(0.0);
        }
        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {
          var dyR = (${d}(dyCorner.x) + ${d}(wR)) / ${d}(uniforms.strides.x);
          let wRPerm = uniforms.filter_dims[0] - 1 - wR;
          if (dyR < 0.0 || dyR >= ${d}(uniforms.Dy_shape[1]) ||
              fract(dyR) > 0.0 || wRPerm < 0) {
            continue;
          }
          let idyR: u32 = u32(dyR);

          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {
            let dyC = (${d}(dyCorner.y) + ${d}(wC)) / ${d}(uniforms.strides.y);
            let dyC2 = (${d}(dyCorner.y) + 1.0 + ${d}(wC)) / ${d}(uniforms.strides.y);
            let wCPerm = uniforms.filter_dims[1] - 1 - wC;
            if (wCPerm < 0) {
              continue;
            }
            var bDyCVal = true;
            var bDyCVal2 = true;
            if (dyC < 0.0 || dyC >= ${d}(uniforms.Dy_shape[2]) ||
                fract(dyC) > 0.0) {
              bDyCVal = false;
            }
            if (dyC2 < 0.0 || dyC2 >= ${d}(uniforms.Dy_shape[2]) ||
                fract(dyC2) > 0.0) {
              bDyCVal2 = false;
            }

            let idyC: u32 = u32(dyC);
            let idyC2: u32 = u32(dyC2);
            if (bDyCVal && bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${j.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${d}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;

                xValue =  ${j.get("batch","idyR","idyC2","d2")};

                dotProd[1] = dotProd[1] + vec4<${d}>(dot(xValue, wValue0),
                                                    dot(xValue, wValue1),
                                                    dot(xValue, wValue2),
                                                    dot(xValue, wValue3));
              }
            } else if (bDyCVal) {
              let d2Length = uniforms.Dy_shape[${x}];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${j.get("batch","idyR","idyC","d2")};
                let tmpval = vec4<${d}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[0] = dotProd[0] + tmpval;
              }
            } else if (bDyCVal2) {
              let d2Length = uniforms.Dy_shape[3];
              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {
                let wValue0 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};
                let wValue1 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};
                let wValue2 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};
                let wValue3 = ${P.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};

                var xValue = ${j.get("batch","idyR","idyC2","d2")};
                let tmpval = vec4<${d}>(dot(xValue, wValue0),
                                      dot(xValue, wValue1),
                                      dot(xValue, wValue2),
                                      dot(xValue, wValue3));
                dotProd[1] = dotProd[1] + tmpval;
              }
            }
          }
        }

        for (var i: u32 = 0; i < ${S}; i = i + 1) {
          let value = dotProd[i] + ${o?"bias[c+i]":`vec4<${d}>(0.0)`};
          ${z.set("batch","r","c + i","d1","value")};
        }
      }`,N=`
          let outputIndices = ${z.offsetToIndices("global_idx")};
          let batch = ${z.indicesGet("outputIndices",0)};
          let d1 = ${z.indicesGet("outputIndices",x)};
          let r = ${z.indicesGet("outputIndices",w)};
          let c = ${z.indicesGet("outputIndices",f)};
          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
          let dyRCorner = dyCorner.x;
          let dyCCorner = dyCorner.y;
          let groupId = d1 / uniforms.output_channels_per_group;
          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
          // ? = to be determined. : = across all values in that axis.
          var dotProd = ${d}(0.0);
          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
            if (wR % uniforms.dilations.x != 0) {
              continue;
            }
            let dyR = (${d}(dyRCorner) + ${d}(wR)) / ${d}(uniforms.strides[0]);
            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
            if (dyR < 0.0 || dyR >= ${d}(uniforms.Dy_shape[${w}]) || fract(dyR) > 0.0 ||
                wRPerm < 0) {
              continue;
            }
            let idyR: u32 = u32(dyR);

            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
              if (wC % uniforms.dilations.y != 0) {
                continue;
              }
              let dyC = (${d}(dyCCorner) + ${d}(wC)) / ${d}(uniforms.strides.y);
              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
              if (dyC < 0.0 || dyC >= ${d}(uniforms.Dy_shape[${f}]) ||
                  fract(dyC) > 0.0 || wCPerm < 0) {
                continue;
              }
              let idyC: u32 = u32(dyC);
              var inputChannel = groupId * uniforms.input_channels_per_group;
              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {
                let xValue = ${y?j.get("batch","idyR","idyC","inputChannel"):j.get("batch","inputChannel","idyR","idyC")};
                let wValue = ${P.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};
                dotProd = dotProd + xValue * wValue;
                inputChannel = inputChannel + 1;
              }
            }
          }
          let value = dotProd + ${o?"bias[d1]":`${d}(0.0)`};
          ${z.setByOffset("global_idx","value")};
        `;return`
  ${e.registerUniforms(g).declareVariables(...U,z)}
  ${O}

    ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
  ${p?W:N}}`},Eo=(e,t,r)=>{let o=e.length>2,s=t.outputShape,p=Q.size(s),d=[Math.ceil(p/64),1,1];Ye("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${d}`);let g=t.format==="NHWC",y=["rank","rank"],w=[t.strides[0],t.strides[1]],f=[t.kernelShape[g?1:2],t.kernelShape[g?2:3]],x=[t.dilations[0],t.dilations[1]],S=[f[0]+(t.dilations[0]<=1?0:(t.kernelShape[g?1:2]-1)*(t.dilations[0]-1)),f[1]+(t.dilations[1]<=1?0:(t.kernelShape[g?2:3]-1)*(t.dilations[1]-1))],O=[S[0]-1-Math.floor((t.pads[0]+t.pads[2])/2),S[1]-1-Math.floor(t.pads[1]+t.pads[3])/2],E=!1,P=t.group,j=e[1].dims,U=j[0]/P,z=j[1],W=[{type:6,data:p},{type:12,data:w},{type:12,data:f},{type:12,data:x},{type:12,data:S},{type:6,data:O},{type:12,data:U},{type:12,data:z},...de(e[0].dims,e[1].dims)];o&&(W.push(...de(e[2].dims)),y.push("rank")),W.push(...de(s));let N=d[1]===1&&d[2]===1,q=X=>{let te=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:w.length},{name:"filter_dims",type:"u32",length:f.length},{name:"dilations",type:"u32",length:f.length},{name:"effective_filter_dims",type:"u32",length:S.length},{name:"pads",type:"i32",length:O.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],ie=Le(e[0].dataType);return`${oy(X,e,s,o,N,E,ie,te,g)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${t.cacheKey};`,inputDependencies:y},getRunData:()=>({dispatchGroup:{x:d[0],y:d[1],z:d[2]},outputs:[{dims:r?r(s):s,dataType:e[0].dataType}],programUniforms:W}),getShaderSource:q}}});var sy,uy,ly,Td,Ed,dy,cy,py,fy,kd,Od=se(()=>{"use strict";Id();Ad();cr();ri();sy=(e,t,r,o,s,p)=>(e-1)*t+r+(o-1)*s+1-p,uy=(e,t,r,o,s)=>{let p=Math.floor(e/2);t==="SAME_UPPER"?(r[o]=p,r[s]=e-p):t==="SAME_LOWER"&&(r[o]=e-p,r[s]=p)},ly=(e,t,r,o,s,p,d,g,y,w)=>{let f=e.length-2,x=w.length===0;if(y.length===0)for(let E=0;E<f;++E)y.push(0);let S=e[0],O=t[g?3:1]*s;for(let E=0,P=e.length-f-(g?1:0);E<f;++E,++P){let j=e[P],U=x?j*d[E]:w[E],z=sy(j,d[E],p[E],t[P],r[E],U);uy(z,o,p,E,E+f),x&&w.push(d[E]*(j-1)+y[E]+(t[P]-1)*r[E]+1-p[E]-p[E+f])}w.splice(0,0,S),w.splice(g?3:1,0,O)},Td=(e,t)=>{let r=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((x,S)=>x*S,1)===0){r.length=0;for(let x=2;x<t[1].dims.length;++x)r.push(t[1].dims[x])}let o=e.format==="NHWC";r.splice(0,0,t[1].dims[0]),r.splice(o?3:1,0,t[1].dims[1]);let s=e.pads.slice(),p=e.outputShape.slice(),d=e.outputPadding.slice(),g=t[0].dims,y=e.dilations.slice();if(y.reduce((x,S)=>x+S,0)===0){let x=t[0].dims.length-2;y=new Array(x).fill(1)}let w=e.strides.slice();if(w.reduce((x,S)=>x+S,0)===0){let x=t[0].dims.length-2;w=new Array(x).fill(1)}ly(g,r,y,e.autoPad,e.group,s,w,o,d,p);let f=Object.assign({},e);return Object.assign(f,{kernelShape:r,pads:s,outputPadding:d,outputShape:p,dilations:y,strides:w}),f},Ed=e=>{let t=Aa(e),r=e.format,o=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],s=e.dilations,p=e.group,d=e.kernelShape,g=e.pads,y=e.strides,w=e.wIsConst(),f=e.outputPadding,x=e.outputShape;return{autoPad:o,format:r,dilations:s,group:p,kernelShape:d,outputPadding:f,outputShape:x,pads:g,strides:y,wIsConst:w,...t,cacheKey:`${e.format};${t.activation};`}},dy=(e,t)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let r=e[0].dims[t.format==="NHWC"?e[0].dims.length-1:1],o=e[1].dims[0];if(r!==o)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let s=e[1].dims[1]*t.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==s))throw new Error("invalid bias");let p=e[0].dims.length-2;if(t.dilations.reduce((f,x)=>f+x,0)>0&&t.dilations.length!==p)throw new Error(`dilations should be ${p}D`);if(t.strides.reduce((f,x)=>f+x,0)>0&&t.strides.length!==p)throw new Error(`strides should be ${p}D`);if(t.pads.reduce((f,x)=>f+x,0)>0&&t.pads.length!==p*2)throw new Error(`pads should be ${p*2}D`);if(t.outputPadding.length!==p&&t.outputPadding.length!==0)throw new Error(`output_padding should be ${p}D`);if(t.kernelShape.reduce((f,x)=>f+x,0)>0&&t.kernelShape.length!==0&&t.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(t.outputShape.length!==0&&t.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},cy=[2,3,1,0],py=(e,t,r)=>{let o=Td(r,t),s=r.format==="NHWC",p=o.outputShape,d=p[s?3:1],g=t[0].dims[s?3:1];if(o.group!==1||d===1&&g===1){e.compute(Eo(t,o));return}let y=p[s?1:2],w=p[s?2:3],f=t[1].dims[2],x=t[1].dims[3],S=s?y*w:d,O=s?d:y*w,E=f*x*g,P=!0,j=e.kernelCustomData.wT??e.compute(jt(t[1],cy),{inputs:[1],outputs:[r.wIsConst?-2:-1]})[0];r.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=j);let U=[t[0],j],z=t.length===3;z&&(!s&&t[2].dims.length===1?U.push(t[2].reshape([t[2].dims[0],1,1])):U.push(t[2])),e.compute(Sd(U,o,p,S,O,E,z,P),{inputs:U})},fy=(e,t)=>{let r=t.format==="NHWC",o=[e.inputs[0].reshape(r?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];o.length===3&&o.push(e.inputs[2]);let s=t.kernelShape;(s.length===0||s[0]===0)&&(s=[e.inputs[1].dims[2]]);let p=t.dilations;(p.length===0||p[0]===0)&&(p=[1]);let d=t.strides;(d.length===0||d[0]===0)&&(d=[1]);let g=t.pads;g.length===0&&(g=[0,0]),g=[0,g[0],0,g[1]],d=[1].concat(d),p=[1].concat(p),s=[1].concat(s);let y=Td({...t,pads:g,strides:d,dilations:p,kernelShape:s},o);e.compute(Eo(o,y,w=>r?[w[0],w[2],w[3]]:[w[0],w[1],w[3]]))},kd=(e,t)=>{dy(e.inputs,t),e.inputs[0].dims.length===3?fy(e,t):py(e,e.inputs,t)}});var my,Pd,Rd,zd=se(()=>{"use strict";xe();Re();ft();Oe();my=(e,t,r,o)=>{let s=Q.size(t),p=t.length,d=Z("input",e,p),g=ue("output",e,p),y=r.dataType===6?r.getInt32Array()[0]:Number(r.getBigInt64Array()[0]),w=Q.normalizeAxis(y,p),f=x=>{let S=` i32(${d.indicesGet("inputIndices","uniforms.axis")}) `,O=_e("uniforms.input_shape","uniforms.axis",p),E=o.reverse?S+(o.exclusive?" + 1":""):"0",P=o.reverse?O:S+(o.exclusive?"":" + 1");return`
                ${x.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(d,g)}
                ${x.mainStart()}
                  ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${g.offsetToIndices("global_idx")};
                  var sum = ${g.type.value}(0);
                  let first : i32 = ${E};
                  let last : i32 = ${P};
                  for (var i : i32 = first; i < last; i++) {
                    ${d.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${d.getByIndices("inputIndices")};
                  }
                  ${g.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:o.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},{type:6,data:w},...de(t,t)]}),getShaderSource:f}},Pd=(e,t)=>{let r=e.inputs[0].dims,o=e.inputs[0].dataType,s=e.inputs[1];e.compute(my(o,r,s,t),{inputs:[0]})},Rd=e=>{let t=e.exclusive===1,r=e.reverse===1;return Pe({exclusive:t,reverse:r})}});var ko,Ra,Bd,hy,gy,Oo,Po,Md,yy,Dd,jd,Ud=se(()=>{"use strict";xe();Re();ft();Oe();ko="[a-zA-Z]|\\.\\.\\.",Ra="("+ko+")+",Bd="^"+Ra+"$",hy="("+Ra+",)*"+Ra,gy="^"+hy+"$",Oo=class{constructor(t=-1){this.symbolToIndices=new Map,this.inputIndex=t}addSymbol(t,r){let o=this.symbolToIndices.get(t);o===void 0?o=[r]:o.push(r),this.symbolToIndices.set(t,o)}},Po=class{constructor(t,r){this.equation=r;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[o,s]=r.includes("->")?r.split("->",2):[r,""];if(!o.match(RegExp(gy)))throw new Error("Invalid LHS term");if(o.split(",").forEach((g,y)=>{let w=t[y].dims.slice();if(!g.match(RegExp(Bd)))throw new Error("Invalid LHS term");let f=this.processTerm(g,!0,w,y);this.lhs.push(f)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([g,y])=>y.count===1||g==="...").map(([g])=>g).join("");else if(!s.match(RegExp(Ra)))throw new Error("Invalid RHS");s.match(RegExp(ko,"g"))?.forEach(g=>{if(g==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let y=this.symbolToInfo.get(g);if(y===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(y.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(t,r,o){let s=this.symbolToInfo.get(t);if(s!==void 0){if(s.dimValue!==r&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(o)}else s={count:1,dimValue:r,inputIndices:[o]};this.symbolToInfo.set(t,s)}processTerm(t,r,o,s=-1){let p=o.length,d=!1,g=[],y=0;if(!t.match(RegExp(Bd))&&!r&&t!=="")throw new Error("Invalid LHS term");let w=t.match(RegExp(ko,"g")),f=new Oo(s);return w?.forEach((x,S)=>{if(x==="..."){if(d)throw new Error("Only one ellipsis is allowed per input term");d=!0;let O=p-w.length+1;if(O<0)throw new Error("Ellipsis out of bounds");if(g=o.slice(y,y+O),this.hasEllipsis){if(this.ellipsisDims.length!==g.length||this.ellipsisDims.toString()!==g.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=g;else throw new Error("Ellipsis must be specified in the LHS");for(let E=0;E<g.length;E++){let P=String.fromCharCode("0".charCodeAt(0)+E);f.addSymbol(P,S+E),this.addSymbol(P,o[y++],s)}}else f.addSymbol(x,S+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(x,o[y++],s)}),f}},Md=e=>e+"_max",yy=(e,t,r,o)=>{let p=e.map(f=>f.length).map((f,x)=>Z(`input${x}`,t,f)),d=Q.size(o),g=ue("output",t,o.length),y=[...r.symbolToInfo.keys()].filter(f=>!r.rhs.symbolToIndices.has(f)),w=f=>{let x=[],S="var prod = 1.0;",O="var sum = 0.0;",E="sum += prod;",P=[],j=[],U=[],z=[],W=r.symbolToInfo.size===r.rhs.symbolToIndices.size;r.symbolToInfo.forEach((q,X)=>{if(r.rhs.symbolToIndices.has(X)){let te=r.rhs.symbolToIndices.get(X)?.[0];te!==void 0&&r.lhs.forEach((ie,J)=>{if(q.inputIndices.includes(J)){let ne=ie.symbolToIndices.get(X);if(ne===void 0)throw new Error("Invalid symbol error");ne.forEach(Ie=>{x.push(`${p[J].indicesSet(`input${J}Indices`,Ie,g.indicesGet("outputIndices",te))}`)})}})}else r.lhs.forEach((te,ie)=>{if(q.inputIndices.includes(ie)){let J=te.symbolToIndices.get(X);if(J===void 0)throw new Error("Invalid symbol error");J.forEach(ne=>{P.push(`${p[ie].indicesSet(`input${ie}Indices`,ne,`${X}`)}`)}),z.push(`prod *= ${p[ie].getByIndices(`input${ie}Indices`)};`)}}),j.push(`for(var ${X}: u32 = 0; ${X} < uniforms.${Md(X)}; ${X}++) {`),U.push("}")});let N=W?[...x,`let sum = ${p.map((q,X)=>q.getByIndices(`input${X}Indices`)).join(" * ")};`]:[...x,O,...j,...P,S,...z,E,...U];return`
            ${f.registerUniforms(y.map(q=>({name:`${Md(q)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...p,g)}

            ${f.mainStart()}
            ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${g.offsetToIndices("global_idx")};
            ${p.map((q,X)=>`var input${X}Indices: ${p[X].type.indices};`).join(`
`)}
            ${N.join(`
`)};
            ${g.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:r.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let f=y.filter(S=>r.symbolToInfo.has(S)).map(S=>({type:12,data:r.symbolToInfo.get(S)?.dimValue||0}));f.push({type:12,data:d});let x=e.map((S,O)=>[...de(S)]).reduce((S,O)=>S.concat(O),f);return x.push(...de(o)),{outputs:[{dims:o,dataType:t}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:x}},getShaderSource:w}},Dd=(e,t)=>{let r=new Po(e.inputs,t.equation),o=r.outputDims,s=e.inputs.map((p,d)=>p.dims);e.compute(yy(s,e.inputs[0].dataType,r,o))},jd=e=>{let t=e.equation.replace(/\s+/g,"");return Pe({equation:t})}});var by,Nd,vy,wy,Wd,Vd=se(()=>{"use strict";xe();Re();Oe();by=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=r.length<t.length?0:r.length-t.length,s=t.length<r.length?0:t.length-r.length;for(;o<r.length&&s<t.length;++o,++s)if(r[o]!==t[s]&&r[o]!==1&&t[s]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Nd=(e,t)=>{let r=e.length-t.length,o=[];for(let s=0;s<r;++s)o.push(e[s]);for(let s=0;s<t.length;++s)o.push(t[s]===1?e[s+r]:t[s]);return o},vy=(e,t)=>e.length>t.length?Nd(e,t):Nd(t,e),wy=e=>{let t=e[0].dims,r=Array.from(e[1].getBigInt64Array(),Number),o=vy(t,r),s=e[0].dataType,p=s===9?4:1,d=Math.ceil(Q.size(o)/p),g=w=>{let f=Z("input",s,t.length,p),x=ue("output",s,o.length,p),S;if(s===9){let O=(E,P,j="")=>`
          let outputIndices${P} = ${x.offsetToIndices(`outputOffset + ${P}u`)};
          let offset${P} = ${f.broadcastedIndicesToOffset(`outputIndices${P}`,x)};
          let index${P} = offset${P} / 4u;
          let component${P} = offset${P} % 4u;
          ${E}[${P}] = ${j}(${f.getByOffset(`index${P}`)}[component${P}]);
        `;S=`
        let outputOffset = global_idx * ${p};
        var data = vec4<u32>(0);
        ${O("data",0,"u32")}
        ${O("data",1,"u32")}
        ${O("data",2,"u32")}
        ${O("data",3,"u32")}
        ${x.setByOffset("global_idx","data")}
      }`}else S=`
        let outputIndices = ${x.offsetToIndices("global_idx")};
        let inputOffset = ${f.broadcastedIndicesToOffset("outputIndices",x)};
        ${x.setByOffset("global_idx",f.getByOffset("inputOffset"))}
      }`;return`
    ${w.registerUniform("vec_size","u32").declareVariables(f,x)}
    ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${S}`},y=[{type:12,data:d},...de(t,o)];return{name:"Expand",shaderCache:{hint:`${o.length}`,inputDependencies:["rank"]},getShaderSource:g,getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y})}},Wd=e=>{by(e.inputs),e.compute(wy(e.inputs),{inputs:[0]})}});var _y,Gd,Hd=se(()=>{"use strict";xe();Re();Oe();Ia();_y=e=>{let t=e[0].dataType,r=Q.size(e[0].dims),o=Q.size(e[1].dims),s=o%4===0,p=d=>{let g=Z("x",t,[1],4),y=Z("bias",t,[1],4),w=ue("y",t,[1],4),f=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],x=O=>`
      let bias${O}_offset: u32 = (global_idx * 4 + ${O}) % uniforms.bias_size;
      let bias${O} = ${y.getByOffset(`bias${O}_offset / 4`)}[bias${O}_offset % 4];`,S=s?`
      let bias = ${y.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${x(0)}${x(1)}${x(2)}${x(3)}
      let bias = ${g.type.value}(bias0, bias1, bias2, bias3);`;return`${d.registerUniforms(f).declareVariables(g,y,w)}

    ${vo(At(t))}

    ${d.mainStart(va)}
      ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${g.getByOffset("global_idx")};
      ${S}
      let x_in = x + bias;
      ${w.setByOffset("global_idx",wo("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${s}`,inputDependencies:["type","type"]},getShaderSource:p,getRunData:d=>({outputs:[{dims:d[0].dims,dataType:d[0].dataType}],programUniforms:[{type:12,data:Math.ceil(r/4)},{type:12,data:o}],dispatchGroup:{x:Math.ceil(r/va/4)}})}},Gd=e=>{e.inputs.length<2||Q.size(e.inputs[1].dims)===0?Ql(e):e.compute(_y(e.inputs))}});var $y,Cy,Ld,Fd,qd=se(()=>{"use strict";xe();Re();ft();Oe();$y=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},Cy=(e,t)=>{let r=e[0].dims,o=e[1].dims,s=r.length,p=Q.normalizeAxis(t.axis,s),d=r.slice(0);d.splice(p,1,...o);let g=r[p],y=e[0].dataType===9?4:1,w=Math.ceil(Q.size(d)/y),f=[{type:12,data:w},{type:6,data:g},{type:12,data:p},...de(e[0].dims,e[1].dims,d)],x=S=>{let O=Z("data",e[0].dataType,e[0].dims.length,y),E=Z("inputIndices",e[1].dataType,e[1].dims.length),P=ue("output",e[0].dataType,d.length,y),j=z=>{let W=o.length,N=`var indicesIndices${z}  = ${E.type.indices}(0);`;for(let q=0;q<W;q++)N+=`${W>1?`indicesIndices${z}[${q}]`:`indicesIndices${z}`} = ${d.length>1?`outputIndices${z}[uniforms.axis + ${q}]`:`outputIndices${z}`};`;N+=`
          var idx${z} = ${E.getByIndices(`indicesIndices${z}`)};
          if (idx${z} < 0) {
            idx${z} = idx${z} + uniforms.axisDimLimit;
          }
          var dataIndices${z} : ${O.type.indices};
        `;for(let q=0,X=0;q<s;q++)q===p?(N+=`${s>1?`dataIndices${z}[${q}]`:`dataIndices${z}`} = u32(idx${z});`,X+=W):(N+=`${s>1?`dataIndices${z}[${q}]`:`dataIndices${z}`} = ${d.length>1?`outputIndices${z}[${X}]`:`outputIndices${z}`};`,X++);return N},U;if(e[0].dataType===9){let z=(W,N,q="")=>`
          let outputIndices${N} = ${P.offsetToIndices(`outputOffset + ${N}u`)};
          ${j(N)};
          let offset${N} = ${O.indicesToOffset(`dataIndices${N}`)};
          let index${N} = offset${N} / 4u;
          let component${N} = offset${N} % 4u;
          ${W}[${N}] = ${q}(${O.getByOffset(`index${N}`)}[component${N}]);
        `;U=`
        let outputOffset = global_idx * ${y};
        var value = vec4<u32>(0);
        ${z("value",0,"u32")}
        ${z("value",1,"u32")}
        ${z("value",2,"u32")}
        ${z("value",3,"u32")}
        ${P.setByOffset("global_idx","value")}
      `}else U=`
      let outputIndices = ${P.offsetToIndices("global_idx")};
      ${j("")};
      let value = ${O.getByIndices("dataIndices")};
      ${P.setByOffset("global_idx","value")};
      `;return`
      ${S.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(O,E,P)}
      ${S.mainStart()}
        ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${U}
      }`};return{name:"Gather",shaderCache:{hint:t.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:f}),getShaderSource:x}},Ld=e=>Pe({axis:e.axis}),Fd=(e,t)=>{let r=e.inputs;$y(r),e.compute(Cy(e.inputs,t))}});var xy,Sy,Kd,Jd,Yd=se(()=>{"use strict";xe();Re();ft();Oe();xy=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Sy=(e,t)=>{let r=e[0].dims,o=e[0].dataType,s=r.length,p=e[1].dims,d=e[1].dataType,g=Q.normalizeAxis(t.axis,s),y=r[g],w=p.slice(0),f=Q.size(w),x=Z("input",o,s),S=Z("indicesInput",d,p.length),O=ue("output",o,w.length),E=[{type:12,data:f},{type:6,data:y},{type:12,data:g}];return E.push(...de(r,p,w)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:w,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:E}),getShaderSource:U=>`
      ${U.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(x,S,O)}
      ${U.mainStart()}
      ${U.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${O.offsetToIndices("global_idx")};

      var idx = ${S.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${x.type.indices}(outputIndices);
      ${x.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${x.getByIndices("inputIndices")};

      ${O.setByOffset("global_idx","value")};
  }`}},Kd=e=>Pe({axis:e.axis}),Jd=(e,t)=>{let r=e.inputs;xy(r),e.compute(Sy(e.inputs,t))}});var Iy,Ay,Zd,Qd,Xd=se(()=>{"use strict";xe();Re();Oe();Iy=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Ay=(e,t)=>{let r=e[0].dims.slice(),o=e[1].dims.slice(),[s,p,d]=ga.getShapeOfGemmResult(r,t.transA,o,t.transB,e.length===3?e[2].dims:void 0),g=[s,p];if(!g)throw new Error("Can't use gemm on the given tensors");let y=Q.size(g),w=[{type:12,data:y},{type:12,data:s},{type:12,data:p},{type:12,data:d},{type:1,data:t.alpha},{type:1,data:t.beta}],f=["type","type"];e.length===3&&(w.push(...de(e[2].dims)),f.push("rank")),w.push(...de(g));let x=S=>{let O="";t.transA&&t.transB?O="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":t.transA&&!t.transB?O="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!t.transA&&t.transB?O="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!t.transA&&!t.transB&&(O="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let E=t.alpha===1?"":"value *= uniforms.alpha;",P=Z("a",e[0].dataType,e[0].dims),j=Z("b",e[1].dataType,e[1].dims),U=P.type.value,z=null,W=[P,j];e.length===3&&(z=Z("c",e[2].dataType,e[2].dims.length),W.push(z));let N=ue("output",e[0].dataType,g.length);W.push(N);let q=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${S.registerUniforms(q).declareVariables(...W)}

  ${S.mainStart()}
    ${S.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${U}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${O}
    }

    ${E}
    ${(()=>z!=null?`let cOffset = ${z.broadcastedIndicesToOffset("vec2(m, n)",N)}; value += ${U}(uniforms.beta) * ${z.getByOffset("cOffset")};`:"")()}
    output[global_idx] = value;
  }`};return{name:"Gemm",shaderCache:{hint:`${t.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:g,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w}),getShaderSource:x}},Zd=e=>{let t=e.transA,r=e.transB,o=e.alpha,s=e.beta;return{transA:t,transB:r,alpha:o,beta:s,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Qd=(e,t)=>{Iy(e.inputs),e.compute(Ay(e.inputs,t))}});var Ty,Ey,ky,ec,tc=se(()=>{"use strict";xe();Re();Oe();Ty=(e,t)=>{let r=e[0].dims,o=r,s=2,p=Q.sizeToDimension(r,s),d=Q.sizeFromDimension(r,s),g=Ze(d),y=d/g,w=[r[0],r[1],y],f=["rank","type","type"],x=[{type:12,data:d},{type:12,data:y}];x.push(...de(w,w));let S=O=>{let E=Z("x",e[0].dataType,w.length,g),P=Z("scale",e[1].dataType,e[1].dims),j=Z("bias",e[2].dataType,e[2].dims),U=ue("output",e[0].dataType,w.length,g),z=[E,P,j,U],W=E.type.value,N=g===1?"f32":`vec${g}<f32>`,q=64,X=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`
  var<workgroup> meanShared : f32;
  var<workgroup> squaredNormShared : f32;
  var<workgroup> workgroupShared : array<${N}, ${q}>;
  const workgroupSize = ${q}u;
  ${O.registerUniforms(X).declareVariables(...z)}
  ${O.mainStart(q)}
    let norm = global_idx / workgroupSize;
    let batch = norm / uniforms.x_shape[1];
    let channel = norm % uniforms.x_shape[1];
    let localIndex = local_id.x;

    // initialize workgroup memory
    var initial = ${N}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      initial = initial + ${N}(${E.get("batch","channel","h")});
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the mean of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      meanShared = ${Tt("workgroupShared[0]",g)} / f32(uniforms.normSize);
    }
    workgroupBarrier();

    // reinitialize workgroup memory.
    initial = ${N}(0);
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let deviation =  ${N}(${E.get("batch","channel","h")}) - ${N}(meanShared);
      initial = initial + deviation * deviation;
    }
    workgroupShared[localIndex] = initial;
    workgroupBarrier();

    // Calculate the sum of square of deviation of current channel data.
    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (localIndex < currSize) {
        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];
      }
      workgroupBarrier();
    }
    if (localIndex == 0) {
      squaredNormShared = ${Tt("workgroupShared[0]",g)};
    }
    workgroupBarrier();

    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${t.epsilon}));
    let channelScale = invStdDev * f32(${P.getByOffset("channel")});
    let channelShift = f32(${j.getByOffset("channel")}) - meanShared * channelScale;
    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {
      let value = ${E.get("batch","channel","h")} * ${W}(${N}(channelScale)) + ${W}(${N}(channelShift));
      ${U.set("batch","channel","h","value")};
    }
  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${t.epsilon};${g}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:p},programUniforms:x}),getShaderSource:S}},Ey=(e,t,r,o,s,p,d,g)=>{let y=Ze(d),w=64,f=y===1?"vec2f":`mat2x${y}f`,x=y===1?"f32":`vec${y}f`,S=(X,te)=>`${f}(${X}, ${te})`,O=s*d/y,E=Math.ceil(p/w),P=["type"],j=[{type:12,data:E},{type:12,data:p},{type:12,data:Math.floor(d/y)},{type:12,data:Math.floor(p*d/y)}],U=X=>{let te=Z("input",t.dataType,t.dims,y);return`
  ${X.declareVariables(te)}
  @group(0) @binding(1) var<storage, read_write> output : array<${f}>;
  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};
  @group(0) @binding(2) var<uniform> uniforms: Uniforms;

  ${X.mainStart(w)}
    let currentImageNumber = global_idx / ${w} / uniforms.C;
    let currentChannelNumber = (global_idx / ${w}) % uniforms.C;
    let wgId = global_idx % ${w};
    let wgOffset = wgId * uniforms.wg_size;
    if (wgOffset >= uniforms.H) {
        return;
    }
    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);

    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;
    var sum = ${gt("f32",y)};
    var squaredSum = ${gt("f32",y)};
    for (var i: u32 = wgOffset; i < wgMax; i++) {
        let value = ${x}(input[offset + i * uniforms.C]);
        sum += value;
        squaredSum += value * value;
    }
    output[global_idx] = ${S("sum","squaredSum")};
  }`},z=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${y}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:[s,d,w,2],dataType:1}],dispatchGroup:{x:s*d/y},programUniforms:j}),getShaderSource:U},{inputs:[t],outputs:[-1]})[0],W=[{type:12,data:O},{type:12,data:p},{type:12,data:Math.floor(d/y)},{type:12,data:Math.floor(w*d/y)}],N=["type","type","type"],q=X=>{let te=Z("scale",r.dataType,r.dims,y),ie=Z("bias",o.dataType,o.dims,y);return`
  @group(0) @binding(0) var<storage, read> input : array<${f}>;
  @group(0) @binding(1) var<storage, read> scale : array<${te.type.storage}>;
  @group(0) @binding(2) var<storage, read> bias : array<${ie.type.storage}>;
  @group(0) @binding(3) var<storage, read_write> output : array<${f}>;
  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};
  @group(0) @binding(4) var<uniform> uniforms: Uniforms;

  ${X.mainStart()}
    ${X.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}
    let currentImageNumber = global_idx / uniforms.C;
    let currentChannelNumber = global_idx % uniforms.C;

    let offset = currentImageNumber * uniforms.image_size;
    var sum = ${gt("f32",y)};
    var squaredSum = ${gt("f32",y)};
    for (var i: u32 = 0; i < ${w}; i++) {
        let value = input[offset + i + currentChannelNumber * ${w}];
        sum += value[0];
        squaredSum += value[1];
    }
    sum = sum / f32(uniforms.H);
    squaredSum = squaredSum / f32(uniforms.H);
    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${g}));
    let channelScale = invStdDev * ${x}(scale[currentChannelNumber]);
    let channelShift = ${x}(bias[currentChannelNumber]) - sum * channelScale;

    output[global_idx] = ${S("channelScale","channelShift")};
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${y};${g}`,inputDependencies:N},getRunData:()=>({outputs:[{dims:[s,d,2],dataType:1}],dispatchGroup:{x:Math.ceil(O/64)},programUniforms:W}),getShaderSource:q},{inputs:[z,r,o],outputs:[-1]})[0]},ky=(e,t,r)=>{let o=t[0].dims,s=o,p=o[0],d=o[o.length-1],g=Q.sizeFromDimension(o,1)/d,y=Ze(d),w=Q.size(s)/y,f=[{type:12,data:g},{type:12,data:Math.floor(d/y)}],x=["type","type"],S=Ey(e,t[0],t[1],t[2],p,g,d,r.epsilon),O=E=>{let P=Le(t[0].dataType),j=y===1?"vec2f":`mat2x${y}f`,U=y===1?P:`vec${y}<${P}>`,z=Z("input",t[0].dataType,t[0].dims,y),W=ue("output",t[0].dataType,s,y);return`
  @group(0) @binding(0) var<storage, read> input : array<${z.type.storage}>;
  @group(0) @binding(1) var<storage, read> scaleInput : array<${j}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${W.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${E.mainStart()}
    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);
    let currentChannelNumber = global_idx % uniforms.C;

    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;
    let scale = scaleInput[scaleOffset];
    output[global_idx] = fma(input[global_idx], ${U}(scale[0]), ${U}(scale[1]));
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${y}`,inputDependencies:x},getRunData:()=>({outputs:[{dims:s,dataType:t[0].dataType}],dispatchGroup:{x:Math.ceil(w/64)},programUniforms:f}),getShaderSource:O},{inputs:[t[0],S]})},ec=(e,t)=>{t.format==="NHWC"?ky(e,e.inputs,t):e.compute(Ty(e.inputs,t))}});var Oy,Py,rc,ic=se(()=>{"use strict";xe();Re();Oe();Oy=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Py=(e,t,r)=>{let o=e[0].dims,s=e[1],p=e[2],d=o,g=Q.normalizeAxis(t.axis,o.length),y=Q.sizeToDimension(o,g),w=Q.sizeFromDimension(o,g),f=Q.size(s.dims),x=p?Q.size(p.dims):0;if(f!==w||p&&x!==w)throw new Error(`Size of X.shape()[axis:] == ${w}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${f} and bias size of ${x}`);let S=[];for(let N=0;N<o.length;++N)N<g?S.push(o[N]):S.push(1);let O=Ze(w),E=["type","type"],P=[{type:12,data:y},{type:1,data:w},{type:12,data:Math.floor(w/O)},{type:1,data:t.epsilon}];p&&E.push("type");let j=r>1,U=r>2,z=N=>{let q=Le(e[0].dataType),X=[Z("x",e[0].dataType,e[0].dims,O),Z("scale",s.dataType,s.dims,O)];p&&X.push(Z("bias",p.dataType,p.dims,O)),X.push(ue("output",e[0].dataType,d,O)),j&&X.push(ue("mean_data_output",1,S)),U&&X.push(ue("inv_std_output",1,S));let te=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${N.registerUniforms(te).declareVariables(...X)}
  ${N.mainStart()}
    ${N.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${gt("f32",O)};
    var mean_square_vector = ${gt("f32",O)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${Vt(q,O,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Tt("mean_vector",O)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Tt("mean_square_vector",O)} / uniforms.norm_size - mean * mean + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${Vt(q,O,"x[j + offset]")};
      let f32scale = ${Vt(q,O,"scale[j]")};
      output[j + offset] = ${X[0].type.value}((f32input - mean) * inv_std_dev * f32scale
        ${p?`+ ${Vt(q,O,"bias[j]")}`:""}
      );
    }

    ${j?"mean_data_output[global_idx] = mean":""};
    ${U?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},W=[{dims:d,dataType:e[0].dataType}];return j&&W.push({dims:S,dataType:1}),U&&W.push({dims:S,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${O};${r}`,inputDependencies:E},getRunData:()=>({outputs:W,dispatchGroup:{x:Math.ceil(y/64)},programUniforms:P}),getShaderSource:z}},rc=(e,t)=>{Oy(e.inputs),e.compute(Py(e.inputs,t,e.outputCount))}});var Ry,zy,nc,ac,oc=se(()=>{"use strict";xe();Re();ft();Oe();Ry=(e,t)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let r=e[0],o=r.dims.length;if(r.dims[o-1]!==t.k)throw new Error("The last dim of input shape does not match the k value");let s=Math.floor((t.k+t.blockSize-1)/t.blockSize),p=t.blockSize/8*t.bits,d=e[1];if(!Q.areEqual(d.dims,[t.n,s,p]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let y=e[2].dims;if(Q.size(y)!==t.n*s)throw new Error("scales input size error.");if(e.length===4){let f=e[3].dims,x=t.bits>4?t.n*s:t.n*Math.floor((s+1)/2);if(Q.size(f)!==x)throw new Error("zeroPoints input size error.")}},zy=(e,t)=>{let r=e[0].dims,o=r.length,s=r.slice(0,o-1).concat(t.n),p=r[o-2],g=t.blockSize/8*t.bits/4,y=Ze(p),w=Ze(t.n),f=Ze(t.k),x=Ze(g),S=Q.size(s)/w/y,O=[{type:12,data:S},{type:12,data:t.k},{type:12,data:t.n},{type:12,data:t.accuracyLevel},{type:12,data:t.bits},{type:12,data:t.blockSize}],E=r.slice();E.splice(-1,1,t.k/f);let P=Q.convertShape(e[1].dims).slice();P.splice(-1,1,g/x),O.push(...de(E)),O.push(...de(P)),O.push(...de(e[2].dims)),e.length===4&&O.push(...de(Q.convertShape(e[3].dims)));let j=s.slice();j.splice(-1,1,t.n/w),O.push(...de(j));let U=z=>{let W=Z("a",e[0].dataType,E.length,f),N=Z("b",12,P.length,x),q=Z("scales",e[2].dataType,e[2].dims.length),X=[W,N,q],te=e.length===4?Z("zero_points",12,e[3].dims.length):void 0;te&&X.push(te);let ie=ue("output",e[0].dataType,s.length,w),J=[{name:"output_size",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}],ne=Math.floor((t.k+t.blockSize-1)/t.blockSize),Ie=Le(e[0].dataType),Be=(()=>{switch(f){case 1:return`array<${Ie}, 8>`;case 2:return`mat4x2<${Ie}>`;case 4:return`mat2x4<${Ie}>`;default:throw new Error(`${f}-component is not supported.`)}})(),qe=`
        fn dequantize(quantized: ${Be}, zero_point: ${Ie}, scale: ${Ie}) -> ${Be} {
          ${(()=>f===1?`var dequantized = ${Be}(${Array.from({length:8},(fe,Ge)=>`(quantized[${Ge}] - zero_point) * scale`).join(", ")});
              return dequantized;`:`var zero_points: ${Be} = ${Be}(${Array(8).fill("zero_point").join(",")});
              return (quantized - zero_points) * scale;`)()}
        }`,Ve=`
        fn ortUnpack8x4snorm(value: u32) -> ${Be} {
          var quantized: ${Be};
          var offset: u32 = 0;
          let count: u32 = 4;
          for (var i: u32 = 0; i < 8u; i++) {
            var result = ${Ie}(extractBits(value, offset, count));
            ${(()=>{switch(f){case 1:return"quantized[i] = result;";case 2:return"quantized[i / 2][i % 2] = result;";case 4:return"quantized[i / 4][i % 4] = result;";default:throw new Error(`${f}-component is not supported.`)}})()}
            offset += count;
          }
          return quantized;
        }`,ze=te?`
          zero_point_offset += 4;
          if (zero_point_offset == 32) {
            zero_point_offset = 0;
            zero_point_index++;
            zero_point_word = ${te.getByOffset("zero_point_index")};
          }`:"";return`
        ${qe};
        ${Ve};
        ${z.registerUniforms(J).declareVariables(...X,ie)}
        ${z.mainStart()}
          ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var output_values: array<${ie.type.value}, ${y}>;
          var output_indices = ${ie.offsetToIndices("global_idx")};
          var n = ${ie.indicesGet("output_indices",o-1)};
          var m = ${ie.indicesGet("output_indices",o-2)};
          var a_indices: ${W.type.indices} = output_indices;
          // Two zero points are packed into one byte because uniforms.bits <= 4.
          // zero_point_offset is either 0 or 4. It is bit offset within one byte.
          // TODO support zero_point_offset for bits > 4
          ${te?`
          var zero_point_index: u32 = n * ${w} * ((${ne} + 1) / 2) / 4;
          var zero_point_word: u32 = ${te.getByOffset("zero_point_index")};
          var zero_point_offset: u32 = 0;`:""}
          var scale_index = n * ${ne*w};
          var b_indices: ${N.type.indices};
          for (var c: u32 = 0; c < ${w}; c++) {
            ${N.indicesSet("b_indices","0",`n * ${w} + c`)};
            var block_offset: u32 = 0;
            for (var block: u32 = 0; block < ${ne}; block++) {
              // The scale and zero points are computed per block.
              let scale = ${q.getByOffset("scale_index")};
              // The default zero point is 8 for unsigned 4-bit quantization.
              let zero_point = ${Ie}(${te?"extractBits(zero_point_word, zero_point_offset, 4)":8});
              ${N.indicesSet("b_indices","1","block")};
              var word_offset: u32 = block_offset;
              for (var word: u32 = 0; word < ${g}; word += ${x}) {
                ${N.indicesSet("b_indices","2","word")};
                let b_data = ${N.getByIndices("b_indices")};
                for (var i: u32 = 0; i < ${x}; i++) {
                  let b_value = ${x===1?"b_data":"b_data[word + i]"};
                  let b_quantized_values: ${Be} = ortUnpack8x4snorm(b_value);
                  let b_dequantized_values = dequantize(b_quantized_values, zero_point, scale);
                  // Number of B elements per 32-bit word is 32/bits = 32/4 = 8
                  var offset: u32 = word_offset;
                  for (var j: u32 = 0; j < 8/${f}; j++) {
                    ${W.indicesSet("a_indices",o-1,`offset/${f}`)};
                    for (var k: u32 = 0; k < ${y}u; k++) {
                      ${W.indicesSet("a_indices",o-2,`m * ${y} + k`)};
                      let a_data = ${W.getByIndices("a_indices")};
                      output_values[k]${w>1?"[c]":""} += ${f===1?"a_data * b_dequantized_values[j]":"dot(a_data, b_dequantized_values[j])"};
                    }
                    offset += ${f};
                  }
                  word_offset += 8;
                }
              }
              scale_index++;
              ${ze}
              block_offset += uniforms.block_size;
            }
            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.
            ${te?`if (zero_point_offset % 8 > 0) {
                ${ze}
              }`:""}
            }
            for (var k: u32 = 0u; k < ${y}u; k++) {
              ${ie.indicesSet("output_indices",o-2,`${y+" * m + k"}`)};
              ${ie.setByIndices("output_indices","output_values[k]")}
            }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${t.cacheKey};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:O}),getShaderSource:U}},nc=(e,t)=>{Ry(e.inputs,t),e.compute(zy(e.inputs,t))},ac=e=>Pe(e)});var By,uc,sc,My,Ro,lc,dc=se(()=>{"use strict";xe();Re();ft();ma();bo();Oe();ri();By=(e,t)=>{let r=e[0],o=e[1],s=e[2],p=e[3],d=e[4],g=e[5],y=e[6],w=e[7];if(r.dims.length!==3&&r.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let f=!1,x=r.dims[0],S=r.dims[1],O=r.dims.length===3?f?r.dims[2]/3:r.dims[2]:t.numHeads*r.dims[4],E=S,P=0,j=0,U=Math.floor(O/t.numHeads);if(y&&w){if(y.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(w.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');P=y.dims[2],j=y.dims[2]}else if(y||w)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let z;if(o){if(r.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(o.dims.length<3||o.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(r.dims[0]!==o.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(o.dims.length===3){if(o.dims[2]!==r.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');z=2,E=o.dims[1]}else if(o.dims.length===5){if(o.dims[2]!==t.numHeads||o.dims[3]!==2||o.dims[4]!==U)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(s)throw new Error('Expect "value" be none when "key" has packed kv format.');z=5,E=o.dims[1]}else{if(o.dims[1]!==t.numHeads||o.dims[3]!==U)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');z=0,E=o.dims[2]}}else{if(r.dims.length!==3&&r.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(r.dims.length===5&&(r.dims[2]!==t.numHeads||r.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');z=3}if(p){if(p.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&r.dims.length===5&&r.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let W=0;if(d){W=8;let ie=d.dims;throw ie.length===1?ie[0]===x?W=1:ie[0]===3*x+2&&(W=3):ie.length===2&&ie[0]===x&&ie[1]===E&&(W=5),W===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)'):new Error("Mask not supported")}let N=!1,q=O;if(s){if(s.dims.length!==3&&s.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(r.dims[0]!==s.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(s.dims.length===3){if(E!==s.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');q=s.dims[2]}else{if(E!==s.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');q=s.dims[1]*s.dims[3],N=!0}}let X=P+E,te=!1;if(d)throw new Error("Key padding mask is not supported");if(g)throw new Error("extraAddQk is not supported");if(y)throw new Error("pastKey is not supported");if(w)throw new Error("pastValue is not supported");return{batchSize:x,sequenceLength:S,pastSequenceLength:P,kvSequenceLength:E,totalSequenceLength:X,maxSequenceLength:j,inputHiddenSize:0,hiddenSize:O,vHiddenSize:q,headSize:U,vHeadSize:Math.floor(q/t.numHeads),numHeads:t.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:t.maskFilterValue,maskType:W,scale:t.scale,broadcastResPosBias:te,passPastInKv:N,qkvFormat:z}},uc=e=>Pe({...e}),sc=Pe({perm:[0,2,1,3]}),My=(e,t,r,o,s,p,d)=>{let g=[o,s,p],y=Q.size(g),w=[{type:12,data:y},{type:12,data:d},{type:12,data:p}],f=x=>{let S=ue("qkv_with_bias",t.dataType,g),O=Z("qkv",t.dataType,g),E=Z("bias",r.dataType,g),P=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${x.registerUniforms(P).declareVariables(O,E,S)}
  ${x.mainStart()}
    ${x.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:g,dataType:t.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(y/64)},programUniforms:w}),getShaderSource:f},{inputs:[t,r],outputs:[-1]})[0]},Ro=(e,t,r,o,s,p,d,g)=>{let y=p;if(d){if(o===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return y=My(e,p,d,t,o,r*s,g),y=y.reshape([t,o,r,s]),e.compute(jt(y,sc.perm),{inputs:[y],outputs:[-1]})[0]}else return p.dims.length===3&&(y=p.reshape([t,o,r,s])),e.compute(jt(y,sc.perm),{inputs:[y],outputs:[-1]})[0]},lc=(e,t)=>{let r=By(e.inputs,t);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let o=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,s=Ro(e,r.batchSize,r.numHeads,r.sequenceLength,r.headSize,e.inputs[0],e.inputs[3],0);if(o)return Ca(e,s,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],r,t);let p=Ro(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.headSize,e.inputs[1],e.inputs[3],r.hiddenSize),d=Ro(e,r.batchSize,r.numHeads,r.kvSequenceLength,r.vHeadSize,e.inputs[2],e.inputs[3],2*r.hiddenSize);Ca(e,s,p,d,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],r,t)}});var Dy,jy,Uy,Ny,Wy,Vy,Gy,Hy,cc,pc=se(()=>{"use strict";xe();Re();Oe();Dy=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let t=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(t=e[3].dims[0]*2===e[1].dims[0]),!t)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},jy=(e,t,r)=>{let o="";for(let s=t-1;s>=0;--s)o+=`
            k = i32(${e.indicesGet("indices",s)}) - ${_e("uniforms.pads",s,r)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${_e("uniforms.x_shape",s,t)})) {
              break;
            }
            offset += k * i32(${_e("uniforms.x_strides",s,t)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${o}
            value = x[offset];
          }
      `},Uy=(e,t,r)=>{let o="";for(let s=t-1;s>=0;--s)o+=`
                k = i32(${e.indicesGet("indices",s)}) - ${_e("uniforms.pads",s,r)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${_e("uniforms.x_shape",s,t)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${_e("uniforms.x_shape",s,t)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${_e("uniforms.x_strides",s,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},Ny=(e,t,r)=>{let o="";for(let s=t-1;s>=0;--s)o+=`
                k = i32(${e.indicesGet("indices",s)}) - ${_e("uniforms.pads",s,r)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${_e("uniforms.x_shape",s,t)})) {
                  k = i32(${_e("uniforms.x_shape",s,t)}) - 1;
                }
                offset += k * i32(${_e("uniforms.x_strides",s,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},Wy=(e,t,r)=>{let o="";for(let s=t-1;s>=0;--s)o+=`
                k = i32(${e.indicesGet("indices",s)}) - ${_e("uniforms.pads",s,r)};
                if (k < 0)  {
                  k += i32(${_e("uniforms.x_shape",s,t)}]);
                }
                if (k >= i32(${_e("uniforms.x_shape",s,t)})) {
                  k -= i32(${_e("uniforms.x_shape",s,t)});
                }
                offset += k * i32(${_e("uniforms.x_strides",s,t)});
            `;return`
              var offset = 0;
              var k = 0;
              ${o}
              value = x[offset];
          `},Vy=(e,t,r)=>{switch(r.mode){case 0:return jy(e,t,r.pads.length);case 1:return Uy(e,t,r.pads.length);case 2:return Ny(e,t,r.pads.length);case 3:return Wy(e,t,r.pads.length);default:throw new Error("Invalid mode")}},Gy=(e,t)=>{let r=Q.padShape(e[0].dims.slice(),t.pads),o=e[0].dims,s=Q.size(r),p=[{type:12,data:s},{type:12,data:t.pads}];t.mode===0&&p.push({type:e[0].dataType,data:t.value}),p.push(...de(e[0].dims,r));let d=["rank"],g=y=>{let w=ue("output",e[0].dataType,r.length),f=Z("x",e[0].dataType,o.length),x=f.type.value,S=Vy(w,o.length,t),O=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:t.pads.length}];return t.mode===0&&O.push({name:"constant_value",type:x}),`
            ${y.registerUniforms(O).declareVariables(f,w)}
            ${y.mainStart()}
            ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${w.offsetToIndices("global_idx")};

            var value = ${x}(0);
            ${S}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${t.mode}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(Q.size(r)/64)},programUniforms:p}),getShaderSource:g}},Hy=(e,t)=>{if(e.length>1){let r=e[1].getBigInt64Array(),o=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,s=e[0].dims.length,p=new Int32Array(2*s).fill(0);if(e.length>=4){let g=e[3].getBigInt64Array();for(let y=0;y<g.length;y++)p[Number(g[y])]=Number(r[y]),p[Number(g[y])+s]=Number(r[y+g.length])}else r.forEach((g,y)=>p[Number(y)]=Number(g));let d=[];return p.forEach(g=>d.push(g)),{mode:t.mode,value:o,pads:d}}else return t},cc=(e,t)=>{Dy(e.inputs);let r=Hy(e.inputs,t);e.compute(Gy(e.inputs,r),{inputs:[0]})}});var za,fc,mc,hc,gc,Ly,Fy,yc,bc,vc,wc,_c,$c,Cc,xc,Sc,Ic,Ac,Tc,Ec=se(()=>{"use strict";Dt();xe();Re();Oe();za=e=>{if(Ne.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},fc=(e,t,r)=>{let o=t.format==="NHWC",s=e.dims.slice();o&&s.splice(1,0,s.pop());let p=Object.hasOwnProperty.call(t,"dilations"),d=t.kernelShape.slice(),g=t.strides.slice(),y=p?t.dilations.slice():[],w=t.pads.slice();Ar.adjustPoolAttributes(r,s,d,g,y,w);let f=Ar.computePoolOutputShape(r,s,g,y,d,w,t.autoPad),x=Object.assign({},t);p?Object.assign(x,{kernelShape:d,strides:g,pads:w,dilations:y,cacheKey:t.cacheKey}):Object.assign(x,{kernelShape:d,strides:g,pads:w,cacheKey:t.cacheKey});let S=f.slice();return S.push(S.splice(1,1)[0]),[x,o?S:f]},mc=(e,t)=>{let r=t.format==="NHWC",o=Q.size(e),s=Q.size(t.kernelShape),p=[{type:12,data:o},{type:12,data:s}],d=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(t.kernelShape.length<=2){let g=t.kernelShape[t.kernelShape.length-1],y=t.strides[t.strides.length-1],w=t.pads[t.pads.length/2-1],f=t.pads[t.pads.length-1],x=!!(w+f);p.push({type:12,data:g},{type:12,data:y},{type:12,data:w},{type:12,data:f}),d.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let S=!1;if(t.kernelShape.length===2){let O=t.kernelShape[t.kernelShape.length-2],E=t.strides[t.strides.length-2],P=t.pads[t.pads.length/2-2],j=t.pads[t.pads.length-2];S=!!(P+j),p.push({type:12,data:O},{type:12,data:E},{type:12,data:P},{type:12,data:j}),d.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[p,d,!0,x,S]}else{if(r)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let g=Q.computeStrides(t.kernelShape);p.push({type:12,data:g},{type:12,data:t.pads},{type:12,data:t.strides}),d.push({name:"kernelStrides",type:"u32",length:g.length},{name:"pads",type:"u32",length:t.pads.length},{name:"strides",type:"u32",length:t.strides.length});let y=t.pads.reduce((w,f)=>w+f);return[p,d,!!y,!1,!1]}},hc=(e,t,r,o,s,p,d,g,y,w,f,x)=>{let S=s.format==="NHWC",O=t.type.value,E=ue("output",t.type.tensor,o);if(s.kernelShape.length<=2){let P="",j="",U="",z=r-(S?2:1);if(f?P=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${z}] = indices[${z}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${z}] < 0 || xIndices[${z}]
                      >= uniforms.x_shape[${z}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${p}
                }`:P=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${z}] = indices[${z}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${t.indicesToOffset("xIndices")}];
                  ${p}
                }`,s.kernelShape.length===2){let N=r-(S?3:2);x?j=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${N}] = indices[${N}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${N}] < 0 || xIndices[${N}] >= uniforms.x_shape[${N}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:j=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${N}] = indices[${N}] * uniforms.sh - uniforms.phStart + j;
                `,U=`
              }
            `}return`
            ${e.registerUniforms(y).declareVariables(t,E)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${E.offsetToIndices("global_idx")};
              var xIndices = ${E.offsetToIndices("global_idx")};

              var value = ${O}(${g});
              var pad = 0;
              ${j}
              ${P}
              ${U}
              ${d}

              output[global_idx] = value;
            }`}else{if(S)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let P=s.kernelShape.length,j=s.pads.length,U="";return w?U=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${t.indicesToOffset("xIndices")}];
                ${p}
              }`:U=`
              }
              let x_val = x[${t.indicesToOffset("xIndices")}];
              ${p}
            `,`
            ${e.registerUniforms(y).declareVariables(t,E)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${E.offsetToIndices("global_idx")};
              var xIndices = ${E.offsetToIndices("global_idx")};

              var offsets: array<u32, ${P}>;

              var value = ${O}(${g});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${P-1}u; j++) {
                  offsets[j] = offset / ${_e("uniforms.kernelStrides","j",P)};
                  offset -= offsets[j] * ${_e("uniforms.kernelStrides","j",P)};
                }
                offsets[${P-1}] = offset;

                isPad = false;
                for (var j = ${r-P}u; j < ${r}u; j++) {
                  xIndices[j] = indices[j] * ${_e("uniforms.strides",`j - ${r-P}u`,P)}
                    + offsets[j - ${r-P}u] - ${_e("uniforms.pads","j - 2u",j)};
                  ${U}
              }
              ${d}

              output[global_idx] = value;
            }`}},gc=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Ly=e=>`${gc(e)};${e.countIncludePad}`,Fy=e=>`${gc(e)};${e.storageOrder};${e.dilations}`,yc=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),bc=(e,t,r,o)=>{let[s,p]=fc(t,o,r),d=Z("x",t.dataType,t.dims.length),g=d.type.value,y="value += x_val;",w="";s.countIncludePad?w+=`value /= ${g}(uniforms.kernelSize);`:w+=`value /= ${g}(i32(uniforms.kernelSize) - pad);`;let[f,x,S,O,E]=mc(p,s);f.push(...de(t.dims,p));let P=["rank"];return{name:e,shaderCache:{hint:`${o.cacheKey};${S};${O};${E}`,inputDependencies:P},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Q.size(p)/64)},programUniforms:f}),getShaderSource:j=>hc(j,d,t.dims.length,p.length,s,y,w,0,x,S,O,E)}},vc=e=>{let t=e.count_include_pad!==0,r=yc(e);if(r.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let o={countIncludePad:t,...r,cacheKey:""};return{...o,cacheKey:Ly(o)}},wc=(e,t)=>{za(e.inputs),e.compute(bc("AveragePool",e.inputs[0],!1,t))},_c={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},$c=e=>{let t=e.format;return{format:t,..._c,cacheKey:t}},Cc=(e,t)=>{za(e.inputs),e.compute(bc("GlobalAveragePool",e.inputs[0],!0,t))},xc=(e,t,r,o)=>{let[s,p]=fc(t,o,r),d=`
      value = max(x_val, value);
    `,g="",y=Z("x",t.dataType,t.dims.length),w=["rank"],[f,x,S,O,E]=mc(p,s);return f.push(...de(t.dims,p)),{name:e,shaderCache:{hint:`${o.cacheKey};${S};${O};${E}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:p,dataType:t.dataType}],dispatchGroup:{x:Math.ceil(Q.size(p)/64)},programUniforms:f}),getShaderSource:P=>hc(P,y,t.dims.length,p.length,s,d,g,-1e5,x,S,O,E)}},Sc=(e,t)=>{za(e.inputs),e.compute(xc("MaxPool",e.inputs[0],!1,t))},Ic=e=>{let t=e.storage_order,r=e.dilations,o=yc(e);if(t!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(o.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let s={storageOrder:t,dilations:r,...o,cacheKey:""};return{...s,cacheKey:Fy(s)}},Ac=e=>{let t=e.format;return{format:t,..._c,cacheKey:t}},Tc=(e,t)=>{za(e.inputs),e.compute(xc("GlobalMaxPool",e.inputs[0],!0,t))}});var Ky,Jy,kc,Oc=se(()=>{"use strict";Dt();xe();Oe();Ky=(e,t,r)=>{let o=e===t,s=e<t&&r<0,p=e>t&&r>0;if(o||s||p)throw new Error("Range these inputs' contents are invalid.")},Jy=(e,t,r,o)=>{let s=Math.abs(Math.ceil((t-e)/r)),p=[s],d=s,g=[{type:12,data:d},{type:o,data:e},{type:o,data:r},...de(p)],y=w=>{let f=ue("output",o,p.length),x=f.type.value,S=[{name:"outputSize",type:"u32"},{name:"start",type:x},{name:"delta",type:x}];return`
        ${w.registerUniforms(S).declareVariables(f)}
        ${w.mainStart()}
        ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${x}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${o}`},getShaderSource:y,getRunData:()=>({outputs:[{dims:p,dataType:o}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:g})}},kc=e=>{let t=0,r=0,o=0;e.inputs[0].dataType===6?(t=e.inputs[0].getInt32Array()[0],r=e.inputs[1].getInt32Array()[0],o=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(t=e.inputs[0].getFloat32Array()[0],r=e.inputs[1].getFloat32Array()[0],o=e.inputs[2].getFloat32Array()[0]),Ne.webgpu.validateInputContent&&Ky(t,r,o),e.compute(Jy(t,r,o,e.inputs[0].dataType),{inputs:[]})}});var Yy,Zy,Qy,Xy,e0,t0,r0,i0,n0,a0,o0,Pc,s0,u0,l0,d0,c0,Rc,zc,Bc=se(()=>{"use strict";xe();Re();ft();Oe();Yy=(e,t)=>{if(e.every(r=>r>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(t.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(t.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Zy=(e,t,r)=>{t.every(s=>s>=0&&s<r||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let o=new Array(r).fill(1);return t.forEach((s,p)=>o[s]=e[p]),o},Qy=(e,t,r,o,s,p)=>{let[d,g,y]=r>10?[1,2,3]:[-1,e.length>1?1:-1,-1],w=e[0].dims.length;if(d>0&&e.length>d&&e[d].dims.length>0)e[d].getFloat32Array().forEach(f=>p.push(f));else if(t.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(g>0&&e.length>g&&e[g].dims.length>0){if(e[g].getFloat32Array().forEach(f=>o.push(f)),o.length!==0&&o.length!==w&&r>=18&&o.length!==t.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Yy(o,t),t.axes.length>0&&Zy(o,t.axes,w).forEach((f,x)=>o[x]=f)}if(y>0&&e.length>y&&(e[y].getBigInt64Array().forEach(f=>s.push(Number(f))),s.length!==w||r>=18&&s.length===t.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(t.axes.length>0){if(o.length!==t.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(s.length!==t.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof o<"u"&&typeof s<"u"&&o.length>0&&s.length>w)throw new Error("Resize requires only of scales or sizes to be specified")},Xy=(e,t)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${t} { `+(()=>{switch(e){case"asymmetric":return`return ${t}(xResized) / ${t}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${t}(xResized) + 0.5) / ${t}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${t}(xResized) + 0.5) / ${t}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating
                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
                    // offset-by-one error later in floor().
                    let whole = ${t}(xResized * (lengthOriginal - 1) / (lengthResized - 1));
                    let fract =
                        ${t}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${t}(lengthResized - 1);
                    return whole + fract;
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${t}(roiStart) * ${t}(lengthOriginal - 1) +
                        (${t}(xResized) * ${t}(roiEnd - roiStart) * ${t}(lengthOriginal - 1)) /
                        ${t}(lengthResized - 1);
                  } else {
                    return 0.5 * ${t}(roiStart + roiEnd) * ${t}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${t}xScale * ${t}(lengthResized);
                  const adjustment = ${t}(lengthResized) / outputWidth;
                  const center = ${t}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;case"half_pixel":return`return ((${t}(xResized) + 0.5) / ${t}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",e0=(e,t,r)=>`fn getNearestPixelFromOriginal(xOriginal: ${r}, isDownSample: bool) -> ${r} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(t<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",t0=(e,t,r)=>{let o=new Array(r).fill(0).concat(new Array(r).fill(1)),s=e.length===0?o:e.slice();return t.length>0?(t.forEach((p,d)=>{o[p]=s[d],o[d+r]=s[t.length+d]}),o):s},r0=(e,t,r,o)=>{let s=[];if(r.length>0)if(o.length>0){if(e.forEach(p=>s.push(p)),Math.max(...o)>e.length)throw new Error("axes is out of bound");o.forEach((p,d)=>s[p]=r[d])}else r.forEach(p=>s.push(p));else{if(t.length===0)throw new Error("Resize requires either scales or sizes.");s=e.map((p,d)=>Math.round(p*t[d]))}return s},i0=(e,t,r)=>{let o=(()=>{switch(r.keepAspectRatioPolicy){case"not_larger":return r.axes.length>0?Math.min(...r.axes.map(p=>t[p]),Number.MAX_VALUE):Math.min(...t,Number.MAX_VALUE);case"not_smaller":return r.axes.length>0?Math.max(...r.axes.map(p=>t[p]),Number.MIN_VALUE):Math.max(...t,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${r.keepAspectRatioPolicy} is not supported`)}})();t.fill(1,0,t.length);let s=e.slice();return r.axes.length>0?(r.axes.forEach(p=>t[p]=o),r.axes.forEach(p=>s[p]=Math.round(e[p]*t[p]))):(t.fill(o,0,t.length),s.forEach((p,d)=>s[d]=Math.round(p*t[d]))),s},n0=(e,t,r,o,s)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${r.length}> {
      var original_indices: array<${e.type.value}, ${r.length}>;
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${_e("uniforms.scales","i",o)};
        var roi_low = ${_e("uniforms.roi","i",s)};
        var roi_hi = ${_e("uniforms.roi",`i + ${t.length}`,s)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${_e("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${_e("uniforms.output_shape","i",r.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,a0=(e,t,r,o,s,p,d)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${o.length}; i++) {
        var output_index = ${t.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${_e("uniforms.scales","i",s)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${_e("uniforms.roi","i",p)};
          var roi_hi = ${_e("uniforms.roi",`i + ${r.length}`,p)};
          var input_shape_i = ${_e("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${_e("uniforms.output_shape","i",o.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${d} || (original_idx >= 0 && original_idx < ${t.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${t.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i"," input_index")}
      }
      return input_indices;
    }`,o0=(e,t)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${_e("uniforms.input_shape","i",t.length)}) {
          return false;
        }
      }
      return true;
    }`,Pc=(e,t,r,o)=>e.rank>o?`
    ${e.indicesSet("input_indices",t,"channel")};
    ${e.indicesSet("input_indices",r,"batch")};
`:"",s0=(e,t,r,o,s)=>{let[d,g,y,w]=r.length===2?[-1,0,1,-1]:[0,2,3,1],f=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${f} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",g,`max(0, min(row, ${r[g]} - 1))`)};
      ${e.indicesSet("input_indices",y,`max(0, min(col, ${r[y]} - 1))`)};
      ${Pc(e,w,d,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${t.type.indices}) -> ${f} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${f} = originalIndices[${g}];
      var col:${f} = originalIndices[${y}];
      ${o?`if (row < 0 || row > (${r[g]} - 1) || col < 0 || col > (${r[y]} - 1)) {
        return ${s};
      }`:""};
      row = max(0, min(row, ${r[g]} - 1));
      col = max(0, min(col, ${r[y]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${r.length>2?`u32(originalIndices[${w}])`:"0"};
      var batch: u32 =  ${r.length>2?`u32(originalIndices[${d}])`:"0"};
      var x11: ${f} = getInputValue(batch, channel, row1, col1);
      var x12: ${f} = getInputValue(batch, channel, row1, col2);
      var x21: ${f} = getInputValue(batch, channel, row2, col1);
      var x22: ${f} = getInputValue(batch, channel, row2, col2);
      var dx1: ${f} = abs(row - ${f}(row1));
      var dx2: ${f} = abs(${f}(row2) - row);
      var dy1: ${f} = abs(col - ${f}(col1));
      var dy2: ${f} = abs(${f}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},u0=(e,t,r,o,s,p,d,g,y,w)=>{let f=r.length===2,x=!0,[S,O]=f?[0,1]:x?[2,3]:[1,2],E=e.type.value,P=j=>{let U=j===S?"row":"col";return`
      fn ${U}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${t.type.indices}) -> ${E} {
        var output_index = ${t.indicesGet("output_indices",j)};
        var originalIdx: ${E} = getOriginalCoordinateFromResizedCoordinate(output_index, ${s[j]},
        ${o[j]}, ${r[j]}, ${p[j]}, ${p[j]} + ${r.length});
        var fractOriginalIdx: ${E} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${g} && (originalIdx < 0 || originalIdx > (${r[j]} - 1))) {
          return ${y};
        }
        var data: array<${E}, 4> = array<${E}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${U}: ${E} = originalIdx + ${E}(i);
          if (${U} < 0 || ${U} >= ${r[j]}) {
            ${(()=>w?`coefs[i + 1] = 0.0;
                        continue;`:g?`return ${y};`:`${U} = max(0, min(${U}, ${r[j]} - 1));`)()};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",j,`u32(${U})`)};
          data[i + 1] = ${j===S?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${P(S)};
    ${P(O)};
  fn getCubicInterpolationCoefs(s: ${E}) -> array<${E}, 4> {
    var absS = abs(s);
    var coeffs: array<${E}, 4> = array<${E}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${E} = 1.0 - absS;
    var twoMinusAbsS: ${E} = 2.0 - absS;
    var onePlusAbsS: ${E} = 1.0 + absS;
    coeffs[0] = ((${d} * onePlusAbsS - 5 * ${d}) * onePlusAbsS + 8 * ${d}) * onePlusAbsS - 4 * ${d};
    coeffs[1] = ((${d} + 2) * absS - (${d} + 3)) * absS * absS + 1;
    coeffs[2] = ((${d} + 2) * oneMinusAbsS - (${d} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${d} * twoMinusAbsS - 5 * ${d}) * twoMinusAbsS + 8 * ${d}) * twoMinusAbsS - 4 * ${d};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${E}, 4>, coefs: array<${E}, 4>) -> ${E} {
    var coefsSum: ${E} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${t.type.indices}) -> ${E} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},l0=(e,t,r,o,s)=>{let[d,g,y,w,f]=r.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],x=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${x} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",g,`max(0, min(depth, ${r[g]} - 1))`)};
      ${e.indicesSet("input_indices",y,`max(0, min(height, ${r[y]} - 1))`)};
      ${e.indicesSet("input_indices",w,`max(0, min(width, ${r[w]} - 1))`)};
      ${Pc(e,f,d,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${t.type.indices}) -> ${x} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${x} = originalIndices[${g}];
      var height:${x} = originalIndices[${y}];
      var width:${x} = originalIndices[${w}];
      ${o?`if (depth < 0 || depth > (${r[g]} - 1) || height < 0 || height > (${r[y]} - 1) || width < 0 || (width > ${r[w]} - 1)) {
      return ${s};
        }`:""};

    depth = max(0, min(depth, ${r[g]} - 1));
      height = max(0, min(height, ${r[y]} - 1));
      width = max(0, min(width, ${r[w]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${r.length>3?`u32(originalIndices[${f}])`:"0"};
      var batch: u32 =  ${r.length>3?`u32(originalIndices[${d}])`:"0"};

      var x111: ${x} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${x} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${x} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${x} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${x} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${x} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${x} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${x} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${x} = abs(depth - ${x}(depth1));
      var dx2: ${x} = abs(${x}(depth2) - depth);
      var dy1: ${x} = abs(height - ${x}(height1));
      var dy2: ${x} = abs(${x}(height2) - height);
      var dz1: ${x} = abs(width - ${x}(width1));
      var dz2: ${x} = abs(${x}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},d0=(e,t,r,o,s,p)=>{let d=e.dims,g=t0(p,t.axes,d.length),y=r0(d,o,s,t.axes),w=o.slice();o.length===0&&(w=d.map((z,W)=>z===0?1:y[W]/z),t.keepAspectRatioPolicy!=="stretch"&&(y=i0(d,w,t)));let f=ue("output",e.dataType,y.length),x=Z("input",e.dataType,d.length),S=Q.size(y),O=d.length===y.length&&d.every((z,W)=>z===y[W]),E=t.coordinateTransformMode==="tf_crop_and_resize",P=t.extrapolationValue,j=x.type.value,U=z=>`
      ${O?"":`
      ${Xy(t.coordinateTransformMode,j)};
      ${(()=>{switch(t.mode){case"nearest":return`
              ${o0(x,d)};
              ${e0(t.nearestMode,r,j)};
              ${a0(x,f,d,y,w.length,g.length,E)};
              `;case"linear":return`
              ${n0(f,d,y,w.length,g.length)};
              ${(()=>{if(d.length===2||d.length===4)return`${s0(x,f,d,E,P)}`;if(d.length===3||d.length===5)return`${l0(x,f,d,E,P)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(d.length===2||d.length===4)return`${u0(x,f,d,y,w,g,t.cubicCoeffA,E,t.extrapolationValue,t.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${z.registerUniform("output_size","u32").registerUniform("scales","f32",w.length).registerUniform("roi","f32",g.length).declareVariables(x,f)}
      ${z.mainStart()}
        ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${O?"output[global_idx] = input[global_idx];":`
        let output_indices = ${f.offsetToIndices("global_idx")};
        var input_indices: ${x.type.indices};
        ${(()=>{switch(t.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${x.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${t.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${d.length===2||d.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${t.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${t.cacheKey}|${r}|${w.length>0?w:""}|${s.length>0?s:""}|${g.length>0?g:""}|${O}|${d}`,inputDependencies:["rank"]},getShaderSource:U,getRunData:()=>({outputs:[{dims:y,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(S/64)},programUniforms:[{type:12,data:S},{type:1,data:w},{type:1,data:g},...de(d,y)]})}},c0=e=>{let t=e.customDataBuffer;return new Uint32Array(t,t.byteOffset,1)[0]},Rc=(e,t)=>{let r=[],o=[],s=[],p=c0(e);if(t.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Qy(e.inputs,t,p,r,o,s),e.compute(d0(e.inputs[0],t,p,r,o,s),{inputs:[0]})},zc=e=>{let t=e.antialias,r=e.axes,o=e.coordinateTransformMode,s=e.cubicCoeffA,p=e.excludeOutside!==0,d=e.extrapolationValue,g=e.keepAspectRatioPolicy,y=e.mode,w=e.nearestMode===""?"simple":e.nearestMode;return Pe({antialias:t,axes:r,coordinateTransformMode:o,cubicCoeffA:s,excludeOutside:p,extrapolationValue:d,keepAspectRatioPolicy:g,mode:y,nearestMode:w})}});var p0,f0,Mc,Dc=se(()=>{"use strict";xe();Re();Oe();p0=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let t=e[0],r=e[1],o=e[2];if(t.dataType!==r.dataType||t.dataType!==o.dataType)throw new Error("All inputs must have the same data type");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Input must be 2D or 3D");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Skip must be 2D or 3D");let s=t.dims[t.dims.length-1],p=t.dims[t.dims.length-2];if(r.dims[r.dims.length-1]!==s)throw new Error("Skip must have the same hidden size as input");if(r.dims[r.dims.length-2]!==p)throw new Error("Skip must have the same sequence length as input");if(o.dims.length!==1)throw new Error("Gamma must be 1D");if(o.dims[o.dims.length-1]!==s)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let d=e[3];if(d.dims.length!==1)throw new Error("Beta must be 1D");if(d.dims[d.dims.length-1]!==s)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let d=e[4];if(d.dims.length!==1)throw new Error("Bias must be 1D");if(d.dims[d.dims.length-1]!==s)throw new Error("Bias must have the same hidden size as input")}},f0=(e,t,r,o)=>{let s=e[0].dims,p=Q.size(s),d=s,g=p,y=s.slice(-1)[0],w=o?s.slice(0,-1).concat(1):[],f=e.length>3,x=e.length>4,S=o&&r>1,O=o&&r>2,E=r>3,P=Ze(y),j=[{type:12,data:g},{type:12,data:P},{type:12,data:y},{type:1,data:t.epsilon}],U=W=>{let N=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],q=[Z("x",e[0].dataType,e[0].dims,P),Z("skip",e[1].dataType,e[1].dims,P),Z("gamma",e[2].dataType,e[2].dims,P)];f&&q.push(Z("beta",e[3].dataType,e[3].dims,P)),x&&q.push(Z("bias",e[4].dataType,e[4].dims,P)),q.push(ue("output",e[0].dataType,d,P)),S&&q.push(ue("mean_output",1,w)),O&&q.push(ue("inv_std_output",1,w)),E&&q.push(ue("input_skip_bias_sum",e[0].dataType,d,P));let X=Le(e[0].dataType);return`

      ${W.registerUniforms(N).declareVariables(...q)}

      ${W.mainStart()}
        ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}
        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        let offset = global_idx * hidden_size_vectorized;
        var sum = ${gt("f32",P)};
        var squareSum = ${gt("f32",P)};
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${x?"bias[i]":"0.0"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${E?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${Vt(X,P,"value")};
          sum += f32_value;
          squareSum += f32_value * f32_value;
        }
        let mean = ${Tt("sum",P)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Tt("squareSum",P)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);
        ${S?"mean_output[global_idx] = mean;":""}
        ${O?"inv_std_output[global_idx] = inv_std_dev;":""}
        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {
          output[offset + i] = (output[offset + i] - ${X}(mean)) * ${X}(inv_std_dev) * gamma[i] + ${f?"beta[i]":"0.0"};
        }
      }`},z=[{dims:d,dataType:e[0].dataType}];return r>1&&z.push({dims:w,dataType:1}),r>2&&z.push({dims:w,dataType:1}),r>3&&z.push({dims:s,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${P};${S};${O};${E}`,inputDependencies:e.map((W,N)=>"type")},getShaderSource:U,getRunData:()=>({outputs:z,dispatchGroup:{x:Math.ceil(g/y/64)},programUniforms:j})}},Mc=(e,t)=>{p0(e.inputs);let o=[0];e.outputCount>1&&o.push(-3),e.outputCount>2&&o.push(-3),e.outputCount>3&&o.push(3),e.compute(f0(e.inputs,t,e.outputCount,!1),{outputs:o})}});var m0,Ba,h0,jc,g0,y0,Uc,Nc,Wc=se(()=>{"use strict";xe();Re();ft();Oe();m0=(e,t)=>{if(!e||e.length<1)throw new Error("too few inputs");if(t.axes.length!==0){if(t.axes.length!==t.starts.length||t.axes.length!==t.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(t.starts.length!==t.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((r,o)=>{if(e[o+1].dataType!==6&&e[o+1].dataType!==7)throw new Error(`Input ${o} must be an array of int32 or int64`)})},Ba=(e,t)=>{let r=[];if(e.length>t)if(e[t].dataType===7)e[t].getBigInt64Array().forEach(o=>r.push(Number(o)));else if(e[t].dataType===6)e[t].getInt32Array().forEach(o=>r.push(Number(o)));else throw new Error(`Input ${t} must be an array of int32 or int64`);return r},h0=(e,t)=>{if(e.length>1){let r=Ba(e,1),o=Ba(e,2),s=Ba(e,3);return s.length===0&&(s=[...Array(e[0].dims.length).keys()]),Pe({starts:r,ends:o,axes:s})}else return t},jc=(e,t,r,o,s)=>{let p=e;return e<0&&(p+=r[o[t]]),s[t]<0?Math.max(0,Math.min(p,r[o[t]]-1)):Math.max(0,Math.min(p,r[o[t]]))},g0=(e,t,r)=>`fn calculateInputIndices(output_indices: ${t.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${r.length}; i >= 0; i--) {
            let input_shape_i = ${_e("uniforms.input_shape","i",r.length)};
            let steps_i = ${_e("uniforms.steps","i",r.length)};
            let signs_i = ${_e("uniforms.signs","i",r.length)};
            let starts_i = ${_e("uniforms.starts","i",r.length)};
            var output_index = ${t.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,y0=(e,t)=>{let r=e[0].dims,o=Q.size(r),s=t.axes.length>0?Q.normalizeAxes(t.axes,r.length):[...Array(r.length).keys()],p=Ba(e,4);p.forEach(U=>U!==0||(()=>{throw new Error("step cannot be 0")})),p.length===0&&(p=Array(s.length).fill(1));let d=t.starts.map((U,z)=>jc(U,z,r,s,p)),g=t.ends.map((U,z)=>jc(U,z,r,s,p));if(s.length!==d.length||s.length!==g.length)throw new Error("start, ends and axes should have the same number of elements");if(s.length!==r.length)for(let U=0;U<r.length;++U)s.includes(U)||(d.splice(U,0,0),g.splice(U,0,r[U]),p.splice(U,0,1));let y=p.map(U=>Math.sign(U));p.forEach((U,z,W)=>{if(U<0){let N=(g[z]-d[z])/U,q=d[z],X=q+N*p[z];d[z]=X,g[z]=q,W[z]=-U}});let w=r.slice(0);s.forEach((U,z)=>{w[U]=Math.ceil((g[U]-d[U])/p[U])});let f={dims:w,dataType:e[0].dataType},x=ue("output",e[0].dataType,w.length),S=Z("input",e[0].dataType,e[0].dims.length),O=Q.size(w),E=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:d.length},{name:"signs",type:"i32",length:y.length},{name:"steps",type:"u32",length:p.length}],P=[{type:12,data:O},{type:12,data:d},{type:6,data:y},{type:12,data:p},...de(e[0].dims,w)],j=U=>`
      ${U.registerUniforms(E).declareVariables(S,x)}
        ${g0(S,x,r)}
        ${U.mainStart()}
          ${U.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${x.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${x.setByOffset("global_idx",S.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${y.length}_${d.length}_${p.length}`,inputDependencies:["rank"]},getShaderSource:j,getRunData:()=>({outputs:[f],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:P})}},Uc=(e,t)=>{m0(e.inputs,t);let r=h0(e.inputs,t);e.compute(y0(e.inputs,r),{inputs:[0]})},Nc=e=>{let t=e.starts,r=e.ends,o=e.axes;return Pe({starts:t,ends:r,axes:o})}});var b0,v0,Vc,Gc,Hc=se(()=>{"use strict";xe();Re();ft();Oe();b0=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},v0=(e,t)=>{let r=e.dims,o=Q.size(r),s=64,p=t.axis;if(p<0&&(p=r.length+p),p<r.length-1)throw new Error("softmax only supports last axis for now.");let d=r[p],g=o/d,y=Ze(d),w=d/y,f=(j,U)=>U===4?`max(max(${j}.x, ${j}.y), max(${j}.z, ${j}.w))`:U===2?`max(${j}.x, ${j}.y)`:U===3?`max(max(${j}.x, ${j}.y), ${j}.z)`:j,x=Z("x",e.dataType,e.dims,y),S=ue("result",e.dataType,e.dims,y),O=x.type.value,E=Le(e.dataType)==="f32"?`var threadMax = ${O}(-3.402823e+38f);`:`var threadMax = ${O}(-65504.0h);`,P=j=>`
      var<workgroup> rowMaxShared : ${O};
      var<workgroup> rowSumShared : ${O};
      var<workgroup> threadShared : array<${O}, ${s}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${O} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${O}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${j.registerUniform("packedCols","i32").declareVariables(x,S)}
      ${j.mainStart()}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${s};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${E}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${O}(${f("threadShared[0]",y)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${O}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${O}(${Tt("threadShared[0]",y)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`;return{name:"Softmax",shaderCache:{hint:`${y}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:r,dataType:e.dataType}],dispatchGroup:{x:g},programUniforms:[{type:12,data:w}]}),getShaderSource:P}},Vc=(e,t)=>{b0(e.inputs),e.compute(v0(e.inputs[0],t))},Gc=e=>Pe({axis:e.axis})});var w0,_0,$0,C0,x0,Lc,Fc,qc=se(()=>{"use strict";xe();Re();ft();Oe();w0=e=>{if(!e||e.length<1)throw new Error("too few inputs")},_0=(e,t)=>{let r=[],o=t.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(s=>r.push(Number(s))),o=r.length),Pe({numOutputs:o,axis:t.axis,splitSizes:r})},$0=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${_e("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,C0=e=>{let t=e.length,r=[];for(let o=0;o<t;++o){let s=e[o].setByIndices("indices","input[global_idx]");t===1?r.push(s):o===0?r.push(`if (output_number == ${o}u) { ${s} }`):o===t-1?r.push(`else { ${s} }`):r.push(`else if (output_number == ${o}) { ${s} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${r.join(`
`)}
      }`},x0=(e,t)=>{let r=e[0].dims,o=Q.size(r),s=e[0].dataType,p=Q.normalizeAxis(t.axis,r.length),d=new Array(t.numOutputs),g=Z("input",s,r.length),y=new Array(t.numOutputs),w=[],f=[],x=0,S=[{type:12,data:o}];for(let E=0;E<t.numOutputs;E++){x+=t.splitSizes[E],y[E]=x;let P=r.slice();P[t.axis]=t.splitSizes[E],f.push(P),d[E]=ue(`output${E}`,s,P.length),w.push({dims:f[E],dataType:e[0].dataType})}S.push({type:12,data:y},...de(r,...f));let O=E=>`
  ${E.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",y.length).declareVariables(g,...d)}
  ${$0(y.length)}
  ${C0(d)}

  ${E.mainStart()}
    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${g.offsetToIndices("global_idx")};
    var index = ${g.indicesGet("indices",p)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${_e("uniforms.size_in_split_axis","output_number - 1u",y.length)};
      ${g.indicesSet("indices",p,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:t.cacheKey,inputDependencies:["rank"]},getShaderSource:O,getRunData:()=>({outputs:w,dispatchGroup:{x:Math.ceil(o/64)},programUniforms:S})}},Lc=(e,t)=>{w0(e.inputs);let r=e.inputs.length===1?t:_0(e.inputs,t);e.compute(x0(e.inputs,r),{inputs:[0]})},Fc=e=>{let t=e.axis,r=e.splitSizes,o=e.numOutputs<0?r.length:e.numOutputs;if(o!==r.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Pe({axis:t,numOutputs:o,splitSizes:r})}});var Kc,S0,I0,A0,Jc,Yc=se(()=>{"use strict";xe();Re();Oe();Kc=e=>Array.from(e.getBigInt64Array(),Number),S0=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(Kc(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},I0=(e,t)=>{let r=[];for(let o=0;o<e.length;++o)r.push(e[o]*t[o]);return r},A0=e=>{let t=e[0].dims,r=Kc(e[1]),o=I0(t,r),s=Q.size(o),p=e[0].dataType,d=Z("input",p,t.length),g=ue("output",p,o.length),y=w=>`
      const inputShape = ${d.indices(...t)};
      ${w.registerUniform("output_size","u32").declareVariables(d,g)}
      ${w.mainStart()}
      ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${g.offsetToIndices("global_idx")};
      var input_indices: ${d.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${d.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${g.indicesGet("output_indices","i")}  % input_dim_i;

        ${d.indicesSet("input_indices","i","input_dim_value")}
      }
      ${g.setByOffset("global_idx",d.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:[{type:12,data:s},...de(e[0].dims,o)]}),getShaderSource:y}},Jc=e=>{S0(e.inputs),e.compute(A0(e.inputs),{inputs:[0]})}});var T0,E0,Zc,Qc=se(()=>{"use strict";xe();Re();Oe();T0=(e,t,r,o,s)=>{let p=ue("output_data",s,r.length,4),d=Z("a_data",t[1].dataType,t[1].dims.length,4),g=Z("b_data",t[2].dataType,t[2].dims.length,4),y=Z("c_data",t[0].dataType,t[0].dims.length,4),w,f=(x,S,O)=>`select(${S}, ${x}, ${O})`;if(!o)w=p.setByOffset("global_idx",f(d.getByOffset("global_idx"),g.getByOffset("global_idx"),y.getByOffset("global_idx")));else{let x=(S,O,E="")=>{let P=`a_data[index_a${O}][component_a${O}]`,j=`b_data[index_b${O}][component_b${O}]`,U=`bool(c_data[index_c${O}] & (0xffu << (component_c${O} * 8)))`;return`
            let output_indices${O} = ${p.offsetToIndices(`global_idx * 4u + ${O}u`)};
            let offset_a${O} = ${d.broadcastedIndicesToOffset(`output_indices${O}`,p)};
            let offset_b${O} = ${g.broadcastedIndicesToOffset(`output_indices${O}`,p)};
            let offset_c${O} = ${y.broadcastedIndicesToOffset(`output_indices${O}`,p)};
            let index_a${O} = offset_a${O} / 4u;
            let index_b${O} = offset_b${O} / 4u;
            let index_c${O} = offset_c${O} / 4u;
            let component_a${O} = offset_a${O} % 4u;
            let component_b${O} = offset_b${O} % 4u;
            let component_c${O} = offset_c${O} % 4u;
            ${S}[${O}] = ${E}(${f(P,j,U)});
          `};s===9?w=`
            var data = vec4<u32>(0);
            ${x("data",0,"u32")}
            ${x("data",1,"u32")}
            ${x("data",2,"u32")}
            ${x("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:w=`
            ${x("output_data[global_idx]",0)}
            ${x("output_data[global_idx]",1)}
            ${x("output_data[global_idx]",2)}
            ${x("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(y,d,g,p)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${w}
      }`},E0=e=>{let t=e[1].dims,r=e[2].dims,o=e[0].dims,s=e[1].dataType,p=!(Q.areEqual(t,r)&&Q.areEqual(r,o)),d=t,g=Q.size(t);if(p){let w=qt.calcShape(qt.calcShape(t,r,!1),o,!1);if(!w)throw new Error("Can't perform where op on the given tensors");d=w,g=Q.size(d)}let y=Math.ceil(g/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:w=>T0(w,e,d,p,s),getRunData:()=>({outputs:[{dims:d,dataType:s}],dispatchGroup:{x:Math.ceil(g/64/4)},programUniforms:[{type:12,data:y},...de(o,t,r,d)]})}},Zc=e=>{e.compute(E0(e.inputs))}});var Xc,ep=se(()=>{"use strict";ml();bo();yl();vl();id();md();yd();Co();Od();zd();Ud();Vd();Hd();qd();Yd();Xd();tc();ic();So();oc();dc();pc();Ec();Oc();_a();Bc();Dc();Wc();Hc();qc();Yc();ri();Ia();Qc();Xc=new Map([["Abs",[wl]],["Acos",[_l]],["Acosh",[$l]],["Add",[nd]],["ArgMax",[fl,yo]],["ArgMin",[pl,yo]],["Asin",[Cl]],["Asinh",[xl]],["Atan",[Sl]],["Atanh",[Il]],["Attention",[hl]],["AveragePool",[wc,vc]],["BatchNormalization",[gl]],["BiasAdd",[bl]],["BiasSplitGelu",[rd]],["Cast",[Tl,Al]],["Ceil",[kl]],["Clip",[El]],["Concat",[hd,gd]],["Conv",[To,Ao]],["ConvTranspose",[kd,Ed]],["Cos",[Ol]],["Cosh",[Pl]],["CumSum",[Pd,Rd]],["Div",[ad]],["Einsum",[Dd,jd]],["Elu",[Rl,xa]],["Equal",[od]],["Erf",[zl]],["Exp",[Bl]],["Expand",[Wd]],["FastGelu",[Gd]],["Floor",[Ml]],["FusedConv",[To,Ao]],["Gather",[Fd,Ld]],["GatherElements",[Jd,Kd]],["Gelu",[Dl]],["Gemm",[Qd,Zd]],["GlobalAveragePool",[Cc,$c]],["GlobalMaxPool",[Tc,Ac]],["Greater",[dd]],["GreaterOrEqual",[pd]],["HardSigmoid",[Ll,Hl]],["InstanceNormalization",[ec]],["LayerNormalization",[rc]],["LeakyRelu",[jl,xa]],["Less",[cd]],["LessOrEqual",[fd]],["Log",[ed]],["MatMul",[Cd]],["MatMulNBits",[nc,ac]],["MaxPool",[Sc,Ic]],["Mul",[sd]],["MultiHeadAttention",[lc,uc]],["Neg",[Nl]],["Not",[Ul]],["Pad",[cc]],["Pow",[ud]],["Range",[kc]],["Reciprocal",[Wl]],["ReduceMin",[ol]],["ReduceMean",[tl]],["ReduceMax",[al]],["ReduceSum",[ul]],["ReduceProd",[sl]],["ReduceL1",[rl]],["ReduceL2",[il]],["ReduceLogSum",[dl]],["ReduceLogSumExp",[nl]],["ReduceSumSquare",[ll]],["Relu",[Vl]],["Resize",[Rc,zc]],["Sigmoid",[Gl]],["Sin",[Fl]],["Sinh",[ql]],["Slice",[Uc,Nc]],["SkipLayerNormalization",[Mc]],["Split",[Lc,Fc]],["Sqrt",[Kl]],["Softmax",[Vc,Gc]],["Sub",[ld]],["Tan",[Jl]],["Tanh",[Zl]],["ThresholdedRelu",[Xl,xa]],["Tile",[Jc]],["Transpose",[Vu,Gu]],["Where",[Zc]]])});var Ma,tp=se(()=>{"use strict";Dt();dr();Oe();Ma=class{constructor(t){this.backend=t;this.repo=new Map,this.attributesBound=!1}getArtifact(t){return this.repo.get(t)}setArtifact(t,r){this.repo.set(t,r)}run(t,r,o,s,p){It(t.programInfo.name);let d=this.backend.device,g=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let y=[];for(let f of r)y.push({binding:y.length,resource:{buffer:f.buffer}});for(let f of o)y.push({binding:y.length,resource:{buffer:f.buffer}});p&&y.push({binding:y.length,resource:p});let w=d.createBindGroup({layout:t.computePipeline.getBindGroupLayout(0),entries:y,label:t.programInfo.name});if(this.backend.sessionStatus==="capturing"){let f={kernelId:this.backend.currentKernelId,computePipeline:t.computePipeline,bindGroup:w,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(f)}g.setPipeline(t.computePipeline),g.setBindGroup(0,w),g.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),$t(t.programInfo.name)}dispose(){}build(t,r){It(t.name);let o=this.backend.device,s=[];o.features.has("shader-f16")&&s.push("enable f16;");let p=Nu(r),d=t.getShaderSource(p),g=`${s.join(`
`)}
${p.additionalImplementations}
${d}`,y=o.createShaderModule({code:g,label:t.name});Ye("verbose",()=>`[WebGPU] ${t.name} shader code: ${g}`);let w=o.createComputePipeline({compute:{module:y,entryPoint:"main"},layout:"auto",label:t.name});return $t(t.name),{programInfo:t,computePipeline:w}}normalizeDispatchGroupSize(t){let r=typeof t=="number"?t:t.x,o=typeof t=="number"?1:t.y||1,s=typeof t=="number"?1:t.z||1,p=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=p&&o<=p&&s<=p)return[r,o,s];let d=r*o*s,g=Math.ceil(Math.sqrt(d));if(g>p){if(g=Math.ceil(Math.cbrt(d)),g>p)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[g,g,g]}else return[g,g,1]}}});var k0,O0,zo,Da,rp=se(()=>{"use strict";Dt();xe();dr();Bu();Uu();ep();tp();k0=(e,t)=>{if(t.length!==e.length)throw new Error(`inputDependencies length ${t.length} is not equal to inputTensors length ${e.length}.`);let r=[];for(let o=0;o<e.length;++o){let s=e[o].dataType;switch(t[o]){case"none":{r.push("");break}case"type":{r.push(`${s}`);break}case"rank":{let p=e[o].dims.length;r.push(`${s};${p}`);break}case"dims":{let p=e[o].dims.join(",");r.push(`${s};${p}`);break}default:throw new Error(`unsupported input dependency: ${t[o]}`)}}return r.join("|")},O0=(e,t,r)=>{let o=e.name;return e.shaderCache?.hint&&(o+="["+e.shaderCache.hint+"]"),o+=":"+r+`:${k0(t,e.shaderCache?.inputDependencies??new Array(t.length).fill("dims"))}`,o},zo=class{constructor(t){t&&(this.architecture=t.architecture,this.vendor=t.vendor)}isArchitecture(t){return this.architecture===t}isVendor(t){return this.vendor===t}},Da=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let t=this.kernelCustomData.get(this.currentKernelId);return t||(t={},this.kernelCustomData.set(this.currentKernelId,t)),t}async initialize(t,r){this.env=t;let o=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:o};r.features.has("chromium-experimental-timestamp-query-inside-passes")?o.push("chromium-experimental-timestamp-query-inside-passes"):r.features.has("timestamp-query")&&o.push("timestamp-query"),r.features.has("shader-f16")&&o.push("shader-f16"),this.device=await r.requestDevice(s),this.adapterInfo=new zo(await r.requestAdapterInfo()),this.gpuDataManager=ju(this),this.programManager=new Ma(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Ru(t.logLevel,!!t.debug),this.device.onuncapturederror=p=>{p.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${p.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),Object.defineProperty(this.env.webgpu,"adapter",{value:r}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let t=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=t.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;It(),this.endComputePass();let t;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),t=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(t,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,t,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&t.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(t.getMappedRange()),o=this.pendingQueries.get(t);for(let s=0;s<r.length/2;s++){let p=o[s],d=p.kernelId,g=this.kernels.get(d),y=g.kernelType,w=g.kernelName,f=p.programName,x=p.inputTensorViews,S=p.outputTensorViews,O=r[s*2],E=r[s*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=O);let P=Number(O-this.queryTimeBase),j=Number(E-this.queryTimeBase);if(!Number.isSafeInteger(P)||!Number.isSafeInteger(j))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:x.map(U=>({dims:U.dims,dataType:lr(U.dataType)})),outputsMetadata:S.map(U=>({dims:U.dims,dataType:lr(U.dataType)})),kernelId:d,kernelType:y,kernelName:w,programName:f,startTime:P,endTime:j});else{let U="";x.forEach((W,N)=>{U+=`input[${N}]: [${W.dims}] | ${lr(W.dataType)}, `});let z="";S.forEach((W,N)=>{z+=`output[${N}]: [${W.dims}] | ${lr(W.dataType)}, `}),console.log(`[profiling] kernel "${d}|${y}|${w}|${f}" ${U}${z}execution time: ${j-P} ns`)}dn("GPU",`${f}::${O}::${E}`)}t.unmap(),this.pendingQueries.delete(t)}),$t()}run(t,r,o,s,p){It(t.name);let d=[];for(let z=0;z<r.length;++z){let W=r[z].data;if(W===0)continue;let N=this.gpuDataManager.get(W);if(!N)throw new Error(`no GPU data for input: ${W}`);d.push(N)}let{outputs:g,dispatchGroup:y,programUniforms:w}=t.getRunData(r),f=o.length===0?g.map((z,W)=>W):o;if(f.length!==g.length)throw new Error(`Output size ${f.length} must be equal to ${g.length}.`);let x=[],S=[];for(let z=0;z<g.length;++z){if(!Number.isInteger(f[z])||f[z]<-3||f[z]>=g.length)throw new Error(`Invalid output index: ${f[z]}`);if(f[z]===-3)continue;let W=f[z]===-1,N=f[z]===-2,q=W||N?p(g[z].dataType,g[z].dims):s(f[z],g[z].dataType,g[z].dims);if(x.push(q),q.data===0)continue;let X=this.gpuDataManager.get(q.data);if(!X)throw new Error(`no GPU data for output: ${q.data}`);if(W&&this.temporaryData.push(X),N){let te=this.kernelPersistentData.get(this.currentKernelId);te||(te=[],this.kernelPersistentData.set(this.currentKernelId,te)),te.push(X)}S.push(X)}if(d.length!==r.length||S.length!==x.length){if(S.length===0)return $t(t.name),x;throw new Error(`Program ${t.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let O;if(w){let z=0,W=[];w.forEach(te=>{let ie=typeof te.data=="number"?[te.data]:te.data;if(ie.length===0)return;let J=te.type===10?2:4,ne,Ie;te.type===10?(Ie=ie.length>4?16:ie.length>2?8:ie.length*J,ne=ie.length>4?16:J*ie.length):(Ie=ie.length<=2?ie.length*J:16,ne=16),z=Math.ceil(z/Ie)*Ie,W.push(z);let Be=te.type===10?8:4;z+=ie.length>4?Math.ceil(ie.length/Be)*ne:ie.length*J});let N=16;z=Math.ceil(z/N)*N;let q=new ArrayBuffer(z);w.forEach((te,ie)=>{let J=W[ie],ne=typeof te.data=="number"?[te.data]:te.data;if(te.type===6)new Int32Array(q,J,ne.length).set(ne);else if(te.type===12)new Uint32Array(q,J,ne.length).set(ne);else if(te.type===10)new Uint16Array(q,J,ne.length).set(ne);else if(te.type===1)new Float32Array(q,J,ne.length).set(ne);else throw new Error(`Unsupported uniform type: ${lr(te.type)}`)});let X=this.gpuDataManager.create(z,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(X.buffer,0,q,0,z),this.gpuDataManager.release(X.id),O={offset:0,size:z,buffer:X.buffer}}let E=this.programManager.normalizeDispatchGroupSize(y),P=E[1]===1&&E[2]===1,j=O0(t,r,P),U=this.programManager.getArtifact(j);if(U||(U=this.programManager.build(t,E),this.programManager.setArtifact(j,U),Ye("info",()=>`[artifact] key: ${j}, programName: ${t.name}`)),Ye("info",()=>`[ProgramManager] run "${t.name}" (key=${j}) with ${E[0]}x${E[1]}x${E[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let z={kernelId:this.currentKernelId,programName:U.programInfo.name,inputTensorViews:r,outputTensorViews:x};this.pendingKernels.push(z),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(z)}return this.programManager.run(U,d,S,E,O),$t(t.name),x}upload(t,r){this.gpuDataManager.upload(t,r)}memcpy(t,r){this.gpuDataManager.memcpy(t,r)}async download(t,r){await this.gpuDataManager.download(t,r)}alloc(t){return this.gpuDataManager.create(t).id}free(t){return this.gpuDataManager.release(t)}createKernel(t,r,o,s){let p=Xc.get(t);if(!p)throw new Error(`kernel not implemented: ${t}`);let d={kernelType:t,kernelName:s,kernelEntry:p[0],attributes:[p[1],o]};this.kernels.set(r,d)}releaseKernel(t){let r=this.kernelPersistentData.get(t);if(r){for(let o of r)this.gpuDataManager.release(o.id);this.kernelPersistentData.delete(t)}this.kernelCustomData.delete(t),this.kernels.delete(t)}computeKernel(t,r,o){let s=this.kernels.get(t);if(!s)throw new Error(`kernel not created: ${t}`);let p=s.kernelType,d=s.kernelName,g=s.kernelEntry,y=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${p}] ${d}" is not allowed to be called recursively`);this.currentKernelId=t,y[0]&&(y[1]=y[0](y[1]),y[0]=void 0),Ye("info",()=>`[WebGPU] Start to run kernel "[${p}] ${d}"...`);let w=this.env.debug;this.temporaryData=[];try{return w&&this.device.pushErrorScope("validation"),g(r,y[1]),0}catch(f){return o.push(Promise.resolve(`[WebGPU] Kernel "[${p}] ${d}" failed. ${f}`)),1}finally{w&&o.push(this.device.popErrorScope().then(f=>f?`GPU validation error for kernel "[${p}] ${d}": ${f.message}`:null));for(let f of this.temporaryData)this.gpuDataManager.release(f.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(t,r,o,s){let p=this.sessionExternalDataMapping.get(t);p||(p=new Map,this.sessionExternalDataMapping.set(t,p));let d=p.get(r),g=this.gpuDataManager.registerExternalBuffer(o,s,d?.[1]);return p.set(r,[g,o]),g}unregisterBuffers(t){let r=this.sessionExternalDataMapping.get(t);r&&(r.forEach(o=>this.gpuDataManager.unregisterExternalBuffer(o[1])),this.sessionExternalDataMapping.delete(t))}getBuffer(t){let r=this.gpuDataManager.get(t);if(!r)throw new Error(`no GPU data for buffer: ${t}`);return r.buffer}createDownloader(t,r,o){return async()=>{let s=await lo(this,t,r);return zu(s.buffer,o)}}writeTimestamp(t){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,t)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Ye("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Ye("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Ye("info","replay"),this.sessionStatus="replaying";let t=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),o=t.length;this.pendingKernels=[];for(let s=0;s<o;s++){let p=this.getComputePassEncoder(),d=t[s];this.writeTimestamp(this.pendingDispatchNumber*2),p.setPipeline(d.computePipeline),p.setBindGroup(0,d.bindGroup),p.dispatchWorkgroups(...d.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber*8||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber*8&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(t){this.unregisterBuffers(t),this.capturedCommandList.has(t)&&this.capturedCommandList.delete(t),this.capturedPendingKernels.has(t)&&this.capturedPendingKernels.delete(t),this.gpuDataManager.onReleaseSession(t)}onRunStart(t){this.currentSessionId=t,this.setQueryType()}}});var ip={};xr(ip,{init:()=>P0});var bn,Bo,P0,np=se(()=>{"use strict";xe();rp();dr();Re();bn=class e{constructor(t,r,o,s){this.module=t;this.dataType=r;this.data=o;this.dims=s}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let t=Q.size(this.dims);return t===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,t)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let t=Q.size(this.dims);return t===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,t)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let t=Q.size(this.dims);return t===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,t)}reshape(t){if(Q.size(t)!==Q.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,t)}},Bo=class{constructor(t,r,o){this.module=t;this.backend=r;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=r.adapterInfo;let s=t.HEAPU32,p=o>>>2;this.opKernelContext=s[p++];let d=s[p++];this.outputCount=s[p++],this.customDataOffset=s[p++],this.customDataSize=s[p++];let g=[];for(let y=0;y<d;y++){let w=s[p++],f=s[p++],x=s[p++],S=[];for(let O=0;O<x;O++)S.push(s[p++]);g.push(new bn(t,w,f,S))}this.inputs=g}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(t,r){let o=r?.inputs?.map(g=>typeof g=="number"?this.inputs[g]:g)??this.inputs,s=r?.outputs??[],p=(g,y,w)=>new bn(this.module,y,this.output(g,w),w),d=(g,y)=>{let w=pn(g);if(!w)throw new Error(`Unsupported data type: ${g}`);let f=w*Q.size(y),x=f>0?this.backend.gpuDataManager.create(f).id:0;return new bn(this.module,g,x,y)};return this.backend.run(t,o,s,p,d)}output(t,r){let o=this.module.stackSave();try{let s=this.module.stackAlloc((1+r.length)*4),p=s>>2;this.module.HEAPU32[p++]=r.length;for(let d=0;d<r.length;d++)this.module.HEAPU32[p++]=r[d];return this.module._JsepOutput(this.opKernelContext,t,s)}catch(s){throw new Error(`Failed to generate kernel's output[${t}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(o)}}},P0=async(e,t,r,o)=>{let s=t.jsepInit;if(!s)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let p=new Da;await p.initialize(r,o),s("webgpu",[p,d=>p.alloc(d),d=>p.free(d),(d,g,y,w=!1)=>{if(w)Ye("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${d}, dst=${g}, size=${y}`),p.memcpy(d,g);else{Ye("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${d}, gpuDataId=${g}, size=${y}`);let f=t.HEAPU8.subarray(d>>>0,(d>>>0)+y);p.upload(g,f)}},async(d,g,y)=>{Ye("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${d}, dataOffset=${g}, size=${y}`),await p.download(d,()=>t.HEAPU8.subarray(g>>>0,(g>>>0)+y))},(d,g,y)=>p.createKernel(d,g,y,t.UTF8ToString(t._JsepGetNodeName(g))),d=>p.releaseKernel(d),(d,g,y,w)=>{Ye("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${y}, kernel=${d}, contextDataOffset=${g}`);let f=new Bo(t,p,g);return p.computeKernel(d,f,w)},()=>p.captureBegin(),()=>p.captureEnd(),()=>p.replay()])}else s("webnn")}});var R0,op,sp,Tr,z0,Mo,up,lp,ap,dp,cp,pp,fp=se(()=>{"use strict";Tu();ku();xe();ei();ca();so();R0=(e,t)=>{et()._OrtInit(e,t)!==0&&Je("Can't initialize onnxruntime.")},op=async e=>{R0(e.wasm.numThreads,fn(e.logLevel))},sp=async(e,t)=>{{let r=(np(),sr(ip)).init;if(t==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let o=e.webgpu?.powerPreference;if(o!==void 0&&o!=="low-power"&&o!=="high-performance")throw new Error(`Invalid powerPreference setting: "${o}"`);let s=e.webgpu?.forceFallbackAdapter;if(s!==void 0&&typeof s!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${s}"`);let p=await navigator.gpu.requestAdapter({powerPreference:o,forceFallbackAdapter:s});if(!p)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await r("webgpu",et(),e,p)}if(t==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await r("webnn",et(),e)}}},Tr=new Map,z0=e=>{let t=et(),r=t.stackSave();try{let o=t.stackAlloc(8);return t._OrtGetInputOutputCount(e,o,o+4)!==0&&Je("Can't get session input/output count."),[t.HEAP32[o/4],t.HEAP32[o/4+1]]}finally{t.stackRestore(r)}},Mo=e=>{let t=et(),r=t._malloc(e.byteLength);if(r===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return t.HEAPU8.set(e,r),[r,e.byteLength]},up=async(e,t)=>{let r,o,s=et();Array.isArray(e)?[r,o]=e:e.buffer===s.HEAPU8.buffer?[r,o]=[e.byteOffset,e.byteLength]:[r,o]=Mo(e);let p=0,d=0,g=0,y=[],w=[],f=[];try{if([d,y]=Eu(t),t?.externalData&&s.mountExternalData){let z=[];for(let W of t.externalData){let N=typeof W=="string"?W:W.path;z.push(mn(typeof W=="string"?W:W.data).then(q=>{s.mountExternalData(N,q)}))}await Promise.all(z)}p=await s._OrtCreateSession(r,o,d),p===0&&Je("Can't create a session.");let[x,S]=z0(p),O=!!t?.enableGraphCapture,E=[],P=[],j=[];for(let z=0;z<x;z++){let W=s._OrtGetInputName(p,z);W===0&&Je("Can't get an input name."),w.push(W),E.push(s.UTF8ToString(W))}for(let z=0;z<S;z++){let W=s._OrtGetOutputName(p,z);W===0&&Je("Can't get an output name."),f.push(W);let N=s.UTF8ToString(W);P.push(N);{if(O&&t?.preferredOutputLocation===void 0){j.push("gpu-buffer");continue}let q=typeof t?.preferredOutputLocation=="string"?t.preferredOutputLocation:t?.preferredOutputLocation?.[N]??"cpu";if(q!=="cpu"&&q!=="cpu-pinned"&&q!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${q}.`);if(O&&q!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${q}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);j.push(q)}}let U=null;return j.some(z=>z==="gpu-buffer")&&(g=s._OrtCreateBinding(p),g===0&&Je("Can't create IO binding."),U={handle:g,outputPreferredLocations:j,outputPreferredLocationsEncoded:j.map(z=>oo(z))}),Tr.set(p,[p,w,f,U,O,!1]),[p,E,P]}catch(x){throw w.forEach(S=>s._OrtFree(S)),f.forEach(S=>s._OrtFree(S)),g!==0&&s._OrtReleaseBinding(g),p!==0&&s._OrtReleaseSession(p),x}finally{s._free(r),d!==0&&s._OrtReleaseSessionOptions(d),y.forEach(x=>s._free(x)),s.unmountExternalData?.()}},lp=e=>{let t=et(),r=Tr.get(e);if(!r)throw new Error(`cannot release session. invalid session id: ${e}`);let[o,s,p,d,g]=r;d&&(g&&t._OrtClearBoundOutputs(d.handle),t._OrtReleaseBinding(d.handle)),t.jsepOnReleaseSession?.(e),s.forEach(y=>t._OrtFree(y)),p.forEach(y=>t._OrtFree(y)),t._OrtReleaseSession(o),Tr.delete(e)},ap=(e,t,r,o,s,p=!1)=>{if(!e){t.push(0);return}let d=et(),g=e[0],y=e[1],w=e[3],f,x;if(g==="string"&&w==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(p&&w!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${s} when enableGraphCapture is true.`);if(w==="gpu-buffer"){let E=e[2].gpuBuffer,P=pn(ao(g));x=y.reduce((U,z)=>U*z,1)*P;let j=d.jsepRegisterBuffer;if(!j)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');f=j(o,s,E,x)}else{let E=e[2];if(Array.isArray(E)){x=4*E.length,f=d._malloc(x),r.push(f);let P=f/4;for(let j=0;j<E.length;j++){if(typeof E[j]!="string")throw new TypeError(`tensor data at index ${j} is not a string`);d.HEAPU32[P++]=tt(E[j],r)}}else x=E.byteLength,f=d._malloc(x),r.push(f),d.HEAPU8.set(new Uint8Array(E.buffer,E.byteOffset,x),f)}let S=d.stackSave(),O=d.stackAlloc(4*y.length);try{let E=O/4;y.forEach(j=>d.HEAP32[E++]=j);let P=d._OrtCreateTensor(ao(g),f,x,O,y.length,oo(w));P===0&&Je(`Can't create tensor for input/output. session=${o}, index=${s}.`),t.push(P)}finally{d.stackRestore(S)}},dp=async(e,t,r,o,s,p)=>{let d=et(),g=Tr.get(e);if(!g)throw new Error(`cannot run inference. invalid session id: ${e}`);let y=g[0],w=g[1],f=g[2],x=g[3],S=g[4],O=g[5],E=t.length,P=o.length,j=0,U=[],z=[],W=[],N=[],q=d.stackSave(),X=d.stackAlloc(E*4),te=d.stackAlloc(E*4),ie=d.stackAlloc(P*4),J=d.stackAlloc(P*4);try{[j,U]=Au(p);for(let fe=0;fe<E;fe++)ap(r[fe],z,N,e,t[fe],S);for(let fe=0;fe<P;fe++)ap(s[fe],W,N,e,E+o[fe],S);let ne=X/4,Ie=te/4,Be=ie/4,qe=J/4;for(let fe=0;fe<E;fe++)d.HEAPU32[ne++]=z[fe],d.HEAPU32[Ie++]=w[t[fe]];for(let fe=0;fe<P;fe++)d.HEAPU32[Be++]=W[fe],d.HEAPU32[qe++]=f[o[fe]];if(x&&!O){let{handle:fe,outputPreferredLocations:Ge,outputPreferredLocationsEncoded:Ae}=x;if(w.length!==E)throw new Error(`input count from feeds (${E}) is expected to be always equal to model's input count (${w.length}).`);for(let $e=0;$e<E;$e++){let ge=t[$e];await d._OrtBindInput(fe,w[ge],z[$e])!==0&&Je(`Can't bind input[${$e}] for session=${e}.`)}for(let $e=0;$e<P;$e++){let ge=o[$e];s[$e]?.[3]?d._OrtBindOutput(fe,f[ge],W[$e],0)!==0&&Je(`Can't bind pre-allocated output[${$e}] for session=${e}.`):d._OrtBindOutput(fe,f[ge],0,Ae[ge])!==0&&Je(`Can't bind output[${$e}] to ${Ge[$e]} for session=${e}.`)}Tr.set(e,[y,w,f,x,S,!0])}d.jsepOnRunStart?.(y);let Ve;x?Ve=await d._OrtRunWithBinding(y,x.handle,P,ie,j):Ve=await d._OrtRun(y,te,X,E,J,P,ie,j),Ve!==0&&Je("failed to call OrtRun().");let ze=[];for(let fe=0;fe<P;fe++){let Ge=d.HEAPU32[ie/4+fe];if(Ge===W[fe]){ze.push(s[fe]);continue}let Ae=d.stackSave(),$e=d.stackAlloc(4*4),ge=!1,Te,We=0;try{d._OrtGetTensorData(Ge,$e,$e+4,$e+8,$e+12)!==0&&Je(`Can't access output tensor data on index ${fe}.`);let ae=$e/4,ye=d.HEAPU32[ae++];We=d.HEAPU32[ae++];let Me=d.HEAPU32[ae++],ot=d.HEAPU32[ae++],mt=[];for(let st=0;st<ot;st++)mt.push(d.HEAPU32[Me/4+st]);d._OrtFree(Me);let lt=mt.reduce((st,rt)=>st*rt,1);Te=lr(ye);let ht=x?.outputPreferredLocations[o[fe]];if(Te==="string"){if(ht==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let st=[],rt=We/4;for(let bt=0;bt<lt;bt++){let Et=d.HEAPU32[rt++],Rt=bt===lt-1?void 0:d.HEAPU32[rt]-Et;st.push(d.UTF8ToString(Et,Rt))}ze.push([Te,mt,st,"cpu"])}else if(ht==="gpu-buffer"&&lt>0){let st=d.jsepGetBuffer;if(!st)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let rt=st(We),bt=pn(ye);if(bt===void 0||!fa(Te))throw new Error(`Unsupported data type: ${Te}`);ge=!0,ze.push([Te,mt,{gpuBuffer:rt,download:d.jsepCreateDownloader(rt,lt*bt,Te),dispose:()=>{d._OrtReleaseTensor(Ge)}},"gpu-buffer"])}else{let st=pa(Te),rt=new st(lt);new Uint8Array(rt.buffer,rt.byteOffset,rt.byteLength).set(d.HEAPU8.subarray(We,We+rt.byteLength)),ze.push([Te,mt,rt,"cpu"])}}finally{d.stackRestore(Ae),Te==="string"&&We&&d._free(We),ge||d._OrtReleaseTensor(Ge)}}return x&&!S&&(d._OrtClearBoundOutputs(x.handle),Tr.set(e,[y,w,f,x,S,!1])),ze}finally{d.stackRestore(q),z.forEach(ne=>d._OrtReleaseTensor(ne)),W.forEach(ne=>d._OrtReleaseTensor(ne)),N.forEach(ne=>d._free(ne)),j!==0&&d._OrtReleaseRunOptions(j),U.forEach(ne=>d._free(ne))}},cp=e=>{let t=et(),r=Tr.get(e);if(!r)throw new Error("invalid session id");let o=r[0],s=t._OrtEndProfiling(o);s===0&&Je("Can't get an profile file name."),t._OrtFree(s)},pp=e=>{let t=[];for(let r of e){let o=r[2];!Array.isArray(o)&&"buffer"in o&&t.push(o.buffer)}return t}});var mp=Xr((ex,M0)=>{M0.exports='/*!\n * ONNX Runtime Web v1.18.0\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n"use strict";(()=>{var $o=Object.defineProperty;var Bm=Object.getOwnPropertyDescriptor;var Dm=Object.getOwnPropertyNames;var Mm=Object.prototype.hasOwnProperty;var le=(e,r)=>()=>(e&&(r=e(e=0)),r);var Zn=(e,r)=>()=>(r||e((r={exports:{}}).exports,r),r.exports),Wi=(e,r)=>{for(var t in r)$o(e,t,{get:r[t],enumerable:!0})},zm=(e,r,t,u)=>{if(r&&typeof r=="object"||typeof r=="function")for(let l of Dm(r))!Mm.call(e,l)&&l!==t&&$o(e,l,{get:()=>r[l],enumerable:!(u=Bm(r,l))||u.enumerable});return e};var Wr=e=>zm($o({},"__esModule",{value:!0}),e);var Co={};Wi(Co,{createReadStream:()=>os,readFile:()=>Um,readFileSync:()=>jm});var Um,jm,os,So=le(()=>{Um=void 0,jm=void 0,os=void 0});var xo={};Wi(xo,{join:()=>Vm});var Vm,Ao=le(()=>{Vm=void 0});var us=Zn((ss,Io)=>{"use strict";var as=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(r={}){var t=r,u,l;t.ready=new Promise((n,i)=>{u=n,l=i}),t.mountExternalData=(n,i)=>{(t.jh||(t.jh=new Map)).set(n,i)},t.unmountExternalData=()=>{delete t.jh};let f=()=>{let n=(o,s,c)=>(...p)=>{let g=vt,v=s?.();p=o(...p);let w=s?.();return v!==w&&(o=w,c(v),s=c=null),vt!=g?di():p},i=o=>async(...s)=>{try{if(t.ih)throw Error("Session already started");let c=t.ih={Kh:s[0],errors:[]},p=await o(...s);if(t.ih!==c)throw Error("Session mismatch");t.qh?.flush();let g=c.errors;if(0<g.length){let v=await Promise.all(g);if(v=v.filter(w=>w),0<v.length)throw Error(v.join(`\n`))}return p}finally{t.ih=null}};t._OrtCreateSession=n(t._OrtCreateSession,()=>t._OrtCreateSession,o=>t._OrtCreateSession=o),t._OrtRun=i(n(t._OrtRun,()=>t._OrtRun,o=>t._OrtRun=o)),t._OrtRunWithBinding=i(n(t._OrtRunWithBinding,()=>t._OrtRunWithBinding,o=>t._OrtRunWithBinding=o)),t._OrtBindInput=n(t._OrtBindInput,()=>t._OrtBindInput,o=>t._OrtBindInput=o),f=void 0};t.jsepInit=(n,i)=>{if(f?.(),n==="webgpu"){[t.qh,t.Bh,t.Fh,t.rh,t.Eh,t.Jd,t.Gh,t.Ih,t.Ch,t.Dh,t.Hh]=i;let o=t.qh;t.jsepRegisterBuffer=(s,c,p,g)=>o.registerBuffer(s,c,p,g),t.jsepGetBuffer=s=>o.getBuffer(s),t.jsepCreateDownloader=(s,c,p)=>o.createDownloader(s,c,p),t.jsepOnReleaseSession=s=>{o.onReleaseSession(s)},t.jsepOnRunStart=s=>o.onRunStart(s)}};var d=Object.assign({},t),y="./this.program",b=(n,i)=>{throw i},C=typeof window=="object",m=typeof importScripts=="function",A=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",E="",R,P,k;if(A){var U=(So(),Wr(Co)),V=(Ao(),Wr(xo));E=m?V.dirname(E)+"/":__dirname+"/",R=(n,i)=>(n=Ve(n)?new URL(n):V.normalize(n),U.readFileSync(n,i?void 0:"utf8")),k=n=>(n=R(n,!0),n.buffer||(n=new Uint8Array(n)),n),P=(n,i,o,s=!0)=>{n=Ve(n)?new URL(n):V.normalize(n),U.readFile(n,s?void 0:"utf8",(c,p)=>{c?o(c):i(s?p.buffer:p)})},!t.thisProgram&&1<process.argv.length&&(y=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),b=(n,i)=>{throw process.exitCode=n,i},t.inspect=()=>"[Emscripten Module object]"}else(C||m)&&(m?E=self.location.href:typeof document<"u"&&document.currentScript&&(E=document.currentScript.src),e&&(E=e),E.indexOf("blob:")!==0?E=E.substr(0,E.replace(/[?#].*/,"").lastIndexOf("/")+1):E="",R=n=>{var i=new XMLHttpRequest;return i.open("GET",n,!1),i.send(null),i.responseText},m&&(k=n=>{var i=new XMLHttpRequest;return i.open("GET",n,!1),i.responseType="arraybuffer",i.send(null),new Uint8Array(i.response)}),P=(n,i,o)=>{var s=new XMLHttpRequest;s.open("GET",n,!0),s.responseType="arraybuffer",s.onload=()=>{s.status==200||s.status==0&&s.response?i(s.response):o()},s.onerror=o,s.send(null)});var B=console.log.bind(console),W=console.error.bind(console);Object.assign(t,d),d=null,typeof WebAssembly!="object"&&ge("no native wasm support detected");var j,q=!1,Q,te,ne,J,ie,Ae,De;function Fe(){var n=j.buffer;t.HEAP8=te=new Int8Array(n),t.HEAP16=new Int16Array(n),t.HEAPU8=ne=new Uint8Array(n),t.HEAPU16=new Uint16Array(n),t.HEAP32=J=new Int32Array(n),t.HEAPU32=ie=new Uint32Array(n),t.HEAPF32=Ae=new Float32Array(n),t.HEAPF64=De=new Float64Array(n)}var Ne=[],Be=[],pe=[],We=0,Ie=null,$e=null;function ge(n){throw n="Aborted("+n+")",W(n),q=!0,Q=1,n=new WebAssembly.RuntimeError(n+". Build with -sASSERTIONS for more info."),l(n),n}var Te=n=>n.startsWith("data:application/octet-stream;base64,"),Ve=n=>n.startsWith("file://"),rt;if(rt="ort-wasm-simd.wasm",!Te(rt)){var oe=rt;rt=t.locateFile?t.locateFile(oe,E):E+oe}function ye(n){if(k)return k(n);throw"both async and sync fetching of the wasm failed"}function Me(n){if(C||m){if(typeof fetch=="function"&&!Ve(n))return fetch(n,{credentials:"same-origin"}).then(i=>{if(!i.ok)throw"failed to load wasm binary file at \'"+n+"\'";return i.arrayBuffer()}).catch(()=>ye(n));if(P)return new Promise((i,o)=>{P(n,s=>i(new Uint8Array(s)),o)})}return Promise.resolve().then(()=>ye(n))}function ot(n,i,o){return Me(n).then(s=>WebAssembly.instantiate(s,i)).then(s=>s).then(o,s=>{W(`failed to asynchronously prepare wasm: ${s}`),ge(s)})}function ft(n,i){var o=rt;return typeof WebAssembly.instantiateStreaming!="function"||Te(o)||Ve(o)||A||typeof fetch!="function"?ot(o,n,i):fetch(o,{credentials:"same-origin"}).then(s=>WebAssembly.instantiateStreaming(s,n).then(i,function(c){return W(`wasm streaming compile failed: ${c}`),W("falling back to ArrayBuffer instantiation"),ot(o,n,i)}))}var ut,pt={1367024:(n,i,o,s)=>{if(typeof t>"u"||!t.jh)return 1;if(n=nt(n>>>0),n.startsWith("./")&&(n=n.substring(2)),n=t.jh.get(n),!n)return 2;if(i>>>=0,o>>>=0,i+o>n.byteLength)return 3;try{return ne.set(n.subarray(i,i+o),s>>>0>>>0),0}catch{return 4}},1367525:()=>{t.Ch()},1367556:()=>{t.Dh()},1367585:()=>{t.Hh()},1367610:n=>t.Bh(n),1367643:n=>t.Fh(n),1367675:(n,i,o)=>{t.rh(n,i,o,!0)},1367714:(n,i,o)=>{t.rh(n,i,o)},1367747:n=>{t.Jd("Abs",n,void 0)},1367798:n=>{t.Jd("Neg",n,void 0)},1367849:n=>{t.Jd("Floor",n,void 0)},1367902:n=>{t.Jd("Ceil",n,void 0)},1367954:n=>{t.Jd("Reciprocal",n,void 0)},1368012:n=>{t.Jd("Sqrt",n,void 0)},1368064:n=>{t.Jd("Exp",n,void 0)},1368115:n=>{t.Jd("Erf",n,void 0)},1368166:n=>{t.Jd("Sigmoid",n,void 0)},1368221:(n,i,o)=>{t.Jd("HardSigmoid",n,{alpha:i,beta:o})},1368300:n=>{t.Jd("Log",n,void 0)},1368351:n=>{t.Jd("Sin",n,void 0)},1368402:n=>{t.Jd("Cos",n,void 0)},1368453:n=>{t.Jd("Tan",n,void 0)},1368504:n=>{t.Jd("Asin",n,void 0)},1368556:n=>{t.Jd("Acos",n,void 0)},1368608:n=>{t.Jd("Atan",n,void 0)},1368660:n=>{t.Jd("Sinh",n,void 0)},1368712:n=>{t.Jd("Cosh",n,void 0)},1368764:n=>{t.Jd("Asinh",n,void 0)},1368817:n=>{t.Jd("Acosh",n,void 0)},1368870:n=>{t.Jd("Atanh",n,void 0)},1368923:n=>{t.Jd("Tanh",n,void 0)},1368975:n=>{t.Jd("Not",n,void 0)},1369026:(n,i,o)=>{t.Jd("Clip",n,{min:i,max:o})},1369095:n=>{t.Jd("Clip",n,void 0)},1369147:(n,i)=>{t.Jd("Elu",n,{alpha:i})},1369205:n=>{t.Jd("Relu",n,void 0)},1369257:(n,i)=>{t.Jd("LeakyRelu",n,{alpha:i})},1369321:(n,i)=>{t.Jd("ThresholdedRelu",n,{alpha:i})},1369391:(n,i)=>{t.Jd("Cast",n,{to:i})},1369449:n=>{t.Jd("Add",n,void 0)},1369500:n=>{t.Jd("Sub",n,void 0)},1369551:n=>{t.Jd("Mul",n,void 0)},1369602:n=>{t.Jd("Div",n,void 0)},1369653:n=>{t.Jd("Pow",n,void 0)},1369704:n=>{t.Jd("Equal",n,void 0)},1369757:n=>{t.Jd("Greater",n,void 0)},1369812:n=>{t.Jd("GreaterOrEqual",n,void 0)},1369874:n=>{t.Jd("Less",n,void 0)},1369926:n=>{t.Jd("LessOrEqual",n,void 0)},1369985:(n,i,o,s,c)=>{t.Jd("ReduceMean",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:s?Array.from(J.subarray(s>>>0,c>>>0)):[]})},1370144:(n,i,o,s,c)=>{t.Jd("ReduceMax",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:s?Array.from(J.subarray(s>>>0,c>>>0)):[]})},1370302:(n,i,o,s,c)=>{t.Jd("ReduceMin",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:s?Array.from(J.subarray(s>>>0,c>>>0)):[]})},1370460:(n,i,o,s,c)=>{t.Jd("ReduceProd",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:s?Array.from(J.subarray(s>>>0,c>>>0)):[]})},1370619:(n,i,o,s,c)=>{t.Jd("ReduceSum",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:s?Array.from(J.subarray(s>>>0,c>>>0)):[]})},1370777:(n,i,o,s,c)=>{t.Jd("ReduceL1",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:s?Array.from(J.subarray(s>>>0,c>>>0)):[]})},1370934:(n,i,o,s,c)=>{t.Jd("ReduceL2",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:s?Array.from(J.subarray(s>>>0,c>>>0)):[]})},1371091:(n,i,o,s,c)=>{t.Jd("ReduceLogSum",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:s?Array.from(J.subarray(s>>>0,c>>>0)):[]})},1371252:(n,i,o,s,c)=>{t.Jd("ReduceSumSquare",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:s?Array.from(J.subarray(s>>>0,c>>>0)):[]})},1371416:(n,i,o,s,c)=>{t.Jd("ReduceLogSumExp",n,{keepDims:!!i,noopWithEmptyAxes:!!o,axes:s?Array.from(J.subarray(s>>>0,c>>>0)):[]})},1371580:n=>{t.Jd("Where",n,void 0)},1371633:(n,i,o)=>{t.Jd("Transpose",n,{perm:i?Array.from(J.subarray(i>>>0,o>>>0)):[]})},1371741:(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)=>{t.Jd("ConvTranspose",n,{format:w?"NHWC":"NCHW",autoPad:i,dilations:[o],group:s,kernel_shape:[c],pads:[p,g],strides:[v],wIsConst:()=>!!te[$>>>0],outputPadding:S?Array.from(J.subarray(S>>>0,T>>>0)):[],outputShape:O?Array.from(J.subarray(O>>>0,x>>>0)):[],activation:nt(z)})},1372143:(n,i,o,s,c,p,g,v,w,$,S,T,O,x)=>{t.Jd("ConvTranspose",n,{format:v?"NHWC":"NCHW",autoPad:i,dilations:Array.from(J.subarray(o>>>0,(o>>>0)+2>>>0)),group:s,kernelShape:Array.from(J.subarray(c>>>0,(c>>>0)+2>>>0)),pads:Array.from(J.subarray(p>>>0,(p>>>0)+4>>>0)),strides:Array.from(J.subarray(g>>>0,(g>>>0)+2>>>0)),wIsConst:()=>!!te[w>>>0],outputPadding:$?Array.from(J.subarray($>>>0,S>>>0)):[],outputShape:T?Array.from(J.subarray(T>>>0,O>>>0)):[],activation:nt(x)})},1372708:(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)=>{t.Jd("ConvTranspose",n,{format:w?"NHWC":"NCHW",autoPad:i,dilations:[o],group:s,kernel_shape:[c],pads:[p,g],strides:[v],wIsConst:()=>!!te[$>>>0],outputPadding:S?Array.from(J.subarray(S>>>0,T>>>0)):[],outputShape:O?Array.from(J.subarray(O>>>0,x>>>0)):[],activation:nt(z)})},1373110:(n,i,o,s,c,p,g,v,w,$,S,T,O,x)=>{t.Jd("ConvTranspose",n,{format:v?"NHWC":"NCHW",autoPad:i,dilations:Array.from(J.subarray(o>>>0,(o>>>0)+2>>>0)),group:s,kernelShape:Array.from(J.subarray(c>>>0,(c>>>0)+2>>>0)),pads:Array.from(J.subarray(p>>>0,(p>>>0)+4>>>0)),strides:Array.from(J.subarray(g>>>0,(g>>>0)+2>>>0)),wIsConst:()=>!!te[w>>>0],outputPadding:$?Array.from(J.subarray($>>>0,S>>>0)):[],outputShape:T?Array.from(J.subarray(T>>>0,O>>>0)):[],activation:nt(x)})},1373675:(n,i)=>{t.Jd("GlobalAveragePool",n,{format:i?"NHWC":"NCHW"})},1373766:(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)=>{t.Jd("AveragePool",n,{format:G?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:s,storage_order:c,dilations:[p,g],kernel_shape:[v,w],pads:[$,S,T,O],strides:[x,z]})},1374050:(n,i)=>{t.Jd("GlobalAveragePool",n,{format:i?"NHWC":"NCHW"})},1374141:(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)=>{t.Jd("AveragePool",n,{format:G?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:s,storage_order:c,dilations:[p,g],kernel_shape:[v,w],pads:[$,S,T,O],strides:[x,z]})},1374425:(n,i)=>{t.Jd("GlobalMaxPool",n,{format:i?"NHWC":"NCHW"})},1374512:(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)=>{t.Jd("MaxPool",n,{format:G?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:s,storage_order:c,dilations:[p,g],kernel_shape:[v,w],pads:[$,S,T,O],strides:[x,z]})},1374792:(n,i)=>{t.Jd("GlobalMaxPool",n,{format:i?"NHWC":"NCHW"})},1374879:(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)=>{t.Jd("MaxPool",n,{format:G?"NHWC":"NCHW",auto_pad:i,ceil_mode:o,count_include_pad:s,storage_order:c,dilations:[p,g],kernel_shape:[v,w],pads:[$,S,T,O],strides:[x,z]})},1375159:(n,i,o,s,c)=>{t.Jd("Gemm",n,{alpha:i,beta:o,transA:s,transB:c})},1375263:n=>{t.Jd("MatMul",n,void 0)},1375317:(n,i,o,s)=>{t.Jd("ArgMax",n,{keepDims:!!i,selectLastIndex:!!o,axis:s})},1375425:(n,i,o,s)=>{t.Jd("ArgMin",n,{keepDims:!!i,selectLastIndex:!!o,axis:s})},1375533:(n,i)=>{t.Jd("Softmax",n,{axis:i})},1375596:(n,i)=>{t.Jd("Concat",n,{axis:i})},1375656:(n,i,o,s,c)=>{t.Jd("Split",n,{axis:i,numOutputs:o,splitSizes:s?Array.from(J.subarray(s>>>0,c>>>0)):[]})},1375796:n=>{t.Jd("Expand",n,void 0)},1375850:(n,i)=>{t.Jd("Gather",n,{axis:Number(i)})},1375921:(n,i)=>{t.Jd("GatherElements",n,{axis:Number(i)})},1376e3:(n,i,o,s,c,p,g,v,w,$,S)=>{t.Jd("Resize",n,{antialias:i,axes:o?Array.from(J.subarray(o>>>0,s>>>0)):[],coordinateTransformMode:nt(c),cubicCoeffA:p,excludeOutside:g,extrapolationValue:v,keepAspectRatioPolicy:nt(w),mode:nt($),nearestMode:nt(S)})},1376346:(n,i,o,s,c,p,g)=>{t.Jd("Slice",n,{starts:i?Array.from(J.subarray(i>>>0,o>>>0)):[],ends:s?Array.from(J.subarray(s>>>0,c>>>0)):[],axes:p?Array.from(J.subarray(p>>>0,g>>>0)):[]})},1376562:n=>{t.Jd("Tile",n,void 0)},1376614:(n,i,o)=>{t.Jd("LayerNormalization",n,{axis:Number(i),epsilon:Number(o)})},1376721:(n,i,o)=>{t.Jd("InstanceNormalization",n,{epsilon:i,format:o?"NHWC":"NCHW"})},1376835:(n,i,o)=>{t.Jd("InstanceNormalization",n,{epsilon:i,format:o?"NHWC":"NCHW"})},1376949:n=>{t.Jd("Range",n,void 0)},1377002:(n,i)=>{t.Jd("Einsum",n,{equation:nt(i)})},1377083:(n,i,o,s,c)=>{t.Jd("Pad",n,{mode:i,value:o,pads:s?Array.from(J.subarray(s>>>0,c>>>0)):[]})},1377210:(n,i,o,s,c,p)=>{t.Jd("BatchNormalization",n,{epsilon:i,momentum:o,spatial:!!c,trainingMode:!!s,format:p?"NHWC":"NCHW"})},1377379:(n,i,o,s,c,p)=>{t.Jd("BatchNormalization",n,{epsilon:i,momentum:o,spatial:!!c,trainingMode:!!s,format:p?"NHWC":"NCHW"})},1377548:(n,i,o)=>{t.Jd("CumSum",n,{exclusive:Number(i),reverse:Number(o)})},1377645:(n,i,o,s,c,p,g,v,w)=>{t.Jd("Attention",n,{numHeads:i,isUnidirectional:o,maskFilterValue:s,scale:c,doRotary:p,qkvHiddenSizes:g?Array.from(J.subarray(Number(v)>>>0,Number(v)+g>>>0)):[],pastPresentShareBuffer:!!w})},1377917:n=>{t.Jd("BiasAdd",n,void 0)},1377972:n=>{t.Jd("BiasSplitGelu",n,void 0)},1378033:n=>{t.Jd("FastGelu",n,void 0)},1378089:(n,i,o,s,c,p,g,v,w,$,S,T,O)=>{t.Jd("Conv",n,{format:w?"NHWC":"NCHW",auto_pad:i,dilations:[o],group:s,kernel_shape:[c],pads:p?Array.from(J.subarray(p>>>0,g>>>0)):[],strides:[v],w_is_const:()=>!!te[$>>>0],activation:nt(S),activation_params:T?Array.from(Ae.subarray(T>>>0,O>>>0)):[]})},1378459:(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)=>{t.Jd("Conv",n,{format:T?"NHWC":"NCHW",auto_pad:i,dilations:[o,s],group:c,kernel_shape:[p,g],pads:v?Array.from(J.subarray(v>>>0,w>>>0)):[],strides:[$,S],w_is_const:()=>!!te[O>>>0],activation:nt(x),activation_params:z?Array.from(Ae.subarray(z>>>0,G>>>0)):[]})},1378850:n=>{t.Jd("Gelu",n,void 0)},1378902:(n,i,o,s,c,p)=>{t.Jd("MatMulNBits",n,{k:i,n:o,accuracyLevel:s,bits:c,blockSize:p})},1379029:(n,i,o,s,c,p)=>{t.Jd("MultiHeadAttention",n,{numHeads:i,isUnidirectional:o,maskFilterValue:s,scale:c,doRotary:p})},1379188:(n,i)=>{t.Jd("SkipLayerNormalization",n,{epsilon:i})},1379269:n=>{t.Gh(n)},1379303:(n,i)=>t.Ih(n,i,t.ih.Kh,t.ih.errors)};function at(n){this.name="ExitStatus",this.message=`Program terminated with exit(${n})`,this.status=n}var tt=[],gt=0,St=0;function Tt(n){this.hh=n,this.dh=n-24,this.Jh=function(i){ie[this.dh+4>>>2>>>0]=i},this.oh=function(){return ie[this.dh+4>>>2>>>0]},this.Ah=function(i){ie[this.dh+8>>>2>>>0]=i},this.sh=function(i){te[this.dh+12>>>0>>>0]=i?1:0},this.xh=function(){return te[this.dh+12>>>0>>>0]!=0},this.th=function(i){te[this.dh+13>>>0>>>0]=i?1:0},this.wh=function(){return te[this.dh+13>>>0>>>0]!=0},this.zh=function(i,o){this.ph(0),this.Jh(i),this.Ah(o)},this.ph=function(i){ie[this.dh+16>>>2>>>0]=i},this.uh=function(){return ie[this.dh+16>>>2>>>0]},this.yh=function(){if(nn(this.oh()))return ie[this.hh>>>2>>>0];var i=this.uh();return i!==0?i:this.hh}}var Yt=n=>{var i=St;if(!i)return qt(0),0;var o=new Tt(i);o.ph(i);var s=o.oh();if(!s)return qt(0),i;for(var c in n){var p=n[c];if(p===0||p===s)break;if(rn(p,s,o.dh+16))return qt(p),i}return qt(s),i},Zt=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,qr=(n,i,o)=>{i>>>=0;var s=i+o;for(o=i;n[o]&&!(o>=s);)++o;if(16<o-i&&n.buffer&&Zt)return Zt.decode(n.subarray(i,o));for(s="";i<o;){var c=n[i++];if(c&128){var p=n[i++]&63;if((c&224)==192)s+=String.fromCharCode((c&31)<<6|p);else{var g=n[i++]&63;c=(c&240)==224?(c&15)<<12|p<<6|g:(c&7)<<18|p<<12|g<<6|n[i++]&63,65536>c?s+=String.fromCharCode(c):(c-=65536,s+=String.fromCharCode(55296|c>>10,56320|c&1023))}}else s+=String.fromCharCode(c)}return s},nt=(n,i)=>(n>>>=0)?qr(ne,n,i):"",vr=n=>{for(var i=0,o=0;o<n.length;++o){var s=n.charCodeAt(o);127>=s?i++:2047>=s?i+=2:55296<=s&&57343>=s?(i+=4,++o):i+=3}return i},Xt=(n,i,o,s)=>{if(o>>>=0,!(0<s))return 0;var c=o;s=o+s-1;for(var p=0;p<n.length;++p){var g=n.charCodeAt(p);if(55296<=g&&57343>=g){var v=n.charCodeAt(++p);g=65536+((g&1023)<<10)|v&1023}if(127>=g){if(o>=s)break;i[o++>>>0]=g}else{if(2047>=g){if(o+1>=s)break;i[o++>>>0]=192|g>>6}else{if(65535>=g){if(o+2>=s)break;i[o++>>>0]=224|g>>12}else{if(o+3>=s)break;i[o++>>>0]=240|g>>18,i[o++>>>0]=128|g>>12&63}i[o++>>>0]=128|g>>6&63}i[o++>>>0]=128|g&63}}return i[o>>>0]=0,o-c},Et=n=>n%4===0&&(n%100!==0||n%400===0),Kr=[0,31,60,91,121,152,182,213,244,274,305,335],oi=[0,31,59,90,120,151,181,212,243,273,304,334],Jr=n=>{var i=vr(n)+1,o=xr(i);return o&&Xt(n,ne,o,i),o},Yr=[],wr=(n,i)=>{Yr.length=0;for(var o;o=ne[n++>>>0];){var s=o!=105;s&=o!=112,i+=s&&i%8?4:0,Yr.push(o==112?ie[i>>>2>>>0]:o==105?J[i>>>2>>>0]:De[i>>>3>>>0]),i+=s?8:4}return Yr},ir={},_r=()=>{if(!$r){var n={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:y||"./this.program"},i;for(i in ir)ir[i]===void 0?delete n[i]:n[i]=ir[i];var o=[];for(i in n)o.push(`${i}=${n[i]}`);$r=o}return $r},$r,Ft=[null,[],[]],Zr=[31,29,31,30,31,30,31,31,30,31,30,31],Xr=[31,28,31,30,31,30,31,31,30,31,30,31];function st(n){var i=Array(vr(n)+1);return Xt(n,i,0,i.length),i}function ai(n,i,o,s){function c(x,z,G){for(x=typeof x=="number"?x.toString():x||"";x.length<z;)x=G[0]+x;return x}function p(x,z){return c(x,z,"0")}function g(x,z){function G(ae){return 0>ae?-1:0<ae?1:0}var ee;return(ee=G(x.getFullYear()-z.getFullYear()))===0&&(ee=G(x.getMonth()-z.getMonth()))===0&&(ee=G(x.getDate()-z.getDate())),ee}function v(x){switch(x.getDay()){case 0:return new Date(x.getFullYear()-1,11,29);case 1:return x;case 2:return new Date(x.getFullYear(),0,3);case 3:return new Date(x.getFullYear(),0,2);case 4:return new Date(x.getFullYear(),0,1);case 5:return new Date(x.getFullYear()-1,11,31);case 6:return new Date(x.getFullYear()-1,11,30)}}function w(x){var z=x.fh;for(x=new Date(new Date(x.gh+1900,0,1).getTime());0<z;){var G=x.getMonth(),ee=(Et(x.getFullYear())?Zr:Xr)[G];if(z>ee-x.getDate())z-=ee-x.getDate()+1,x.setDate(1),11>G?x.setMonth(G+1):(x.setMonth(0),x.setFullYear(x.getFullYear()+1));else{x.setDate(x.getDate()+z);break}}return G=new Date(x.getFullYear()+1,0,4),z=v(new Date(x.getFullYear(),0,4)),G=v(G),0>=g(z,x)?0>=g(G,x)?x.getFullYear()+1:x.getFullYear():x.getFullYear()-1}n>>>=0,i>>>=0,o>>>=0,s>>>=0;var $=ie[s+40>>>2>>>0];s={Nh:J[s>>>2>>>0],Mh:J[s+4>>>2>>>0],kh:J[s+8>>>2>>>0],nh:J[s+12>>>2>>>0],lh:J[s+16>>>2>>>0],gh:J[s+20>>>2>>>0],eh:J[s+24>>>2>>>0],fh:J[s+28>>>2>>>0],Ph:J[s+32>>>2>>>0],Lh:J[s+36>>>2>>>0],Oh:$?nt($):""},o=nt(o),$={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var S in $)o=o.replace(new RegExp(S,"g"),$[S]);var T="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),O="January February March April May June July August September October November December".split(" ");$={"%a":x=>T[x.eh].substring(0,3),"%A":x=>T[x.eh],"%b":x=>O[x.lh].substring(0,3),"%B":x=>O[x.lh],"%C":x=>p((x.gh+1900)/100|0,2),"%d":x=>p(x.nh,2),"%e":x=>c(x.nh,2," "),"%g":x=>w(x).toString().substring(2),"%G":x=>w(x),"%H":x=>p(x.kh,2),"%I":x=>(x=x.kh,x==0?x=12:12<x&&(x-=12),p(x,2)),"%j":x=>{for(var z=0,G=0;G<=x.lh-1;z+=(Et(x.gh+1900)?Zr:Xr)[G++]);return p(x.nh+z,3)},"%m":x=>p(x.lh+1,2),"%M":x=>p(x.Mh,2),"%n":()=>`\n`,"%p":x=>0<=x.kh&&12>x.kh?"AM":"PM","%S":x=>p(x.Nh,2),"%t":()=>"	","%u":x=>x.eh||7,"%U":x=>p(Math.floor((x.fh+7-x.eh)/7),2),"%V":x=>{var z=Math.floor((x.fh+7-(x.eh+6)%7)/7);if(2>=(x.eh+371-x.fh-2)%7&&z++,z)z==53&&(G=(x.eh+371-x.fh)%7,G==4||G==3&&Et(x.gh)||(z=1));else{z=52;var G=(x.eh+7-x.fh-1)%7;(G==4||G==5&&Et(x.gh%400-1))&&z++}return p(z,2)},"%w":x=>x.eh,"%W":x=>p(Math.floor((x.fh+7-(x.eh+6)%7)/7),2),"%y":x=>(x.gh+1900).toString().substring(2),"%Y":x=>x.gh+1900,"%z":x=>{x=x.Lh;var z=0<=x;return x=Math.abs(x)/60,(z?"+":"-")+("0000"+(x/60*100+x%60)).slice(-4)},"%Z":x=>x.Oh,"%%":()=>"%"},o=o.replace(/%%/g,"\\0\\0");for(S in $)o.includes(S)&&(o=o.replace(new RegExp(S,"g"),$[S](s)));return o=o.replace(/\\0\\0/g,"%"),S=st(o),S.length>i?0:(te.set(S,n>>>0),S.length-1)}var Le=n=>{try{n()}catch(i){ge(i)}};function si(){var n=M,i={};for(let[o,s]of Object.entries(n))i[o]=typeof s=="function"?function(){or.push(o);try{return s.apply(null,arguments)}finally{q||(or.pop(),vt&&Pt===1&&or.length===0&&(Pt=0,Le(ts),typeof Fibers<"u"&&Fibers.Qh()))}}:s;return i}var Pt=0,vt=null,ui=0,or=[],li={},be={},Cr=0,Sr=null,vo=[];function di(){return new Promise((n,i)=>{Sr={resolve:n,reject:i}})}function wo(){var n=xr(65548),i=n+12;ie[n>>>2>>>0]=i,ie[n+4>>>2>>>0]=i+65536,i=or[0];var o=li[i];return o===void 0&&(o=Cr++,li[i]=o,be[o]=i),J[n+8>>>2>>>0]=o,n}function ci(n){if(!q){if(Pt===0){var i=!1,o=!1;n((s=0)=>{if(!q&&(ui=s,i=!0,o)){Pt=2,Le(()=>rs(vt)),typeof Browser<"u"&&Browser.mh.vh&&Browser.mh.resume(),s=!1;try{var c=(0,M[be[J[vt+8>>>2>>>0]]])()}catch(v){c=v,s=!0}var p=!1;if(!vt){var g=Sr;g&&(Sr=null,(s?g.reject:g.resolve)(c),p=!0)}if(s&&!p)throw c}}),o=!0,i||(Pt=1,vt=wo(),typeof Browser<"u"&&Browser.mh.vh&&Browser.mh.pause(),Le(()=>es(vt)))}else Pt===2?(Pt=0,Le(ns),Ar(vt),vt=null,vo.forEach(s=>{if(!q)try{s();try{Q=Q=s=Q,t.onExit?.(s),q=!0,b(s,new at(s))}catch(c){c instanceof at||c=="unwind"||b(1,c)}}catch(c){c instanceof at||c=="unwind"||b(1,c)}})):ge(`invalid state: ${Pt}`);return ui}}function fi(n){return ci(i=>{n().then(i)})}var pi={Ia:function(n,i,o){return fi(async()=>{await t.Eh(n,i,o)})},t:function(n){return n=new Tt(n>>>0),n.xh()||(n.sh(!0),gt--),n.th(!1),tt.push(n),tn(n.hh),n.yh()},C:()=>{H(0,0);var n=tt.pop();en(n.hh),St=0},a:function(){return Yt([])},l:function(n){return Yt([n>>>0])},w:function(n,i){return Yt([n>>>0,i>>>0])},p:function(n,i,o){return Yt([n>>>0,i>>>0,o>>>0])},pa:()=>{var n=tt.pop();n||ge("no exception to throw");var i=n.hh;throw n.wh()||(tt.push(n),n.th(!0),n.sh(!1),gt++),St=i,St},r:function(n,i,o){throw n>>>=0,new Tt(n).zh(i>>>0,o>>>0),St=n,gt++,St},ca:()=>gt,f:function(n){throw St||=n>>>0,St},qa:function(){return 0},uc:function(){},Qa:function(){},Sa:function(){},Ka:function(){return 0},_b:function(){},_a:function(){},Pb:function(){},Ea:function(){},Ra:function(){},Oa:function(){},jc:function(){},Pa:function(){},Yc:()=>1,Uc:function(n,i,o){n=i+2097152>>>0<4194305-!!n?(n>>>0)+4294967296*i:NaN,o>>>=0,n=new Date(1e3*n),J[o>>>2>>>0]=n.getUTCSeconds(),J[o+4>>>2>>>0]=n.getUTCMinutes(),J[o+8>>>2>>>0]=n.getUTCHours(),J[o+12>>>2>>>0]=n.getUTCDate(),J[o+16>>>2>>>0]=n.getUTCMonth(),J[o+20>>>2>>>0]=n.getUTCFullYear()-1900,J[o+24>>>2>>>0]=n.getUTCDay(),J[o+28>>>2>>>0]=(n.getTime()-Date.UTC(n.getUTCFullYear(),0,1,0,0,0,0))/864e5|0},Vc:function(n,i,o){n=i+2097152>>>0<4194305-!!n?(n>>>0)+4294967296*i:NaN,o>>>=0,n=new Date(1e3*n),J[o>>>2>>>0]=n.getSeconds(),J[o+4>>>2>>>0]=n.getMinutes(),J[o+8>>>2>>>0]=n.getHours(),J[o+12>>>2>>>0]=n.getDate(),J[o+16>>>2>>>0]=n.getMonth(),J[o+20>>>2>>>0]=n.getFullYear()-1900,J[o+24>>>2>>>0]=n.getDay(),J[o+28>>>2>>>0]=(Et(n.getFullYear())?Kr:oi)[n.getMonth()]+n.getDate()-1|0,J[o+36>>>2>>>0]=-(60*n.getTimezoneOffset()),i=new Date(n.getFullYear(),6,1).getTimezoneOffset();var s=new Date(n.getFullYear(),0,1).getTimezoneOffset();J[o+32>>>2>>>0]=(i!=s&&n.getTimezoneOffset()==Math.min(s,i))|0},Wc:function(n){n>>>=0;var i=new Date(J[n+20>>>2>>>0]+1900,J[n+16>>>2>>>0],J[n+12>>>2>>>0],J[n+8>>>2>>>0],J[n+4>>>2>>>0],J[n>>>2>>>0],0),o=J[n+32>>>2>>>0],s=i.getTimezoneOffset(),c=new Date(i.getFullYear(),6,1).getTimezoneOffset(),p=new Date(i.getFullYear(),0,1).getTimezoneOffset(),g=Math.min(p,c);return 0>o?J[n+32>>>2>>>0]=+(c!=p&&g==s):0<o!=(g==s)&&(c=Math.max(p,c),i.setTime(i.getTime()+6e4*((0<o?g:c)-s))),J[n+24>>>2>>>0]=i.getDay(),J[n+28>>>2>>>0]=(Et(i.getFullYear())?Kr:oi)[i.getMonth()]+i.getDate()-1|0,J[n>>>2>>>0]=i.getSeconds(),J[n+4>>>2>>>0]=i.getMinutes(),J[n+8>>>2>>>0]=i.getHours(),J[n+12>>>2>>>0]=i.getDate(),J[n+16>>>2>>>0]=i.getMonth(),J[n+20>>>2>>>0]=i.getYear(),n=i.getTime(),isNaN(n)?(J[ar()>>>2>>>0]=61,n=-1):n/=1e3,qt((ut=n,1<=+Math.abs(ut)?0<ut?+Math.floor(ut/4294967296)>>>0:~~+Math.ceil((ut-+(~~ut>>>0))/4294967296)>>>0:0)),n>>>0},Sc:function(){return-52},Tc:function(){},Ma:function(n,i,o){function s(w){return(w=w.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?w[1]:"GMT"}o>>>=0;var c=new Date().getFullYear(),p=new Date(c,0,1),g=new Date(c,6,1);c=p.getTimezoneOffset();var v=g.getTimezoneOffset();ie[n>>>0>>>2>>>0]=60*Math.max(c,v),J[i>>>0>>>2>>>0]=+(c!=v),n=s(p),i=s(g),n=Jr(n),i=Jr(i),v<c?(ie[o>>>2>>>0]=n,ie[o+4>>>2>>>0]=i):(ie[o>>>2>>>0]=i,ie[o+4>>>2>>>0]=n)},ha:()=>{ge("")},x:function(n,i,o){return n>>>=0,i=wr(i>>>0,o>>>0),pt[n].apply(null,i)},za:function(n,i,o){return n>>>=0,i=wr(i>>>0,o>>>0),pt[n].apply(null,i)},Ga:()=>Date.now(),Na:function(){return 4294901760},H:()=>performance.now(),Eb:function(n,i,o){return i>>>=0,ne.copyWithin(n>>>0>>>0,i>>>0,i+(o>>>0)>>>0)},La:function(n){n>>>=0;var i=ne.length;if(4294901760<n)return!1;for(var o=1;4>=o;o*=2){var s=i*(1+.2/o);s=Math.min(s,n+100663296);var c=Math;s=Math.max(n,s);e:{c=(c.min.call(c,4294901760,s+(65536-s%65536)%65536)-j.buffer.byteLength+65535)/65536;try{j.grow(c),Fe();var p=1;break e}catch{}p=void 0}if(p)return!0}return!1},jb:function(n,i){n>>>=0,i>>>=0;var o=0;return _r().forEach((s,c)=>{var p=i+o;for(c=ie[n+4*c>>>2>>>0]=p,p=0;p<s.length;++p)te[c++>>>0>>>0]=s.charCodeAt(p);te[c>>>0>>>0]=0,o+=s.length+1}),0},ub:function(n,i){n>>>=0,i>>>=0;var o=_r();ie[n>>>2>>>0]=o.length;var s=0;return o.forEach(c=>s+=c.length+1),ie[i>>>2>>>0]=s,0},ma:()=>52,Da:function(){return 52},Xc:function(){return 70},Ca:function(n,i,o,s){i>>>=0,o>>>=0,s>>>=0;for(var c=0,p=0;p<o;p++){var g=ie[i>>>2>>>0],v=ie[i+4>>>2>>>0];i+=8;for(var w=0;w<v;w++){var $=ne[g+w>>>0],S=Ft[n];$===0||$===10?((n===1?B:W)(qr(S,0)),S.length=0):S.push($)}c+=v}return ie[s>>>2>>>0]=c,0},ga:Yc,Zc:jf,la:_f,L:mf,I:Jc,_c:Uf,da:wf,B:cf,z:Wc,b:Tc,Ba:Vc,$:jc,g:Ac,ra:Df,h:xc,E:Rf,i:Rc,$c:Mf,j:kc,u:Oc,s:Gc,n:Kc,W:Zc,Q:Tf,J:Lc,na:lf,_:ff,ja:Ef,xb:nm,fb:vm,Cc:rp,bb:Cm,db:_m,Ta:km,Qb:jp,Kc:Kf,hb:ym,Va:Pm,Ob:Vp,eb:wm,lc:bp,Rc:Vf,tc:dp,gb:bm,cb:$m,Bb:Xp,pc:mp,sc:cp,kc:vp,Qc:Nf,Ya:Im,ab:Sm,ob:cm,lb:mm,$a:xm,nc:gp,Ib:Fp,kb:hm,Ua:Om,Tb:Mp,Hc:Zf,Pc:Wf,Ac:ip,nb:fm,Za:Am,qc:pp,d:Pc,X:of,q:Ec,Y:Bf,N:vf,fa:Qc,e:Ic,Aa:Xc,F:kf,aa:sf,R:hf,wb:im,ba:ef,c:Bc,xa:rf,ad:Pf,ua:gf,k:Dc,wa:af,m:Mc,ya:tf,va:uf,Ha:Sf,o:zc,ec:Sp,fc:Cp,dc:xp,ka:$f,y:Hc,A:Nc,D:qc,Z:Of,ta:yf,ea:nf,P:pf,K:Uc,O:df,oa:Fc,V:bf,ia:zf,S:Af,sa:If,T:xf,U:Cf,Wa:Em,oc:hp,Xb:kp,M:em,sb:sm,hc:_p,Sb:zp,Db:Yp,Ab:Qp,Fa:Lf,Nb:Np,zb:tm,Fb:Jp,Rb:Up,Hb:qp,ic:wp,mb:pm,Kb:Hp,tb:am,qb:lm,wc:up,Fc:Qf,rb:um,Lb:Gp,Lc:qf,ib:gm,Bc:np,Ic:Yf,Nc:Hf,Dc:tp,pb:dm,Ec:ep,yb:rm,Jb:Lp,Mc:Ff,Oc:Gf,yc:ap,Cb:Zp,Yb:Op,vb:om,Gc:Xf,Zb:Pp,Mb:Wp,mc:yp,Jc:Jf,vc:lp,Gb:Kp,Wb:Rp,xc:sp,rc:fp,Xa:Tm,zc:op,Ub:Dp,Vb:Bp,ac:Tp,bc:Ip,gc:$p,cc:Ap,$b:Ep,v:function(n){return n>>>0},Ja:ai,G:function(n,i,o,s){return ai(n>>>0,i>>>0,o>>>0,s>>>0)}},M=function(){function n(o){return M=o.exports,M=si(),M=Rm(),j=M.bd,Fe(),Be.unshift(M.cd),We--,We==0&&(Ie!==null&&(clearInterval(Ie),Ie=null),$e&&(o=$e,$e=null,o())),M}var i={a:pi};if(We++,t.instantiateWasm)try{return t.instantiateWasm(i,n)}catch(o){W(`Module.instantiateWasm callback failed with error: ${o}`),l(o)}return ft(i,function(o){n(o.instance)}).catch(l),{}}();t._OrtInit=(n,i)=>(t._OrtInit=M.dd)(n,i),t._OrtGetLastError=(n,i)=>(t._OrtGetLastError=M.ed)(n,i),t._OrtCreateSessionOptions=(n,i,o,s,c,p,g,v,w,$)=>(t._OrtCreateSessionOptions=M.fd)(n,i,o,s,c,p,g,v,w,$),t._OrtAppendExecutionProvider=(n,i)=>(t._OrtAppendExecutionProvider=M.gd)(n,i),t._OrtAddFreeDimensionOverride=(n,i,o)=>(t._OrtAddFreeDimensionOverride=M.hd)(n,i,o),t._OrtAddSessionConfigEntry=(n,i,o)=>(t._OrtAddSessionConfigEntry=M.id)(n,i,o),t._OrtReleaseSessionOptions=n=>(t._OrtReleaseSessionOptions=M.jd)(n),t._OrtCreateSession=(n,i,o)=>(t._OrtCreateSession=M.kd)(n,i,o),t._OrtReleaseSession=n=>(t._OrtReleaseSession=M.ld)(n),t._OrtGetInputOutputCount=(n,i,o)=>(t._OrtGetInputOutputCount=M.md)(n,i,o),t._OrtGetInputName=(n,i)=>(t._OrtGetInputName=M.nd)(n,i),t._OrtGetOutputName=(n,i)=>(t._OrtGetOutputName=M.od)(n,i),t._OrtFree=n=>(t._OrtFree=M.pd)(n),t._OrtCreateTensor=(n,i,o,s,c,p)=>(t._OrtCreateTensor=M.qd)(n,i,o,s,c,p),t._OrtGetTensorData=(n,i,o,s,c)=>(t._OrtGetTensorData=M.rd)(n,i,o,s,c),t._OrtReleaseTensor=n=>(t._OrtReleaseTensor=M.sd)(n),t._OrtCreateRunOptions=(n,i,o,s)=>(t._OrtCreateRunOptions=M.td)(n,i,o,s),t._OrtAddRunConfigEntry=(n,i,o)=>(t._OrtAddRunConfigEntry=M.ud)(n,i,o),t._OrtReleaseRunOptions=n=>(t._OrtReleaseRunOptions=M.vd)(n),t._OrtCreateBinding=n=>(t._OrtCreateBinding=M.wd)(n),t._OrtBindInput=(n,i,o)=>(t._OrtBindInput=M.xd)(n,i,o),t._OrtBindOutput=(n,i,o,s)=>(t._OrtBindOutput=M.yd)(n,i,o,s),t._OrtClearBoundOutputs=n=>(t._OrtClearBoundOutputs=M.zd)(n),t._OrtReleaseBinding=n=>(t._OrtReleaseBinding=M.Ad)(n),t._OrtRunWithBinding=(n,i,o,s,c)=>(t._OrtRunWithBinding=M.Bd)(n,i,o,s,c),t._OrtRun=(n,i,o,s,c,p,g,v)=>(t._OrtRun=M.Cd)(n,i,o,s,c,p,g,v),t._OrtEndProfiling=n=>(t._OrtEndProfiling=M.Dd)(n),t._JsepOutput=(n,i,o)=>(t._JsepOutput=M.Ed)(n,i,o),t._JsepGetNodeName=n=>(t._JsepGetNodeName=M.Fd)(n);var ar=()=>(ar=M.Gd)(),xr=t._malloc=n=>(xr=t._malloc=M.Hd)(n),Ar=t._free=n=>(Ar=t._free=M.Id)(n),H=(n,i)=>(H=M.Kd)(n,i),qt=n=>(qt=M.Ld)(n),L=()=>(L=M.Md)(),F=n=>(F=M.Nd)(n),Qr=n=>(Qr=M.Od)(n),en=n=>(en=M.Pd)(n),tn=n=>(tn=M.Qd)(n),rn=(n,i,o)=>(rn=M.Rd)(n,i,o),nn=n=>(nn=M.Sd)(n),on=t.dynCall_vii=(n,i,o)=>(on=t.dynCall_vii=M.Td)(n,i,o),an=t.dynCall_iiii=(n,i,o,s)=>(an=t.dynCall_iiii=M.Ud)(n,i,o,s),sn=t.dynCall_iii=(n,i,o)=>(sn=t.dynCall_iii=M.Vd)(n,i,o),un=t.dynCall_ii=(n,i)=>(un=t.dynCall_ii=M.Wd)(n,i),wt=t.dynCall_iiiiiii=(n,i,o,s,c,p,g)=>(wt=t.dynCall_iiiiiii=M.Xd)(n,i,o,s,c,p,g),Ir=t.dynCall_vi=(n,i)=>(Ir=t.dynCall_vi=M.Yd)(n,i),Tr=t.dynCall_v=n=>(Tr=t.dynCall_v=M.Zd)(n),mi=t.dynCall_iiiiii=(n,i,o,s,c,p)=>(mi=t.dynCall_iiiiii=M._d)(n,i,o,s,c,p),Rt=t.dynCall_iiij=(n,i,o,s,c)=>(Rt=t.dynCall_iiij=M.$d)(n,i,o,s,c),hi=t.dynCall_iiiii=(n,i,o,s,c)=>(hi=t.dynCall_iiiii=M.ae)(n,i,o,s,c),Ot=t.dynCall_viii=(n,i,o,s)=>(Ot=t.dynCall_viii=M.be)(n,i,o,s),ln=t.dynCall_viiiii=(n,i,o,s,c,p)=>(ln=t.dynCall_viiiii=M.ce)(n,i,o,s,c,p),dn=t.dynCall_viiii=(n,i,o,s,c)=>(dn=t.dynCall_viiii=M.de)(n,i,o,s,c),yt=t.dynCall_viiiiii=(n,i,o,s,c,p,g)=>(yt=t.dynCall_viiiiii=M.ee)(n,i,o,s,c,p,g),Er=t.dynCall_viiji=(n,i,o,s,c,p)=>(Er=t.dynCall_viiji=M.fe)(n,i,o,s,c,p),lt=t.dynCall_viiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T)=>(lt=t.dynCall_viiiiiiiiiii=M.ge)(n,i,o,s,c,p,g,v,w,$,S,T),_t=t.dynCall_viiijjjii=(n,i,o,s,c,p,g,v,w,$,S,T)=>(_t=t.dynCall_viiijjjii=M.he)(n,i,o,s,c,p,g,v,w,$,S,T),cn=t.dynCall_iij=(n,i,o,s)=>(cn=t.dynCall_iij=M.ie)(n,i,o,s),gi=t.dynCall_iif=(n,i,o)=>(gi=t.dynCall_iif=M.je)(n,i,o),yi=t.dynCall_iid=(n,i,o)=>(yi=t.dynCall_iid=M.ke)(n,i,o),fn=t.dynCall_jii=(n,i,o)=>(fn=t.dynCall_jii=M.le)(n,i,o),bi=t.dynCall_i=n=>(bi=t.dynCall_i=M.me)(n),vi=t.dynCall_viiiiiiii=(n,i,o,s,c,p,g,v,w)=>(vi=t.dynCall_viiiiiiii=M.ne)(n,i,o,s,c,p,g,v,w),wi=t.dynCall_viiiiij=(n,i,o,s,c,p,g,v)=>(wi=t.dynCall_viiiiij=M.oe)(n,i,o,s,c,p,g,v),_i=t.dynCall_ji=(n,i)=>(_i=t.dynCall_ji=M.pe)(n,i),$i=t.dynCall_viij=(n,i,o,s,c)=>($i=t.dynCall_viij=M.qe)(n,i,o,s,c),Ci=t.dynCall_iiiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T)=>(Ci=t.dynCall_iiiiiiiiiiii=M.re)(n,i,o,s,c,p,g,v,w,$,S,T),pn=t.dynCall_viiiiiiiii=(n,i,o,s,c,p,g,v,w,$)=>(pn=t.dynCall_viiiiiiiii=M.se)(n,i,o,s,c,p,g,v,w,$),Pr=t.dynCall_ij=(n,i,o)=>(Pr=t.dynCall_ij=M.te)(n,i,o),sr=t.dynCall_iiiiij=(n,i,o,s,c,p,g)=>(sr=t.dynCall_iiiiij=M.ue)(n,i,o,s,c,p,g),Or=t.dynCall_j=n=>(Or=t.dynCall_j=M.ve)(n),kr=t.dynCall_vij=(n,i,o,s)=>(kr=t.dynCall_vij=M.we)(n,i,o,s),mn=t.dynCall_viijjjiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)=>(mn=t.dynCall_viijjjiiiiii=M.xe)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z),ur=t.dynCall_viiijiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O)=>(ur=t.dynCall_viiijiiiiiii=M.ye)(n,i,o,s,c,p,g,v,w,$,S,T,O),Si=t.dynCall_iiiiiiii=(n,i,o,s,c,p,g,v)=>(Si=t.dynCall_iiiiiiii=M.ze)(n,i,o,s,c,p,g,v),Bt=t.dynCall_viiiiiii=(n,i,o,s,c,p,g,v)=>(Bt=t.dynCall_viiiiiii=M.Ae)(n,i,o,s,c,p,g,v),xt=t.dynCall_iiiiiiiij=(n,i,o,s,c,p,g,v,w,$)=>(xt=t.dynCall_iiiiiiiij=M.Be)(n,i,o,s,c,p,g,v,w,$),hn=t.dynCall_viiiiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x)=>(hn=t.dynCall_viiiiiiiiiiiii=M.Ce)(n,i,o,s,c,p,g,v,w,$,S,T,O,x),lr=t.dynCall_iiiiiiiii=(n,i,o,s,c,p,g,v,w)=>(lr=t.dynCall_iiiiiiiii=M.De)(n,i,o,s,c,p,g,v,w),gn=t.dynCall_iiiiijiiiii=(n,i,o,s,c,p,g,v,w,$,S,T)=>(gn=t.dynCall_iiiiijiiiii=M.Ee)(n,i,o,s,c,p,g,v,w,$,S,T),yn=t.dynCall_vijjjiiij=(n,i,o,s,c,p,g,v,w,$,S,T,O)=>(yn=t.dynCall_vijjjiiij=M.Fe)(n,i,o,s,c,p,g,v,w,$,S,T,O),xi=t.dynCall_fi=(n,i)=>(xi=t.dynCall_fi=M.Ge)(n,i),Rr=t.dynCall_fii=(n,i,o)=>(Rr=t.dynCall_fii=M.He)(n,i,o),Ai=t.dynCall_di=(n,i)=>(Ai=t.dynCall_di=M.Ie)(n,i),Ii=t.dynCall_dii=(n,i,o)=>(Ii=t.dynCall_dii=M.Je)(n,i,o),Ti=t.dynCall_vijj=(n,i,o,s,c,p)=>(Ti=t.dynCall_vijj=M.Ke)(n,i,o,s,c,p),Ei=t.dynCall_iiiiiiiiii=(n,i,o,s,c,p,g,v,w,$)=>(Ei=t.dynCall_iiiiiiiiii=M.Le)(n,i,o,s,c,p,g,v,w,$),Pi=t.dynCall_viijiii=(n,i,o,s,c,p,g,v)=>(Pi=t.dynCall_viijiii=M.Me)(n,i,o,s,c,p,g,v),bn=t.dynCall_viid=(n,i,o,s)=>(bn=t.dynCall_viid=M.Ne)(n,i,o,s),dr=t.dynCall_viffiii=(n,i,o,s,c,p,g)=>(dr=t.dynCall_viffiii=M.Oe)(n,i,o,s,c,p,g),Oi=t.dynCall_viifiii=(n,i,o,s,c,p,g)=>(Oi=t.dynCall_viifiii=M.Pe)(n,i,o,s,c,p,g),Br=t.dynCall_viiiiidiidi=(n,i,o,s,c,p,g,v,w,$,S)=>(Br=t.dynCall_viiiiidiidi=M.Qe)(n,i,o,s,c,p,g,v,w,$,S),vn=t.dynCall_viiiiiiiiidi=(n,i,o,s,c,p,g,v,w,$,S,T)=>(vn=t.dynCall_viiiiiiiiidi=M.Re)(n,i,o,s,c,p,g,v,w,$,S,T),ki=t.dynCall_jiii=(n,i,o,s)=>(ki=t.dynCall_jiii=M.Se)(n,i,o,s),Ri=t.dynCall_vjiiiiii=(n,i,o,s,c,p,g,v,w)=>(Ri=t.dynCall_vjiiiiii=M.Te)(n,i,o,s,c,p,g,v,w),wn=t.dynCall_viiid=(n,i,o,s,c)=>(wn=t.dynCall_viiid=M.Ue)(n,i,o,s,c),Bi=t.dynCall_viiiiiiiiiji=(n,i,o,s,c,p,g,v,w,$,S,T,O)=>(Bi=t.dynCall_viiiiiiiiiji=M.Ve)(n,i,o,s,c,p,g,v,w,$,S,T,O),Kt=t.dynCall_viji=(n,i,o,s,c)=>(Kt=t.dynCall_viji=M.We)(n,i,o,s,c),_n=t.dynCall_vijjjjjjjjjjjjji=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it,dt,bt)=>(_n=t.dynCall_vijjjjjjjjjjjjji=M.Xe)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it,dt,bt),$n=t.dynCall_viiiji=(n,i,o,s,c,p,g)=>($n=t.dynCall_viiiji=M.Ye)(n,i,o,s,c,p,g),Cn=t.dynCall_vijjjiiji=(n,i,o,s,c,p,g,v,w,$,S,T,O)=>(Cn=t.dynCall_vijjjiiji=M.Ze)(n,i,o,s,c,p,g,v,w,$,S,T,O),Sn=t.dynCall_iiiji=(n,i,o,s,c,p)=>(Sn=t.dynCall_iiiji=M._e)(n,i,o,s,c,p),xn=t.dynCall_iiijiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)=>(xn=t.dynCall_iiijiiiiiiiiii=M.$e)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z),Dr=t.dynCall_vj=(n,i,o)=>(Dr=t.dynCall_vj=M.af)(n,i,o),An=t.dynCall_jjj=(n,i,o,s,c)=>(An=t.dynCall_jjj=M.bf)(n,i,o,s,c),Mr=t.dynCall_iiijiiiiii=(n,i,o,s,c,p,g,v,w,$,S)=>(Mr=t.dynCall_iiijiiiiii=M.cf)(n,i,o,s,c,p,g,v,w,$,S),In=t.dynCall_vfiii=(n,i,o,s,c)=>(In=t.dynCall_vfiii=M.df)(n,i,o,s,c),zr=t.dynCall_viiiiff=(n,i,o,s,c,p,g)=>(zr=t.dynCall_viiiiff=M.ef)(n,i,o,s,c,p,g),Tn=t.dynCall_viiiiiff=(n,i,o,s,c,p,g,v)=>(Tn=t.dynCall_viiiiiff=M.ff)(n,i,o,s,c,p,g,v),En=t.dynCall_viiff=(n,i,o,s,c)=>(En=t.dynCall_viiff=M.gf)(n,i,o,s,c),Pn=t.dynCall_viiiiiiiiifiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x)=>(Pn=t.dynCall_viiiiiiiiifiii=M.hf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x),On=t.dynCall_viiiiiiiijj=(n,i,o,s,c,p,g,v,w,$,S,T,O)=>(On=t.dynCall_viiiiiiiijj=M.jf)(n,i,o,s,c,p,g,v,w,$,S,T,O),kn=t.dynCall_iiiiiiiiiiiiiifii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee)=>(kn=t.dynCall_iiiiiiiiiiiiiifii=M.kf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee),Di=t.dynCall_viiiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O)=>(Di=t.dynCall_viiiiiiiiiiii=M.lf)(n,i,o,s,c,p,g,v,w,$,S,T,O),Rn=t.dynCall_iiiiiiiiiiiiiiiiifii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he)=>(Rn=t.dynCall_iiiiiiiiiiiiiiiiifii=M.mf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he),Bn=t.dynCall_vijjiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T)=>(Bn=t.dynCall_vijjiiiiii=M.nf)(n,i,o,s,c,p,g,v,w,$,S,T),Dn=t.dynCall_iiiijjj=(n,i,o,s,c,p,g,v,w,$)=>(Dn=t.dynCall_iiiijjj=M.of)(n,i,o,s,c,p,g,v,w,$),Mi=t.dynCall_viiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S)=>(Mi=t.dynCall_viiiiiiiiii=M.pf)(n,i,o,s,c,p,g,v,w,$,S),zi=t.dynCall_iiijjj=(n,i,o,s,c,p,g,v,w)=>(zi=t.dynCall_iiijjj=M.qf)(n,i,o,s,c,p,g,v,w),Mn=t.dynCall_fffffff=(n,i,o,s,c,p,g)=>(Mn=t.dynCall_fffffff=M.rf)(n,i,o,s,c,p,g),zn=t.dynCall_viiiij=(n,i,o,s,c,p,g)=>(zn=t.dynCall_viiiij=M.sf)(n,i,o,s,c,p,g),cr=t.dynCall_viiiiiijiifiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)=>(cr=t.dynCall_viiiiiijiifiii=M.tf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z),Ui=t.dynCall_vjjjjjjffjifiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze)=>(Ui=t.dynCall_vjjjjjjffjifiiiiii=M.uf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze),ji=t.dynCall_viiiiiiffjifiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae)=>(ji=t.dynCall_viiiiiiffjifiiiii=M.vf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae),me=t.dynCall_viiiiiiffjfiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee)=>(me=t.dynCall_viiiiiiffjfiiiii=M.wf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee),Un=t.dynCall_viiiiiiffjiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)=>(Un=t.dynCall_viiiiiiffjiiiii=M.xf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G),fr=t.dynCall_vjjjjjjjjfffiiifiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it,dt,bt)=>(fr=t.dynCall_vjjjjjjjjfffiiifiiiii=M.yf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it,dt,bt),Qt=t.dynCall_vjjjjjjfffifijiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe)=>(Qt=t.dynCall_vjjjjjjfffifijiiiii=M.zf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe),At=t.dynCall_vjjjjjjfffifiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe)=>(At=t.dynCall_vjjjjjjfffifiiiiii=M.Af)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe),jn=t.dynCall_vjjjjjjjjfffjifiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it,dt,bt,hr)=>(jn=t.dynCall_vjjjjjjjjfffjifiiiiii=M.Bf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it,dt,bt,hr),Vn=t.dynCall_vijjfffiii=(n,i,o,s,c,p,g,v,w,$,S,T)=>(Vn=t.dynCall_vijjfffiii=M.Cf)(n,i,o,s,c,p,g,v,w,$,S,T),Nn=t.dynCall_vijiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x)=>(Nn=t.dynCall_vijiiiiiiiiii=M.Df)(n,i,o,s,c,p,g,v,w,$,S,T,O,x),Ur=t.dynCall_viiiiiiijiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x)=>(Ur=t.dynCall_viiiiiiijiiii=M.Ef)(n,i,o,s,c,p,g,v,w,$,S,T,O,x),jr=t.dynCall_vijjjjjjifiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce)=>(jr=t.dynCall_vijjjjjjifiiiii=M.Ff)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce),Wn=t.dynCall_viifi=(n,i,o,s,c)=>(Wn=t.dynCall_viifi=M.Gf)(n,i,o,s,c),Gn=t.dynCall_vjjjjjiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)=>(Gn=t.dynCall_vjjjjjiiii=M.Hf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z),Vr=t.dynCall_vjjjjfiii=(n,i,o,s,c,p,g,v,w,$,S,T,O)=>(Vr=t.dynCall_vjjjjfiii=M.If)(n,i,o,s,c,p,g,v,w,$,S,T,O),pr=t.dynCall_viiiiiijiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)=>(pr=t.dynCall_viiiiiijiiiiii=M.Jf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z),Nr=t.dynCall_vijjii=(n,i,o,s,c,p,g,v)=>(Nr=t.dynCall_vijjii=M.Kf)(n,i,o,s,c,p,g,v),Hn=t.dynCall_viiiiijjiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)=>(Hn=t.dynCall_viiiiijjiiiii=M.Lf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z),Ln=t.dynCall_iiiiiji=(n,i,o,s,c,p,g,v)=>(Ln=t.dynCall_iiiiiji=M.Mf)(n,i,o,s,c,p,g,v),Fn=t.dynCall_iiiiji=(n,i,o,s,c,p,g)=>(Fn=t.dynCall_iiiiji=M.Nf)(n,i,o,s,c,p,g),qn=t.dynCall_viiiiijiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x)=>(qn=t.dynCall_viiiiijiiiiii=M.Of)(n,i,o,s,c,p,g,v,w,$,S,T,O,x),Kn=t.dynCall_viiijiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T)=>(Kn=t.dynCall_viiijiiiiii=M.Pf)(n,i,o,s,c,p,g,v,w,$,S,T),Vi=t.dynCall_viijj=(n,i,o,s,c,p,g)=>(Vi=t.dynCall_viijj=M.Qf)(n,i,o,s,c,p,g),mr=t.dynCall_viiiijii=(n,i,o,s,c,p,g,v,w)=>(mr=t.dynCall_viiiijii=M.Rf)(n,i,o,s,c,p,g,v,w),Jn=t.dynCall_viijjiii=(n,i,o,s,c,p,g,v,w,$)=>(Jn=t.dynCall_viijjiii=M.Sf)(n,i,o,s,c,p,g,v,w,$),a=t.dynCall_ijii=(n,i,o,s,c)=>(a=t.dynCall_ijii=M.Tf)(n,i,o,s,c),h=t.dynCall_viiiiijjji=(n,i,o,s,c,p,g,v,w,$,S,T,O)=>(h=t.dynCall_viiiiijjji=M.Uf)(n,i,o,s,c,p,g,v,w,$,S,T,O),_=t.dynCall_vijjjjiij=(n,i,o,s,c,p,g,v,w,$,S,T,O,x)=>(_=t.dynCall_vijjjjiij=M.Vf)(n,i,o,s,c,p,g,v,w,$,S,T,O,x),I=t.dynCall_viiiiijij=(n,i,o,s,c,p,g,v,w,$,S)=>(I=t.dynCall_viiiiijij=M.Wf)(n,i,o,s,c,p,g,v,w,$,S),D=t.dynCall_viiiiiijij=(n,i,o,s,c,p,g,v,w,$,S,T)=>(D=t.dynCall_viiiiiijij=M.Xf)(n,i,o,s,c,p,g,v,w,$,S,T),N=t.dynCall_vijiii=(n,i,o,s,c,p,g)=>(N=t.dynCall_vijiii=M.Yf)(n,i,o,s,c,p,g),Y=t.dynCall_viiifii=(n,i,o,s,c,p,g)=>(Y=t.dynCall_viiifii=M.Zf)(n,i,o,s,c,p,g),re=t.dynCall_viiiiiiiiifi=(n,i,o,s,c,p,g,v,w,$,S,T)=>(re=t.dynCall_viiiiiiiiifi=M._f)(n,i,o,s,c,p,g,v,w,$,S,T),ce=t.dynCall_iiijiiii=(n,i,o,s,c,p,g,v,w)=>(ce=t.dynCall_iiijiiii=M.$f)(n,i,o,s,c,p,g,v,w),ue=t.dynCall_viiiiiijjiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)=>(ue=t.dynCall_viiiiiijjiiiii=M.ag)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G),ve=t.dynCall_viiiiiiijiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)=>(ve=t.dynCall_viiiiiiijiiiiii=M.bg)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G),Ee=t.dynCall_vif=(n,i,o)=>(Ee=t.dynCall_vif=M.cg)(n,i,o),je=t.dynCall_viif=(n,i,o,s)=>(je=t.dynCall_viif=M.dg)(n,i,o,s),K=t.dynCall_fiii=(n,i,o,s)=>(K=t.dynCall_fiii=M.eg)(n,i,o,s),we=t.dynCall_diii=(n,i,o,s)=>(we=t.dynCall_diii=M.fg)(n,i,o,s),ze=t.dynCall_viiiiiifii=(n,i,o,s,c,p,g,v,w,$)=>(ze=t.dynCall_viiiiiifii=M.gg)(n,i,o,s,c,p,g,v,w,$),jt=t.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it)=>(jt=t.dynCall_viiiiijiiiiiiiiiiiiiiiiiii=M.hg)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it),Yn=t.dynCall_viijji=(n,i,o,s,c,p,g,v)=>(Yn=t.dynCall_viijji=M.ig)(n,i,o,s,c,p,g,v),da=t.dynCall_iiiiiiiiiiiji=(n,i,o,s,c,p,g,v,w,$,S,T,O,x)=>(da=t.dynCall_iiiiiiiiiiiji=M.jg)(n,i,o,s,c,p,g,v,w,$,S,T,O,x),ca=t.dynCall_viifiifijjjii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)=>(ca=t.dynCall_viifiifijjjii=M.kg)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G),fa=t.dynCall_viiiiiiiiiiiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce)=>(fa=t.dynCall_viiiiiiiiiiiiiiiiiiii=M.lg)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce),pa=t.dynCall_viiiiifiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O)=>(pa=t.dynCall_viiiiifiiiiii=M.mg)(n,i,o,s,c,p,g,v,w,$,S,T,O),ma=t.dynCall_vijiiiiiiijjii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee)=>(ma=t.dynCall_vijiiiiiiijjii=M.ng)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee),ha=t.dynCall_viiiiiiiiiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe)=>(ha=t.dynCall_viiiiiiiiiiiiiiiiii=M.og)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe),ga=t.dynCall_viiiiiiiiiiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he)=>(ga=t.dynCall_viiiiiiiiiiiiiiiiiii=M.pg)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he),ya=t.dynCall_viiiiiiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)=>(ya=t.dynCall_viiiiiiiiiiiiiii=M.qg)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G),ba=t.dynCall_viiiiiiiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee)=>(ba=t.dynCall_viiiiiiiiiiiiiiii=M.rg)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee),va=t.dynCall_viiiijjj=(n,i,o,s,c,p,g,v,w,$,S)=>(va=t.dynCall_viiiijjj=M.sg)(n,i,o,s,c,p,g,v,w,$,S),wa=t.dynCall_iiiiid=(n,i,o,s,c,p)=>(wa=t.dynCall_iiiiid=M.tg)(n,i,o,s,c,p),_a=t.dynCall_viiiiiiijjj=(n,i,o,s,c,p,g,v,w,$,S,T,O,x)=>(_a=t.dynCall_viiiiiiijjj=M.ug)(n,i,o,s,c,p,g,v,w,$,S,T,O,x),$a=t.dynCall_iiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S)=>($a=t.dynCall_iiiiiiiiiii=M.vg)(n,i,o,s,c,p,g,v,w,$,S),Ca=t.dynCall_iiiiiiiiiiiiiiiiiifi=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he)=>(Ca=t.dynCall_iiiiiiiiiiiiiiiiiifi=M.wg)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he),Sa=t.dynCall_viiif=(n,i,o,s,c)=>(Sa=t.dynCall_viiif=M.xg)(n,i,o,s,c),xa=t.dynCall_viiijiiiii=(n,i,o,s,c,p,g,v,w,$,S)=>(xa=t.dynCall_viiijiiiii=M.yg)(n,i,o,s,c,p,g,v,w,$,S),Aa=t.dynCall_viiij=(n,i,o,s,c,p)=>(Aa=t.dynCall_viiij=M.zg)(n,i,o,s,c,p),Ia=t.dynCall_iijjj=(n,i,o,s,c,p,g,v)=>(Ia=t.dynCall_iijjj=M.Ag)(n,i,o,s,c,p,g,v),Ta=t.dynCall_viiiiji=(n,i,o,s,c,p,g,v)=>(Ta=t.dynCall_viiiiji=M.Bg)(n,i,o,s,c,p,g,v),Ea=t.dynCall_iijjji=(n,i,o,s,c,p,g,v,w)=>(Ea=t.dynCall_iijjji=M.Cg)(n,i,o,s,c,p,g,v,w),Pa=t.dynCall_ijijji=(n,i,o,s,c,p,g,v,w)=>(Pa=t.dynCall_ijijji=M.Dg)(n,i,o,s,c,p,g,v,w),Oa=t.dynCall_viiijjiii=(n,i,o,s,c,p,g,v,w,$,S)=>(Oa=t.dynCall_viiijjiii=M.Eg)(n,i,o,s,c,p,g,v,w,$,S),ka=t.dynCall_iiiiijji=(n,i,o,s,c,p,g,v,w,$)=>(ka=t.dynCall_iiiiijji=M.Fg)(n,i,o,s,c,p,g,v,w,$),Ra=t.dynCall_iiiifi=(n,i,o,s,c,p)=>(Ra=t.dynCall_iiiifi=M.Gg)(n,i,o,s,c,p),Ba=t.dynCall_iiijii=(n,i,o,s,c,p,g)=>(Ba=t.dynCall_iiijii=M.Hg)(n,i,o,s,c,p,g),Da=t.dynCall_iiiiiiiiijii=(n,i,o,s,c,p,g,v,w,$,S,T,O)=>(Da=t.dynCall_iiiiiiiiijii=M.Ig)(n,i,o,s,c,p,g,v,w,$,S,T,O),Ma=t.dynCall_iiiijjii=(n,i,o,s,c,p,g,v,w,$)=>(Ma=t.dynCall_iiiijjii=M.Jg)(n,i,o,s,c,p,g,v,w,$),za=t.dynCall_iiiiiijjjii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x)=>(za=t.dynCall_iiiiiijjjii=M.Kg)(n,i,o,s,c,p,g,v,w,$,S,T,O,x),Ua=t.dynCall_iiijiii=(n,i,o,s,c,p,g,v)=>(Ua=t.dynCall_iiijiii=M.Lg)(n,i,o,s,c,p,g,v),ja=t.dynCall_iiiiiiiijjjfi=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)=>(ja=t.dynCall_iiiiiiiijjjfi=M.Mg)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G),Va=t.dynCall_iijiiii=(n,i,o,s,c,p,g,v)=>(Va=t.dynCall_iijiiii=M.Ng)(n,i,o,s,c,p,g,v),Na=t.dynCall_iijjjii=(n,i,o,s,c,p,g,v,w,$)=>(Na=t.dynCall_iijjjii=M.Og)(n,i,o,s,c,p,g,v,w,$),Wa=t.dynCall_jij=(n,i,o,s)=>(Wa=t.dynCall_jij=M.Pg)(n,i,o,s),Ga=t.dynCall_iiji=(n,i,o,s,c)=>(Ga=t.dynCall_iiji=M.Qg)(n,i,o,s,c),Ha=t.dynCall_iiif=(n,i,o,s)=>(Ha=t.dynCall_iiif=M.Rg)(n,i,o,s),La=t.dynCall_vidi=(n,i,o,s)=>(La=t.dynCall_vidi=M.Sg)(n,i,o,s),Fa=t.dynCall_vjiii=(n,i,o,s,c,p)=>(Fa=t.dynCall_vjiii=M.Tg)(n,i,o,s,c,p),qa=t.dynCall_iiiij=(n,i,o,s,c,p)=>(qa=t.dynCall_iiiij=M.Ug)(n,i,o,s,c,p),Ka=t.dynCall_viiijii=(n,i,o,s,c,p,g,v)=>(Ka=t.dynCall_viiijii=M.Vg)(n,i,o,s,c,p,g,v),Ja=t.dynCall_viijiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x)=>(Ja=t.dynCall_viijiiiiiiiii=M.Wg)(n,i,o,s,c,p,g,v,w,$,S,T,O,x),Ya=t.dynCall_fiiii=(n,i,o,s,c)=>(Ya=t.dynCall_fiiii=M.Xg)(n,i,o,s,c),Za=t.dynCall_jfi=(n,i,o)=>(Za=t.dynCall_jfi=M.Yg)(n,i,o),Xa=t.dynCall_viiiiiiiiiiiiii=(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)=>(Xa=t.dynCall_viiiiiiiiiiiiii=M.Zg)(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z),Qa=t.dynCall_jiij=(n,i,o,s,c)=>(Qa=t.dynCall_jiij=M._g)(n,i,o,s,c),es=n=>(es=M.$g)(n),ts=()=>(ts=M.ah)(),rs=n=>(rs=M.bh)(n),ns=()=>(ns=M.ch)();t.___start_em_js=1379415,t.___stop_em_js=1379576;function xc(n,i,o,s){var c=L();try{return an(n,i,o,s)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Ac(n,i,o){var s=L();try{return sn(n,i,o)}catch(c){if(F(s),c!==c+0)throw c;H(1,0)}}function Ic(n,i,o){var s=L();try{on(n,i,o)}catch(c){if(F(s),c!==c+0)throw c;H(1,0)}}function Tc(n,i){var o=L();try{return un(n,i)}catch(s){if(F(o),s!==s+0)throw s;H(1,0)}}function Ec(n,i){var o=L();try{Ir(n,i)}catch(s){if(F(o),s!==s+0)throw s;H(1,0)}}function Pc(n){var i=L();try{Tr(n)}catch(o){if(F(i),o!==o+0)throw o;H(1,0)}}function Oc(n,i,o,s,c,p,g){var v=L();try{return wt(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function kc(n,i,o,s,c,p){var g=L();try{return mi(n,i,o,s,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Rc(n,i,o,s,c){var p=L();try{return hi(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Bc(n,i,o,s){var c=L();try{Ot(n,i,o,s)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Dc(n,i,o,s,c){var p=L();try{dn(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Mc(n,i,o,s,c,p){var g=L();try{ln(n,i,o,s,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function zc(n,i,o,s,c,p,g){var v=L();try{yt(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Uc(n,i,o,s,c,p,g,v,w,$,S,T){var O=L();try{lt(n,i,o,s,c,p,g,v,w,$,S,T)}catch(x){if(F(O),x!==x+0)throw x;H(1,0)}}function jc(n,i,o){var s=L();try{return gi(n,i,o)}catch(c){if(F(s),c!==c+0)throw c;H(1,0)}}function Vc(n,i,o){var s=L();try{return yi(n,i,o)}catch(c){if(F(s),c!==c+0)throw c;H(1,0)}}function Nc(n,i,o,s,c,p,g,v,w){var $=L();try{vi(n,i,o,s,c,p,g,v,w)}catch(S){if(F($),S!==S+0)throw S;H(1,0)}}function Wc(n){var i=L();try{return bi(n)}catch(o){if(F(i),o!==o+0)throw o;H(1,0)}}function Gc(n,i,o,s,c,p,g,v){var w=L();try{return Si(n,i,o,s,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Hc(n,i,o,s,c,p,g,v){var w=L();try{Bt(n,i,o,s,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Lc(n,i,o,s,c,p,g,v,w,$,S,T){var O=L();try{return Ci(n,i,o,s,c,p,g,v,w,$,S,T)}catch(x){if(F(O),x!==x+0)throw x;H(1,0)}}function Fc(n,i,o,s,c,p,g,v,w,$,S,T,O,x){var z=L();try{hn(n,i,o,s,c,p,g,v,w,$,S,T,O,x)}catch(G){if(F(z),G!==G+0)throw G;H(1,0)}}function qc(n,i,o,s,c,p,g,v,w,$){var S=L();try{pn(n,i,o,s,c,p,g,v,w,$)}catch(T){if(F(S),T!==T+0)throw T;H(1,0)}}function Kc(n,i,o,s,c,p,g,v,w){var $=L();try{return lr(n,i,o,s,c,p,g,v,w)}catch(S){if(F($),S!==S+0)throw S;H(1,0)}}function Jc(n,i){var o=L();try{return xi(n,i)}catch(s){if(F(o),s!==s+0)throw s;H(1,0)}}function Yc(n,i){var o=L();try{return Ai(n,i)}catch(s){if(F(o),s!==s+0)throw s;H(1,0)}}function Zc(n,i,o,s,c,p,g,v,w,$){var S=L();try{return Ei(n,i,o,s,c,p,g,v,w,$)}catch(T){if(F(S),T!==T+0)throw T;H(1,0)}}function Xc(n,i,o,s){var c=L();try{bn(n,i,o,s)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Qc(n,i,o,s,c,p,g){var v=L();try{dr(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function ef(n,i,o,s,c,p,g){var v=L();try{Oi(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function tf(n,i,o,s,c,p,g,v,w,$,S){var T=L();try{Br(n,i,o,s,c,p,g,v,w,$,S)}catch(O){if(F(T),O!==O+0)throw O;H(1,0)}}function rf(n,i,o,s,c){var p=L();try{wn(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function nf(n,i,o,s,c,p,g,v,w,$,S,T,O,x){var z=L();try{Pn(n,i,o,s,c,p,g,v,w,$,S,T,O,x)}catch(G){if(F(z),G!==G+0)throw G;H(1,0)}}function of(n,i,o,s,c){var p=L();try{In(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function af(n,i,o,s,c,p,g){var v=L();try{zr(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function sf(n,i,o,s,c){var p=L();try{En(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function uf(n,i,o,s,c,p,g,v){var w=L();try{Tn(n,i,o,s,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function lf(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee){var ae=L();try{return kn(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee)}catch(fe){if(F(ae),fe!==fe+0)throw fe;H(1,0)}}function df(n,i,o,s,c,p,g,v,w,$,S,T,O){var x=L();try{Di(n,i,o,s,c,p,g,v,w,$,S,T,O)}catch(z){if(F(x),z!==z+0)throw z;H(1,0)}}function cf(n,i,o,s,c){var p=L();try{return Ya(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function ff(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he){var Ce=L();try{return Rn(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he)}catch(xe){if(F(Ce),xe!==xe+0)throw xe;H(1,0)}}function pf(n,i,o,s,c,p,g,v,w,$,S){var T=L();try{Mi(n,i,o,s,c,p,g,v,w,$,S)}catch(O){if(F(T),O!==O+0)throw O;H(1,0)}}function mf(n,i,o,s,c,p,g){var v=L();try{return Mn(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function hf(n,i,o,s,c){var p=L();try{Wn(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function gf(n,i,o,s,c,p,g){var v=L();try{Y(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function yf(n,i,o,s,c,p,g,v,w,$,S,T){var O=L();try{re(n,i,o,s,c,p,g,v,w,$,S,T)}catch(x){if(F(O),x!==x+0)throw x;H(1,0)}}function bf(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z){var G=L();try{Xa(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function vf(n,i,o){var s=L();try{Ee(n,i,o)}catch(c){if(F(s),c!==c+0)throw c;H(1,0)}}function wf(n,i,o,s){var c=L();try{return K(n,i,o,s)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function _f(n,i,o,s){var c=L();try{return we(n,i,o,s)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function $f(n,i,o,s,c,p,g,v,w,$){var S=L();try{ze(n,i,o,s,c,p,g,v,w,$)}catch(T){if(F(S),T!==T+0)throw T;H(1,0)}}function Cf(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce){var xe=L();try{fa(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce)}catch(Ue){if(F(xe),Ue!==Ue+0)throw Ue;H(1,0)}}function Sf(n,i,o,s,c,p,g,v,w,$,S,T,O){var x=L();try{pa(n,i,o,s,c,p,g,v,w,$,S,T,O)}catch(z){if(F(x),z!==z+0)throw z;H(1,0)}}function xf(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he){var Ce=L();try{ga(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he)}catch(xe){if(F(Ce),xe!==xe+0)throw xe;H(1,0)}}function Af(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee){var ae=L();try{ba(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee)}catch(fe){if(F(ae),fe!==fe+0)throw fe;H(1,0)}}function If(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe){var he=L();try{ha(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe)}catch(Ce){if(F(he),Ce!==Ce+0)throw Ce;H(1,0)}}function Tf(n,i,o,s,c,p,g,v,w,$,S){var T=L();try{return $a(n,i,o,s,c,p,g,v,w,$,S)}catch(O){if(F(T),O!==O+0)throw O;H(1,0)}}function Ef(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he){var Ce=L();try{return Ca(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he)}catch(xe){if(F(Ce),xe!==xe+0)throw xe;H(1,0)}}function Pf(n,i,o,s,c){var p=L();try{Sa(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Of(n,i,o,s,c,p,g,v,w,$,S,T){var O=L();try{vn(n,i,o,s,c,p,g,v,w,$,S,T)}catch(x){if(F(O),x!==x+0)throw x;H(1,0)}}function kf(n,i,o,s){var c=L();try{je(n,i,o,s)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Rf(n,i,o,s,c,p){var g=L();try{return Ra(n,i,o,s,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Bf(n,i,o,s){var c=L();try{La(n,i,o,s)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Df(n,i,o,s){var c=L();try{return Ha(n,i,o,s)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Mf(n,i,o,s,c,p){var g=L();try{return wa(n,i,o,s,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function zf(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G){var ee=L();try{ya(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)}catch(ae){if(F(ee),ae!==ae+0)throw ae;H(1,0)}}function Uf(n,i,o){var s=L();try{return Rr(n,i,o)}catch(c){if(F(s),c!==c+0)throw c;H(1,0)}}function jf(n,i,o){var s=L();try{return Ii(n,i,o)}catch(c){if(F(s),c!==c+0)throw c;H(1,0)}}function Vf(n,i,o,s,c){var p=L();try{return Rt(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Nf(n,i,o,s){var c=L();try{return cn(n,i,o,s)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Wf(n,i,o){var s=L();try{return fn(n,i,o)}catch(c){if(F(s),c!==c+0)throw c;H(1,0)}}function Gf(n,i,o,s){var c=L();try{kr(n,i,o,s)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Hf(n,i,o,s,c,p){var g=L();try{Er(n,i,o,s,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Lf(n,i,o,s,c,p,g,v){var w=L();try{wi(n,i,o,s,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Ff(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z){var G=L();try{mn(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function qf(n,i,o,s,c,p,g,v,w,$,S,T,O){var x=L();try{ur(n,i,o,s,c,p,g,v,w,$,S,T,O)}catch(z){if(F(x),z!==z+0)throw z;H(1,0)}}function Kf(n,i,o,s,c,p,g,v,w,$,S,T){var O=L();try{return gn(n,i,o,s,c,p,g,v,w,$,S,T)}catch(x){if(F(O),x!==x+0)throw x;H(1,0)}}function Jf(n,i,o,s,c,p,g,v,w,$,S,T,O){var x=L();try{yn(n,i,o,s,c,p,g,v,w,$,S,T,O)}catch(z){if(F(x),z!==z+0)throw z;H(1,0)}}function Yf(n,i,o,s,c){var p=L();try{$i(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Zf(n,i){var o=L();try{return _i(n,i)}catch(s){if(F(o),s!==s+0)throw s;H(1,0)}}function Xf(n,i,o,s,c,p){var g=L();try{Ti(n,i,o,s,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Qf(n,i,o,s,c,p,g,v){var w=L();try{Ka(n,i,o,s,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function ep(n,i,o,s,c,p,g){var v=L();try{Vi(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function tp(n,i,o,s,c,p,g,v){var w=L();try{Pi(n,i,o,s,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function rp(n,i,o,s,c,p,g,v,w,$){var S=L();try{return xt(n,i,o,s,c,p,g,v,w,$)}catch(T){if(F(S),T!==T+0)throw T;H(1,0)}}function np(n,i,o,s,c,p,g,v,w,$,S,T){var O=L();try{_t(n,i,o,s,c,p,g,v,w,$,S,T)}catch(x){if(F(O),x!==x+0)throw x;H(1,0)}}function ip(n,i,o,s){var c=L();try{return ki(n,i,o,s)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function op(n,i,o,s,c,p,g,v,w){var $=L();try{Ri(n,i,o,s,c,p,g,v,w)}catch(S){if(F($),S!==S+0)throw S;H(1,0)}}function ap(n,i,o,s,c){var p=L();try{Kt(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function sp(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it,dt,bt){var hr=L();try{_n(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it,dt,bt)}catch(Jt){if(F(hr),Jt!==Jt+0)throw Jt;H(1,0)}}function up(n,i,o,s,c,p,g){var v=L();try{$n(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function lp(n,i,o,s,c,p,g,v,w,$,S,T,O){var x=L();try{Cn(n,i,o,s,c,p,g,v,w,$,S,T,O)}catch(z){if(F(x),z!==z+0)throw z;H(1,0)}}function dp(n,i,o,s,c,p){var g=L();try{return Sn(n,i,o,s,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function cp(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z){var G=L();try{return xn(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function fp(n,i,o){var s=L();try{Dr(n,i,o)}catch(c){if(F(s),c!==c+0)throw c;H(1,0)}}function pp(n,i,o,s,c){var p=L();try{return An(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function mp(n,i,o,s,c,p,g,v,w,$,S){var T=L();try{return Mr(n,i,o,s,c,p,g,v,w,$,S)}catch(O){if(F(T),O!==O+0)throw O;H(1,0)}}function hp(n,i,o,s,c,p,g,v,w,$,S,T,O){var x=L();try{On(n,i,o,s,c,p,g,v,w,$,S,T,O)}catch(z){if(F(x),z!==z+0)throw z;H(1,0)}}function gp(n,i,o){var s=L();try{return Pr(n,i,o)}catch(c){if(F(s),c!==c+0)throw c;H(1,0)}}function yp(n,i,o,s,c,p,g,v,w,$,S,T){var O=L();try{Bn(n,i,o,s,c,p,g,v,w,$,S,T)}catch(x){if(F(O),x!==x+0)throw x;H(1,0)}}function bp(n,i,o,s,c,p,g,v,w,$){var S=L();try{return Dn(n,i,o,s,c,p,g,v,w,$)}catch(T){if(F(S),T!==T+0)throw T;H(1,0)}}function vp(n,i,o,s,c,p,g,v,w){var $=L();try{return zi(n,i,o,s,c,p,g,v,w)}catch(S){if(F($),S!==S+0)throw S;H(1,0)}}function wp(n,i,o,s,c,p,g){var v=L();try{zn(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function _p(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z){var G=L();try{cr(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function $p(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze){var Xe=L();try{Ui(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze)}catch(it){if(F(Xe),it!==it+0)throw it;H(1,0)}}function Cp(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae){var fe=L();try{ji(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae)}catch(he){if(F(fe),he!==he+0)throw he;H(1,0)}}function Sp(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee){var ae=L();try{me(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee)}catch(fe){if(F(ae),fe!==fe+0)throw fe;H(1,0)}}function xp(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G){var ee=L();try{Un(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)}catch(ae){if(F(ee),ae!==ae+0)throw ae;H(1,0)}}function Ap(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it,dt,bt){var hr=L();try{fr(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it,dt,bt)}catch(Jt){if(F(hr),Jt!==Jt+0)throw Jt;H(1,0)}}function Ip(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe){var it=L();try{Qt(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe)}catch(dt){if(F(it),dt!==dt+0)throw dt;H(1,0)}}function Tp(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe){var Ze=L();try{At(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe)}catch(Xe){if(F(Ze),Xe!==Xe+0)throw Xe;H(1,0)}}function Ep(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it,dt,bt,hr){var Jt=L();try{jn(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it,dt,bt,hr)}catch(_o){if(F(Jt),_o!==_o+0)throw _o;H(1,0)}}function Pp(n,i,o,s,c,p,g,v,w,$,S,T){var O=L();try{Vn(n,i,o,s,c,p,g,v,w,$,S,T)}catch(x){if(F(O),x!==x+0)throw x;H(1,0)}}function Op(n,i,o,s,c,p,g,v,w,$,S,T,O,x){var z=L();try{Nn(n,i,o,s,c,p,g,v,w,$,S,T,O,x)}catch(G){if(F(z),G!==G+0)throw G;H(1,0)}}function kp(n,i,o,s,c,p,g,v,w,$,S,T,O,x){var z=L();try{Ur(n,i,o,s,c,p,g,v,w,$,S,T,O,x)}catch(G){if(F(z),G!==G+0)throw G;H(1,0)}}function Rp(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce){var xe=L();try{jr(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce)}catch(Ue){if(F(xe),Ue!==Ue+0)throw Ue;H(1,0)}}function Bp(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z){var G=L();try{Gn(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Dp(n,i,o,s,c,p,g,v,w,$,S,T,O){var x=L();try{Vr(n,i,o,s,c,p,g,v,w,$,S,T,O)}catch(z){if(F(x),z!==z+0)throw z;H(1,0)}}function Mp(n,i,o){var s=L();try{return Za(n,i,o)}catch(c){if(F(s),c!==c+0)throw c;H(1,0)}}function zp(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z){var G=L();try{pr(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function Up(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z){var G=L();try{Hn(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z)}catch(ee){if(F(G),ee!==ee+0)throw ee;H(1,0)}}function jp(n,i,o,s,c,p,g,v){var w=L();try{return Ln(n,i,o,s,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Vp(n,i,o,s,c,p,g){var v=L();try{return Fn(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Np(n,i,o,s,c,p,g,v,w,$,S,T,O,x){var z=L();try{qn(n,i,o,s,c,p,g,v,w,$,S,T,O,x)}catch(G){if(F(z),G!==G+0)throw G;H(1,0)}}function Wp(n,i,o,s,c,p,g,v){var w=L();try{Nr(n,i,o,s,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Gp(n,i,o,s,c,p,g,v,w,$,S,T){var O=L();try{Kn(n,i,o,s,c,p,g,v,w,$,S,T)}catch(x){if(F(O),x!==x+0)throw x;H(1,0)}}function Hp(n,i,o,s,c,p,g,v,w){var $=L();try{mr(n,i,o,s,c,p,g,v,w)}catch(S){if(F($),S!==S+0)throw S;H(1,0)}}function Lp(n,i,o,s,c,p,g,v,w,$){var S=L();try{Jn(n,i,o,s,c,p,g,v,w,$)}catch(T){if(F(S),T!==T+0)throw T;H(1,0)}}function Fp(n,i,o,s,c){var p=L();try{return a(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function qp(n,i,o,s,c,p,g,v,w,$,S,T,O){var x=L();try{h(n,i,o,s,c,p,g,v,w,$,S,T,O)}catch(z){if(F(x),z!==z+0)throw z;H(1,0)}}function Kp(n,i,o,s,c,p,g,v,w,$,S,T,O,x){var z=L();try{_(n,i,o,s,c,p,g,v,w,$,S,T,O,x)}catch(G){if(F(z),G!==G+0)throw G;H(1,0)}}function Jp(n,i,o,s,c,p,g,v,w,$,S){var T=L();try{I(n,i,o,s,c,p,g,v,w,$,S)}catch(O){if(F(T),O!==O+0)throw O;H(1,0)}}function Yp(n,i,o,s,c,p,g,v,w,$,S,T){var O=L();try{D(n,i,o,s,c,p,g,v,w,$,S,T)}catch(x){if(F(O),x!==x+0)throw x;H(1,0)}}function Zp(n,i,o,s,c,p,g){var v=L();try{N(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Xp(n,i,o,s,c,p,g,v,w){var $=L();try{return ce(n,i,o,s,c,p,g,v,w)}catch(S){if(F($),S!==S+0)throw S;H(1,0)}}function Qp(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G){var ee=L();try{ue(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)}catch(ae){if(F(ee),ae!==ae+0)throw ae;H(1,0)}}function em(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G){var ee=L();try{ve(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)}catch(ae){if(F(ee),ae!==ae+0)throw ae;H(1,0)}}function tm(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it){var dt=L();try{jt(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee,ae,fe,he,Ce,xe,Ue,qe,Ze,Xe,it)}catch(bt){if(F(dt),bt!==bt+0)throw bt;H(1,0)}}function rm(n,i,o,s,c,p,g,v){var w=L();try{Yn(n,i,o,s,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function nm(n,i,o,s,c,p,g,v,w,$,S,T,O,x){var z=L();try{return da(n,i,o,s,c,p,g,v,w,$,S,T,O,x)}catch(G){if(F(z),G!==G+0)throw G;H(1,0)}}function im(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G){var ee=L();try{ca(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)}catch(ae){if(F(ee),ae!==ae+0)throw ae;H(1,0)}}function om(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee){var ae=L();try{ma(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G,ee)}catch(fe){if(F(ae),fe!==fe+0)throw fe;H(1,0)}}function am(n,i,o,s,c,p,g,v,w,$,S){var T=L();try{va(n,i,o,s,c,p,g,v,w,$,S)}catch(O){if(F(T),O!==O+0)throw O;H(1,0)}}function sm(n,i,o,s,c,p,g,v,w,$,S,T,O,x){var z=L();try{_a(n,i,o,s,c,p,g,v,w,$,S,T,O,x)}catch(G){if(F(z),G!==G+0)throw G;H(1,0)}}function um(n,i,o,s,c,p,g,v,w,$,S){var T=L();try{xa(n,i,o,s,c,p,g,v,w,$,S)}catch(O){if(F(T),O!==O+0)throw O;H(1,0)}}function lm(n,i,o,s,c,p){var g=L();try{Aa(n,i,o,s,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function dm(n,i,o,s,c,p,g,v,w,$,S,T,O,x){var z=L();try{Ja(n,i,o,s,c,p,g,v,w,$,S,T,O,x)}catch(G){if(F(z),G!==G+0)throw G;H(1,0)}}function cm(n,i,o,s,c,p,g,v){var w=L();try{return Ia(n,i,o,s,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function fm(n,i,o,s,c){var p=L();try{return Qa(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function pm(n,i,o,s,c,p,g,v){var w=L();try{Ta(n,i,o,s,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function mm(n,i,o,s,c,p,g,v,w){var $=L();try{return Ea(n,i,o,s,c,p,g,v,w)}catch(S){if(F($),S!==S+0)throw S;H(1,0)}}function hm(n,i,o,s,c,p,g,v,w){var $=L();try{return Pa(n,i,o,s,c,p,g,v,w)}catch(S){if(F($),S!==S+0)throw S;H(1,0)}}function gm(n,i,o,s,c,p,g,v,w,$,S){var T=L();try{Oa(n,i,o,s,c,p,g,v,w,$,S)}catch(O){if(F(T),O!==O+0)throw O;H(1,0)}}function ym(n,i,o,s,c,p,g,v,w,$){var S=L();try{return ka(n,i,o,s,c,p,g,v,w,$)}catch(T){if(F(S),T!==T+0)throw T;H(1,0)}}function bm(n,i,o,s,c,p,g){var v=L();try{return Ba(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function vm(n,i,o,s,c,p,g,v,w,$,S,T,O){var x=L();try{return Da(n,i,o,s,c,p,g,v,w,$,S,T,O)}catch(z){if(F(x),z!==z+0)throw z;H(1,0)}}function wm(n,i,o,s,c,p,g,v,w,$){var S=L();try{return Ma(n,i,o,s,c,p,g,v,w,$)}catch(T){if(F(S),T!==T+0)throw T;H(1,0)}}function _m(n,i,o,s,c,p,g,v,w,$,S,T,O,x){var z=L();try{return za(n,i,o,s,c,p,g,v,w,$,S,T,O,x)}catch(G){if(F(z),G!==G+0)throw G;H(1,0)}}function $m(n,i,o,s,c,p,g,v){var w=L();try{return Ua(n,i,o,s,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function Cm(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G){var ee=L();try{return ja(n,i,o,s,c,p,g,v,w,$,S,T,O,x,z,G)}catch(ae){if(F(ee),ae!==ae+0)throw ae;H(1,0)}}function Sm(n,i,o,s,c,p,g,v){var w=L();try{return Va(n,i,o,s,c,p,g,v)}catch($){if(F(w),$!==$+0)throw $;H(1,0)}}function xm(n,i,o,s,c,p,g,v,w,$){var S=L();try{return Na(n,i,o,s,c,p,g,v,w,$)}catch(T){if(F(S),T!==T+0)throw T;H(1,0)}}function Am(n,i,o,s){var c=L();try{return Wa(n,i,o,s)}catch(p){if(F(c),p!==p+0)throw p;H(1,0)}}function Im(n,i,o,s,c){var p=L();try{return Ga(n,i,o,s,c)}catch(g){if(F(p),g!==g+0)throw g;H(1,0)}}function Tm(n,i,o,s,c,p){var g=L();try{Fa(n,i,o,s,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Em(n,i,o,s,c,p,g,v,w,$,S,T,O){var x=L();try{Bi(n,i,o,s,c,p,g,v,w,$,S,T,O)}catch(z){if(F(x),z!==z+0)throw z;H(1,0)}}function Pm(n,i,o,s,c,p){var g=L();try{return qa(n,i,o,s,c,p)}catch(v){if(F(g),v!==v+0)throw v;H(1,0)}}function Om(n){var i=L();try{return Or(n)}catch(o){if(F(i),o!==o+0)throw o;H(1,0)}}function km(n,i,o,s,c,p,g){var v=L();try{return sr(n,i,o,s,c,p,g)}catch(w){if(F(v),w!==w+0)throw w;H(1,0)}}function Rm(){var n=M;n=Object.assign({},n);var i=s=>()=>s()>>>0,o=s=>c=>s(c)>>>0;return n.Gd=i(n.Gd),n.Hd=o(n.Hd),n.Md=i(n.Md),n.Od=o(n.Od),n}t.stackAlloc=Qr,t.stackSave=L,t.stackRestore=F,t.UTF8ToString=nt,t.stringToUTF8=(n,i,o)=>Xt(n,ne,i,o),t.lengthBytesUTF8=vr;var Ni;$e=function n(){Ni||is(),Ni||($e=n)};function is(){if(!(0<We)){if(t.preRun)for(typeof t.preRun=="function"&&(t.preRun=[t.preRun]);t.preRun.length;){var n=t.preRun.shift();Ne.unshift(n)}for(;0<Ne.length;)Ne.shift()(t);if(!(0<We||Ni||(Ni=!0,t.calledRun=!0,q))){for(;0<Be.length;)Be.shift()(t);for(u(t);0<pe.length;)pe.shift()(t)}}}return is(),r.ready}})();typeof ss=="object"&&typeof Io=="object"?Io.exports=as:typeof define=="function"&&define.amd&&define([],()=>as)});var ls=Zn(()=>{});var ds=Zn(()=>{});var cs={};Wi(cs,{cpus:()=>Nm});var Nm,fs=le(()=>{Nm=void 0});var hs=Zn((ms,To)=>{"use strict";var ps=(()=>{var e=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(e=e||__filename),function(r={}){function t(){return pe.buffer!=ge.buffer&&pt(),ge}function u(){return pe.buffer!=ge.buffer&&pt(),Te}function l(){return pe.buffer!=ge.buffer&&pt(),Ve}function f(){return pe.buffer!=ge.buffer&&pt(),rt}function d(){return pe.buffer!=ge.buffer&&pt(),oe}function y(){return pe.buffer!=ge.buffer&&pt(),ye}function b(){return pe.buffer!=ge.buffer&&pt(),Me}function C(){return pe.buffer!=ge.buffer&&pt(),ut}var m=r,A,E;m.ready=new Promise((a,h)=>{A=a,E=h}),m.mountExternalData=(a,h)=>{(m.Fb||(m.Fb=new Map)).set(a,h)},m.unmountExternalData=()=>{delete m.Fb};let R=()=>{let a=(_,I,D)=>(...N)=>{let Y=xt,re=I?.();N=_(...N);let ce=I?.();return re!==ce&&(_=ce,D(re),I=D=null),xt!=Y?Ii():N},h=_=>async(...I)=>{try{if(m.Eb)throw Error("Session already started");let D=m.Eb={kc:I[0],errors:[]},N=await _(...I);if(m.Eb!==D)throw Error("Session mismatch");m.Ob?.flush();let Y=D.errors;if(0<Y.length){let re=await Promise.all(Y);if(re=re.filter(ce=>ce),0<re.length)throw Error(re.join(`\n`))}return N}finally{m.Eb=null}};m._OrtCreateSession=a(m._OrtCreateSession,()=>m._OrtCreateSession,_=>m._OrtCreateSession=_),m._OrtRun=h(a(m._OrtRun,()=>m._OrtRun,_=>m._OrtRun=_)),m._OrtRunWithBinding=h(a(m._OrtRunWithBinding,()=>m._OrtRunWithBinding,_=>m._OrtRunWithBinding=_)),m._OrtBindInput=a(m._OrtBindInput,()=>m._OrtBindInput,_=>m._OrtBindInput=_),R=void 0};m.jsepInit=(a,h)=>{if(R?.(),a==="webgpu"){[m.Ob,m.ac,m.ec,m.Pb,m.dc,m.eb,m.fc,m.ic,m.bc,m.cc,m.hc]=h;let _=m.Ob;m.jsepRegisterBuffer=(I,D,N,Y)=>_.registerBuffer(I,D,N,Y),m.jsepGetBuffer=I=>_.getBuffer(I),m.jsepCreateDownloader=(I,D,N)=>_.createDownloader(I,D,N),m.jsepOnReleaseSession=I=>{_.onReleaseSession(I)},m.jsepOnRunStart=I=>_.onRunStart(I)}};var P=Object.assign({},m),k="./this.program",U=(a,h)=>{throw h},V=typeof window=="object",B=typeof importScripts=="function",W=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",j=m.ENVIRONMENT_IS_PTHREAD||!1,q="";function Q(a){return m.locateFile?m.locateFile(a,q):q+a}var te,ne,J;if(W){var ie=(So(),Wr(Co)),Ae=(Ao(),Wr(xo));q=B?Ae.dirname(q)+"/":__dirname+"/",te=(h,_)=>(h=Xt(h)?new URL(h):Ae.normalize(h),ie.readFileSync(h,_?void 0:"utf8")),J=h=>(h=te(h,!0),h.buffer||(h=new Uint8Array(h)),h),ne=(h,_,I,D=!0)=>{h=Xt(h)?new URL(h):Ae.normalize(h),ie.readFile(h,D?void 0:"utf8",(N,Y)=>{N?I(N):_(D?Y.buffer:Y)})},!m.thisProgram&&1<process.argv.length&&(k=process.argv[1].replace(/\\\\/g,"/")),process.argv.slice(2),U=(h,_)=>{throw process.exitCode=h,_},m.inspect=()=>"[Emscripten Module object]";let a;try{a=ls()}catch(h){throw console.error(\'The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?\'),h}global.Worker=a.Worker}else(V||B)&&(B?q=self.location.href:typeof document<"u"&&document.currentScript&&(q=document.currentScript.src),typeof e<"u"&&e&&(q=e),q.indexOf("blob:")!==0?q=q.substr(0,q.replace(/[?#].*/,"").lastIndexOf("/")+1):q="",W||(te=a=>{var h=new XMLHttpRequest;return h.open("GET",a,!1),h.send(null),h.responseText},B&&(J=a=>{var h=new XMLHttpRequest;return h.open("GET",a,!1),h.responseType="arraybuffer",h.send(null),new Uint8Array(h.response)}),ne=(a,h,_)=>{var I=new XMLHttpRequest;I.open("GET",a,!0),I.responseType="arraybuffer",I.onload=()=>{I.status==200||I.status==0&&I.response?h(I.response):_()},I.onerror=_,I.send(null)}));W&&typeof performance>"u"&&(global.performance=ds().performance);var De=console.log.bind(console),Fe=console.error.bind(console);W&&(De=(...a)=>ie.writeSync(1,a.join(" ")+`\n`),Fe=(...a)=>ie.writeSync(2,a.join(" ")+`\n`));var Ne=De,Be=Fe;Object.assign(m,P),P=null,typeof WebAssembly!="object"&&nt("no native wasm support detected");var pe,We,Ie=!1,$e,ge,Te,Ve,rt,oe,ye,Me,ot,ft,ut;function pt(){var a=pe.buffer;m.HEAP8=ge=new Int8Array(a),m.HEAP16=Ve=new Int16Array(a),m.HEAPU8=Te=new Uint8Array(a),m.HEAPU16=rt=new Uint16Array(a),m.HEAP32=oe=new Int32Array(a),m.HEAPU32=ye=new Uint32Array(a),m.HEAPF32=Me=new Float32Array(a),m.HEAPF64=ut=new Float64Array(a),m.HEAP64=ot=new BigInt64Array(a),m.HEAPU64=ft=new BigUint64Array(a)}var at=16777216;if(j)pe=m.wasmMemory;else if(m.wasmMemory)pe=m.wasmMemory;else if(pe=new WebAssembly.Memory({initial:at/65536,maximum:65536,shared:!0}),!(pe.buffer instanceof SharedArrayBuffer))throw Be("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),W&&Be("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");pt(),at=pe.buffer.byteLength;var tt=[],gt=[],St=[],Tt=0,Yt=null,Zt=null;function qr(){if(Tt--,Tt==0&&(Yt!==null&&(clearInterval(Yt),Yt=null),Zt)){var a=Zt;Zt=null,a()}}function nt(a){throw a="Aborted("+a+")",Be(a),Ie=!0,$e=1,a=new WebAssembly.RuntimeError(a+". Build with -sASSERTIONS for more info."),E(a),a}var vr=a=>a.startsWith("data:application/octet-stream;base64,"),Xt=a=>a.startsWith("file://"),Et;Et="ort-wasm-simd-threaded.wasm",vr(Et)||(Et=Q(Et));function Kr(a){if(J)return J(a);throw"both async and sync fetching of the wasm failed"}function oi(a){if(V||B){if(typeof fetch=="function"&&!Xt(a))return fetch(a,{credentials:"same-origin"}).then(h=>{if(!h.ok)throw"failed to load wasm binary file at \'"+a+"\'";return h.arrayBuffer()}).catch(()=>Kr(a));if(ne)return new Promise((h,_)=>{ne(a,I=>h(new Uint8Array(I)),_)})}return Promise.resolve().then(()=>Kr(a))}function Jr(a,h,_){return oi(a).then(I=>WebAssembly.instantiate(I,h)).then(I=>I).then(_,I=>{Be(`failed to asynchronously prepare wasm: ${I}`),nt(I)})}function Yr(a,h){var _=Et;return typeof WebAssembly.instantiateStreaming!="function"||vr(_)||Xt(_)||W||typeof fetch!="function"?Jr(_,a,h):fetch(_,{credentials:"same-origin"}).then(I=>WebAssembly.instantiateStreaming(I,a).then(h,function(D){return Be(`wasm streaming compile failed: ${D}`),Be("falling back to ArrayBuffer instantiation"),Jr(_,a,h)}))}var wr={949596:(a,h,_,I)=>{if(typeof m>"u"||!m.Fb)return 1;if(a=st(a>>>0),a.startsWith("./")&&(a=a.substring(2)),a=m.Fb.get(a),!a)return 2;if(h>>>=0,_>>>=0,I>>>=0,h+_>a.byteLength)return 3;try{return u().set(a.subarray(h,h+_),I>>>0),0}catch{return 4}},950097:()=>{m.bc()},950128:()=>{m.cc()},950157:()=>{m.hc()},950182:a=>m.ac(a),950215:a=>m.ec(a),950247:(a,h,_)=>{m.Pb(a,h,_,!0)},950286:(a,h,_)=>{m.Pb(a,h,_)},950319:a=>{m.eb("Abs",a,void 0)},950370:a=>{m.eb("Neg",a,void 0)},950421:a=>{m.eb("Floor",a,void 0)},950474:a=>{m.eb("Ceil",a,void 0)},950526:a=>{m.eb("Reciprocal",a,void 0)},950584:a=>{m.eb("Sqrt",a,void 0)},950636:a=>{m.eb("Exp",a,void 0)},950687:a=>{m.eb("Erf",a,void 0)},950738:a=>{m.eb("Sigmoid",a,void 0)},950793:(a,h,_)=>{m.eb("HardSigmoid",a,{alpha:h,beta:_})},950872:a=>{m.eb("Log",a,void 0)},950923:a=>{m.eb("Sin",a,void 0)},950974:a=>{m.eb("Cos",a,void 0)},951025:a=>{m.eb("Tan",a,void 0)},951076:a=>{m.eb("Asin",a,void 0)},951128:a=>{m.eb("Acos",a,void 0)},951180:a=>{m.eb("Atan",a,void 0)},951232:a=>{m.eb("Sinh",a,void 0)},951284:a=>{m.eb("Cosh",a,void 0)},951336:a=>{m.eb("Asinh",a,void 0)},951389:a=>{m.eb("Acosh",a,void 0)},951442:a=>{m.eb("Atanh",a,void 0)},951495:a=>{m.eb("Tanh",a,void 0)},951547:a=>{m.eb("Not",a,void 0)},951598:(a,h,_)=>{m.eb("Clip",a,{min:h,max:_})},951667:a=>{m.eb("Clip",a,void 0)},951719:(a,h)=>{m.eb("Elu",a,{alpha:h})},951777:a=>{m.eb("Relu",a,void 0)},951829:(a,h)=>{m.eb("LeakyRelu",a,{alpha:h})},951893:(a,h)=>{m.eb("ThresholdedRelu",a,{alpha:h})},951963:(a,h)=>{m.eb("Cast",a,{to:h})},952021:a=>{m.eb("Add",a,void 0)},952072:a=>{m.eb("Sub",a,void 0)},952123:a=>{m.eb("Mul",a,void 0)},952174:a=>{m.eb("Div",a,void 0)},952225:a=>{m.eb("Pow",a,void 0)},952276:a=>{m.eb("Equal",a,void 0)},952329:a=>{m.eb("Greater",a,void 0)},952384:a=>{m.eb("GreaterOrEqual",a,void 0)},952446:a=>{m.eb("Less",a,void 0)},952498:a=>{m.eb("LessOrEqual",a,void 0)},952557:(a,h,_,I,D)=>{m.eb("ReduceMean",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:I?Array.from(d().subarray(I>>>0,D>>>0)):[]})},952716:(a,h,_,I,D)=>{m.eb("ReduceMax",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:I?Array.from(d().subarray(I>>>0,D>>>0)):[]})},952874:(a,h,_,I,D)=>{m.eb("ReduceMin",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:I?Array.from(d().subarray(I>>>0,D>>>0)):[]})},953032:(a,h,_,I,D)=>{m.eb("ReduceProd",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:I?Array.from(d().subarray(I>>>0,D>>>0)):[]})},953191:(a,h,_,I,D)=>{m.eb("ReduceSum",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:I?Array.from(d().subarray(I>>>0,D>>>0)):[]})},953349:(a,h,_,I,D)=>{m.eb("ReduceL1",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:I?Array.from(d().subarray(I>>>0,D>>>0)):[]})},953506:(a,h,_,I,D)=>{m.eb("ReduceL2",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:I?Array.from(d().subarray(I>>>0,D>>>0)):[]})},953663:(a,h,_,I,D)=>{m.eb("ReduceLogSum",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:I?Array.from(d().subarray(I>>>0,D>>>0)):[]})},953824:(a,h,_,I,D)=>{m.eb("ReduceSumSquare",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:I?Array.from(d().subarray(I>>>0,D>>>0)):[]})},953988:(a,h,_,I,D)=>{m.eb("ReduceLogSumExp",a,{keepDims:!!h,noopWithEmptyAxes:!!_,axes:I?Array.from(d().subarray(I>>>0,D>>>0)):[]})},954152:a=>{m.eb("Where",a,void 0)},954205:(a,h,_)=>{m.eb("Transpose",a,{perm:h?Array.from(d().subarray(h>>>0,_>>>0)):[]})},954313:(a,h,_,I,D,N,Y,re,ce,ue,ve,Ee,je,K,we)=>{m.eb("ConvTranspose",a,{format:ce?"NHWC":"NCHW",autoPad:h,dilations:[_],group:I,kernel_shape:[D],pads:[N,Y],strides:[re],wIsConst:()=>!!t()[ue>>>0],outputPadding:ve?Array.from(d().subarray(ve>>>0,Ee>>>0)):[],outputShape:je?Array.from(d().subarray(je>>>0,K>>>0)):[],activation:st(we)})},954715:(a,h,_,I,D,N,Y,re,ce,ue,ve,Ee,je,K)=>{m.eb("ConvTranspose",a,{format:re?"NHWC":"NCHW",autoPad:h,dilations:Array.from(d().subarray(_>>>0,(_>>>0)+2>>>0)),group:I,kernelShape:Array.from(d().subarray(D>>>0,(D>>>0)+2>>>0)),pads:Array.from(d().subarray(N>>>0,(N>>>0)+4>>>0)),strides:Array.from(d().subarray(Y>>>0,(Y>>>0)+2>>>0)),wIsConst:()=>!!t()[ce>>>0],outputPadding:ue?Array.from(d().subarray(ue>>>0,ve>>>0)):[],outputShape:Ee?Array.from(d().subarray(Ee>>>0,je>>>0)):[],activation:st(K)})},955280:(a,h,_,I,D,N,Y,re,ce,ue,ve,Ee,je,K,we)=>{m.eb("ConvTranspose",a,{format:ce?"NHWC":"NCHW",autoPad:h,dilations:[_],group:I,kernel_shape:[D],pads:[N,Y],strides:[re],wIsConst:()=>!!t()[ue>>>0],outputPadding:ve?Array.from(d().subarray(ve>>>0,Ee>>>0)):[],outputShape:je?Array.from(d().subarray(je>>>0,K>>>0)):[],activation:st(we)})},955682:(a,h,_,I,D,N,Y,re,ce,ue,ve,Ee,je,K)=>{m.eb("ConvTranspose",a,{format:re?"NHWC":"NCHW",autoPad:h,dilations:Array.from(d().subarray(_>>>0,(_>>>0)+2>>>0)),group:I,kernelShape:Array.from(d().subarray(D>>>0,(D>>>0)+2>>>0)),pads:Array.from(d().subarray(N>>>0,(N>>>0)+4>>>0)),strides:Array.from(d().subarray(Y>>>0,(Y>>>0)+2>>>0)),wIsConst:()=>!!t()[ce>>>0],outputPadding:ue?Array.from(d().subarray(ue>>>0,ve>>>0)):[],outputShape:Ee?Array.from(d().subarray(Ee>>>0,je>>>0)):[],activation:st(K)})},956247:(a,h)=>{m.eb("GlobalAveragePool",a,{format:h?"NHWC":"NCHW"})},956338:(a,h,_,I,D,N,Y,re,ce,ue,ve,Ee,je,K,we,ze)=>{m.eb("AveragePool",a,{format:ze?"NHWC":"NCHW",auto_pad:h,ceil_mode:_,count_include_pad:I,storage_order:D,dilations:[N,Y],kernel_shape:[re,ce],pads:[ue,ve,Ee,je],strides:[K,we]})},956622:(a,h)=>{m.eb("GlobalAveragePool",a,{format:h?"NHWC":"NCHW"})},956713:(a,h,_,I,D,N,Y,re,ce,ue,ve,Ee,je,K,we,ze)=>{m.eb("AveragePool",a,{format:ze?"NHWC":"NCHW",auto_pad:h,ceil_mode:_,count_include_pad:I,storage_order:D,dilations:[N,Y],kernel_shape:[re,ce],pads:[ue,ve,Ee,je],strides:[K,we]})},956997:(a,h)=>{m.eb("GlobalMaxPool",a,{format:h?"NHWC":"NCHW"})},957084:(a,h,_,I,D,N,Y,re,ce,ue,ve,Ee,je,K,we,ze)=>{m.eb("MaxPool",a,{format:ze?"NHWC":"NCHW",auto_pad:h,ceil_mode:_,count_include_pad:I,storage_order:D,dilations:[N,Y],kernel_shape:[re,ce],pads:[ue,ve,Ee,je],strides:[K,we]})},957364:(a,h)=>{m.eb("GlobalMaxPool",a,{format:h?"NHWC":"NCHW"})},957451:(a,h,_,I,D,N,Y,re,ce,ue,ve,Ee,je,K,we,ze)=>{m.eb("MaxPool",a,{format:ze?"NHWC":"NCHW",auto_pad:h,ceil_mode:_,count_include_pad:I,storage_order:D,dilations:[N,Y],kernel_shape:[re,ce],pads:[ue,ve,Ee,je],strides:[K,we]})},957731:(a,h,_,I,D)=>{m.eb("Gemm",a,{alpha:h,beta:_,transA:I,transB:D})},957835:a=>{m.eb("MatMul",a,void 0)},957889:(a,h,_,I)=>{m.eb("ArgMax",a,{keepDims:!!h,selectLastIndex:!!_,axis:I})},957997:(a,h,_,I)=>{m.eb("ArgMin",a,{keepDims:!!h,selectLastIndex:!!_,axis:I})},958105:(a,h)=>{m.eb("Softmax",a,{axis:h})},958168:(a,h)=>{m.eb("Concat",a,{axis:h})},958228:(a,h,_,I,D)=>{m.eb("Split",a,{axis:h,numOutputs:_,splitSizes:I?Array.from(d().subarray(I>>>0,D>>>0)):[]})},958368:a=>{m.eb("Expand",a,void 0)},958422:(a,h)=>{m.eb("Gather",a,{axis:Number(h)})},958493:(a,h)=>{m.eb("GatherElements",a,{axis:Number(h)})},958572:(a,h,_,I,D,N,Y,re,ce,ue,ve)=>{m.eb("Resize",a,{antialias:h,axes:_?Array.from(d().subarray(_>>>0,I>>>0)):[],coordinateTransformMode:st(D),cubicCoeffA:N,excludeOutside:Y,extrapolationValue:re,keepAspectRatioPolicy:st(ce),mode:st(ue),nearestMode:st(ve)})},958918:(a,h,_,I,D,N,Y)=>{m.eb("Slice",a,{starts:h?Array.from(d().subarray(h>>>0,_>>>0)):[],ends:I?Array.from(d().subarray(I>>>0,D>>>0)):[],axes:N?Array.from(d().subarray(N>>>0,Y>>>0)):[]})},959134:a=>{m.eb("Tile",a,void 0)},959186:(a,h,_)=>{m.eb("LayerNormalization",a,{axis:Number(h),epsilon:Number(_)})},959293:(a,h,_)=>{m.eb("InstanceNormalization",a,{epsilon:h,format:_?"NHWC":"NCHW"})},959407:(a,h,_)=>{m.eb("InstanceNormalization",a,{epsilon:h,format:_?"NHWC":"NCHW"})},959521:a=>{m.eb("Range",a,void 0)},959574:(a,h)=>{m.eb("Einsum",a,{equation:st(h)})},959655:(a,h,_,I,D)=>{m.eb("Pad",a,{mode:h,value:_,pads:I?Array.from(d().subarray(I>>>0,D>>>0)):[]})},959782:(a,h,_,I,D,N)=>{m.eb("BatchNormalization",a,{epsilon:h,momentum:_,spatial:!!D,trainingMode:!!I,format:N?"NHWC":"NCHW"})},959951:(a,h,_,I,D,N)=>{m.eb("BatchNormalization",a,{epsilon:h,momentum:_,spatial:!!D,trainingMode:!!I,format:N?"NHWC":"NCHW"})},960120:(a,h,_)=>{m.eb("CumSum",a,{exclusive:Number(h),reverse:Number(_)})},960217:(a,h,_,I,D,N,Y,re,ce)=>{m.eb("Attention",a,{numHeads:h,isUnidirectional:_,maskFilterValue:I,scale:D,doRotary:N,qkvHiddenSizes:Y?Array.from(d().subarray(Number(re)>>>0,Number(re)+Y>>>0)):[],pastPresentShareBuffer:!!ce})},960489:a=>{m.eb("BiasAdd",a,void 0)},960544:a=>{m.eb("BiasSplitGelu",a,void 0)},960605:a=>{m.eb("FastGelu",a,void 0)},960661:(a,h,_,I,D,N,Y,re,ce,ue,ve,Ee,je)=>{m.eb("Conv",a,{format:ce?"NHWC":"NCHW",auto_pad:h,dilations:[_],group:I,kernel_shape:[D],pads:N?Array.from(d().subarray(N>>>0,Y>>>0)):[],strides:[re],w_is_const:()=>!!t()[ue>>>0],activation:st(ve),activation_params:Ee?Array.from(b().subarray(Ee>>>0,je>>>0)):[]})},961031:(a,h,_,I,D,N,Y,re,ce,ue,ve,Ee,je,K,we,ze)=>{m.eb("Conv",a,{format:Ee?"NHWC":"NCHW",auto_pad:h,dilations:[_,I],group:D,kernel_shape:[N,Y],pads:re?Array.from(d().subarray(re>>>0,ce>>>0)):[],strides:[ue,ve],w_is_const:()=>!!t()[je>>>0],activation:st(K),activation_params:we?Array.from(b().subarray(we>>>0,ze>>>0)):[]})},961422:a=>{m.eb("Gelu",a,void 0)},961474:(a,h,_,I,D,N)=>{m.eb("MatMulNBits",a,{k:h,n:_,accuracyLevel:I,bits:D,blockSize:N})},961601:(a,h,_,I,D,N)=>{m.eb("MultiHeadAttention",a,{numHeads:h,isUnidirectional:_,maskFilterValue:I,scale:D,doRotary:N})},961760:(a,h)=>{m.eb("SkipLayerNormalization",a,{epsilon:h})},961841:a=>{m.fc(a)},961875:(a,h)=>m.ic(a,h,m.Eb.kc,m.Eb.errors)};function ir(a){this.name="ExitStatus",this.message=`Program terminated with exit(${a})`,this.status=a}var _r=a=>{a.terminate(),a.onmessage=()=>{}},$r=a=>{be.yb.length==0&&(or(),be.Qb(be.yb[0]));var h=be.yb.pop();if(!h)return 6;be.zb.push(h),be.pb[a.xb]=h,h.xb=a.xb;var _={cmd:"run",start_routine:a.lc,arg:a.Wb,pthread_ptr:a.xb};return W&&h.unref(),h.postMessage(_,a.rc),0},Ft=0,Zr=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0,Xr=(a,h,_)=>{h>>>=0;var I=h+_;for(_=h;a[_]&&!(_>=I);)++_;if(16<_-h&&a.buffer&&Zr)return Zr.decode(a.buffer instanceof SharedArrayBuffer?a.slice(h,_):a.subarray(h,_));for(I="";h<_;){var D=a[h++];if(D&128){var N=a[h++]&63;if((D&224)==192)I+=String.fromCharCode((D&31)<<6|N);else{var Y=a[h++]&63;D=(D&240)==224?(D&15)<<12|N<<6|Y:(D&7)<<18|N<<12|Y<<6|a[h++]&63,65536>D?I+=String.fromCharCode(D):(D-=65536,I+=String.fromCharCode(55296|D>>10,56320|D&1023))}}else I+=String.fromCharCode(D)}return I},st=(a,h)=>(a>>>=0)?Xr(u(),a,h):"",ai=a=>{var h=Vr();return a=a(),pr(h),a};function Le(a,h){var _=arguments.length-2,I=arguments;return ai(()=>{for(var D=2*_,N=Nr(8*D),Y=N>>>3,re=0;re<_;re++){var ce=I[2+re];typeof ce=="bigint"?(ot[Y+2*re]=1n,ot[Y+2*re+1]=ce):(ot[Y+2*re]=0n,C()[Y+2*re+1>>>0]=ce)}return Nn(a,D,N,h)})}function si(a){if(j)return Le(0,1,a);$e=a,0<Ft||(be.mc(),m.onExit?.(a),Ie=!0),U(a,new ir(a))}var Pt=a=>{if($e=a,j)throw Sr(a),"unwind";si(a)},vt=a=>{a instanceof ir||a=="unwind"||U(1,a)};function ui(){for(var a=m.numThreads;a--;)or();tt.unshift(()=>{Tt++,li(()=>qr())})}function or(){var a=Q("ort-wasm-simd-threaded.worker.js");a=new Worker(a),be.yb.push(a)}function li(a){j?a():Promise.all(be.yb.map(be.Qb)).then(a)}var be={yb:[],zb:[],Vb:[],pb:{},Ib(){j?(be.receiveObjectTransfer=be.jc,be.threadInitTLS=be.Ub,be.setExitStatus=be.Tb):ui()},Tb:a=>$e=a,vc:["$terminateWorker"],mc:()=>{for(var a of be.zb)_r(a);for(a of be.yb)_r(a);be.yb=[],be.zb=[],be.pb=[]},Sb:a=>{var h=a.xb;delete be.pb[h],be.yb.push(a),be.zb.splice(be.zb.indexOf(a),1),a.xb=0,Ur(h)},jc(){},Ub(){be.Vb.forEach(a=>a())},Qb:a=>new Promise(h=>{a.onmessage=N=>{N=N.data;var Y=N.cmd;if(N.targetThread&&N.targetThread!=fr()){var re=be.pb[N.targetThread];re?re.postMessage(N,N.transferList):Be(`Internal error! Worker sent a message "${Y}" to target pthread ${N.targetThread}, but that thread no longer exists!`)}else Y==="checkMailbox"?sr():Y==="spawnThread"?$r(N):Y==="cleanupThread"?be.Sb(be.pb[N.thread]):Y==="killThread"?(N=N.thread,Y=be.pb[N],delete be.pb[N],_r(Y),Ur(N),be.zb.splice(be.zb.indexOf(Y),1),Y.xb=0):Y==="cancelThread"?be.pb[N.thread].postMessage({cmd:"cancel"}):Y==="loaded"?(a.loaded=!0,W&&!a.xb&&a.unref(),h(a)):Y==="alert"?alert(`Thread ${N.threadId}: ${N.text}`):N.target==="setimmediate"?a.postMessage(N):Y==="callHandler"?m[N.handler](...N.args):Y&&Be(`worker sent an unknown command ${Y}`)},a.onerror=N=>{throw Be(`worker sent an error! ${N.filename}:${N.lineno}: ${N.message}`),N},W&&(a.on("message",N=>a.onmessage({data:N})),a.on("error",N=>a.onerror(N)));var _=[],I=["onExit"],D;for(D of I)m.hasOwnProperty(D)&&_.push(D);a.postMessage({cmd:"load",handlers:_,urlOrBlob:m.mainScriptUrlOrBlob||e,wasmMemory:pe,wasmModule:We})})};m.PThread=be;var Cr=a=>{for(;0<a.length;)a.shift()(m)};m.establishStackSpace=()=>{var a=fr(),h=y()[a+52>>>2>>>0];a=y()[a+56>>>2>>>0],Gn(h,h-a),pr(h)};function Sr(a){if(j)return Le(1,0,a);Pt(a)}m.invokeEntryPoint=(a,h)=>{a=Hn.apply(null,[a,h]),0<Ft?be.Tb(a):jr(a)};function vo(a){this.Db=a-24,this.tc=function(h){y()[this.Db+4>>>2>>>0]=h},this.Mb=function(h){y()[this.Db+8>>>2>>>0]=h},this.Ib=function(h,_){this.Kb(),this.tc(h),this.Mb(_)},this.Kb=function(){y()[this.Db+16>>>2>>>0]=0}}var di=0,wo=0;function ci(a,h,_,I){return j?Le(2,1,a,h,_,I):fi(a,h,_,I)}function fi(a,h,_,I){if(a>>>=0,h>>>=0,_>>>=0,I>>>=0,typeof SharedArrayBuffer>"u")return Be("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var D=[];return j&&D.length===0?ci(a,h,_,I):(a={lc:_,xb:a,Wb:I,rc:D},j?(a.uc="spawnThread",postMessage(a,D),0):$r(a))}function pi(a,h,_){return j?Le(3,1,a,h,_):0}function M(a,h){if(j)return Le(4,1,a,h)}var ar=a=>{for(var h=0,_=0;_<a.length;++_){var I=a.charCodeAt(_);127>=I?h++:2047>=I?h+=2:55296<=I&&57343>=I?(h+=4,++_):h+=3}return h},xr=(a,h,_,I)=>{if(_>>>=0,!(0<I))return 0;var D=_;I=_+I-1;for(var N=0;N<a.length;++N){var Y=a.charCodeAt(N);if(55296<=Y&&57343>=Y){var re=a.charCodeAt(++N);Y=65536+((Y&1023)<<10)|re&1023}if(127>=Y){if(_>=I)break;h[_++>>>0]=Y}else{if(2047>=Y){if(_+1>=I)break;h[_++>>>0]=192|Y>>6}else{if(65535>=Y){if(_+2>=I)break;h[_++>>>0]=224|Y>>12}else{if(_+3>=I)break;h[_++>>>0]=240|Y>>18,h[_++>>>0]=128|Y>>12&63}h[_++>>>0]=128|Y>>6&63}h[_++>>>0]=128|Y&63}}return h[_>>>0]=0,_-D},Ar=(a,h,_)=>xr(a,u(),h,_);function H(a,h){if(j)return Le(5,1,a,h)}function qt(a,h,_){if(j)return Le(6,1,a,h,_)}function L(a,h,_){return j?Le(7,1,a,h,_):0}function F(a,h){if(j)return Le(8,1,a,h)}function Qr(a,h,_){if(j)return Le(9,1,a,h,_)}function en(a,h,_,I){if(j)return Le(10,1,a,h,_,I)}function tn(a,h,_,I){if(j)return Le(11,1,a,h,_,I)}function rn(a,h,_,I){if(j)return Le(12,1,a,h,_,I)}function nn(a){if(j)return Le(13,1,a)}function on(a,h){if(j)return Le(14,1,a,h)}function an(a,h,_){if(j)return Le(15,1,a,h,_)}var sn=a=>{if(a===null)return"null";var h=typeof a;return h==="object"||h==="array"||h==="function"?a.toString():""+a},un,wt=a=>{for(var h="";u()[a>>>0];)h+=un[u()[a++>>>0]];return h},Ir={},Tr={},mi={},Rt;function hi(a,h,_={}){var I=h.name;if(!a)throw new Rt(`type "${I}" must have a positive integer typeid pointer`);if(Tr.hasOwnProperty(a)){if(_.Zb)return;throw new Rt(`Cannot register type \'${I}\' twice`)}Tr[a]=h,delete mi[a],Ir.hasOwnProperty(a)&&(h=Ir[a],delete Ir[a],h.forEach(D=>D()))}function Ot(a,h,_={}){if(!("argPackAdvance"in h))throw new TypeError("registerType registeredInstance requires argPackAdvance");hi(a,h,_)}var ln=(a,h,_)=>{switch(h){case 1:return _?I=>t()[I>>>0>>>0]:I=>u()[I>>>0>>>0];case 2:return _?I=>l()[I>>>1>>>0]:I=>f()[I>>>1>>>0];case 4:return _?I=>d()[I>>>2>>>0]:I=>y()[I>>>2>>>0];case 8:return _?I=>ot[I>>>3]:I=>ft[I>>>3];default:throw new TypeError(`invalid integer width (${h}): ${a}`)}};function dn(){this.wb=[void 0],this.Nb=[]}var yt=new dn;function Er(a){a>>>=0,a>=yt.Db&&--yt.get(a).Rb===0&&yt.Mb(a)}var lt=a=>{if(!a)throw new Rt("Cannot use deleted val. handle = "+a);return yt.get(a).value},_t=a=>{switch(a){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return yt.Kb({Rb:1,value:a})}};function cn(a){return this.fromWireType(d()[a>>>2>>>0])}var gi=(a,h)=>{switch(h){case 4:return function(_){return this.fromWireType(b()[_>>>2>>>0])};case 8:return function(_){return this.fromWireType(C()[_>>>3>>>0])};default:throw new TypeError(`invalid float width (${h}): ${a}`)}};function yi(a){return this.fromWireType(y()[a>>>2>>>0])}var fn=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,bi=(a,h)=>{for(var _=a>>1,I=_+h/2;!(_>=I)&&f()[_>>>0];)++_;if(_<<=1,32<_-a&&fn)return fn.decode(u().slice(a,_));for(_="",I=0;!(I>=h/2);++I){var D=l()[a+2*I>>>1>>>0];if(D==0)break;_+=String.fromCharCode(D)}return _},vi=(a,h,_)=>{if(_??=2147483647,2>_)return 0;_-=2;var I=h;_=_<2*a.length?_/2:a.length;for(var D=0;D<_;++D){var N=a.charCodeAt(D);l()[h>>>1>>>0]=N,h+=2}return l()[h>>>1>>>0]=0,h-I},wi=a=>2*a.length,_i=(a,h)=>{for(var _=0,I="";!(_>=h/4);){var D=d()[a+4*_>>>2>>>0];if(D==0)break;++_,65536<=D?(D-=65536,I+=String.fromCharCode(55296|D>>10,56320|D&1023)):I+=String.fromCharCode(D)}return I},$i=(a,h,_)=>{if(h>>>=0,_??=2147483647,4>_)return 0;var I=h;_=I+_-4;for(var D=0;D<a.length;++D){var N=a.charCodeAt(D);if(55296<=N&&57343>=N){var Y=a.charCodeAt(++D);N=65536+((N&1023)<<10)|Y&1023}if(d()[h>>>2>>>0]=N,h+=4,h+4>_)break}return d()[h>>>2>>>0]=0,h-I},Ci=a=>{for(var h=0,_=0;_<a.length;++_){var I=a.charCodeAt(_);55296<=I&&57343>=I&&++_,h+=4}return h},pn=()=>{if(!(0<Ft))try{j?jr($e):Pt($e)}catch(a){vt(a)}};function Pr(a){a>>>=0,typeof Atomics.sc=="function"&&(Atomics.sc(d(),a>>>2,a).value.then(sr),a+=128,Atomics.store(d(),a>>>2,1))}m.__emscripten_thread_mailbox_await=Pr;var sr=()=>{var a=fr();if(a&&(Pr(a),!Ie))try{Wn(),pn()}catch(h){vt(h)}};m.checkMailbox=sr;var Or=[],kr=(a,h)=>{var _=Tr[a];if(_===void 0)throw a=jn(a),_=wt(a),At(a),new Rt(h+" has unknown type "+_);return _},mn=(a,h,_)=>{var I=[];return a=a.toWireType(I,_),I.length&&(y()[h>>>2>>>0]=_t(I)),a},ur=a=>{try{a()}catch(h){nt(h)}};function Si(){var a=me,h={};for(let[_,I]of Object.entries(a))h[_]=typeof I=="function"?function(){lr.push(_);try{return I.apply(null,arguments)}finally{Ie||(lr.pop(),xt&&Bt===1&&lr.length===0&&(Bt=0,Ft+=1,ur(Fn),typeof Fibers<"u"&&Fibers.xc()))}}:I;return h}var Bt=0,xt=null,hn=0,lr=[],gn={},yn={},xi=0,Rr=null,Ai=[];function Ii(){return new Promise((a,h)=>{Rr={resolve:a,reject:h}})}function Ti(){var a=Qt(65548),h=a+12;y()[a>>>2>>>0]=h,y()[a+4>>>2>>>0]=h+65536,h=lr[0];var _=gn[h];return _===void 0&&(_=xi++,gn[h]=_,yn[_]=h),h=_,d()[a+8>>>2>>>0]=h,a}function Ei(){var a=d()[xt+8>>>2>>>0];return a=me[yn[a]],--Ft,a()}function Pi(a){if(!Ie){if(Bt===0){var h=!1,_=!1;a((I=0)=>{if(!Ie&&(hn=I,h=!0,_)){Bt=2,ur(()=>qn(xt)),typeof Browser<"u"&&Browser.Jb.Yb&&Browser.Jb.resume(),I=!1;try{var D=Ei()}catch(re){D=re,I=!0}var N=!1;if(!xt){var Y=Rr;Y&&(Rr=null,(I?Y.reject:Y.resolve)(D),N=!0)}if(I&&!N)throw D}}),_=!0,h||(Bt=1,xt=Ti(),typeof Browser<"u"&&Browser.Jb.Yb&&Browser.Jb.pause(),ur(()=>Ln(xt)))}else Bt===2?(Bt=0,ur(Kn),At(xt),xt=null,Ai.forEach(I=>{if(!Ie)try{I(),pn()}catch(D){vt(D)}})):nt(`invalid state: ${Bt}`);return hn}}function bn(a){return Pi(h=>{a().then(h)})}var dr=[],Oi={},Br=a=>{var h=Oi[a];return h===void 0?wt(a):h},vn=()=>typeof globalThis=="object"?globalThis:Function("return this")(),ki=a=>{var h=dr.length;return dr.push(a),h},Ri=(a,h)=>{for(var _=Array(a),I=0;I<a;++I)_[I]=kr(y()[h+4*I>>>2>>>0],"parameter "+I);return _},wn=(a,h)=>Object.defineProperty(h,"name",{value:a});function Bi(a){var h=Function;if(!(h instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof h} which is not a function`);var _=wn(h.name||"unknownFunctionName",function(){});return _.prototype=h.prototype,_=new _,a=h.apply(_,a),a instanceof Object?a:_}var Kt=a=>a%4===0&&(a%100!==0||a%400===0),_n=[0,31,60,91,121,152,182,213,244,274,305,335],$n=[0,31,59,90,120,151,181,212,243,273,304,334];function Cn(a,h,_,I,D,N,Y){return j?Le(16,1,a,h,_,I,D,N,Y):-52}function Sn(a,h,_,I,D,N){if(j)return Le(17,1,a,h,_,I,D,N)}var xn=a=>{var h=ar(a)+1,_=Qt(h);return _&&Ar(a,_,h),_},Dr=[],An=(a,h)=>{Dr.length=0;for(var _;_=u()[a++>>>0];){var I=_!=105;I&=_!=112,h+=I&&h%8?4:0,Dr.push(_==112?y()[h>>>2>>>0]:_==106?ot[h>>>3]:_==105?d()[h>>>2>>>0]:C()[h>>>3>>>0]),h+=I?8:4}return Dr},Mr={},In=()=>{if(!zr){var a={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:k||"./this.program"},h;for(h in Mr)Mr[h]===void 0?delete a[h]:a[h]=Mr[h];var _=[];for(h in a)_.push(`${h}=${a[h]}`);zr=_}return zr},zr;function Tn(a,h){if(j)return Le(18,1,a,h);a>>>=0,h>>>=0;var _=0;return In().forEach((I,D)=>{var N=h+_;for(D=y()[a+4*D>>>2>>>0]=N,N=0;N<I.length;++N)t()[D++>>>0>>>0]=I.charCodeAt(N);t()[D>>>0>>>0]=0,_+=I.length+1}),0}function En(a,h){if(j)return Le(19,1,a,h);a>>>=0,h>>>=0;var _=In();y()[a>>>2>>>0]=_.length;var I=0;return _.forEach(D=>I+=D.length+1),y()[h>>>2>>>0]=I,0}function Pn(a){return j?Le(20,1,a):52}function On(a,h,_,I){return j?Le(21,1,a,h,_,I):52}function kn(a,h,_,I){return j?Le(22,1,a,h,_,I):70}var Di=[null,[],[]];function Rn(a,h,_,I){if(j)return Le(23,1,a,h,_,I);h>>>=0,_>>>=0,I>>>=0;for(var D=0,N=0;N<_;N++){var Y=y()[h>>>2>>>0],re=y()[h+4>>>2>>>0];h+=8;for(var ce=0;ce<re;ce++){var ue=u()[Y+ce>>>0],ve=Di[a];ue===0||ue===10?((a===1?Ne:Be)(Xr(ve,0)),ve.length=0):ve.push(ue)}D+=re}return y()[I>>>2>>>0]=D,0}var Bn=[31,29,31,30,31,30,31,31,30,31,30,31],Dn=[31,28,31,30,31,30,31,31,30,31,30,31];function Mi(a){var h=Array(ar(a)+1);return xr(a,h,0,h.length),h}var zi=(a,h)=>{t().set(a,h>>>0)};function Mn(a,h,_,I){function D(K,we,ze){for(K=typeof K=="number"?K.toString():K||"";K.length<we;)K=ze[0]+K;return K}function N(K,we){return D(K,we,"0")}function Y(K,we){function ze(Yn){return 0>Yn?-1:0<Yn?1:0}var jt;return(jt=ze(K.getFullYear()-we.getFullYear()))===0&&(jt=ze(K.getMonth()-we.getMonth()))===0&&(jt=ze(K.getDate()-we.getDate())),jt}function re(K){switch(K.getDay()){case 0:return new Date(K.getFullYear()-1,11,29);case 1:return K;case 2:return new Date(K.getFullYear(),0,3);case 3:return new Date(K.getFullYear(),0,2);case 4:return new Date(K.getFullYear(),0,1);case 5:return new Date(K.getFullYear()-1,11,31);case 6:return new Date(K.getFullYear()-1,11,30)}}function ce(K){var we=K.Ab;for(K=new Date(new Date(K.Bb+1900,0,1).getTime());0<we;){var ze=K.getMonth(),jt=(Kt(K.getFullYear())?Bn:Dn)[ze];if(we>jt-K.getDate())we-=jt-K.getDate()+1,K.setDate(1),11>ze?K.setMonth(ze+1):(K.setMonth(0),K.setFullYear(K.getFullYear()+1));else{K.setDate(K.getDate()+we);break}}return ze=new Date(K.getFullYear()+1,0,4),we=re(new Date(K.getFullYear(),0,4)),ze=re(ze),0>=Y(we,K)?0>=Y(ze,K)?K.getFullYear()+1:K.getFullYear():K.getFullYear()-1}a>>>=0,h>>>=0,_>>>=0,I>>>=0;var ue=y()[I+40>>>2>>>0];I={pc:d()[I>>>2>>>0],oc:d()[I+4>>>2>>>0],Gb:d()[I+8>>>2>>>0],Lb:d()[I+12>>>2>>>0],Hb:d()[I+16>>>2>>>0],Bb:d()[I+20>>>2>>>0],vb:d()[I+24>>>2>>>0],Ab:d()[I+28>>>2>>>0],wc:d()[I+32>>>2>>>0],nc:d()[I+36>>>2>>>0],qc:ue?st(ue):""},_=st(_),ue={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var ve in ue)_=_.replace(new RegExp(ve,"g"),ue[ve]);var Ee="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),je="January February March April May June July August September October November December".split(" ");ue={"%a":K=>Ee[K.vb].substring(0,3),"%A":K=>Ee[K.vb],"%b":K=>je[K.Hb].substring(0,3),"%B":K=>je[K.Hb],"%C":K=>N((K.Bb+1900)/100|0,2),"%d":K=>N(K.Lb,2),"%e":K=>D(K.Lb,2," "),"%g":K=>ce(K).toString().substring(2),"%G":K=>ce(K),"%H":K=>N(K.Gb,2),"%I":K=>(K=K.Gb,K==0?K=12:12<K&&(K-=12),N(K,2)),"%j":K=>{for(var we=0,ze=0;ze<=K.Hb-1;we+=(Kt(K.Bb+1900)?Bn:Dn)[ze++]);return N(K.Lb+we,3)},"%m":K=>N(K.Hb+1,2),"%M":K=>N(K.oc,2),"%n":()=>`\n`,"%p":K=>0<=K.Gb&&12>K.Gb?"AM":"PM","%S":K=>N(K.pc,2),"%t":()=>"	","%u":K=>K.vb||7,"%U":K=>N(Math.floor((K.Ab+7-K.vb)/7),2),"%V":K=>{var we=Math.floor((K.Ab+7-(K.vb+6)%7)/7);if(2>=(K.vb+371-K.Ab-2)%7&&we++,we)we==53&&(ze=(K.vb+371-K.Ab)%7,ze==4||ze==3&&Kt(K.Bb)||(we=1));else{we=52;var ze=(K.vb+7-K.Ab-1)%7;(ze==4||ze==5&&Kt(K.Bb%400-1))&&we++}return N(we,2)},"%w":K=>K.vb,"%W":K=>N(Math.floor((K.Ab+7-(K.vb+6)%7)/7),2),"%y":K=>(K.Bb+1900).toString().substring(2),"%Y":K=>K.Bb+1900,"%z":K=>{K=K.nc;var we=0<=K;return K=Math.abs(K)/60,(we?"+":"-")+("0000"+(K/60*100+K%60)).slice(-4)},"%Z":K=>K.qc,"%%":()=>"%"},_=_.replace(/%%/g,"\\0\\0");for(ve in ue)_.includes(ve)&&(_=_.replace(new RegExp(ve,"g"),ue[ve](I)));return _=_.replace(/\\0\\0/g,"%"),ve=Mi(_),ve.length>h?0:(zi(ve,a),ve.length-1)}be.Ib();for(var zn=Array(256),cr=0;256>cr;++cr)zn[cr]=String.fromCharCode(cr);un=zn,Rt=m.BindingError=class extends Error{constructor(a){super(a),this.name="BindingError"}},m.InternalError=class extends Error{constructor(a){super(a),this.name="InternalError"}},Object.assign(dn.prototype,{get(a){return this.wb[a]},has(a){return this.wb[a]!==void 0},Kb(a){var h=this.Nb.pop()||this.wb.length;return this.wb[h]=a,h},Mb(a){this.wb[a]=void 0,this.Nb.push(a)}}),yt.wb.push({value:void 0},{value:null},{value:!0},{value:!1}),yt.Db=yt.wb.length,m.count_emval_handles=()=>{for(var a=0,h=yt.Db;h<yt.wb.length;++h)yt.wb[h]!==void 0&&++a;return a};var Ui=[si,Sr,ci,pi,M,H,qt,L,F,Qr,en,tn,rn,nn,on,an,Cn,Sn,Tn,En,Pn,On,kn,Rn],ji={ua:function(a,h,_){return bn(async()=>{await m.dc(a,h,_)})},b:function(a,h,_){throw a>>>=0,new vo(a).Ib(h>>>0,_>>>0),di=a,wo++,di},fa:function(a){Vn(a>>>0,!B,1,!V,131072,!1),be.Ub()},D:function(a){a>>>=0,j?postMessage({cmd:"cleanupThread",thread:a}):be.Sb(be.pb[a])},X:fi,z:pi,la:M,T:H,V:qt,ma:L,ja:F,ca:Qr,ia:en,H:tn,U:rn,R:nn,ka:on,S:an,K:function(a,h,_,I,D){a>>>=0,h>>>=0,_>>>=0,h=wt(h);var N=h.indexOf("u")!=-1;N&&(D=(1n<<64n)-1n),Ot(a,{name:h,fromWireType:Y=>Y,toWireType:function(Y,re){if(typeof re!="bigint"&&typeof re!="number")throw new TypeError(`Cannot convert "${sn(re)}" to ${this.name}`);if(re<I||re>D)throw new TypeError(`Passing a number "${sn(re)}" from JS side to C/C++ side to an argument of type "${h}", which is outside the valid range [${I}, ${D}]!`);return re},argPackAdvance:8,readValueFromPointer:ln(h,_,!N),Cb:null})},sa:function(a,h,_,I){a>>>=0,h=wt(h>>>0),Ot(a,{name:h,fromWireType:function(D){return!!D},toWireType:function(D,N){return N?_:I},argPackAdvance:8,readValueFromPointer:function(D){return this.fromWireType(u()[D>>>0])},Cb:null})},ra:function(a,h){a>>>=0,h=wt(h>>>0),Ot(a,{name:h,fromWireType:_=>{var I=lt(_);return Er(_),I},toWireType:(_,I)=>_t(I),argPackAdvance:8,readValueFromPointer:cn,Cb:null})},J:function(a,h,_){a>>>=0,_>>>=0,h=wt(h>>>0),Ot(a,{name:h,fromWireType:I=>I,toWireType:(I,D)=>D,argPackAdvance:8,readValueFromPointer:gi(h,_),Cb:null})},v:function(a,h,_,I,D){if(a>>>=0,_>>>=0,h=wt(h>>>0),D===-1&&(D=4294967295),D=re=>re,I===0){var N=32-8*_;D=re=>re<<N>>>N}var Y=h.includes("unsigned")?function(re,ce){return ce>>>0}:function(re,ce){return ce};Ot(a,{name:h,fromWireType:D,toWireType:Y,argPackAdvance:8,readValueFromPointer:ln(h,_,I!==0),Cb:null})},o:function(a,h,_){function I(N){var Y=y()[N>>>2>>>0];return N=y()[N+4>>>2>>>0],new D(t().buffer,N,Y)}a>>>=0;var D=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][h];_=wt(_>>>0),Ot(a,{name:_,fromWireType:I,argPackAdvance:8,readValueFromPointer:I},{Zb:!0})},L:function(a,h){a>>>=0,h=wt(h>>>0);var _=h==="std::string";Ot(a,{name:h,fromWireType:function(I){var D=y()[I>>>2>>>0],N=I+4;if(_)for(var Y=N,re=0;re<=D;++re){var ce=N+re;if(re==D||u()[ce>>>0]==0){if(Y=st(Y,ce-Y),ue===void 0)var ue=Y;else ue+=String.fromCharCode(0),ue+=Y;Y=ce+1}}else{for(ue=Array(D),re=0;re<D;++re)ue[re]=String.fromCharCode(u()[N+re>>>0]);ue=ue.join("")}return At(I),ue},toWireType:function(I,D){D instanceof ArrayBuffer&&(D=new Uint8Array(D));var N=typeof D=="string";if(!(N||D instanceof Uint8Array||D instanceof Uint8ClampedArray||D instanceof Int8Array))throw new Rt("Cannot pass non-string to std::string");var Y=_&&N?ar(D):D.length,re=Qt(4+Y+1),ce=re+4;if(y()[re>>>2>>>0]=Y,_&&N)Ar(D,ce,Y+1);else if(N)for(N=0;N<Y;++N){var ue=D.charCodeAt(N);if(255<ue)throw At(ce),new Rt("String has UTF-16 code units that do not fit in 8 bits");u()[ce+N>>>0]=ue}else for(N=0;N<Y;++N)u()[ce+N>>>0]=D[N];return I!==null&&I.push(At,re),re},argPackAdvance:8,readValueFromPointer:yi,Cb(I){At(I)}})},B:function(a,h,_){if(a>>>=0,h>>>=0,_>>>=0,_=wt(_),h===2)var I=bi,D=vi,N=wi,Y=()=>f(),re=1;else h===4&&(I=_i,D=$i,N=Ci,Y=()=>y(),re=2);Ot(a,{name:_,fromWireType:ce=>{for(var ue=y()[ce>>>2>>>0],ve=Y(),Ee,je=ce+4,K=0;K<=ue;++K){var we=ce+4+K*h;(K==ue||ve[we>>>re]==0)&&(je=I(je,we-je),Ee===void 0?Ee=je:(Ee+=String.fromCharCode(0),Ee+=je),je=we+h)}return At(ce),Ee},toWireType:(ce,ue)=>{if(typeof ue!="string")throw new Rt(`Cannot pass non-string to C++ string type ${_}`);var ve=N(ue),Ee=Qt(4+ve+h);return y()[Ee>>>2]=ve>>re,D(ue,Ee+4,ve+h),ce!==null&&ce.push(At,Ee),Ee},argPackAdvance:8,readValueFromPointer:cn,Cb(ce){At(ce)}})},ta:function(a,h){a>>>=0,h=wt(h>>>0),Ot(a,{$b:!0,name:h,argPackAdvance:0,fromWireType:()=>{},toWireType:()=>{}})},qa:()=>1,P:function(a,h){a>>>=0,a==h>>>0?setTimeout(()=>sr()):j?postMessage({targetThread:a,cmd:"checkMailbox"}):(a=be.pb[a])&&a.postMessage({cmd:"checkMailbox"})},Y:function(a,h,_,I){h>>>=0,_/=2,Or.length=_,I=I>>>0>>>3;for(var D=0;D<_;D++)Or[D]=ot[I+2*D]?ot[I+2*D+1]:C()[I+2*D+1>>>0];return a=0>a?wr[-a-1]:Ui[a],be.Xb=h,h=a.apply(null,Or),be.Xb=0,h},ea:Pr,pa:function(a){W&&be.pb[a>>>0].ref()},t:function(a,h,_){return h>>>=0,_>>>=0,a=lt(a>>>0),h=kr(h,"emval::as"),mn(h,_,a)},y:function(a){return a>>>=0,bn(()=>(a=lt(a),a.then(_t)))},p:function(a,h,_,I){return _>>>=0,I>>>=0,a=dr[a>>>0],h=lt(h>>>0),a(null,h,_,I)},k:function(a,h,_,I,D){return _>>>=0,I>>>=0,D>>>=0,a=dr[a>>>0],h=lt(h>>>0),_=Br(_),a(h,h[_],I,D)},c:Er,C:function(a,h){return h>>>=0,a=lt(a>>>0),h=lt(h),a==h},n:function(a){return a>>>=0,a===0?_t(vn()):(a=Br(a),_t(vn()[a]))},j:function(a,h,_){h=Ri(a,h>>>0);var I=h.shift();a--;var D=`return function (obj, func, destructorsRef, args) {\n`,N=0,Y=[];_===0&&Y.push("obj");for(var re=["retType"],ce=[I],ue=0;ue<a;++ue)Y.push("arg"+ue),re.push("argType"+ue),ce.push(h[ue]),D+=`  var arg${ue} = argType${ue}.readValueFromPointer(args${N?"+"+N:""});\n`,N+=h[ue].argPackAdvance;for(D+=`  var rv = ${_===1?"new func":"func.call"}(${Y.join(", ")});\n`,ue=0;ue<a;++ue)h[ue].deleteObject&&(D+=`  argType${ue}.deleteObject(arg${ue});\n`);return I.$b||(re.push("emval_returnValue"),ce.push(mn),D+=`  return emval_returnValue(retType, destructorsRef, rv);\n`),re.push(D+`};\n`),a=Bi(re).apply(null,ce),_=`methodCaller<(${h.map(ve=>ve.name).join(", ")}) => ${I.name}>`,ki(wn(_,a))},s:function(a,h){return h>>>=0,a=lt(a>>>0),h=lt(h),_t(a[h])},e:function(a){a>>>=0,4<a&&(yt.get(a).Rb+=1)},w:function(){return _t([])},m:function(a){a=lt(a>>>0);for(var h=Array(a.length),_=0;_<a.length;_++)h[_]=a[_];return _t(h)},g:function(a){return _t(Br(a>>>0))},l:function(){return _t({})},i:function(a){a>>>=0;for(var h=lt(a);h.length;){var _=h.pop();h.pop()(_)}Er(a)},h:function(a,h,_){h>>>=0,_>>>=0,a=lt(a>>>0),h=lt(h),_=lt(_),a[h]=_},d:function(a,h){return h>>>=0,a=kr(a>>>0,"_emval_take_value"),a=a.readValueFromPointer(h),_t(a)},$:function(a,h){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),h>>>=0,a=new Date(1e3*a),d()[h>>>2>>>0]=a.getUTCSeconds(),d()[h+4>>>2>>>0]=a.getUTCMinutes(),d()[h+8>>>2>>>0]=a.getUTCHours(),d()[h+12>>>2>>>0]=a.getUTCDate(),d()[h+16>>>2>>>0]=a.getUTCMonth(),d()[h+20>>>2>>>0]=a.getUTCFullYear()-1900,d()[h+24>>>2>>>0]=a.getUTCDay(),a=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,d()[h+28>>>2>>>0]=a},aa:function(a,h){a=-9007199254740992>a||9007199254740992<a?NaN:Number(a),h>>>=0,a=new Date(1e3*a),d()[h>>>2>>>0]=a.getSeconds(),d()[h+4>>>2>>>0]=a.getMinutes(),d()[h+8>>>2>>>0]=a.getHours(),d()[h+12>>>2>>>0]=a.getDate(),d()[h+16>>>2>>>0]=a.getMonth(),d()[h+20>>>2>>>0]=a.getFullYear()-1900,d()[h+24>>>2>>>0]=a.getDay();var _=(Kt(a.getFullYear())?_n:$n)[a.getMonth()]+a.getDate()-1|0;d()[h+28>>>2>>>0]=_,d()[h+36>>>2>>>0]=-(60*a.getTimezoneOffset()),_=new Date(a.getFullYear(),6,1).getTimezoneOffset();var I=new Date(a.getFullYear(),0,1).getTimezoneOffset();a=(_!=I&&a.getTimezoneOffset()==Math.min(I,_))|0,d()[h+32>>>2>>>0]=a},ba:function(a){a>>>=0;var h=new Date(d()[a+20>>>2>>>0]+1900,d()[a+16>>>2>>>0],d()[a+12>>>2>>>0],d()[a+8>>>2>>>0],d()[a+4>>>2>>>0],d()[a>>>2>>>0],0),_=d()[a+32>>>2>>>0],I=h.getTimezoneOffset(),D=new Date(h.getFullYear(),6,1).getTimezoneOffset(),N=new Date(h.getFullYear(),0,1).getTimezoneOffset(),Y=Math.min(N,D);return 0>_?d()[a+32>>>2>>>0]=+(D!=N&&Y==I):0<_!=(Y==I)&&(D=Math.max(N,D),h.setTime(h.getTime()+6e4*((0<_?Y:D)-I))),d()[a+24>>>2>>>0]=h.getDay(),_=(Kt(h.getFullYear())?_n:$n)[h.getMonth()]+h.getDate()-1|0,d()[a+28>>>2>>>0]=_,d()[a>>>2>>>0]=h.getSeconds(),d()[a+4>>>2>>>0]=h.getMinutes(),d()[a+8>>>2>>>0]=h.getHours(),d()[a+12>>>2>>>0]=h.getDate(),d()[a+16>>>2>>>0]=h.getMonth(),d()[a+20>>>2>>>0]=h.getYear(),a=h.getTime(),isNaN(a)?(d()[Un()>>>2>>>0]=61,a=-1):a/=1e3,BigInt(a)},Z:Cn,_:Sn,O:function(a,h,_){function I(ue){return(ue=ue.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?ue[1]:"GMT"}a>>>=0,h>>>=0,_>>>=0;var D=new Date().getFullYear(),N=new Date(D,0,1),Y=new Date(D,6,1);D=N.getTimezoneOffset();var re=Y.getTimezoneOffset(),ce=Math.max(D,re);y()[a>>>2>>>0]=60*ce,d()[h>>>2>>>0]=+(D!=re),a=I(N),h=I(Y),a=xn(a),h=xn(h),re<D?(y()[_>>>2>>>0]=a,y()[_+4>>>2>>>0]=h):(y()[_>>>2>>>0]=h,y()[_+4>>>2>>>0]=a)},q:()=>{nt("")},f:function(a,h,_){return a>>>=0,h=An(h>>>0,_>>>0),wr[a].apply(null,h)},M:function(a,h,_){return a>>>=0,h=An(h>>>0,_>>>0),wr[a].apply(null,h)},E:()=>{},I:()=>Date.now(),oa:()=>{throw Ft+=1,"unwind"},Q:function(){return 4294901760},u:()=>performance.timeOrigin+performance.now(),x:()=>W?(fs(),Wr(cs)).cpus().length:navigator.hardwareConcurrency,N:function(a){a>>>=0;var h=u().length;if(a<=h||4294901760<a)return!1;for(var _=1;4>=_;_*=2){var I=h*(1+.2/_);I=Math.min(I,a+100663296);var D=Math;I=Math.max(a,I);e:{D=(D.min.call(D,4294901760,I+(65536-I%65536)%65536)-pe.buffer.byteLength+65535)/65536;try{pe.grow(D),pt();var N=1;break e}catch{}N=void 0}if(N)return!0}return!1},ga:Tn,ha:En,W:Pt,A:Pn,G:On,da:kn,F:Rn,a:pe||m.wasmMemory,na:Mn,r:function(a,h,_,I){return Mn(a>>>0,h>>>0,_>>>0,I>>>0)}},me=function(){function a(_,I){return me=_.exports,me=Si(),me=Vi(),be.Vb.push(me.bb),gt.unshift(me.va),We=I,qr(),me}var h={a:ji};if(Tt++,m.instantiateWasm)try{return m.instantiateWasm(h,a)}catch(_){Be(`Module.instantiateWasm callback failed with error: ${_}`),E(_)}return Yr(h,function(_){a(_.instance,_.module)}).catch(E),{}}();m._OrtInit=(a,h)=>(m._OrtInit=me.wa)(a,h),m._OrtGetLastError=(a,h)=>(m._OrtGetLastError=me.xa)(a,h),m._OrtCreateSessionOptions=(a,h,_,I,D,N,Y,re,ce,ue)=>(m._OrtCreateSessionOptions=me.ya)(a,h,_,I,D,N,Y,re,ce,ue),m._OrtAppendExecutionProvider=(a,h)=>(m._OrtAppendExecutionProvider=me.za)(a,h),m._OrtAddFreeDimensionOverride=(a,h,_)=>(m._OrtAddFreeDimensionOverride=me.Aa)(a,h,_),m._OrtAddSessionConfigEntry=(a,h,_)=>(m._OrtAddSessionConfigEntry=me.Ba)(a,h,_),m._OrtReleaseSessionOptions=a=>(m._OrtReleaseSessionOptions=me.Ca)(a),m._OrtCreateSession=(a,h,_)=>(m._OrtCreateSession=me.Da)(a,h,_),m._OrtReleaseSession=a=>(m._OrtReleaseSession=me.Ea)(a),m._OrtGetInputOutputCount=(a,h,_)=>(m._OrtGetInputOutputCount=me.Fa)(a,h,_),m._OrtGetInputName=(a,h)=>(m._OrtGetInputName=me.Ga)(a,h),m._OrtGetOutputName=(a,h)=>(m._OrtGetOutputName=me.Ha)(a,h),m._OrtFree=a=>(m._OrtFree=me.Ia)(a),m._OrtCreateTensor=(a,h,_,I,D,N)=>(m._OrtCreateTensor=me.Ja)(a,h,_,I,D,N),m._OrtGetTensorData=(a,h,_,I,D)=>(m._OrtGetTensorData=me.Ka)(a,h,_,I,D),m._OrtReleaseTensor=a=>(m._OrtReleaseTensor=me.La)(a),m._OrtCreateRunOptions=(a,h,_,I)=>(m._OrtCreateRunOptions=me.Ma)(a,h,_,I),m._OrtAddRunConfigEntry=(a,h,_)=>(m._OrtAddRunConfigEntry=me.Na)(a,h,_),m._OrtReleaseRunOptions=a=>(m._OrtReleaseRunOptions=me.Oa)(a),m._OrtCreateBinding=a=>(m._OrtCreateBinding=me.Pa)(a),m._OrtBindInput=(a,h,_)=>(m._OrtBindInput=me.Qa)(a,h,_),m._OrtBindOutput=(a,h,_,I)=>(m._OrtBindOutput=me.Ra)(a,h,_,I),m._OrtClearBoundOutputs=a=>(m._OrtClearBoundOutputs=me.Sa)(a),m._OrtReleaseBinding=a=>(m._OrtReleaseBinding=me.Ta)(a),m._OrtRunWithBinding=(a,h,_,I,D)=>(m._OrtRunWithBinding=me.Ua)(a,h,_,I,D),m._OrtRun=(a,h,_,I,D,N,Y,re)=>(m._OrtRun=me.Va)(a,h,_,I,D,N,Y,re),m._OrtEndProfiling=a=>(m._OrtEndProfiling=me.Wa)(a),m._JsepOutput=(a,h,_)=>(m._JsepOutput=me.Xa)(a,h,_),m._JsepGetNodeName=a=>(m._JsepGetNodeName=me.Ya)(a);var Un=()=>(Un=me.Za)(),fr=m._pthread_self=()=>(fr=m._pthread_self=me._a)(),Qt=m._malloc=a=>(Qt=m._malloc=me.$a)(a),At=m._free=a=>(At=m._free=me.ab)(a);m.__emscripten_tls_init=()=>(m.__emscripten_tls_init=me.bb)();var jn=a=>(jn=me.cb)(a);m.__embind_initialize_bindings=()=>(m.__embind_initialize_bindings=me.db)();var Vn=m.__emscripten_thread_init=(a,h,_,I,D,N)=>(Vn=m.__emscripten_thread_init=me.fb)(a,h,_,I,D,N);m.__emscripten_thread_crashed=()=>(m.__emscripten_thread_crashed=me.gb)();var Nn=(a,h,_,I)=>(Nn=me.hb)(a,h,_,I),Ur=a=>(Ur=me.ib)(a),jr=m.__emscripten_thread_exit=a=>(jr=m.__emscripten_thread_exit=me.jb)(a),Wn=()=>(Wn=me.kb)(),Gn=(a,h)=>(Gn=me.lb)(a,h),Vr=()=>(Vr=me.mb)(),pr=a=>(pr=me.nb)(a),Nr=a=>(Nr=me.ob)(a),Hn=m.dynCall_ii=(a,h)=>(Hn=m.dynCall_ii=me.qb)(a,h),Ln=a=>(Ln=me.rb)(a),Fn=()=>(Fn=me.sb)(),qn=a=>(qn=me.tb)(a),Kn=()=>(Kn=me.ub)();m.___start_em_js=961987,m.___stop_em_js=962148;function Vi(){var a=me;a=Object.assign({},a);var h=I=>()=>I()>>>0,_=I=>D=>I(D)>>>0;return a.Za=h(a.Za),a._a=h(a._a),a.$a=_(a.$a),a.cb=_(a.cb),a.emscripten_main_runtime_thread_id=h(a.emscripten_main_runtime_thread_id),a.mb=h(a.mb),a.ob=_(a.ob),a}m.wasmMemory=pe,m.stackAlloc=Nr,m.stackSave=Vr,m.stackRestore=pr,m.keepRuntimeAlive=()=>0<Ft,m.UTF8ToString=st,m.stringToUTF8=Ar,m.lengthBytesUTF8=ar,m.ExitStatus=ir,m.PThread=be;var mr;Zt=function a(){mr||Jn(),mr||(Zt=a)};function Jn(){if(!(0<Tt))if(j)A(m),j||Cr(gt),startWorker(m);else{if(m.preRun)for(typeof m.preRun=="function"&&(m.preRun=[m.preRun]);m.preRun.length;)tt.unshift(m.preRun.shift());Cr(tt),0<Tt||mr||(mr=!0,m.calledRun=!0,Ie||(j||Cr(gt),A(m),j||Cr(St)))}}return Jn(),r.ready}})();typeof ms=="object"&&typeof To=="object"?To.exports=ps:typeof define=="function"&&define.amd&&define([],()=>ps)});var gs=Zn((Vy,Wm)=>{Wm.exports=\'"use strict";var Module={},ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads"),parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",e=>onmessage({data:e}));var fs=require("fs"),vm=require("vm");Object.assign(global,{self:global,require,Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:e=>vm.runInThisContext(fs.readFileSync(e,"utf8"),{filename:e}),postMessage:e=>parentPort.postMessage(e),performance:global.performance||{now:Date.now}})}var initializedJS=!1;function threadPrintErr(){var e=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,e+`\\n`);return}console.error(e)}function threadAlert(){var e=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:e,threadId:Module._pthread_self()})}var err=threadPrintErr;self.alert=threadAlert,Module.instantiateWasm=(e,t)=>{var a=Module.wasmModule;Module.wasmModule=null;var r=new WebAssembly.Instance(a,e);return t(r)},self.onunhandledrejection=e=>{throw e.reason||e};function handleMessage(e){try{if(e.data.cmd==="load"){let a=[];self.onmessage=r=>a.push(r),self.startWorker=r=>{Module=r,postMessage({cmd:"loaded"});for(let s of a)handleMessage(s);self.onmessage=handleMessage},Module.wasmModule=e.data.wasmModule;for(const r of e.data.handlers)Module[r]=(...s)=>{postMessage({cmd:"callHandler",handler:r,args:s})};if(Module.wasmMemory=e.data.wasmMemory,Module.buffer=Module.wasmMemory.buffer,Module.ENVIRONMENT_IS_PTHREAD=!0,typeof e.data.urlOrBlob=="string")importScripts(e.data.urlOrBlob);else{var t=URL.createObjectURL(e.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(Module)}else if(e.data.cmd==="run"){Module.__emscripten_thread_init(e.data.pthread_ptr,0,0,1),Module.__emscripten_thread_mailbox_await(e.data.pthread_ptr),Module.establishStackSpace(),Module.PThread.receiveObjectTransfer(e.data),Module.PThread.threadInitTLS(),initializedJS||(initializedJS=!0);try{Module.invokeEntryPoint(e.data.start_routine,e.data.arg)}catch(a){if(a!="unwind")throw a}}else e.data.cmd==="cancel"?Module._pthread_self()&&Module.__emscripten_thread_exit(-1):e.data.target==="setimmediate"||(e.data.cmd==="checkMailbox"?initializedJS&&Module.checkMailbox():e.data.cmd&&(err(`worker.js received unknown command ${e.data.cmd}`),err(e.data)))}catch(a){throw Module.__emscripten_thread_crashed?.(),a}}self.onmessage=handleMessage;\\n\'});var Oo,er,Qn,Hi,ei,$s,ko,Se=le(()=>{"use strict";Oo=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;default:throw new Error(`unsupported data type: ${e}`)}},er=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";default:throw new Error(`unsupported data type: ${e}`)}},Qn=e=>[void 0,4,1,1,2,2,4,8,void 0,1,2,8,4,8,void 0,void 0,void 0][e],Hi=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},ei=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},$s=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool",ko=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;default:throw new Error(`unsupported data location: ${e}`)}}});var Li=le(()=>{"use strict"});var Ss=le(()=>{"use strict";Li()});var xs,As=le(()=>{"use strict";xs="1.18.0"});var Is,It,Ro=le(()=>{"use strict";As();Is="warning",It={wasm:{},webgl:{},webgpu:{},versions:{common:xs},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);Is=e}},get logLevel(){return Is}};Object.defineProperty(It,"logLevel",{enumerable:!0})});var Gr,Ts=le(()=>{"use strict";Ro();Gr=It});var Es=le(()=>{"use strict"});var Ps=le(()=>{"use strict";Fi()});var ks=le(()=>{"use strict"});var Rs=le(()=>{"use strict";Fi()});var Fi=le(()=>{"use strict";Es();Ps();ks();Rs()});var qi=le(()=>{"use strict";Fi()});var Bo,Bs,gr,tr,Do=le(()=>{"use strict";Ro();Bo=(e,r)=>{(typeof It.trace>"u"?!It.wasm.trace:!It.trace)||console.timeStamp(`${e}::ORT::${r}`)},Bs=(e,r)=>{let t=new Error().stack?.split(/\\r\\n|\\r|\\n/g)||[],u=!1;for(let l=0;l<t.length;l++){if(u&&!t[l].includes("TRACE_FUNC")){let f=`FUNC_${e}::${t[l].trim().split(" ")[1]}`;r&&(f+=`::${r}`),Bo("CPU",f);return}t[l].includes("TRACE_FUNC")&&(u=!0)}},gr=e=>{(typeof It.trace>"u"?!It.wasm.trace:!It.trace)||Bs("BEGIN",e)},tr=e=>{(typeof It.trace>"u"?!It.wasm.trace:!It.trace)||Bs("END",e)}});var Ds=le(()=>{"use strict";Li();qi();Do()});var Ms=le(()=>{"use strict";Ds()});var zs=le(()=>{"use strict"});var Us=le(()=>{"use strict"});var js=le(()=>{"use strict"});var Vs=le(()=>{"use strict"});var Ns=le(()=>{"use strict";Li();qi()});var Ws=le(()=>{"use strict";Ns()});var Hr=le(()=>{"use strict";Ss();Ts();Ms();qi();zs();Us();Do();js();Vs();Ws()});var Qm,eh,Gs,Hs,Ls,th,Je,rr=le(()=>{"use strict";Se();Qm=["V","I","W","E","F"],eh=(e,r)=>{console.log(`[${Qm[e]},${new Date().toISOString()}]${r}`)},Ls=(e,r)=>{Gs=e,Hs=r},th=(e,r)=>{let t=ei(e),u=ei(Gs);t>=u&&eh(t,typeof r=="function"?r():r)},Je=(...e)=>{Hs&&th(...e)}});var Fs,qs=le(()=>{"use strict";Se();Fs=(e,r)=>new(Hi(r))(e)});var Ki=le(()=>{"use strict"});var Ji,rh,Ks,zo,Mo,Ys,Zs=le(()=>{"use strict";rr();Ki();Ji=e=>Math.ceil(e/16)*16,rh=1,Ks=()=>rh++,zo=async(e,r,t,u)=>{let l=Ji(t),f=e.device.createBuffer({size:l,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let d=e.getCommandEncoder();e.endComputePass(),d.copyBufferToBuffer(r,0,f,0,l),e.flush(),await f.mapAsync(GPUMapMode.READ);let y=f.getMappedRange();if(u){let b=u();return b.set(new Uint8Array(y,0,t)),b}else return new Uint8Array(y.slice(0,t))}finally{f.destroy()}},Mo=class{constructor(r){this.backend=r;this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersForUploadingPending=[],this.buffersPending=[],this.externalBuffers=new Map,this.capturedPendingBuffers=new Map}upload(r,t){let u=t.buffer,l=t.byteOffset,f=t.byteLength,d=Ji(f),y=this.storageCache.get(r);if(!y)throw new Error("gpu data for uploading does not exist");if(y.originalSize!==f)throw new Error(`inconsistent data size. gpu data size=${y.originalSize}, data size=${f}`);let b=this.backend.device.createBuffer({mappedAtCreation:!0,size:d,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),C=b.getMappedRange();new Uint8Array(C).set(new Uint8Array(u,l,f)),b.unmap();let m=this.backend.getCommandEncoder();this.backend.endComputePass(),m.copyBufferToBuffer(b,0,y.gpuData.buffer,0,d),Je("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${r})`),this.buffersForUploadingPending.push(b)}memcpy(r,t){let u=this.storageCache.get(r);if(!u)throw new Error("source gpu data for memcpy does not exist");let l=this.storageCache.get(t);if(!l)throw new Error("destination gpu data for memcpy does not exist");if(u.originalSize!==l.originalSize)throw new Error("inconsistent source and destination gpu data size");let f=Ji(u.originalSize),d=this.backend.getCommandEncoder();this.backend.endComputePass(),d.copyBufferToBuffer(u.gpuData.buffer,0,l.gpuData.buffer,0,f)}registerExternalBuffer(r,t,u){let l;if(u){if(l=this.externalBuffers.get(u),l===void 0)throw new Error("previous buffer is not registered");if(r===u)return Je("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${l}, buffer is the same, skip.`),l;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.\n             Please use the previous external buffer!`);this.externalBuffers.delete(u)}else l=Ks();return this.storageCache.set(l,{gpuData:{id:l,type:0,buffer:r},originalSize:t}),this.externalBuffers.set(r,l),Je("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${t}) => id=${l}, registered.`),l}unregisterExternalBuffer(r){let t=this.externalBuffers.get(r);t!==void 0&&(this.storageCache.delete(t),this.externalBuffers.delete(r),Je("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${t}`))}create(r,t=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let u=Ji(r),l,f=(t&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,d=(t&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(f||d){let b=f?this.freeBuffers:this.freeUniformBuffers,C=b.get(u);C||(C=[],b.set(u,C)),C.length>0?l=C.pop():l=this.backend.device.createBuffer({size:u,usage:t})}else l=this.backend.device.createBuffer({size:u,usage:t});let y={id:Ks(),type:0,buffer:l};return this.storageCache.set(y.id,{gpuData:y,originalSize:r}),Je("verbose",()=>`[WebGPU] GpuDataManager.create(size=${r}) => id=${y.id}`),y}get(r){return this.storageCache.get(r)?.gpuData}release(r){let t=this.storageCache.get(r);if(!t)throw new Error("releasing data does not exist");return Je("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(r,t){let u=this.storageCache.get(r);if(!u)throw new Error("data does not exist");await zo(this.backend,u.gpuData.buffer,u.originalSize,t)}refreshPendingBuffers(){for(let r of this.buffersForUploadingPending)r.destroy();if(this.buffersForUploadingPending=[],this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let r of this.buffersPending)(r.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE?this.freeBuffers.get(r.size).push(r):(r.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM?this.freeUniformBuffers.get(r.size).push(r):r.destroy();this.buffersPending=[]}else{let r=this.capturedPendingBuffers.get(this.backend.currentSessionId);r||(r=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,r));for(let t of this.buffersPending)r.push(t);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.freeUniformBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.storageCache.forEach(r=>{r.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(r=>{r.forEach(t=>{t.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onReleaseSession(r){let t=this.capturedPendingBuffers.get(r);t&&(t.forEach(u=>{u.destroy()}),this.capturedPendingBuffers.delete(r))}},Ys=(...e)=>new Mo(...e)});var Uo,ke,ct=le(()=>{"use strict";Uo=class{constructor(r){Object.assign(this,r)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(r=>`${this[r]}`).join(";")),this.key}},ke=e=>new Uo(e)});var jo,Vt,X,yr,Yi,Zi,Xi,Re=le(()=>{"use strict";jo=class{static calcMatMulShape(r,t){return r[1]!==t[0]?void 0:[r[0],t[1]]}},Vt=class{static calcShape(r,t,u=!1){let l=r.length,f=t.length;if(l===0)return t;if(f===0)return r;let d=Math.max(r.length,t.length),y=new Array(d);if(u){if(l<2||f<2)return;let b=jo.calcMatMulShape([r[l-2],r[l-1]],[t[f-2],t[f-1]]);if(b===void 0)return;[y[d-2],y[d-1]]=b}for(let b=u?3:1;b<=d;b++){let C=l-b<0?1:r[l-b],m=f-b<0?1:t[f-b];if(C!==m&&C>1&&m>1)return;let A=Math.max(C,m);if(C&&m)y[d-b]=Math.max(C,m);else{if(A>1)return;y[d-b]=0}}return y}static isValidBroadcast(r,t){let u=r.length,l=t.length;if(u>l)return!1;for(let f=1;f<=u;f++)if(r[u-f]!==1&&r[u-f]!==t[l-f])return!1;return!0}},X=class e{static size(r){return e.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let u=r.length;if(u===0)return[];let l=new Array(u),f=u-1;for(;f>=0;){if(r[f]%t===0){l[f]=r[f]/t;break}if(t%r[f]!==0)throw new Error("cannot convert shape");l[f]=1,t/=r[f],f--}for(f--;f>=0;f--)l[f]=r[f];return l}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return e.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return e.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,u){let l=1;for(let f=t;f<u;f++){if(r[f]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");l*=r[f]}return l}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let u=new Array(t);u[t-1]=1,u[t-2]=r[t-1];for(let l=t-3;l>=0;--l)u[l]=u[l+1]*r[l+1];return u}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(u=>this.normalizeAxis(u,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(u=>r[u]):r.slice().reverse()}static padShape(r,t){let u=r.length;return r.map((l,f)=>l+t[f]+t[f+u])}static areEqual(r,t){return r.length!==t.length?!1:r.every((u,l)=>u===t[l])}},yr=class e{static adjustPoolAttributes(r,t,u,l,f,d){if(!r&&u.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let y=0;y<t.length-2;y++)y>=u.length?u.push(t[y+2]):u[y]=t[y+2];for(let y=0;y<u.length;y++)if(y<l.length){if(l[y]<0)throw new Error("strides should be greater than or equal to 1")}else l.push(1);for(let y=0;y<u.length;y++)if(y<f.length){if(f[y]<0)throw new Error("dilations should be greater than or equal to 1")}else f.push(1);for(let y=0;y<u.length*2;y++)if(y<d.length){if(d[y]<0)throw new Error("pad should be greater than or equal to 1")}else d.push(0);for(let y=0;y<u.length;y++){if(u[y]<=0)throw new Error("kernel shapes need to be greater than 0");if(d[y]>=u[y]||d[y+u.length]>=u[y])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,u,l,f,d,y){if(y){if(f.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(l.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let b=0;b<r.length-2;b++)e.adjustPadAndReturnShape(r[b+(d?1:2)],t[b],u[b],l[b],f,b,b+r.length-2,y)}}static computePoolOutputShape(r,t,u,l,f,d,y){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let b=[t[0],t[1]];return e.computeShapeHelper(r,t,b,u,l,f,d,y),b}static computeConvOutputShape(r,t,u,l,f,d,y){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let b=[r[0],t[0]];return e.computeShapeHelper(!1,r,b,u,l,f,d,y),b}static computeShapeHelper(r,t,u,l,f,d,y,b){if(r)for(let C=0;C<t.length-2;C++)u.push(1);else for(let C=0;C<t.length-2;C++)u.push(e.adjustPadAndReturnShape(t[C+2],l[C],f[C],d[C],y,C,C+t.length-2,b))}static adjustPadAndReturnShape(r,t,u,l,f,d,y,b){let C=u*(l-1)+1;if(b&&b!=="NOTSET")switch(b){case"VALID":return f[d]=0,f[y]=0,Math.floor((r-C)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(u!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let A=((r+t-1)/t-1)*t+l-r;return f[d]=Math.floor(b==="SAME_LOWER"?(A+1)/2:A/2),f[y]=A-f[d],Math.floor((r+A-l)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+f[d]+f[y]-C)/t+1)}},Yi=class{static getShapeOfGemmResult(r,t,u,l,f){if(r.length!==2||u.length!==2)throw new Error("shape need to be of size 2");let d,y,b;t?(d=r[1],y=r[0]):(d=r[0],y=r[1]);let C=-1;if(l?(b=u[0],C=1):(b=u[1],C=0),u[C]!==y)throw new Error("dimension mismatch");if(d<=0||b<=0||y<=0)throw new Error("invalid shape specified");if(f&&!Vt.isValidBroadcast(f,[d,b]))throw new Error("gemm: invalid bias shape for broadcast");return[d,b,y]}},Zi=-34028234663852886e22,Xi=34028234663852886e22});var Qi,No,He,$t,de,Ye,mt,Dt,Ct,_e,Wo,Z,se,eo,Vo,Xs,Lr,Oe=le(()=>{"use strict";Se();Re();Qi=64,No=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(e){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];default:throw new Error(`Unknown data type: ${e}`)}},He=(e,r=1)=>{let t=No(e,r);return typeof t=="string"?t:t[0]},$t=(e,r=1)=>{let t=No(e,r);return typeof t=="string"?t:t[1]},de=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:X.computeStrides(t)})}),r},Ye=e=>e%4===0?4:e%2===0?2:1,mt=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,Dt=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}f(${t})`,Ct=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,_e=(e,r,t,u)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?u==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:u==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,Wo=(e,r,t,u,l)=>{let f=typeof t=="number",d=f?t:t.length,y=[...new Array(d).keys()],b=d<2?"u32":d<=4?`vec${d}<u32>`:`array<u32, ${d}>`,C=No(r,l),m=typeof C=="string"?C:C[1],A=typeof C=="string"?C:C[0],E={indices:b,value:m,storage:A,tensor:r},R=oe=>typeof oe=="string"?oe:`${oe}u`,P={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},k=f?"uniforms.":"",U=`${k}${e}_shape`,V=`${k}${e}_strides`,B="";for(let oe=0;oe<d-1;oe++)B+=`\n    let dim${oe} = current / ${_e(V,oe,d)};\n    let rest${oe} = current % ${_e(V,oe,d)};\n    indices[${oe}] = dim${oe};\n    current = rest${oe};\n    `;B+=`indices[${d-1}] = current;`;let W=d<2?"":`\n  fn o2i_${e}(offset: u32) -> ${E.indices} {\n    var indices: ${E.indices};\n    var current = offset;\n    ${B}\n    return indices;\n  }`,j=oe=>(P.offsetToIndices=!0,d<2?oe:`o2i_${e}(${oe})`),q=[];if(d>=2)for(let oe=d-1;oe>=0;oe--)q.push(`${_e(V,oe,d)} * (indices[${oe}])`);let Q=d<2?"":`\n  fn i2o_${e}(indices: ${E.indices}) -> u32 {\n    return ${q.join("+")};\n  }`,te=oe=>(P.indicesToOffset=!0,d<2?oe:`i2o_${e}(${oe})`),ne=(...oe)=>d===0?"0u":`${E.indices}(${oe.map(R).join(",")})`,J=(oe,ye)=>d<2?`${oe}`:`${_e(oe,ye,d)}`,ie=(oe,ye,Me)=>d<2?`${oe}=${Me};`:`${_e(oe,ye,d)}=${Me};`,Ae={},De=(oe,ye)=>{P.broadcastedIndicesToOffset=!0;let Me=`${ye.name}broadcastedIndicesTo${e}Offset`;if(Me in Ae)return`${Me}(${oe})`;let ot=[];for(let ft=d-1;ft>=0;ft--){let ut=ye.indicesGet("outputIndices",ft+ye.rank-d);ot.push(`${J(V,ft)} * (${ut} % ${J(U,ft)})`)}return Ae[Me]=`fn ${Me}(outputIndices: ${ye.type.indices}) -> u32 {\n             return ${ot.length>0?ot.join("+"):"0u"};\n           }`,`${Me}(${oe})`},Fe=(oe,ye)=>(()=>{if(E.storage===E.value)return`${e}[${oe}]=${ye};`;if(E.storage==="vec2<u32>"&&E.value==="i32")return`${e}[${oe}]=vec2<u32>(u32(${ye}), select(0u, 0xFFFFFFFFu, ${ye} < 0));`;if(E.storage==="vec2<u32>"&&E.value==="u32")return`${e}[${oe}]=vec2<u32>(u32(${ye}), 0u);`;if(E.storage==="u32"&&E.value==="vec4<bool>")return`${e}[${oe}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${ye}));`;throw new Error(`not supported combination of storage type ${E.storage} and value type ${E.value} yet`)})(),Ne=oe=>(()=>{if(E.storage===E.value)return`${e}[${oe}]`;if(E.storage==="vec2<u32>"&&E.value==="i32")return`i32(${e}[${oe}].x)`;if(E.storage==="vec2<u32>"&&E.value==="u32")return`u32(${e}[${oe}].x)`;if(E.storage==="u32"&&E.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${oe}] & 0xFFu), bool(${e}[${oe}] & 0xFF00u), bool(${e}[${oe}] & 0xFF0000u), bool(${e}[${oe}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${E.storage} and value type ${E.value} yet`)})(),Be=d<2?"":`\n  fn get_${e}ByIndices(indices: ${E.indices}) -> ${m} {\n    return ${Ne(`i2o_${e}(indices)`)};\n  }`,pe=d<2?"":(()=>{let oe=y.map(Me=>`d${Me}: u32`).join(", "),ye=y.map(Me=>`d${Me}`).join(", ");return`\n  fn get_${e}(${oe}) -> ${m} {\n    return get_${e}ByIndices(${ne(ye)});\n  }`})(),We=(...oe)=>{if(oe.length!==d)throw new Error(`indices length must be ${d}`);let ye=oe.map(R).join(",");return d===0?Ne("0u"):d===1?Ne(ye[0]):(P.get=!0,P.getByIndices=!0,P.indicesToOffset=!0,`get_${e}(${ye})`)},Ie=oe=>d<2?Ne(oe):(P.getByIndices=!0,P.indicesToOffset=!0,`get_${e}ByIndices(${oe})`),$e=d<2?"":`\n  fn set_${e}ByIndices(indices: ${E.indices}, value: ${m}) {\n    ${Fe(`i2o_${e}(indices)`,"value")}\n  }`,ge=d<2?"":(()=>{let oe=y.map(Me=>`d${Me}: u32`).join(", "),ye=y.map(Me=>`d${Me}`).join(", ");return`\n  fn set_${e}(${oe}, value: ${m}) {\n    set_${e}ByIndices(${ne(ye)}, value);\n  }`})();return{impl:()=>{let oe=[],ye=!1;return P.offsetToIndices&&(oe.push(W),ye=!0),P.indicesToOffset&&(oe.push(Q),ye=!0),P.broadcastedIndicesToOffset&&(Object.values(Ae).forEach(Me=>oe.push(Me)),ye=!0),P.set&&(oe.push(ge),ye=!0),P.setByIndices&&(oe.push($e),ye=!0),P.get&&(oe.push(pe),ye=!0),P.getByIndices&&(oe.push(Be),ye=!0),!f&&ye&&oe.unshift(`const ${U} = ${E.indices}(${t.join(",")});`,`const ${V} = ${E.indices}(${X.computeStrides(t).join(",")});`),oe.join(`\n`)},type:E,offsetToIndices:j,indicesToOffset:te,broadcastedIndicesToOffset:De,indices:ne,indicesGet:J,indicesSet:ie,set:(...oe)=>{if(oe.length!==d+1)throw new Error(`indices length must be ${d}`);let ye=oe[d];if(typeof ye!="string")throw new Error("value must be string");let Me=oe.slice(0,d).map(R).join(",");return d===0?Fe("0u",ye):d===1?Fe(Me[0],ye):(P.set=!0,P.setByIndices=!0,P.indicesToOffset=!0,`set_${e}(${Me}, ${ye})`)},setByOffset:Fe,setByIndices:(oe,ye)=>d<2?Fe(oe,ye):(P.setByIndices=!0,P.indicesToOffset=!0,`set_${e}ByIndices(${oe}, ${ye});`),get:We,getByOffset:Ne,getByIndices:Ie,usage:u,name:e,strides:V,shape:U,rank:d}},Z=(e,r,t,u=1)=>Wo(e,r,t,"input",u),se=(e,r,t,u=1)=>Wo(e,r,t,"output",u),eo=(e,r,t,u=1)=>Wo(e,r,t,"internal",u),Vo=class{constructor(r){this.normalizedDispatchGroup=r;this.internalVariables=[];this.variables=[];this.uniforms=[];this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(r){return`if (global_idx >= ${typeof r=="number"?`${r}u`:r}) { return; }`}mainStart(r=Qi){let t=typeof r=="number"?r:r[0],u=typeof r=="number"?1:r[1],l=typeof r=="number"?1:r[2],f=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,d=f?`@builtin(global_invocation_id) global_id : vec3<u32>,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(local_invocation_id) local_id : vec3<u32>,\n    @builtin(local_invocation_index) local_idx : u32,\n    @builtin(workgroup_id) workgroup_id : vec3<u32>,\n    @builtin(num_workgroups) num_workgroups : vec3<u32>`,y=f?"let global_idx = global_id.x; let local_idx = local_id.x;":`let global_idx = (workgroup_id.z * num_workgroups[0] * num_workgroups[1] +\n          workgroup_id.y * num_workgroups[0] + workgroup_id.x) * ${t*u*l}u + local_idx;`;return`@compute @workgroup_size(${t}, ${u}, ${l})\n  fn main(${d}) {\n    ${y}\n  `}appendVariableUniforms(r){r.rank!==0&&(r.shape.startsWith("uniforms.")&&this.uniforms.push({name:r.shape.replace("uniforms.",""),type:"u32",length:r.rank}),r.strides.startsWith("uniforms.")&&this.uniforms.push({name:r.strides.replace("uniforms.",""),type:"u32",length:r.rank}))}declareVariable(r,t){if(r.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(r),this.appendVariableUniforms(r);let u=r.usage==="input"?"read":"read_write",l=r.type.storage;return`@group(0) @binding(${t}) var<storage, ${u}> ${r.name}: array<${l}>;`}declareVariables(...r){return r.map(t=>this.declareVariable(t,this.variableIndex++)).join(`\n`)}registerInternalVariable(r){if(r.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(r),this.appendVariableUniforms(r)}registerInternalVariables(...r){return r.forEach(t=>this.registerInternalVariable(t)),this}registerUniform(r,t,u=1){return this.uniforms.push({name:r,type:t,length:u}),this}registerUniforms(r){return this.uniforms=this.uniforms.concat(r),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let r=[];for(let{name:t,type:u,length:l}of this.uniforms)if(l&&l>4)u==="f16"?r.push(`@align(16) ${t}:array<mat2x4<${u}>, ${Math.ceil(l/8)}>`):r.push(`${t}:array<vec4<${u}>, ${Math.ceil(l/4)}>`);else{let f=l==null||l===1?u:`vec${l}<${u}>`;r.push(`${t}:${f}`)}return`\n      struct Uniforms { ${r.join(", ")} };\n      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(r=>r.impl()).join(`\n`)+this.internalVariables.map(r=>r.impl()).join(`\n`)}},Xs=e=>new Vo(e),Lr=(e,r)=>{let t=e.length,u=[];for(let l=0;l<t;l++){let f=t-1-l,d=e[f]||1;(r[r.length-1-l]||1)>1&&d===1&&u.unshift(f)}return u}});var nh,Qs,ih,oh,kt,eu,tu,Fr=le(()=>{"use strict";Se();Re();ct();Oe();nh=e=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.")},Qs=(e,r)=>r&&r.length!==e?[...new Array(e).keys()].reverse():r,ih=(e,r)=>X.sortBasedOnPerm(e,Qs(e.length,r)),oh=(e,r,t,u)=>{let l=[];l.push(`fn perm(i: ${u.type.indices}) -> ${t.type.indices} {\n    var a: ${t.type.indices};`);for(let f=0;f<r;++f)l.push(t.indicesSet("a",e[f],`i[${f}]`));return l.push("return a;}"),l.join(`\n`)},kt=(e,r)=>{let t=e.dataType,u=e.dims.length,l=Qs(u,r),f=ih(e.dims,l),d=se("output",t,f.length),y=Z("a",t,u),b=C=>`\n  ${C.registerUniform("output_size","u32").declareVariables(y,d)}\n\n  ${oh(l,u,y,d)}\n\n  ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let indices = ${d.offsetToIndices("global_idx")};\n    let aIndices = perm(indices);\n\n    ${d.setByOffset("global_idx",y.getByIndices("aIndices"))}\n  }`;return{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:C=>{let m=X.size(f);return{outputs:[{dims:f,dataType:C[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:[{type:12,data:m},...de(C[0].dims,f)]}},getShaderSource:b}},eu=(e,r)=>{nh(e.inputs),e.compute(kt(e.inputs[0],r.perm))},tu=e=>ke({perm:e.perm})});var ah,sh,uh,lh,dh,ch,fh,ph,mh,hh,Nt,ru,nu,iu,ou,au,su,uu,lu,du,cu,fu=le(()=>{"use strict";Se();Re();Oe();to();Fr();ah={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},sh={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},uh={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},lh={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},dh=(e,r)=>{let t=[];for(let u=r-e;u<r;++u)t.push(u);return t},ch=(e,r)=>{let t=[],u=e.length;for(let f=0;f<u;f++)r.indexOf(f)===-1&&t.push(e[f]);let l=r.map(f=>e[f]);return[t,l]},fh=(e,r)=>{let t=e.length+r.length,u=[],l=0;for(let f=0;f<t;f++)r.indexOf(f)===-1?u.push(e[l++]):u.push(1);return u},ph=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},mh=(e,r)=>{let t=[];if(!ph(e,r)){for(let u=0;u<r;++u)e.indexOf(u)===-1&&t.push(u);e.forEach(u=>t.push(u))}return t},hh=(e,r,t,u,l,f,d)=>{let y=t[0].dims,b=X.size(f),C=X.size(d),m=Z("_A",t[0].dataType,y),A=se("output",l,f),E=32,R=`\n          var<workgroup> aBestValues : array<f32, ${E}>;\n       `;return{name:e,shaderCache:r,getShaderSource:k=>`\n        ${k.registerUniform("reduceSize","u32").declareVariables(m,A)}\n        ${R}\n        fn DIV_CEIL(a : u32, b : u32) -> u32 {\n          return ((a - 1u) / b + 1u);\n         }\n         ${k.mainStart(E)}\n\n          let outputIndex = global_idx / ${E};\n          let offset = outputIndex * uniforms.reduceSize;\n\n          var bestValue = f32(${uh[u]});\n          let Length = uniforms.reduceSize;\n          for (var k = local_idx; k < Length; k = k + ${E}) {\n           let candidate = f32(${m.getByOffset("offset + k")});\n           bestValue = ${ah[u]};\n          }\n          aBestValues[local_idx] = bestValue;\n          workgroupBarrier();\n\n         var reduceSize = min(Length, ${E}u);\n         for (var currentSize = reduceSize / 2u; reduceSize > 1u;\n             currentSize = reduceSize / 2u) {\n           let interval = DIV_CEIL(reduceSize, 2u);\n           if (local_idx < currentSize) {\n            let candidate = aBestValues[local_idx + interval];\n            bestValue = ${sh[u]};\n            aBestValues[local_idx] = bestValue;\n           }\n           reduceSize = interval;\n           workgroupBarrier();\n         }\n\n         if (local_idx == 0u) {\n          ${A.setByOffset("outputIndex",`${u==="mean"?`${A.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${A.type.storage}(${lh[u]})`}`)};\n         }\n        }`,getRunData:()=>({outputs:[{dims:f,dataType:l}],dispatchGroup:{x:b},programUniforms:[{type:12,data:C}]})}},Nt=(e,r,t,u)=>{let l=e.inputs.length===1?t:Go(e.inputs,t),f=l.axes;f.length===0&&!l.noopWithEmptyAxes&&(f=e.inputs[0].dims.map((R,P)=>P));let d=X.normalizeAxes(f,e.inputs[0].dims.length),y=d,b=e.inputs[0],C=mh(y,e.inputs[0].dims.length);C.length>0&&(b=e.compute(kt(e.inputs[0],C),{inputs:[0],outputs:[-1]})[0],y=dh(y.length,b.dims.length));let[m,A]=ch(b.dims,y),E=m;l.keepDims&&(E=fh(m,d)),e.compute(hh(r,{hint:l.cacheKey,inputDependencies:["type"]},[b],u,e.inputs[0].dataType,E,A),{inputs:[b]})},ru=(e,r)=>{Nt(e,"ReduceMeanShared",r,"mean")},nu=(e,r)=>{Nt(e,"ReduceL1Shared",r,"l1")},iu=(e,r)=>{Nt(e,"ReduceL2Shared",r,"l2")},ou=(e,r)=>{Nt(e,"ReduceLogSumExpShared",r,"logSumExp")},au=(e,r)=>{Nt(e,"ReduceMaxShared",r,"max")},su=(e,r)=>{Nt(e,"ReduceMinShared",r,"min")},uu=(e,r)=>{Nt(e,"ReduceProdShared",r,"prod")},lu=(e,r)=>{Nt(e,"ReduceSumShared",r,"sum")},du=(e,r)=>{Nt(e,"ReduceSumSquareShared",r,"sumSquare")},cu=(e,r)=>{Nt(e,"ReduceLogSumShared",r,"logSum")}});var Wt,gh,ro,Go,Gt,yh,bh,vh,wh,_h,$h,Ch,Sh,xh,Ah,Ht,pu,mu,hu,gu,yu,bu,vu,wu,_u,$u,to=le(()=>{"use strict";Se();Re();ct();Oe();fu();Wt=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},gh=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],ro=(e,r,t,u,l,f,d=!1,y=!1)=>{let b=[],C=t[0].dims,m=C.length,A=X.normalizeAxes(l,m),E=!y&&A.length===0;C.forEach((U,V)=>{E||A.indexOf(V)>=0?d&&b.push(1):b.push(U)});let R=b.length,P=X.size(b);return{name:e,shaderCache:r,getShaderSource:U=>{let V=[],B=Z("_A",t[0].dataType,m),W=se("output",f,R),j=u(B,W,A),q=j[2];for(let Q=0,te=0;Q<m;Q++)E||A.indexOf(Q)>=0?(d&&te++,q=`for(var j${Q}: u32 = 0; j${Q} < ${C[Q]}; j${Q}++) {\n                  ${j[2].includes("last_index")?`let last_index = j${Q};`:""}\n                  ${B.indicesSet("input_indices",Q,`j${Q}`)}\n                  ${q}\n                }`):(V.push(`${B.indicesSet("input_indices",Q,W.indicesGet("output_indices",te))};`),te++);return`\n\n        ${U.registerUniform("output_size","u32").declareVariables(B,W)}\n\n        ${U.mainStart()}\n          ${U.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var input_indices: ${B.type.indices};\n          let output_indices = ${W.offsetToIndices("global_idx")};\n\n          ${V.join(`\n`)}\n          ${j[0]}       // init ops for reduce max/min\n          ${j[1]}\n          ${q}\n          ${j[3]}\n          ${j.length===4?W.setByOffset("global_idx","value"):j.slice(4).join(`\n`)}\n        }`},getRunData:()=>({outputs:[{dims:b,dataType:f}],dispatchGroup:{x:Math.ceil(P/64)},programUniforms:[{type:12,data:P},...de(C,b)]})}},Go=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(u=>t.push(Number(u))),ke({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},Gt=(e,r,t,u)=>{let l=e.inputs,f=l.length===1?t:Go(l,t);e.compute(ro(r,{hint:f.cacheKey,inputDependencies:["rank"]},[l[0]],f.noopWithEmptyAxes&&f.axes.length===0?gh:u,f.axes,l[0].dataType,f.keepDims,f.noopWithEmptyAxes),{inputs:[0]})},yh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceLogSum",r,(u,l)=>[`var value = ${l.type.storage}(0);`,"",`value += ${u.getByIndices("input_indices")};`,"value = log(value);"])},bh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceL1",r,(u,l)=>[`var value = ${l.type.storage}(0);`,"",`value += abs(${u.getByIndices("input_indices")});`,""])},vh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceL2",r,(u,l)=>[`var t = ${l.type.value}(0); var value = ${l.type.value}(0);`,"",`t = ${u.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},wh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceLogSumExp",r,(u,l)=>[`var value = ${l.type.storage}(0);`,"",`value += exp(${u.getByIndices("input_indices")});`,"value = log(value);"])},_h=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceMax",r,(u,l,f)=>{let d=[];for(let y=0;y<u.rank;y++)(f.indexOf(y)>=0||f.length===0)&&d.push(u.indicesSet("input_indices",y,0));return[`${d.join(`\n`)}`,`var value = ${u.getByIndices("input_indices")};`,`value = max(value, ${u.getByIndices("input_indices")});`,""]})},$h=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceMean",r,(u,l,f)=>{let d=1;for(let y=0;y<u.rank;y++)(f.indexOf(y)>=0||f.length===0)&&(d*=e.inputs[0].dims[y]);return["var sum = f32(0);","",`sum += f32(${u.getByIndices("input_indices")});`,`let value = ${l.type.value}(sum / ${d});`]})},Ch=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceMin",r,(u,l,f)=>{let d=[];for(let y=0;y<u.rank;y++)(f.indexOf(y)>=0||f.length===0)&&d.push(`input_indices[${y}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${u.getByIndices("input_indices")};`,`value = min(value, ${u.getByIndices("input_indices")});`,""]})},Sh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceProd",r,(u,l)=>[`var value = ${l.type.storage}(1);`,"",`value *= ${u.getByIndices("input_indices")};`,""])},xh=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceSum",r,(u,l)=>[`var value = ${l.type.storage}(0);`,"",`value += ${u.getByIndices("input_indices")};`,""])},Ah=(e,r)=>{Wt(e.inputs),Gt(e,"ReduceSumSquare",r,(u,l)=>[`var t = ${l.type.value}(0); var value = ${l.type.value}(0);`,"",`t = ${u.getByIndices("input_indices")}; value += t * t;`,""])},Ht=(e,r,t)=>{if(r.length===0)return t;let u=1,l=1;for(let f=0;f<r.length;f++)r.indexOf(f)===-1?u*=e[f]:l*=e[f];return l<32&&u>1024},pu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?$h(e,r):ru(e,r)},mu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?bh(e,r):nu(e,r)},hu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?vh(e,r):iu(e,r)},gu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?wh(e,r):ou(e,r)},yu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?_h(e,r):au(e,r)},bu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Ch(e,r):su(e,r)},vu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Sh(e,r):uu(e,r)},wu=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?xh(e,r):lu(e,r)},_u=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Ah(e,r):du(e,r)},$u=(e,r)=>{Ht(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?yh(e,r):cu(e,r)}});var Cu,Su,xu,Ho,Au=le(()=>{"use strict";Se();ct();to();Cu=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Su=(e,r)=>{Cu(e.inputs);let t=(u,l,f)=>{let d=[];for(let y=0;y<u.rank;y++)(f.indexOf(y)>=0||f.length===0)&&d.push(`input_indices[${y}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${u.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${u.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {\n         value = ${u.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",l.setByOffset("global_idx","best_index")]};e.compute(ro("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},xu=(e,r)=>{Cu(e.inputs);let t=(u,l,f)=>{let d=[];for(let y=0;y<u.rank;y++)(f.indexOf(y)>=0||f.length===0)&&d.push(`input_indices[${y}] = 0;`);return[`${d.join(`\n`)}`,`var value = ${u.getByIndices("input_indices")};\nvar best_index : i32 = 0;`,`if (${u.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {\n         value = ${u.getByIndices("input_indices")};\n         best_index = i32(last_index);\n       }`,"",l.setByOffset("global_idx","best_index")]};e.compute(ro("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},Ho=e=>ke(e)});var Ih,Th,Eh,Ph,no,Oh,Iu,Lo=le(()=>{"use strict";Se();Ki();Oe();Ih=(e,r)=>{let t=e[0],u=e[1],l=e[2],f=e[3],d=e[4],y=e[5];if(d&&y)throw new Error("Attention cannot have both past and relative_position_bias");if(t.dims.length!==3)throw new Error(\'Input "input" must have 3 dimensions\');let b=t.dims[0],C=t.dims[1],m=t.dims[2];if(l.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimensions\');if(u.dims.length!==2)throw new Error(\'Input "weights" is expected to have 2 dimensions\');if(u.dims[0]!==m)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(l.dims[0]!==u.dims[1])throw new Error(\'Input "bias" dimension 0 should have same length as dimension 1 of input "weights"\');let A=l.dims[0]/3,E=A,R=E;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let W of r.qkvHiddenSizes)if(W%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");A=r.qkvHiddenSizes[0],E=r.qkvHiddenSizes[1],R=r.qkvHiddenSizes[2]}let P=C;if(A!==E)throw new Error("qkv_hidden_sizes first element should be same as the second");if(l.dims[0]!==A+E+R)throw new Error(\'Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes\');let k=0;if(d){if(E!==R)throw new Error(\'Input "past" expect k_hidden_size == v_hidden_size\');if(d.dims.length!==5)throw new Error(\'Input "past" must have 5 dimensions\');if(d.dims[0]!==2)throw new Error(\'Input "past" first dimension must be 2\');if(d.dims[1]!==b)throw new Error(\'Input "past" second dimension must be batch_size\');if(d.dims[2]!==r.numHeads)throw new Error(\'Input "past" third dimension must be num_heads\');if(d.dims[4]!==E/r.numHeads)throw new Error(\'Input "past" fifth dimension must be k_hidden_size / num_heads\');r.pastPresentShareBuffer||(k=d.dims[3])}let U=P+k,V=-1,B=0;if(f)throw new Error("Mask not supported");if(d)throw new Error("past is not supported");if(y)throw new Error("relativePositionBias is not supported");return{batchSize:b,sequenceLength:C,pastSequenceLength:k,kvSequenceLength:P,totalSequenceLength:U,maxSequenceLength:V,inputHiddenSize:m,hiddenSize:A,vHiddenSize:R,headSize:Math.floor(A/r.numHeads),vHeadSize:Math.floor(R/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:B,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},Th=(e,r,t,u)=>{let l=Ye(u),f=64,d=u/l;d<f?f=1:d/8<64&&(f=Math.ceil(d/8));let y=Math.ceil(u/l/f),b=[{type:r.dataType,data:1/u},{type:12,data:d},{type:12,data:y}],C=He(r.dataType,l),m=A=>{let E=se("x",r.dataType,r.dims,l),R="thread_max_vector";l===2?R="max(thread_max_vector.x, thread_max_vector.y)":l===4&&(R="max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))");let P=$t(r.dataType),k=[{name:"d_inv",type:P},{name:"d_comp",type:"u32"},{name:"elements_per_wg",type:"u32"}];return`\n  var<workgroup> wgMax: array<f32, ${f}>;\n  var<workgroup> wgSum: array<f32, ${f}>;\n  ${A.registerUniforms(k).declareVariables(E)}\n  ${A.mainStart([f,1,1])}\n    let localOffset = local_idx * uniforms.elements_per_wg;\n    let offset: u32 = workgroup_id.x * uniforms.d_comp + localOffset;\n\n    var thread_max_vector = ${mt("f32",l,"-3.402823e+38f")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      thread_max_vector = max(${Dt(P,l,"x[offset + i]")}, thread_max_vector);\n    }\n    wgMax[local_idx] = ${R};\n    workgroupBarrier();\n\n    var maxValue = -3.402823e+38f;\n    for (var i = 0u; i < ${f}; i++) {\n      maxValue = max(wgMax[i], maxValue);\n    }\n\n    var sumVector = ${mt("f32",l,"0")};\n    for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n      sumVector += exp(${Dt(P,l,"x[offset + i]")} - maxValue);\n    }\n    wgSum[local_idx] = ${Ct("sumVector",l)};\n    workgroupBarrier();\n\n    var sum: f32 = 0;\n    for (var i = 0u; i < ${f}; i++) {\n      sum += wgSum[i];\n    }\n\n    if (sum == 0) {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        x[offset + i] = ${mt(P,l,"uniforms.d_inv")};\n      }\n    } else {\n      for (var i: u32 = 0; i < uniforms.elements_per_wg && i + localOffset < uniforms.d_comp; i++) {\n        let f32input = ${Dt(P,l,"x[offset + i]")};\n        x[offset + i] = ${E.type.value}(exp(f32input - maxValue) / sum);\n      }\n    }\n  }`};e.compute({name:"AttentionProbsSoftmax",shaderCache:{hint:`${f};${C};${l}`},getShaderSource:m,getRunData:()=>({outputs:[],dispatchGroup:{x:t},programUniforms:b})},{inputs:[r],outputs:[]})},Eh=(e,r,t,u,l,f)=>{let d=[l.batchSize,l.numHeads,l.sequenceLength,l.kvSequenceLength+l.pastSequenceLength],y=f.scale===0?1/Math.sqrt(l.headSize):f.scale,b=Ye(l.headSize),C=l.headSize/b,m=12,A={x:Math.ceil(l.totalSequenceLength/m),y:Math.ceil(l.sequenceLength/m),z:l.batchSize*l.numHeads},E=[{type:12,data:l.sequenceLength},{type:12,data:C},{type:12,data:l.totalSequenceLength},{type:12,data:l.kvSequenceLength},{type:r.dataType,data:y}],R=[r,t],P=U=>{let V=Z("q",r.dataType,r.dims,b),B=Z("key",t.dataType,t.dims,b),W=se("output",r.dataType,d),j=He(r.dataType),q=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"alpha",type:j}];return`\n  const beta: ${j} = 1.0;\n  const TILE_SIZE = ${m}u;\n\n  var<workgroup> tileQ: array<${V.type.storage}, ${m*m}>;\n  var<workgroup> tileK: array<${V.type.storage}, ${m*m}>;\n  ${U.registerUniforms(q).declareVariables(V,B,W)}\n  ${U.mainStart([m,m,1])}\n    // x holds the N and y holds the M\n    let headIdx = workgroup_id.z;\n    let m = workgroup_id.y * TILE_SIZE;\n    let n = workgroup_id.x * TILE_SIZE;\n    let lm = m + local_id.y;\n    let ln = n + local_id.x;\n\n    let qOffset = uniforms.M * uniforms.K * headIdx + m * uniforms.K;\n    let kOffset = uniforms.kv_sequence_length * uniforms.K * headIdx + n * uniforms.K;\n\n    var value = ${mt(j,b)};\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m + local_id.y < uniforms.M && w + local_id.x < uniforms.K) {\n        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {\n        tileK[TILE_SIZE * local_id.y + local_id.x] = key[kOffset + local_id.y * uniforms.K + w + local_id.x];\n      }\n      workgroupBarrier();\n\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = headIdx * uniforms.M * uniforms.N;\n    if (lm < uniforms.M && ln < uniforms.N) {\n      let outputIdx = headOffset + lm * uniforms.N + ln;\n      output[outputIdx] = ${Ct("value",b)} * uniforms.alpha;\n    }\n  }`},k=e.compute({name:"AttentionProbs",shaderCache:{hint:`${b}`,inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:d,dataType:r.dataType,gpuDataType:0}],dispatchGroup:A,programUniforms:E}),getShaderSource:P},{inputs:R,outputs:[-1]})[0];return Th(e,k,l.batchSize*l.numHeads*l.sequenceLength,l.totalSequenceLength),k},Ph=(e,r,t,u)=>{let l=[u.batchSize,u.sequenceLength,u.vHiddenSize],f=12,d={x:Math.ceil(u.vHeadSize/f),y:Math.ceil(u.sequenceLength/f),z:u.batchSize*u.numHeads},y=[{type:12,data:u.sequenceLength},{type:12,data:u.totalSequenceLength},{type:12,data:u.vHeadSize},{type:12,data:u.numHeads},{type:12,data:u.vHiddenSize}],b=C=>{let m=Z("probs",r.dataType,r.dims),A=Z("v",t.dataType,t.dims),E=se("output",r.dataType,l),R=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"v_hidden_size",type:"u32"}];return`\n  const TILE_SIZE = ${f}u;\n  var<workgroup> tileQ: array<${m.type.value}, ${f*f}>;\n  var<workgroup> tileK: array<${m.type.value}, ${f*f}>;\n  ${C.registerUniforms(R).declareVariables(m,A,E)}\n  ${C.mainStart([f,f,1])}\n   let headIdx = workgroup_id.z;\n   let m = workgroup_id.y * TILE_SIZE + local_id.y;\n   let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n   let offsetA = headIdx * (uniforms.M * uniforms.K) + m * uniforms.K;\n   let offsetB = headIdx * (uniforms.N * uniforms.K) + n;\n\n   var value = ${m.type.storage}(0);\n   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n     if (m < uniforms.M && w + local_id.x < uniforms.K) {\n       tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];\n     }\n     if (n < uniforms.N && w + local_id.y < uniforms.K) {\n       tileK[TILE_SIZE * local_id.y + local_id.x] = v[offsetB + (w + local_id.y) * uniforms.N];\n     }\n     workgroupBarrier();\n     for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n       value += tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * k + local_id.x];\n     }\n     workgroupBarrier();\n   }\n\n   // we need to transpose output from BNSH_v to BSND_v\n   let batchIdx = workgroup_id.z / uniforms.num_heads;\n   let currentBatchHeadNumber = workgroup_id.z % uniforms.num_heads;\n   let headOffset = (batchIdx * uniforms.M * uniforms.num_heads + currentBatchHeadNumber) * uniforms.N;\n   if (m < uniforms.M && n < uniforms.N) {\n     let outputIdx = batchIdx * uniforms.M *uniforms.v_hidden_size + m * uniforms.v_hidden_size\n       + currentBatchHeadNumber * uniforms.N + n;\n     output[outputIdx] = value;\n   }\n  }`};return e.compute({name:"AttentionScore",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:l,dataType:r.dataType,gpuDataType:0}],dispatchGroup:d,programUniforms:y}),getShaderSource:b},{inputs:[r,t],outputs:[0]})[0]},no=(e,r,t,u,l,f,d,y,b,C,m)=>{let A=Eh(e,r,t,b,C,m);Ph(e,A,u,C)},Oh=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],u=r.sequenceLength,l=r.inputHiddenSize,f=r.headSize,d=12,y={x:Math.ceil(r.headSize/d),y:Math.ceil(r.sequenceLength/d),z:r.batchSize*r.numHeads},b=[e.inputs[0],e.inputs[1],e.inputs[2]],C=[{type:12,data:u},{type:12,data:l},{type:12,data:f},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],m=A=>{let E=se("output_q",b[0].dataType,t),R=se("output_k",b[0].dataType,t),P=se("output_v",b[0].dataType,t),k=Z("input",b[0].dataType,b[0].dims),U=Z("weight",b[1].dataType,b[1].dims),V=Z("bias",b[2].dataType,b[2].dims),B=k.type.storage,W=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`\n  const TILE_SIZE = ${d}u;\n  var<workgroup> tileInput: array<${B}, ${d*d}>;\n  var<workgroup> tileWeightQ: array<${B}, ${d*d}>;\n  var<workgroup> tileWeightK: array<${B}, ${d*d}>;\n  var<workgroup> tileWeightV: array<${B}, ${d*d}>;\n  ${A.registerUniforms(W).declareVariables(k,U,V,E,R,P)}\n  ${A.mainStart([d,d,1])}\n    let batchIndex = workgroup_id.z / uniforms.num_heads;\n    let headNumber = workgroup_id.z % uniforms.num_heads;\n    let m = workgroup_id.y * TILE_SIZE + local_id.y;\n    let n = workgroup_id.x * TILE_SIZE + local_id.x;\n\n    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;\n    let biasOffsetQ = headNumber * uniforms.head_size;\n    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;\n    let biasOffsetV = uniforms.hidden_size + biasOffsetK;\n\n    var valueQ = ${B}(0);\n    var valueK = ${B}(0);\n    var valueV = ${B}(0);\n    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {\n      if (m < uniforms.M && w + local_id.x < uniforms.K) {\n        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];\n      }\n      if (n < uniforms.N && w + local_id.y < uniforms.K) {\n        let offset = n + (w + local_id.y) * uniforms.ldb;\n        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];\n        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];\n        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];\n      }\n      workgroupBarrier();\n      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {\n        let inputTileOffset = TILE_SIZE * local_id.y + k;\n        let weightTileOffset = TILE_SIZE * k + local_id.x;\n        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];\n        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];\n        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];\n      }\n\n      workgroupBarrier();\n    }\n\n    let headOffset = (m * uniforms.N + n) % uniforms.head_size;\n    valueQ += bias[headOffset + biasOffsetQ];\n    valueK += bias[headOffset + biasOffsetK];\n    valueV += bias[headOffset + biasOffsetV];\n\n    let offset = workgroup_id.z * uniforms.M * uniforms.N;\n    if (m < uniforms.M && n < uniforms.N) {\n      let outputIdx = offset + m * uniforms.N + n;\n      output_q[outputIdx] = valueQ;\n      output_k[outputIdx] = valueK;\n      output_v[outputIdx] = valueV;\n    }\n  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:y,programUniforms:C}),getShaderSource:m},{inputs:b,outputs:[-1,-1,-1]})},Iu=(e,r)=>{let t=Ih(e.inputs,r),[u,l,f]=Oh(e,t);return no(e,u,l,f,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t,r)}});var kh,Rh,Bh,Tu,Eu=le(()=>{"use strict";Hr();Se();Re();ct();Oe();kh=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(u,l,f)=>{let d=l.length;if(d!==u.length)throw new Error(`${f}: num dimensions != ${d}`);l.forEach((y,b)=>{if(y!==u[b])throw new Error(`${f}: dim[${b}] do not match`)})};if(e[0].dims.length>1){let u=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,u,"Invalid input scale"),t(e[2].dims,u,"Invalid input B"),t(e[3].dims,u,"Invalid input mean"),t(e[4].dims,u,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},Rh=(e,r)=>{let{epsilon:t,spatial:u,format:l}=r,f=e[0].dims,d=u?Ye(f[f.length-1]):1,y=l==="NHWC"&&f.length>1?d:1,b=X.size(f)/d,C=u,m=C?f.length:f,A=Z("x",e[0].dataType,e[0].dims,d),E=Z("scale",e[1].dataType,e[1].dims,y),R=Z("bias",e[2].dataType,e[2].dims,y),P=Z("inputMean",e[3].dataType,e[3].dims,y),k=Z("inputVar",e[4].dataType,e[4].dims,y),U=se("y",e[0].dataType,m,d),V=()=>{let W="";if(u)W=`let cOffset = ${f.length===1?"0u":l==="NHWC"?`outputIndices[${f.length-1}] / ${d}`:"outputIndices[1]"};`;else if(l==="NCHW")W=`\n            ${U.indicesSet("outputIndices","0","0")}\n            let cOffset = ${U.indicesToOffset("outputIndices")};`;else{W=`var cIndices = ${E.type.indices}(0);\n                       cIndices[0] = outputIndices[${f.length-1}];`;for(let j=1;j<E.rank;j++)W+=`cIndices[${j}] = outputIndices[${j}];`;W+=`let cOffset = ${E.indicesToOffset("cIndices")};`}return W},B=W=>`\n  const epsilon = ${t};\n  ${W.registerUniform("outputSize","u32").declareVariables(A,E,R,P,k,U)}\n  ${W.mainStart()}\n  ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n    var outputIndices = ${U.offsetToIndices(`global_idx * ${d}`)};\n    ${V()}\n    let scale = ${E.getByOffset("cOffset")};\n    let bias = ${R.getByOffset("cOffset")};\n    let inputMean = ${P.getByOffset("cOffset")};\n    let inputVar = ${k.getByOffset("cOffset")};\n    let x = ${A.getByOffset("global_idx")};\n    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;\n    ${U.setByOffset("global_idx","value")}\n  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${u}_${d}`,inputDependencies:C?["rank","type","type","type","type"]:void 0},getShaderSource:B,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:C?[{type:12,data:b},...de(f)]:[{type:12,data:b}]})}},Bh=e=>ke(e),Tu=(e,r)=>{let{inputs:t,outputCount:u}=e,l=Bh({...r,outputCount:u});if(Gr.webgpu.validateInputContent&&kh(t,l),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Rh(t,l))}});var Dh,Mh,Pu,Ou=le(()=>{"use strict";Re();Oe();Dh=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Mh=e=>{let r=e[0].dims,t=e[0].dims[2],u=X.size(r)/4,l=e[0].dataType,f=Z("input",l,r,4),d=Z("bias",l,[t],4),y=Z("residual",l,r,4),b=se("output",l,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)}}),getShaderSource:m=>`\n  const channels = ${t}u / 4;\n  ${m.declareVariables(f,d,y,b)}\n\n  ${m.mainStart()}\n    ${m.guardAgainstOutOfBoundsWorkgroupSizes(u)}\n    let value = ${f.getByOffset("global_idx")}\n      + ${d.getByOffset("global_idx % channels")} + ${y.getByOffset("global_idx")};\n    ${b.setByOffset("global_idx","value")}\n  }`}},Pu=e=>{Dh(e.inputs),e.compute(Mh(e.inputs))}});var zh,Ge,ku,Ru,Bu,Du,Mu,zu,Uu,ju,Vu,Uh,Nu,Wu,Gu,Hu,io,Lu,oo,Fu,qu,Ku,Ju,Yu,Zu,Xu,Qu,el,tl,rl,nl,il,ol,al,sl,ul,ll,Fo,qo,dl,cl,fl,ao=le(()=>{"use strict";Se();Re();ct();Oe();zh=(e,r,t,u,l,f)=>{let d=Math.ceil(r/4),y="";typeof l=="string"?y=`${l}(a)`:y=l("a");let b=Z("inputData",t,[d],4),C=se("outputData",u,[d],4);return`\n      ${e.registerUniform("vec_size","u32").declareVariables(b,C)}\n\n  ${f??""}\n\n  ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n\n    let a = ${b.getByOffset("global_idx")};\n    ${C.setByOffset("global_idx",y)}\n  }`},Ge=(e,r,t,u,l,f=e.dataType)=>({name:r,shaderCache:{hint:l,inputDependencies:["type"]},getShaderSource:d=>zh(d,X.size(e.dims),e.dataType,f,t,u),getRunData:d=>({outputs:[{dims:e.dims,dataType:f}],dispatchGroup:{x:Math.ceil(X.size(d[0].dims)/64/4)},programUniforms:[{type:12,data:Math.ceil(X.size(e.dims)/4)}]})}),ku=e=>{e.compute(Ge(e.inputs[0],"Abs","abs"))},Ru=e=>{e.compute(Ge(e.inputs[0],"Acos","acos"))},Bu=e=>{e.compute(Ge(e.inputs[0],"Acosh","acosh"))},Du=e=>{e.compute(Ge(e.inputs[0],"Asin","asin"))},Mu=e=>{e.compute(Ge(e.inputs[0],"Asinh","asinh"))},zu=e=>{e.compute(Ge(e.inputs[0],"Atan","atan"))},Uu=e=>{e.compute(Ge(e.inputs[0],"Atanh","atanh"))},ju=e=>ke(e),Vu=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute \'to\' from \'Cast\' operator): ${r.to}`)}e.compute(Ge(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},Uh=e=>{let r=e.length>=2&&e[1].data!==0?e[1].getFloat32Array()[0]:Zi,t=e.length>=3&&e[2].data!==0?e[2].getFloat32Array()[0]:Xi;return ke({min:r,max:t})},Nu=(e,r)=>{let t=e.inputs.length===1?r:Uh(e.inputs),u=$t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"Clip",l=>`clamp(${l}, clip_min_, clip_max_)`,`\n    const clip_min_: vec4<${u}> = vec4(${u}(${t.min}));\n    const clip_max_: vec4<${u}> = vec4(${u}(${t.max}));\n`,t.cacheKey),{inputs:[0]})},Wu=e=>{e.compute(Ge(e.inputs[0],"Ceil","ceil"))},Gu=e=>{e.compute(Ge(e.inputs[0],"Cos","cos"))},Hu=e=>{e.compute(Ge(e.inputs[0],"Cosh","cosh"))},io=e=>ke(e),Lu=(e,r)=>{let t=$t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"Elu",u=>`elu_vf32(${u})`,`\n  const elu_alpha_ = ${t}(${r.alpha});\n\n  fn elu_f32(a: ${t}) -> ${t} {\n  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);\n  }\n\n  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {\n  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));\n  }`,r.cacheKey))},oo=(e="f32")=>`\nconst r0: ${e} = 0.3275911;\nconst r1: ${e} = 0.254829592;\nconst r2: ${e} = -0.284496736;\nconst r3: ${e} = 1.421413741;\nconst r4: ${e} = -1.453152027;\nconst r5: ${e} = 1.061405429;\n\nfn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {\n  let absv = abs(v);\n  let x = 1.0 / (1.0 + r0 * absv);\n  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));\n}`,Fu=e=>{let r=$t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,oo(r)))},qu=e=>{e.compute(Ge(e.inputs[0],"Exp","exp"))},Ku=e=>{e.compute(Ge(e.inputs[0],"Floor","floor"))},Ju=e=>{let r=$t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,oo(r)))},Yu=(e,r)=>{let t=$t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"LeakyRelu",u=>`select(leaky_relu_alpha_ * ${u}, ${u}, ${u} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},Zu=e=>{e.compute(Ge(e.inputs[0],"Not",r=>`!${r}`))},Xu=e=>{e.compute(Ge(e.inputs[0],"Neg",r=>`-${r}`))},Qu=e=>{e.compute(Ge(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},el=e=>{let r=$t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},tl=e=>{e.compute(Ge(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},rl=e=>ke(e),nl=(e,r)=>{let t=$t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"HardSigmoid",u=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${u} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},il=e=>{e.compute(Ge(e.inputs[0],"Sin","sin"))},ol=e=>{e.compute(Ge(e.inputs[0],"Sinh","sinh"))},al=e=>{e.compute(Ge(e.inputs[0],"Sqrt","sqrt"))},sl=e=>{e.compute(Ge(e.inputs[0],"Tan","tan"))},ul=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,ll=e=>{e.compute(Ge(e.inputs[0],"Tanh",ul))},Fo=(e="f32")=>`\nconst fast_gelu_a: ${e} = 0.5;\nconst fast_gelu_b: ${e} = 0.7978845608028654;\nconst fast_gelu_c: ${e} = 0.035677408136300125;\n\nfn tanh_v(v: vec4<${e}>) -> vec4<${e}> {\n  return ${ul("v")};\n}\n`,qo=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,dl=e=>{let r=$t(e.inputs[0].dataType);e.compute(Ge(e.inputs[0],"FastGelu",qo,Fo(r),void 0,e.inputs[0].dataType))},cl=(e,r)=>{let t=$t(e.inputs[0].dataType);return e.compute(Ge(e.inputs[0],"ThresholdedRelu",u=>`select(vec4<${t}>(0.0), ${u}, ${u} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},fl=e=>{e.compute(Ge(e.inputs[0],"Log","log"))}});var jh,Vh,ml,hl=le(()=>{"use strict";Re();Oe();ao();jh=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Vh=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=Z("input",e[0].dataType,e[0].dims,4),u=Z("bias",e[0].dataType,[e[0].dims[2]],4),l=se("output",e[0].dataType,r,4),f=X.size(r)/4,d=He(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)}}),getShaderSource:b=>`\n  const M_SQRT2 = sqrt(2.0);\n  const halfChannels = ${e[0].dims[2]/4/2}u;\n\n  ${b.declareVariables(t,u,l)}\n\n  ${oo(d)}\n\n  ${b.mainStart()}\n    ${b.guardAgainstOutOfBoundsWorkgroupSizes(f)}\n    let biasIdx = global_idx % halfChannels;\n    let batchIndex = global_idx / halfChannels;\n    let inputOffset = biasIdx + batchIndex * halfChannels * 2;\n    let valueLeft = input[inputOffset] + bias[biasIdx];\n    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];\n    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);\n\n    ${l.setByOffset("global_idx","valueLeft * geluRight")}\n  }`}},ml=e=>{jh(e.inputs),e.compute(Vh(e.inputs))}});var Nh,Wh,Lt,gl,yl,bl,vl,wl,_l,$l,Cl,Sl,xl,Al=le(()=>{"use strict";Se();Re();Oe();Nh=(e,r,t,u,l,f,d,y,b,C,m,A)=>{let E,R;typeof y=="string"?E=R=(B,W)=>`${y}((${B}),(${W}))`:typeof y=="function"?E=R=y:(E=y.scalar,R=y.vector);let P=se("outputData",m,u.length,4),k=Z("aData",b,r.length,4),U=Z("bData",C,t.length,4),V;if(l)if(f){let B=X.size(r)===1,W=X.size(t)===1,j=r.length>0&&r[r.length-1]%4===0,q=t.length>0&&t[t.length-1]%4===0;B||W?V=P.setByOffset("global_idx",R(B?`${k.type.value}(${k.getByOffset("0")}.x)`:k.getByOffset("global_idx"),W?`${U.type.value}(${U.getByOffset("0")}.x)`:U.getByOffset("global_idx"))):V=`\n            let outputIndices = ${P.offsetToIndices("global_idx * 4u")};\n            let offsetA = ${k.broadcastedIndicesToOffset("outputIndices",P)};\n            let offsetB = ${U.broadcastedIndicesToOffset("outputIndices",P)};\n            ${P.setByOffset("global_idx",R(d||j?k.getByOffset("offsetA / 4u"):`${k.type.value}(${k.getByOffset("offsetA / 4u")}[offsetA % 4u])`,d||q?U.getByOffset("offsetB / 4u"):`${U.type.value}(${U.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}\n          `}else V=P.setByOffset("global_idx",R(k.getByOffset("global_idx"),U.getByOffset("global_idx")));else{if(!f)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let B=(W,j,q="")=>{let Q=`aData[indexA${j}][componentA${j}]`,te=`bData[indexB${j}][componentB${j}]`;return`\n            let outputIndices${j} = ${P.offsetToIndices(`global_idx * 4u + ${j}u`)};\n            let offsetA${j} = ${k.broadcastedIndicesToOffset(`outputIndices${j}`,P)};\n            let offsetB${j} = ${U.broadcastedIndicesToOffset(`outputIndices${j}`,P)};\n            let indexA${j} = offsetA${j} / 4u;\n            let indexB${j} = offsetB${j} / 4u;\n            let componentA${j} = offsetA${j} % 4u;\n            let componentB${j} = offsetB${j} % 4u;\n            ${W}[${j}] = ${q}(${E(Q,te)});\n          `};m===9?V=`\n            var data = vec4<u32>(0);\n            ${B("data",0,"u32")}\n            ${B("data",1,"u32")}\n            ${B("data",2,"u32")}\n            ${B("data",3,"u32")}\n            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:V=`\n            ${B("outputData[global_idx]",0)}\n            ${B("outputData[global_idx]",1)}\n            ${B("outputData[global_idx]",2)}\n            ${B("outputData[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(k,U,P)}\n\n        ${A??""}\n\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${V}\n      }`},Wh=(e,r,t,u,l,f,d=t.dataType)=>{let y=!X.areEqual(t.dims,u.dims),b=t.dims,C=X.size(t.dims),m=!1,A=!1,E=[y];if(y){let R=Vt.calcShape(t.dims,u.dims,!1);if(!R)throw new Error("Can\'t perform binary op on the given tensors");b=R,C=X.size(b);let P=X.size(t.dims)===1,k=X.size(u.dims)===1,U=t.dims.length>0&&t.dims[t.dims.length-1]%4===0,V=u.dims.length>0&&u.dims[u.dims.length-1]%4===0;E.push(P),E.push(k),E.push(U),E.push(V);let B=1;for(let W=1;W<b.length;W++){let j=t.dims[t.dims.length-W]??1,q=u.dims[u.dims.length-W]??1;if(j===q)B*=j;else break}B%4===0?(A=!0,m=!0):(P||k||U||V)&&(m=!0)}else m=!0;return E.push(m),{name:e,shaderCache:{hint:r+E.map(R=>R.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:R=>Nh(R,t.dims,u.dims,b,m,y,A,l,t.dataType,u.dataType,d,f),getRunData:()=>({outputs:[{dims:b,dataType:d}],dispatchGroup:{x:Math.ceil(C/64/4)},programUniforms:[{type:12,data:Math.ceil(X.size(b)/4)},...de(t.dims,u.dims,b)]})}},Lt=(e,r,t,u,l,f)=>{e.compute(Wh(r,l??"",e.inputs[0],e.inputs[1],t,u,f))},gl=e=>{Lt(e,"Add",(r,t)=>`${r}+${t}`)},yl=e=>{Lt(e,"Div",(r,t)=>`${r}/${t}`)},bl=e=>{Lt(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},vl=e=>{Lt(e,"Mul",(r,t)=>`${r}*${t}`)},wl=e=>{let r=Z("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;Lt(e,"Pow",{scalar:(u,l)=>`pow_custom(${u},${l})`,vector:(u,l)=>`pow_vector_custom(${u},${l})`},`\n    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {\n      if (b == ${r}(0.0)) {\n        return ${r}(1.0);\n      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {\n        return ${r}(pow(f32(a), f32(b))); // NaN\n      }\n      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));\n    }\n    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {\n      // TODO: implement vectorized pow\n      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));\n    }\n      `)},_l=e=>{Lt(e,"Sub",(r,t)=>`${r}-${t}`)},$l=e=>{Lt(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},Cl=e=>{Lt(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},Sl=e=>{Lt(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},xl=e=>{Lt(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}});var Hh,Lh,Fh,qh,Il,Tl,El=le(()=>{"use strict";Se();Re();ct();Oe();Hh=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,u=e[t],l=u.dataType,f=u.dims.length;e.forEach((d,y)=>{if(y!==t){if(d.dataType!==l)throw new Error("input tensors should be one type");if(d.dims.length!==f)throw new Error("input tensors should have the same shape");d.dims.forEach((b,C)=>{if(C!==r&&b!==u.dims[C])throw new Error("non concat dimensions must match")})}})},Lh=(e,r)=>`\n  fn calculateInputIndex(index: u32) -> u32 {\n    let sizeInConcatAxis = array<u32, ${e}u>(${r});\n    for (var i: u32 = 0u; i < ${e}; i += 1u ) {\n      if (index < sizeInConcatAxis[i]) {\n        return i;\n      }\n    }\n    return ${e}u;\n  }`,Fh=(e,r)=>{let t=e.length,u=[];for(let l=0;l<t;++l){let f=r.setByOffset("global_idx",e[l].getByIndices("indices"));t===1?u.push(f):l===0?u.push(`if (inputIndex == ${l}u) { ${f} }`):l===t-1?u.push(`else { ${f} }`):u.push(`else if (inputIndex == ${l}) { ${f} }`)}return u.join(`\n`)},qh=(e,r,t,u)=>{let l=X.size(t),f=new Array(e.length),d=new Array(e.length),y=0,b=[],C=[],m=[{type:12,data:l}];for(let k=0;k<e.length;++k)y+=e[k].dims[r],f[k]=y,C.push(e[k].dims.length),d[k]=Z(`input${k}`,u,C[k]),b.push("rank"),m.push({type:12,data:f[k]});for(let k=0;k<e.length;++k)m.push(...de(e[k].dims));m.push(...de(t));let A=se("output",u,t.length),E=A.indicesGet("indices",r),R=Array.from(Array(f.length).keys()).map(k=>`uniforms.sizeInConcatAxis${k}`).join(","),P=k=>`\n\n  ${(()=>{k.registerUniform("outputSize","u32");for(let U=0;U<e.length;U++)k.registerUniform(`sizeInConcatAxis${U}`,"u32");return k.declareVariables(...d,A)})()}\n\n  ${Lh(f.length,R)}\n\n  ${k.mainStart()}\n    ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n    var indices = ${A.offsetToIndices("global_idx")};\n\n    let inputIndex = calculateInputIndex(${E});\n    if (inputIndex != 0u) {\n      let sizeInConcatAxis = array<u32, ${f.length}u>(${R});\n      ${E} -= sizeInConcatAxis[inputIndex - 1u];\n    }\n\n    ${Fh(d,A)}\n  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:b},getRunData:()=>({outputs:[{dims:t,dataType:u}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:m}),getShaderSource:P}},Il=(e,r)=>{let t=e.inputs,u=t[0].dims,l=X.normalizeAxis(r.axis,u.length);Hh(t,l);let f=u.slice();f[l]=t.reduce((y,b)=>y+(b.dims.length>l?b.dims[l]:0),0);let d=t.filter(y=>X.size(y.dims)>0);e.compute(qh(d,l,f,t[0].dataType),{inputs:d})},Tl=e=>ke({axis:e.axis})});var Mt,zt,Ut,so,nr=le(()=>{"use strict";Se();Re();Mt=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},zt=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},Ut=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},so=e=>{let r=e?.activation||"";if(r==="HardSigmoid"){let[t,u]=e?.activation_params||[.2,.5];return{activation:r,alpha:t,beta:u}}else if(r==="Clip"){let[t,u]=e?.activation_params||[Zi,Xi];return{activation:r,clipMax:u,clipMin:t}}else if(r==="LeakyRelu"){let[t]=e?.activation_params||[.01];return{activation:r,alpha:t}}return{activation:r}}});var ht,uo,lo=le(()=>{"use strict";ht=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},uo=e=>`\n      ${e?"value = value + getBiasByOutputCoords(coords);":""}\n      `});var co,Ko=le(()=>{"use strict";co=e=>`\nfn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));\n}\nfn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {\n  return dot(coords, vec4<i32>(\n    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));\n}\n`});var Kh,Jh,ti,Pl,Yh,ri,Zh,fo,ni=le(()=>{"use strict";Se();Re();Oe();nr();lo();Kh=(e,r)=>e?`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          kStart + inputRow,\n          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});\n        `:`\n        mm_Asub[inputRow][inputCol] = mm_readA(batch,\n          globalRow + innerRow,\n          kStart / innerElementSize + inputCol${r?", batchIndices":""});\n        `,Jh=(e,r)=>e?`\n        let ACached0 = mm_Asub[k * innerElementSize][localRow];\n        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];\n        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];\n        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          acc[i] = BCached0 * ACached0[i] + acc[i];\n          acc[i] = BCached1 * ACached1[i] + acc[i];\n          acc[i] = BCached2 * ACached2[i] + acc[i];\n          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}\n        }`:`\n        for (var i = 0; i < rowPerThread; i = i + 1) {\n          let ACached = mm_Asub[tileRow + i][k];\n          acc[i] = BCached0 * ACached.x + acc[i];\n          acc[i] = BCached1 * ACached.y + acc[i];\n          acc[i] = BCached2 * ACached.z + acc[i];\n          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}\n        }`,ti=(e,r,t="f32",u,l=!1,f=32,d=!1,y=32)=>{let b=r[1]*e[1],C=r[0]*e[0],m=l?b:f,A=l?f:b,E=m/r[0],R=f/r[1];if(!((l&&E===4&&e[1]===4||!l&&(E===3||E===4))&&m%r[0]===0&&f%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${l} is true, innerElementSize ${E} and workPerThread[1] ${e[1]} must be 4.\n      Otherwise, innerElementSize ${E} must be 3 or 4.\n  tileAWidth ${m} must be divisible by workgroupSize[0]${r[0]}. tileInner ${f} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`\nvar<workgroup> mm_Asub: array<array<vec${E}<${t}>, ${m/E}>, ${A}>;\nvar<workgroup> mm_Bsub: array<array<vec4<${t}>, ${C/e[0]}>, ${f}>;\n\nconst rowPerThread = ${e[1]};\nconst colPerThread = ${e[0]};\nconst innerElementSize = ${E};\nconst tileInner = ${f};\n\n@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n  let localRow = i32(localId.y);\n  let tileRow = localRow * rowPerThread;\n  let tileCol = i32(localId.x);\n\n  let globalRow =i32(globalId.y) * rowPerThread;\n  let globalCol = i32(globalId.x);\n  let batch = ${d?"0":"i32(globalId.z)"};\n  ${u?`let batchIndices = ${u.offsetToIndices("u32(batch)")};`:""}\n  let globalRowStart = i32(workgroupId.y) * ${b};\n\n  let num_tiles = ${d?`${Math.ceil(y/f)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n  var kStart = ${d?`i32(globalId.z) * ${y}`:"0"};\n\n  var acc: array<vec4<${t}>, rowPerThread>;\n\n  // Loop over shared dimension.\n  let tileRowB = localRow * ${R};\n  for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let inputRow = tileRow + innerRow;\n          let inputCol = tileCol;\n          ${Kh(l,u)}\n      }\n\n      // Load one tile of B into local memory.\n      for (var innerRow = 0; innerRow < ${R}; innerRow = innerRow + 1) {\n          let inputRow = tileRowB + innerRow;\n          let inputCol = tileCol;\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${u?", batchIndices":""});\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {\n          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];\n          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];\n          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];\n          ${E===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}\n\n          ${Jh(l,E)}\n      }\n\n      workgroupBarrier();\n  }\n\n  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);\n  }\n}`},Pl=(e,r)=>e?`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              kStart + inputRow,\n              globalRowStart + inputCol${r?", batchIndices":""});\n            `:`\n            mm_Asub[inputRow][inputCol] = mm_readA(batch,\n              globalRowStart + inputRow,\n              kStart + inputCol${r?", batchIndices":""});\n            `,Yh=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ri=(e,r,t="f32",u,l=!1,f=32,d=!1,y=32,b=!1)=>{let C=e[1]*r[1],m=e[0]*r[0],A=l?C:f,E=l?f:C;if(!(E%r[1]===0&&A%r[0]===0&&f%r[1]===0))throw new Error(`tileAHight ${E} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${A} must be divisible by workgroupSize[0]${r[0]}, tileInner ${f} must be divisible by workgroupSize[1]${r[1]}`);let R=E/r[1],P=A/r[0],k=f/r[1],U=b?`\n    let localRow = i32(localId.y);\n    let localCol = i32(localId.x);\n    let globalRowStart = i32(workgroupId.y) * ${C};\n    let globalColStart = i32(workgroupId.x) * ${m};\n\n    // Loop over shared dimension.\n    for (var t = 0; t < num_tiles; t = t + 1) {\n      // Load one tile of A into local memory.\n      for (var inputRow = localRow; inputRow < ${E}; inputRow = inputRow + ${r[1]}) {\n        for (var inputCol = localCol; inputCol < ${A}; inputCol = inputCol + ${r[0]}) {\n          ${Pl(l,u)}\n        }\n      }\n      // Load one tile of B into local memory.\n      for (var inputRow = localRow; inputRow < ${f}; inputRow = inputRow + ${r[1]}) {\n            for (var inputCol = localCol; inputCol < ${m}; inputCol = inputCol + ${r[0]}) {\n          mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n            kStart + inputRow,\n            globalColStart + inputCol${u?", batchIndices":""});\n        }\n      }\n      kStart = kStart + tileInner;\n      workgroupBarrier();\n\n      // Compute acc values for a single thread.\n      var BCached : array<${t}, colPerThread>;\n      for (var k = 0; k < tileInner; k = k + 1) {\n        for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];\n        }\n        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n          let ACached = ${l?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}\n          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n            acc[innerRow][innerCol] = acc[innerRow][innerCol] +\n                ACached * BCached[innerCol];\n          }\n        }\n      }\n      workgroupBarrier();\n    }\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      let gRow = globalRowStart + localRow + innerRow * ${r[1]};\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        let gCol = globalColStart + localCol + innerCol * ${r[0]};\n        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);\n      }\n    }\n    `:`\nlet tileRow = i32(localId.y) * rowPerThread;\nlet tileCol = i32(localId.x) * colPerThread;\n\nlet globalRow = i32(globalId.y) * rowPerThread;\nlet globalCol = i32(globalId.x) * colPerThread;\nlet globalRowStart = i32(workgroupId.y) * ${C};\n\nlet tileRowA = i32(localId.y) * ${R};\nlet tileColA = i32(localId.x) * ${P};\nlet tileRowB = i32(localId.y) * ${k};\n// Loop over shared dimension.\nfor (var t = 0; t < num_tiles; t = t + 1) {\n  // Load one tile of A into local memory.\n  for (var innerRow = 0; innerRow < ${R}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < ${P}; innerCol = innerCol + 1) {\n      let inputRow = tileRowA + innerRow;\n      let inputCol = tileColA + innerCol;\n      ${Pl(l,u)}\n    }\n  }\n\n  // Load one tile of B into local memory.\n  for (var innerRow = 0; innerRow < ${k}; innerRow = innerRow + 1) {\n    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n      let inputRow = tileRowB + innerRow;\n      let inputCol = tileCol + innerCol;\n      mm_Bsub[inputRow][inputCol] = mm_readB(batch,\n        kStart + inputRow,\n        globalCol + innerCol${u?", batchIndices":""});\n    }\n  }\n  kStart = kStart + tileInner;\n  workgroupBarrier();\n\n  // Compute acc values for a single thread.\n  var BCached : array<${t}, colPerThread>;\n  for (var k = 0; k < tileInner; k = k + 1) {\n    for (var inner = 0; inner < colPerThread; inner = inner + 1) {\n      BCached[inner] = mm_Bsub[k][tileCol + inner];\n    }\n\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      ${Yh(l)}\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];\n      }\n    }\n  }\n\n  workgroupBarrier();\n}\n\nfor (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n    mm_write(batch, globalRow + innerRow, globalCol + innerCol,\n        acc[innerRow][innerCol]);\n  }\n}\n`;return`\n  var<workgroup> mm_Asub : array<array<${t}, ${A}>, ${E}>;\n  var<workgroup> mm_Bsub : array<array<${t}, ${m}>, ${f}>;\n  const rowPerThread = ${e[1]};\n  const colPerThread = ${e[0]};\n  const tileInner = ${f};\n\n@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})\nfn main(@builtin(local_invocation_id) localId : vec3<u32>,\n        @builtin(global_invocation_id) globalId : vec3<u32>,\n        @builtin(workgroup_id) workgroupId : vec3<u32>) {\n    let batch = ${d?"0":"i32(globalId.z)"};\n    ${u?`let batchIndices = ${u.offsetToIndices("u32(batch)")};`:""}\n    let num_tiles = ${d?`${Math.ceil(y/f)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};\n    var kStart = ${d?`i32(globalId.z) * ${y}`:"0"};\n\n    var acc : array<array<${t}, colPerThread>, rowPerThread>;\n\n    // Without this initialization strange values show up in acc.\n    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {\n      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {\n        acc[innerRow][innerCol] = 0.0;\n      }\n    }\n    ${U}\n  }\n`},Zh=(e,r,t,u,l,f=!1)=>{let[d,y,b]=l,[C,m,A,E]=u,R=Lr(d,b),P=Lr(y,b),k=He(u[0].type.tensor),U=()=>{let W=m.rank,j=C.rank,q=`var aIndices: ${m.type.indices};`;for(let Q=W-2-1,te=j-1;Q>=0;Q--,te--)q+=`\naIndices[${Q}] = ${j>1?`batchIndices[${te}]`:"batchIndices"};`;return R.forEach(Q=>{q+=`\naIndices[${Q}] = 0;`}),q+=`\naIndices[${W-2}] = u32(row);\n                   aIndices[${W-1}] = u32(colIn);`,q},V=()=>{let W=A.rank,j=C.rank,q=`var bIndices: ${A.type.indices};`;for(let Q=W-2-1,te=j-1;Q>=0;Q--,te--)q+=`\nbIndices[${Q}] = ${j>1?`batchIndices[${te}]`:"batchIndices"};`;return P.forEach(Q=>{q+=`\nbIndices[${Q}] = 0;`}),q+=`\nbIndices[${W-2}] = u32(row);\n                   bIndices[${W-1}] = u32(colIn);`,q};return`\n    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${C.type.indices}) -> ${ht(e,k)} {\n      var value = ${ht(e,k)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)\n      {\n        ${U()}\n        value = ${m.getByIndices("aIndices")};\n      }\n      return value;\n    }\n\n    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${C.type.indices}) -> ${ht(e,k)} {\n      var value = ${ht(e,k)}(0.0);\n      let col = colIn * ${e};\n      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)\n      {\n        ${V()}\n        value = ${A.getByIndices("bIndices")};\n      }\n      return value;\n    }\n\n    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${ht(e,k)}) {\n      let col = colIn * ${e};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n        var value = valueIn;\n        let coords = vec3<i32>(batch, row, colIn);\n        ${r?`value = value + ${f?"bias[colIn]":`${ht(e,k)}(bias[row])`};`:""}\n        ${t}\n        ${E.setByIndices("vec3<u32>(coords)","value")}\n      }\n    }\n    `},fo=(e,r,t,u,l=!1)=>{let f=e[0].dims,d=e[1].dims,y=f.slice(0,-2),b=d.slice(0,-2),C=u?u.slice(0,-2):t.slice(0,-2),m=X.size(C),A=f[f.length-2],E=f[f.length-1],R=d[d.length-1],P=E%4===0&&R%4===0,k=A<=8?[4,1,1]:[4,4,1],U=[8,8,1],V=[Math.ceil(R/U[0]/k[0]),Math.ceil(A/U[1]/k[1]),Math.ceil(m/U[2]/k[2])],B=P?4:1,W=[...y,A,E/B],j=W.length,q=[...b,E,R/B],Q=q.length,te=[m,A,R/B],ne=[{type:6,data:A},{type:6,data:R},{type:6,data:E}];zt(r,ne),ne.push(...de(C,W,q));let J=["rank","rank"],ie=e.length>2;ie&&(ne.push(...de(e[2].dims)),J.push("rank")),ne.push(...de(te));let Ae=De=>{let Fe=C.length,Ne=eo("batchDims",e[0].dataType,Fe,1),Be=He(e[0].dataType),pe=Z("a",e[0].dataType,j,B),We=Z("b",e[1].dataType,Q,B),Ie=se("result",e[0].dataType,te.length,B),$e=[pe,We];if(ie){let oe=l?B:1;$e.push(Z("bias",e[2].dataType,e[2].dims.length,oe))}let ge=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Ut(r,ge);let Te=He(Ie.type.tensor),Ve=Mt(r,Ie.type.value,Te),rt=Zh(B,ie,Ve,[Ne,pe,We,Ie],[y,b,C],l);return`\n  ${De.registerUniforms(ge).registerInternalVariables(Ne).declareVariables(...$e,Ie)}\n  ${rt}\n  ${P?ti(k,U,Be,Ne):ri(k,U,Be,Ne)}\n                   `};return{name:"MatMul",shaderCache:{hint:`${k};${r.activation};${P};${l}`,inputDependencies:J},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:V[0],y:V[1],z:V[2]},programUniforms:ne}),getShaderSource:Ae}}});var Xh,Ol,kl=le(()=>{"use strict";Se();rr();Oe();nr();lo();Ko();ni();Xh=(e,r,t,u,l=!1,f,d=4,y=4,b=4,C="f32")=>{let m=ie=>{switch(ie){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${C}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${ie} is not supported.`)}},A=ie=>{switch(ie){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${ie} is not supported.`)}},E=e?`\n    let coord = vec4<i32>(batch, xRow, xCol, xCh);\n    `:`\n    let coord = vec4<i32>(batch, xCh, xRow, xCol);\n    `,R=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,P=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",k=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",U=e?"row":"col",V=e?"col":"row",B=`\n    let inChannels = i32(uniforms.w_shape[2]);\n    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n    let outRow = ${U} / outWidth;\n    let outCol = ${U} % outWidth;\n\n    let WRow = ${V} / (i32(uniforms.w_shape[1]) * inChannels);\n    let WCol = ${V} / inChannels % i32(uniforms.w_shape[1]);\n    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];\n    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];\n    let xCh = ${V} % inChannels;\n    var resData = ${ht(d,C)}(0.0);\n    // The bounds checking is always needed since we use it to pad zero for\n    // the \'same\' padding type.\n    if (xRow >= 0 && xRow < ${P} && xCol >= 0 && xCol < ${k}) {\n      ${E}\n      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));\n      ${m(d)}\n    }\n    return resData;`,W=e?r&&u?`\n    let col = colIn * ${d};\n    ${B}`:`\n    let col = colIn * ${d};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n      ${B}\n    }\n    return ${ht(d,C)}(0.0);`:u&&t?`\n    let col = colIn * ${d};\n    ${B}`:`\n    let col = colIn * ${d};\n    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n      ${B}\n    }\n    return ${ht(d,C)}(0.0);`,j=`${A(y)}`,q=ht(b,C),Q=e?ht(d,C):ht(y,C),te=e?ht(y,C):ht(d,C),ne=Mt(f,q,C);return`\n    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${Q} {\n      ${e?W:j}\n    }\n\n    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${te} {\n      ${e?j:W}\n    }\n\n    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${q}) {\n      let col = colIn * ${b};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)\n      {\n      var value = valueIn;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${R}\n      ${uo(l)}\n      ${ne}\n      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);\n      }\n    }`},Ol=(e,r,t,u,l,f,d,y)=>{let b=r.format==="NHWC",C=b?e[0].dims[3]:e[0].dims[1],m=t[0],A=b?t[2]:t[3],E=b?t[1]:t[2],R=b?t[3]:t[1],P=b&&(C%4===0||C%3===0)&&R%4===0,k=b?R:A*E,U=b?A*E:R,V=[8,8,1],B=u<=8?[4,1,1]:[4,4,1],W=[Math.ceil(k/V[0]/B[0]),Math.ceil(U/V[1]/B[1]),Math.ceil(m/V[2]/B[2])];Je("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${W}`);let j=P?b&&C%4!==0?3:4:1,q=V[1]*B[1],Q=V[0]*B[0],te=Math.max(V[0]*j,V[1]),ne=u%q===0,J=l%Q===0,ie=f%te===0,Ae=P?[j,4,4]:[1,1,1],De=[{type:6,data:u},{type:6,data:l},{type:6,data:f},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];zt(r,De),De.push(...de(e[0].dims,e[1].dims));let Fe=["rank","rank"];d&&(De.push(...de(e[2].dims)),Fe.push("rank")),De.push(...de(t));let Ne=Be=>{let pe=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Ut(r,pe);let We=P?4:1,Ie=He(e[0].dataType),$e=`\n      fn setOutputAtIndex(flatIndex : i32, value : ${P?`vec4<${Ie}>`:Ie}) {\n        result[flatIndex] = ${P?`vec4<${Ie}>`:Ie}(value);\n      }\n      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${P?`vec4<${Ie}>`:Ie}) {\n        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));\n        setOutputAtIndex(flatIndex ${P?"/ 4":""}, value);\n      }`,ge=Z("x",e[0].dataType,e[0].dims.length,j===3?1:j),Te=Z("w",e[1].dataType,e[1].dims.length,We),Ve=[ge,Te],rt=se("result",e[0].dataType,t.length,We);if(d){let oe=Z("bias",e[2].dataType,e[2].dims.length,We);Ve.push(oe),$e+=`\n        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${P?`vec4<${Ie}>`:Ie} {\n          return bias[coords.${b?"w":"y"}${P?"/ 4":""}];\n        }`}return`\n        ${co("uniforms.result_strides")}\n        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,\n        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,\n        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };\n        ${Be.registerUniforms(pe).declareVariables(...Ve,rt)}\n        ${$e}\n        ${Xh(b,ne,J,ie,d,r,Ae[0],Ae[1],Ae[2],Ie)}\n        ${P?ti(B,V,Ie,void 0,!b,te):ri(B,V,Ie,void 0,!b,te,!1,void 0,y)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${j};${P};${ne};${J};${ie};${q};${Q};${te}`,inputDependencies:Fe},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]},programUniforms:De}),getShaderSource:Ne}}});var Jo,Rl,Bl=le(()=>{"use strict";Se();Re();Oe();Yo();nr();Jo=(e,r,t)=>{let u=e.length>2,l=u?"value += b[output_channel];":"",f=e[0].dims,d=e[1].dims,y=d[0]/r.group,b=r.format==="NHWC",C=po(f,d,r.dilations,r.pads,r.strides,b),m=X.size(C),A=[{type:12,data:m},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:y}];zt(r,A),A.push(...de(f,d,C));let E=["rank","rank"];u&&(A.push(...de(e[2].dims)),E.push("rank")),A.push(...de(C));let R=P=>{let k=se("output",e[0].dataType,C.length),U=He(k.type.tensor),V=Mt(r,k.type.value,U),B=Z("x",e[0].dataType,f.length),W=Z("w",e[1].dataType,d.length),j=[B,W];u&&j.push(Z("b",e[2].dataType,e[2].dims));let q=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];return Ut(r,q),`\n  ${P.registerUniforms(q).declareVariables(...j,k)}\n\n  ${P.mainStart()}\n    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let outputIndices = ${k.offsetToIndices("global_idx")};\n    let batch: u32 = outputIndices[0];\n    let output_channel: u32 = outputIndices[${b?3:1}];\n    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${b?1:2}], outputIndices[${b?2:3}]) * uniforms.strides - uniforms.pads;\n    let group_id: u32 = output_channel / uniforms.output_channels_per_group;\n\n    var value: ${k.type.value} = ${k.type.value}(0);\n    for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {\n      let input_channel = group_id * uniforms.w_shape[1] + wInChannel;\n      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {\n        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];\n\n        if (xHeight < 0u || xHeight >= uniforms.x_shape[${b?1:2}]) {\n          continue;\n        }\n\n        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {\n          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];\n          if (xWidth < 0u || xWidth >= uniforms.x_shape[${b?2:3}]) {\n            continue;\n          }\n\n          let xVal = ${b?B.get("batch","xHeight","xWidth","input_channel"):B.get("batch","input_channel","xHeight","xWidth")};\n          let wVal = ${W.get("output_channel","wInChannel","wHeight","wWidth")};\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${l}\n    ${V}\n    ${k.setByOffset("global_idx","value")}\n  }`};return{name:"GroupedConv",shaderCache:{hint:r.cacheKey,inputDependencies:E},getRunData:()=>({outputs:[{dims:t?t(C):C,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:A}),getShaderSource:R}},Rl=(e,r,t)=>{let u=e.length>2,l=Ye(t[3]),f=Ye(t[2]),d=X.size(t)/l/f,y=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/l],b=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/l],C=[t[0],t[1],t[2],t[3]/l],m=[{type:12,data:d},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];zt(r,m),m.push(...de(y,b,C));let A=(f-1)*r.strides[1]+b[1],E=R=>{let P=se("output",e[0].dataType,C.length,l),k=He(P.type.tensor),U=Mt(r,P.type.value,k),V=Z("x",e[0].dataType,y.length,l),B=Z("w",e[1].dataType,b.length,l),W=[V,B];u&&W.push(Z("b",e[2].dataType,e[2].dims,l));let j=u?"value += b[output_channel];":"",q=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Ut(r,q),`\n  ${R.registerUniforms(q).declareVariables(...W,P)}\n  ${R.mainStart()}\n    ${R.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let width0 = uniforms.output_shape[3];\n    let output_channel = global_idx % width0;\n    var index1 = global_idx / width0;\n    let width1 = uniforms.output_shape[2] / ${f}u;\n    let col = (index1 % width1) * ${f}u;\n    index1 = index1 / width1;\n    let row = index1 % uniforms.output_shape[1];\n    let batch = index1 / uniforms.output_shape[1];\n\n    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;\n\n    var x_vals: array<${V.type.value}, ${A}>;\n    var values: array<${P.type.value}, ${f}>;\n    let input_channel = output_channel;\n    // Use constant instead of uniform can give better performance for w\'s height/width.\n    for (var w_height: u32 = 0u; w_height < ${b[0]}; w_height++) {\n      let x_height = x_corner.x + i32(w_height);\n      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {\n        for (var i = 0; i < ${A}; i++) {\n          let x_width = x_corner.y + i;\n          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {\n            x_vals[i] = ${V.get("batch","u32(x_height)","u32(x_width)","input_channel")};\n          } else {\n            x_vals[i] = ${V.type.value}(0);\n          }\n        }\n        for (var w_width: u32 = 0u; w_width < ${b[1]}; w_width++) {\n          let w_val = ${B.get("w_height","w_width","0","output_channel")};\n          for (var i = 0u; i < ${f}u; i++) {\n            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);\n          }\n        }\n      }\n    }\n\n    for (var i = 0u; i < ${f}u; i++) {\n      var value = values[i];\n      ${j}\n      ${U}\n      ${P.set("batch","row","col + i","output_channel","value")};\n    }\n  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${l};${f};${A};${b[0]};${b[1]}`,inputDependencies:u?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:m}),getShaderSource:E}}});var Zo,Qh,Dl,Xo=le(()=>{"use strict";Se();Re();ni();Oe();nr();Zo=(e,r,t,u,l=!1)=>{let f=e[0].dims,d=e[1].dims,y=f[f.length-2],b=d[d.length-1],C=f[f.length-1],m=Ye(b),A=Ye(C),E=Ye(y),R=X.size(t)/m/E,P=e.length>2,k=u?u.slice(0,-2):t.slice(0,-2),V=[X.size(k),y,b],B=[{type:12,data:R},{type:12,data:y},{type:12,data:b},{type:12,data:C}];zt(r,B),B.push(...de(k,f,d)),P&&B.push(...de(e[2].dims)),B.push(...de(V));let W=j=>{let q=eo("batch_dims",e[0].dataType,k.length),Q=Z("a",e[0].dataType,f.length,A),te=Z("b",e[1].dataType,d.length,m),ne=se("output",e[0].dataType,V.length,m),J=He(ne.type.tensor),ie=Mt(r,ne.type.value,J),Ae=[Q,te],De="";if(P){let ge=l?m:1;Ae.push(Z("bias",e[2].dataType,e[2].dims.length,ge)),De=`${l?`value += bias[col / ${ge}];`:`value += ${ne.type.value}(bias[row + i]);`}`}let Fe=f.slice(0,-2),Ne=d.slice(0,-2),Be=Lr(Fe,k),pe=Lr(Ne,k),We=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Ut(r,We);let Ie=(ge,Te)=>{let Ve=ge.rank,rt=ge.name;if(Ve===2)return`var ${rt}_indices = ${ge.type.indices}(0u, 0u);`;let oe=q.rank,ye=`var ${rt}_indices: ${ge.type.indices};`;for(let Me=Ve-2-1,ot=oe-1;Me>=0;Me--,ot--)ye+=`\n${rt}_indices[${Me}] = ${oe>1?`batch_indices[${ot}]`:"batch_indices"};`;return Te.forEach(Me=>{ye+=`\n${rt}_indices[${Me}] = 0;`}),ye+=`${rt}_indices[${Ve-2}] = 0u;\n                     ${rt}_indices[${Ve-1}] = 0u;`,ye},$e=()=>{let ge=`var a_data: ${Q.type.value};`;for(let Te=0;Te<A;Te++)ge+=`\n              let b_data${Te} = b[(b_offset + (k + ${Te}) * uniforms.N + col) / ${m}];`;for(let Te=0;Te<E;Te++){ge+=`a_data = a[(a_offset + (row + ${Te}) * uniforms.K + k) / ${A}];`;for(let Ve=0;Ve<A;Ve++)ge+=`\n            values[${Te}] = fma(${te.type.value}(a_data${A===1?"":`[${Ve}]`}), b_data${Ve}, values[${Te}]);\n`}return ge};return`\n  ${j.registerUniforms(We).registerInternalVariables(q).declareVariables(...Ae,ne)}\n  ${j.mainStart()}\n    ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let col = (global_idx % (uniforms.N / ${m})) * ${m};\n    var index1 = global_idx / (uniforms.N / ${m});\n    let stride1 = uniforms.M / ${E};\n    let row = (index1 % stride1) * ${E};\n    let batch = index1 / stride1;\n\n    ${t.length===2?"":`let batch_indices = ${q.offsetToIndices("batch")};`}\n    ${Ie(Q,Be)}\n    let a_offset = ${Q.indicesToOffset("a_indices")};\n    ${Ie(te,pe)}\n    let b_offset = ${te.indicesToOffset("b_indices")};\n    var values: array<${ne.type.value}, ${E}>;\n    for (var k: u32 = 0u; k < uniforms.K; k = k + ${A}) {\n      ${$e()}\n    }\n    for (var i = 0u; i < ${E}u; i++) {\n      var value = values[i];\n      ${De}\n      ${ie}\n      let cur_indices = ${ne.type.indices}(batch, row + i, col);\n      let offset = ${ne.indicesToOffset("cur_indices")};\n      ${ne.setByOffset(`offset / ${m}`,"value")};\n    }\n  }\n  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${m};${A};${E};${l}`,inputDependencies:P?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(R/64)},programUniforms:B}),getShaderSource:W}},Qh=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Dl=e=>{Qh(e.inputs);let r=Vt.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can\'t use matmul on the given tensors");let t=r[r.length-1],u=e.inputs[0].dims[e.inputs[0].dims.length-1];t<8&&u<8?e.compute(Zo(e.inputs,{activation:""},r)):e.compute(fo(e.inputs,{activation:""},r))}});var po,Qo,eg,Ml,ea,tg,rg,ta,Yo=le(()=>{"use strict";Re();kl();ni();Bl();nr();Xo();Fr();po=(e,r,t,u,l,f)=>{let d=e[0],y=e.slice(f?1:2,f?3:4),b=y.length,C=r[0],A=r.slice(2).map((P,k)=>P+(P-1)*(t[k]-1)),R=y.map((P,k)=>P+u[k]+u[k+b]).map((P,k)=>Math.floor((P-A[k]+l[k])/l[k]));return R.splice(0,0,d),R.splice(f?3:1,0,C),R},Qo=[2,3,1,0],eg=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support conv 1D and 2D");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],u=e[1].dims[1]*r.group;if(t!==u)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let l=e[0].dims.length-2;if(r.dilations.length!==l)throw new Error(`dilations should be ${l}D`);if(r.strides.length!==l)throw new Error(`strides should be ${l}D`);if(r.pads.length!==l*2)throw new Error(`pads should be ${l*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Ml=(e,r)=>{let t=e.kernelShape.slice();for(let f=2;f<r[1].dims.length;++f)t[f-2]===0&&(t[f-2]=r[1].dims[f]);let u=e.pads.slice();yr.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,u,e.format==="NHWC",e.autoPad);let l=Object.assign({},e);return Object.assign(l,{kernelShape:t,pads:u}),l},ea=e=>{let r=so(e),t=e.format,u=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],l=e.dilations,f=e.group,d=e.kernel_shape,y=e.pads,b=e.strides,C=e.w_is_const();return{autoPad:u,format:t,dilations:l,group:f,kernelShape:d,pads:y,strides:b,wIsConst:C,...r,cacheKey:`${e.format};${r.activation};`}},tg=(e,r,t)=>{let u=Ml(t,r),l=t.format==="NHWC";if(t.group!==1){if(!e.adapterInfo.isArchitecture("ampere")&&l&&r[1].dims[0]===t.group&&r[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1){let te=po(r[0].dims,r[1].dims,t.dilations,u.pads,t.strides,l),ne=e.kernelCustomData.wT??e.compute(kt(r[1],Qo),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=ne);let J=[r[0],ne];r.length===3&&J.push(r[2]),e.compute(Rl(J,u,te),{inputs:J})}else e.compute(Jo(r,u));return}let f=r.length===3,d=r[0].dims[l?1:2],y=r[0].dims[l?2:3],b=r[0].dims[l?3:1],C=r[1].dims[2],m=r[1].dims[3],A=po(r[0].dims,r[1].dims,t.dilations,u.pads,t.strides,l),E=A[l?1:2],R=A[l?2:3],P=A[l?3:1],k=l&&C===d&&m===y&&t.pads[0]===0&&t.pads[1]===0;if(k||C===1&&m===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let Q=A[0],te,ne,J,ie=[];if(l){let Fe=e.kernelCustomData.wT??e.compute(kt(r[1],Qo),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=Fe),k){let Ne=d*y*b;te=r[0].reshape([1,Q,Ne]),ne=Fe.reshape([1,Ne,P]),J=[1,Q,P]}else te=r[0].reshape([Q,d*y,b]),ne=Fe.reshape([1,b,P]),J=[Q,E*R,P];ie.push(te),ie.push(ne)}else te=r[0].reshape([Q,b,d*y]),ne=r[1].reshape([1,P,b]),J=[Q,P,E*R],ie.push(ne),ie.push(te);f&&ie.push(r[2]);let Ae=J[2],De=ie[0].dims[ie[0].dims.length-1];Ae<8&&De<8?e.compute(Zo(ie,u,A,J,l),{inputs:ie}):e.compute(fo(ie,u,A,J,l),{inputs:ie});return}let U=!0,V=e.kernelCustomData.wT??e.compute(kt(r[1],Qo),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=V);let B=[r[0],V];f&&B.push(r[2]);let W=l?E*R:P,j=l?P:E*R,q=C*m*b;e.compute(Ol(B,u,A,W,j,q,f,U),{inputs:B})},rg=(e,r)=>{let t=r.format==="NHWC",u=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&u.push(e.inputs[2]);let l=[0,r.pads[0],0,r.pads[1]],f=[1].concat(r.strides),d=[1].concat(r.dilations),y=[1].concat(r.kernelShape),b=Ml({...r,pads:l,strides:f,dilations:d,kernelShape:y},u);e.compute(Jo(u,b,C=>t?[C[0],C[2],C[3]]:[]))},ta=(e,r)=>{eg(e.inputs,r),e.inputs[0].dims.length===3?rg(e,r):tg(e,e.inputs,r)}});var ng,zl,Ul=le(()=>{"use strict";Se();rr();Oe();nr();lo();Ko();ni();ng=(e,r=!1,t,u,l=4)=>{let f=V=>{switch(V){case 1:return"return w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];";case 4:return`\n            let coord1 = vec4<i32>(coordX, coordY, col + 1, rowInner);\n            let coord2 = vec4<i32>(coordX, coordY, col + 2, rowInner);\n            let coord3 = vec4<i32>(coordX, coordY, col + 3, rowInner);\n            let v0 = w[getIndexFromCoords4D(coord, vec4<i32>(uniforms.w_shape))];\n            let v1 = w[getIndexFromCoords4D(coord1, vec4<i32>(uniforms.w_shape))];\n            let v2 = w[getIndexFromCoords4D(coord2, vec4<i32>(uniforms.w_shape))];\n            let v3 = w[getIndexFromCoords4D(coord3, vec4<i32>(uniforms.w_shape))];\n            return ${u}(v0, v1, v2, v3);\n            `;default:throw new Error(`innerElementSize ${V} is not supported.`)}},d=e?`\n      let coord = vec4<i32>(batch, iXR, iXC, xCh);\n      `:`\n      let coord = vec4<i32>(batch, xCh, iXR, iXC);\n      `,y=e?`\n    let coords = vec4<i32>(\n      batch,\n      row / outWidth,\n      row % outWidth,\n      col);\n    `:`\n    let coords = vec4<i32>(\n      batch,\n      row,\n      col / outWidth,\n      col % outWidth);\n    `,b=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",C=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",m=e?"row":"col",A=e?"col":"row",E=`\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      let outRow = ${m} / outWidth;\n      let outCol = ${m} % outWidth;\n\n      let WRow = ${A} / (uniforms.filter_dims[1] * inChannels);\n      let WCol = ${A} / inChannels % uniforms.filter_dims[1];\n      let xR = f32(outRow - uniforms.pads[0] + uniforms.dilations[0] * WRow) / f32(uniforms.strides[0]);\n      let xC = f32(outCol - uniforms.pads[1] + uniforms.dilations[1] * WCol) / f32(uniforms.strides[1]);\n      if (xR < 0.0 || xR >= f32(${b}) || fract(xR) > 0.0) {\n        return ${u}(0.0);\n      }\n      if (xC < 0.0 || xC >= f32(${C}) || fract(xC) > 0.0) {\n        return ${u}(0.0);\n      }\n      let iXR = i32(xR);\n      let iXC = i32(xC);\n      let xCh = ${A} % inChannels;\n      ${d}\n      return x[getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape))/${l}];`,R=e?`\n      let col = colIn * ${l};\n      if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {\n        ${E}\n      }\n      return ${u}(0.0);`:`\n      let col = colIn * ${l};\n      if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {\n        ${E}\n      }\n      return ${u}(0.0);`,P=`\n      let col = colIn * ${l};\n      let inChannels = ${e?"i32(uniforms.x_shape[3])":"i32(uniforms.x_shape[1])"};\n      let coordX = uniforms.filter_dims[0] - 1 - row / (uniforms.filter_dims[1] * inChannels);\n      let coordY = uniforms.filter_dims[1] - 1 - (row / inChannels) % uniforms.filter_dims[1];\n      if (${e?"row < uniforms.dim_inner && col < uniforms.dim_b_outer":"row < uniforms.dim_inner && col < uniforms.dim_a_outer"}  && coordX >= 0 && coordY >= 0) {\n        let rowInner = row % inChannels;\n        let coord = vec4<i32>(coordX, coordY, col, rowInner);\n        ${f(l)}\n      }\n      return ${u}(0.0);\n      `,k=Mt(t,u);return`\n  fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${u} {\n    ${e?R:P}\n  }\n\n  fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${u} {\n    ${e?P:R}\n  }\n\n  fn mm_write(batch: i32, row : i32, colIn : i32, valueInput : ${u}) {\n    let col = colIn * ${l};\n    if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {\n      var value = valueInput;\n      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};\n      ${y}\n      ${uo(r)}\n      ${k}\n      result[getIndexFromCoords4D(coords, vec4<i32>(uniforms.result_shape))/${l}] = value;\n    }\n  }`},zl=(e,r,t,u,l,f,d,y)=>{let b=r.format==="NHWC",C=b?e[0].dims[3]:e[0].dims[1],m=t[0],A=b?t[2]:t[3],E=b?t[1]:t[2],R=b?t[3]:t[1],P=b?C%4===0&&R%4===0:A%4===0&&R%4===0,k=b?R:A*E,U=b?A*E:R,V=P?[8,8,1]:[k<=4||U<=4?4:16,k>4&&U<=4?4:16,1],B=P?[4,4,1]:[k<=4?1:4,k>4&&U<=4?1:4,1],W=[Math.ceil(k/V[0]/B[0]),Math.ceil(U/V[1]/B[1]),Math.ceil(m/V[2]/B[2])];Je("verbose",()=>`[conv_backprop_mm_webgpu] dispatch = ${W}`);let j=P?4:1,q=Math.max(V[0]*j,V[1]),Q=P?4:1,te=[r.kernelShape[b?1:2],r.kernelShape[b?2:3]],ne=[te[0]+(r.dilations[0]<=1?0:(te[0]-1)*(r.dilations[0]-1)),te[1]+(r.dilations[1]<=1?0:(te[1]-1)*(r.dilations[1]-1))],J=[ne[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),ne[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],ie=[{type:6,data:u},{type:6,data:l},{type:6,data:f},{type:6,data:r.strides},{type:6,data:r.dilations},{type:6,data:te},{type:6,data:J}];zt(r,ie),ie.push(...de(e[0].dims,e[1].dims));let Ae=["rank","rank"];d&&(ie.push(...de(e[2].dims)),Ae.push("rank")),ie.push(...de(t));let De=Fe=>{let Ne=Z("x",e[0].dataType,e[0].dims.length,Q),Be=Z("w",e[1].dataType,e[1].dims.length,1),pe=se("result",e[0].dataType,t.length,Q),We=[Ne,Be],Ie="";if(d){let Te=Z("bias",e[2].dataType,e[2].dims.length,Q);We.push(Te),Ie+=`\n          fn getBiasByOutputCoords(coords : vec4<i32>) -> ${Te.type.value} {\n            return bias[coords.${b?"w":"y"}${P?"/ 4":""}];\n          }`}let $e=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"strides",type:"i32",length:2},{name:"dilations",type:"i32",length:2},{name:"filter_dims",type:"i32",length:te.length},{name:"pads",type:"i32",length:J.length}];Ut(r,$e);let ge=He(e[0].dataType,1);if(ge!=="f16"&&ge!=="f32")throw new Error(`elemType ${ge} is not supported.`);return`\n        ${co("uniforms.result_strides")}\n        ${Fe.registerUniforms($e).declareVariables(...We,pe)};\n        ${Ie}\n        ${ng(b,d,r,Ne.type.value,j)}\n        ${P?ti(B,V,ge,void 0,!b,q):ri(B,V,ge,void 0,!b,q,!1,void 0,y)}`};return{name:"Conv2DTransposeMatMul",shaderCache:{hint:`${r.cacheKey};${B};${V};${P}`,inputDependencies:Ae},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:W[0],y:W[1],z:W[2]},programUniforms:ie}),getShaderSource:De}}});var ig,ra,jl=le(()=>{"use strict";Se();rr();Re();Oe();ig=(e,r,t,u,l,f=!1,d,y,b=!1)=>{let C=b?1:2,m=b?2:3,A=b?3:1,E=f?2:1,R=`\n  fn setOutputAtIndex(flatIndex : u32, value : ${f?`vec4<${d}>`:d}) {\n    result[flatIndex] = ${f?`vec4<${d}>`:d}(value);\n  }`;u&&(R+=`\n    fn getBiasByOutputCoords(coords : vec4<u32>) -> ${f?`vec4<${d}>`:d} {\n      return bias[coords.${b?"w":"y"}${f?"/ 4":""}];\n    }`);let P=f?4:1,k=Z("W",r[1].dataType,r[1].dims.length,P),U=Z("Dy",r[0].dataType,r[0].dims.length,P),V=[U,k];u&&V.push(Z("bias",r[2].dataType,[t[A]].length,P));let B=se("result",r[0].dataType,t.length,P),W=`{\n        let batch: u32 = ${l?"global_id.z":"workgroup_id.z"} / uniforms.result_shape[1];\n        let r = ${l?"global_id.z":"workgroup_id.z"} % uniforms.result_shape[1];\n        let c = ${l?"global_id.y":"workgroup_id.y"} * ${E};\n        let d1: u32 = ${l?"global_id.x":"workgroup_id.x"} * 4;\n\n        let dyCorner = vec2<i32>(i32(r), i32(c)) - vec2<i32>(uniforms.pads);\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        var dotProd: array<vec4<${d}>, ${E}>;\n        for (var i = 0; i < ${E}; i++) {\n          dotProd[i] = vec4<${d}>(0.0);\n        }\n        for (var wR: u32 = 0; wR < uniforms.filter_dims[0]; wR = wR + 1) {\n          var dyR = (${d}(dyCorner.x) + ${d}(wR)) / ${d}(uniforms.strides.x);\n          let wRPerm = uniforms.filter_dims[0] - 1 - wR;\n          if (dyR < 0.0 || dyR >= ${d}(uniforms.Dy_shape[1]) ||\n              fract(dyR) > 0.0 || wRPerm < 0) {\n            continue;\n          }\n          let idyR: u32 = u32(dyR);\n\n          for (var wC: u32 = 0; wC < uniforms.filter_dims[1]; wC = wC + 1) {\n            let dyC = (${d}(dyCorner.y) + ${d}(wC)) / ${d}(uniforms.strides.y);\n            let dyC2 = (${d}(dyCorner.y) + 1.0 + ${d}(wC)) / ${d}(uniforms.strides.y);\n            let wCPerm = uniforms.filter_dims[1] - 1 - wC;\n            if (wCPerm < 0) {\n              continue;\n            }\n            var bDyCVal = true;\n            var bDyCVal2 = true;\n            if (dyC < 0.0 || dyC >= ${d}(uniforms.Dy_shape[2]) ||\n                fract(dyC) > 0.0) {\n              bDyCVal = false;\n            }\n            if (dyC2 < 0.0 || dyC2 >= ${d}(uniforms.Dy_shape[2]) ||\n                fract(dyC2) > 0.0) {\n              bDyCVal2 = false;\n            }\n\n            let idyC: u32 = u32(dyC);\n            let idyC2: u32 = u32(dyC2);\n            if (bDyCVal && bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2 :u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${U.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n\n                xValue =  ${U.get("batch","idyR","idyC2","d2")};\n\n                dotProd[1] = dotProd[1] + vec4<${d}>(dot(xValue, wValue0),\n                                                    dot(xValue, wValue1),\n                                                    dot(xValue, wValue2),\n                                                    dot(xValue, wValue3));\n              }\n            } else if (bDyCVal) {\n              let d2Length = uniforms.Dy_shape[${A}];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${U.get("batch","idyR","idyC","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[0] = dotProd[0] + tmpval;\n              }\n            } else if (bDyCVal2) {\n              let d2Length = uniforms.Dy_shape[3];\n              for (var d2: u32 = 0; d2 < d2Length; d2 = d2 + 4) {\n                let wValue0 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1","d2")};\n                let wValue1 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 1","d2")};\n                let wValue2 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 2","d2")};\n                let wValue3 = ${k.get("u32(wRPerm)","u32(wCPerm)","d1 + 3","d2")};\n\n                var xValue = ${U.get("batch","idyR","idyC2","d2")};\n                let tmpval = vec4<${d}>(dot(xValue, wValue0),\n                                      dot(xValue, wValue1),\n                                      dot(xValue, wValue2),\n                                      dot(xValue, wValue3));\n                dotProd[1] = dotProd[1] + tmpval;\n              }\n            }\n          }\n        }\n\n        for (var i: u32 = 0; i < ${E}; i = i + 1) {\n          let value = dotProd[i] + ${u?"bias[c+i]":`vec4<${d}>(0.0)`};\n          ${B.set("batch","r","c + i","d1","value")};\n        }\n      }`,j=`\n          let outputIndices = ${B.offsetToIndices("global_idx")};\n          let batch = ${B.indicesGet("outputIndices",0)};\n          let d1 = ${B.indicesGet("outputIndices",A)};\n          let r = ${B.indicesGet("outputIndices",C)};\n          let c = ${B.indicesGet("outputIndices",m)};\n          let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;\n          let dyRCorner = dyCorner.x;\n          let dyCCorner = dyCorner.y;\n          let groupId = d1 / uniforms.output_channels_per_group;\n          let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;\n          // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n          // ? = to be determined. : = across all values in that axis.\n          var dotProd = ${d}(0.0);\n          for (var wR: u32 = 0; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {\n            if (wR % uniforms.dilations.x != 0) {\n              continue;\n            }\n            let dyR = (${d}(dyRCorner) + ${d}(wR)) / ${d}(uniforms.strides[0]);\n            let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;\n            if (dyR < 0.0 || dyR >= ${d}(uniforms.Dy_shape[${C}]) || fract(dyR) > 0.0 ||\n                wRPerm < 0) {\n              continue;\n            }\n            let idyR: u32 = u32(dyR);\n\n            for (var wC: u32 = 0; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {\n              if (wC % uniforms.dilations.y != 0) {\n                continue;\n              }\n              let dyC = (${d}(dyCCorner) + ${d}(wC)) / ${d}(uniforms.strides.y);\n              let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;\n              if (dyC < 0.0 || dyC >= ${d}(uniforms.Dy_shape[${m}]) ||\n                  fract(dyC) > 0.0 || wCPerm < 0) {\n                continue;\n              }\n              let idyC: u32 = u32(dyC);\n              var inputChannel = groupId * uniforms.input_channels_per_group;\n              for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group; d2 = d2 + 1) {\n                let xValue = ${b?U.get("batch","idyR","idyC","inputChannel"):U.get("batch","inputChannel","idyR","idyC")};\n                let wValue = ${k.get("inputChannel","wOutChannel","u32(wRPerm)","u32(wCPerm)")};\n                dotProd = dotProd + xValue * wValue;\n                inputChannel = inputChannel + 1;\n              }\n            }\n          }\n          let value = dotProd + ${u?"bias[d1]":`${d}(0.0)`};\n          ${B.setByOffset("global_idx","value")};\n        `;return`\n  ${e.registerUniforms(y).declareVariables(...V,B)}\n  ${R}\n\n    ${e.mainStart()}\n    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};\n  ${f?W:j}}`},ra=(e,r,t)=>{let u=e.length>2,l=r.outputShape,f=X.size(l),d=[Math.ceil(f/64),1,1];Je("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${d}`);let y=r.format==="NHWC",b=["rank","rank"],C=[r.strides[0],r.strides[1]],m=[r.kernelShape[y?1:2],r.kernelShape[y?2:3]],A=[r.dilations[0],r.dilations[1]],E=[m[0]+(r.dilations[0]<=1?0:(r.kernelShape[y?1:2]-1)*(r.dilations[0]-1)),m[1]+(r.dilations[1]<=1?0:(r.kernelShape[y?2:3]-1)*(r.dilations[1]-1))],R=[E[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),E[1]-1-Math.floor(r.pads[1]+r.pads[3])/2],P=!1,k=r.group,U=e[1].dims,V=U[0]/k,B=U[1],W=[{type:6,data:f},{type:12,data:C},{type:12,data:m},{type:12,data:A},{type:12,data:E},{type:6,data:R},{type:12,data:V},{type:12,data:B},...de(e[0].dims,e[1].dims)];u&&(W.push(...de(e[2].dims)),b.push("rank")),W.push(...de(l));let j=d[1]===1&&d[2]===1,q=Q=>{let te=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:C.length},{name:"filter_dims",type:"u32",length:m.length},{name:"dilations",type:"u32",length:m.length},{name:"effective_filter_dims",type:"u32",length:E.length},{name:"pads",type:"i32",length:R.length},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],ne=He(e[0].dataType);return`${ig(Q,e,l,u,j,P,ne,te,y)}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};`,inputDependencies:b},getRunData:()=>({dispatchGroup:{x:d[0],y:d[1],z:d[2]},outputs:[{dims:t?t(l):l,dataType:e[0].dataType}],programUniforms:W}),getShaderSource:q}}});var og,ag,sg,Vl,Nl,ug,lg,dg,cg,Wl,Gl=le(()=>{"use strict";Ul();jl();nr();Fr();og=(e,r,t,u,l,f)=>(e-1)*r+t+(u-1)*l+1-f,ag=(e,r,t,u,l)=>{let f=Math.floor(e/2);r==="SAME_UPPER"?(t[u]=f,t[l]=e-f):r==="SAME_LOWER"&&(t[u]=e-f,t[l]=f)},sg=(e,r,t,u,l,f,d,y,b,C)=>{let m=e.length-2,A=C.length===0;if(b.length===0)for(let P=0;P<m;++P)b.push(0);let E=e[0],R=r[y?3:1]*l;for(let P=0,k=e.length-m-(y?1:0);P<m;++P,++k){let U=e[k],V=A?U*d[P]:C[P],B=og(U,d[P],f[P],r[k],t[P],V);ag(B,u,f,P,P+m),A&&C.push(d[P]*(U-1)+b[P]+(r[k]-1)*t[P]+1-f[P]-f[P+m])}C.splice(0,0,E),C.splice(y?3:1,0,R)},Vl=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((A,E)=>A*E,1)===0){t.length=0;for(let A=2;A<r[1].dims.length;++A)t.push(r[1].dims[A])}let u=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(u?3:1,0,r[1].dims[1]);let l=e.pads.slice(),f=e.outputShape.slice(),d=e.outputPadding.slice(),y=r[0].dims,b=e.dilations.slice();if(b.reduce((A,E)=>A+E,0)===0){let A=r[0].dims.length-2;b=new Array(A).fill(1)}let C=e.strides.slice();if(C.reduce((A,E)=>A+E,0)===0){let A=r[0].dims.length-2;C=new Array(A).fill(1)}sg(y,t,b,e.autoPad,e.group,l,C,u,d,f);let m=Object.assign({},e);return Object.assign(m,{kernelShape:t,pads:l,outputPadding:d,outputShape:f,dilations:b,strides:C}),m},Nl=e=>{let r=so(e),t=e.format,u=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],l=e.dilations,f=e.group,d=e.kernelShape,y=e.pads,b=e.strides,C=e.wIsConst(),m=e.outputPadding,A=e.outputShape;return{autoPad:u,format:t,dilations:l,group:f,kernelShape:d,outputPadding:m,outputShape:A,pads:y,strides:b,wIsConst:C,...r,cacheKey:`${e.format};${r.activation};`}},ug=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],u=e[1].dims[0];if(t!==u)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let l=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==l))throw new Error("invalid bias");let f=e[0].dims.length-2;if(r.dilations.reduce((m,A)=>m+A,0)>0&&r.dilations.length!==f)throw new Error(`dilations should be ${f}D`);if(r.strides.reduce((m,A)=>m+A,0)>0&&r.strides.length!==f)throw new Error(`strides should be ${f}D`);if(r.pads.reduce((m,A)=>m+A,0)>0&&r.pads.length!==f*2)throw new Error(`pads should be ${f*2}D`);if(r.outputPadding.length!==f&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${f}D`);if(r.kernelShape.reduce((m,A)=>m+A,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},lg=[2,3,1,0],dg=(e,r,t)=>{let u=Vl(t,r),l=t.format==="NHWC",f=u.outputShape,d=f[l?3:1],y=r[0].dims[l?3:1];if(u.group!==1||d===1&&y===1){e.compute(ra(r,u));return}let b=f[l?1:2],C=f[l?2:3],m=r[1].dims[2],A=r[1].dims[3],E=l?b*C:d,R=l?d:b*C,P=m*A*y,k=!0,U=e.kernelCustomData.wT??e.compute(kt(r[1],lg),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=U);let V=[r[0],U],B=r.length===3;B&&(!l&&r[2].dims.length===1?V.push(r[2].reshape([r[2].dims[0],1,1])):V.push(r[2])),e.compute(zl(V,u,f,E,R,P,B,k),{inputs:V})},cg=(e,r)=>{let t=r.format==="NHWC",u=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];u.length===3&&u.push(e.inputs[2]);let l=r.kernelShape;(l.length===0||l[0]===0)&&(l=[e.inputs[1].dims[2]]);let f=r.dilations;(f.length===0||f[0]===0)&&(f=[1]);let d=r.strides;(d.length===0||d[0]===0)&&(d=[1]);let y=r.pads;y.length===0&&(y=[0,0]),y=[0,y[0],0,y[1]],d=[1].concat(d),f=[1].concat(f),l=[1].concat(l);let b=Vl({...r,pads:y,strides:d,dilations:f,kernelShape:l},u);e.compute(ra(u,b,C=>t?[C[0],C[2],C[3]]:[C[0],C[1],C[3]]))},Wl=(e,r)=>{ug(e.inputs,r),e.inputs[0].dims.length===3?cg(e,r):dg(e,e.inputs,r)}});var fg,Hl,Ll,Fl=le(()=>{"use strict";Se();Re();ct();Oe();fg=(e,r,t,u)=>{let l=X.size(r),f=r.length,d=Z("input",e,f),y=se("output",e,f),b=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),C=X.normalizeAxis(b,f),m=A=>{let E=` i32(${d.indicesGet("inputIndices","uniforms.axis")}) `,R=_e("uniforms.input_shape","uniforms.axis",f),P=u.reverse?E+(u.exclusive?" + 1":""):"0",k=u.reverse?R:E+(u.exclusive?"":" + 1");return`\n                ${A.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(d,y)}\n                ${A.mainStart()}\n                  ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n                  var inputIndices = ${y.offsetToIndices("global_idx")};\n                  var sum = ${y.type.value}(0);\n                  let first : i32 = ${P};\n                  let last : i32 = ${k};\n                  for (var i : i32 = first; i < last; i++) {\n                    ${d.indicesSet("inputIndices","uniforms.axis","u32(i)")};\n                    sum = sum + ${d.getByIndices("inputIndices")};\n                  }\n                  ${y.setByOffset("global_idx","sum")};\n                }`};return{name:"CumSum",shaderCache:{hint:u.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},{type:6,data:C},...de(r,r)]}),getShaderSource:m}},Hl=(e,r)=>{let t=e.inputs[0].dims,u=e.inputs[0].dataType,l=e.inputs[1];e.compute(fg(u,t,l,r),{inputs:[0]})},Ll=e=>{let r=e.exclusive===1,t=e.reverse===1;return ke({exclusive:r,reverse:t})}});var na,mo,ql,pg,mg,ia,oa,Kl,hg,Jl,Yl,Zl=le(()=>{"use strict";Se();Re();ct();Oe();na="[a-zA-Z]|\\\\.\\\\.\\\\.",mo="("+na+")+",ql="^"+mo+"$",pg="("+mo+",)*"+mo,mg="^"+pg+"$",ia=class{constructor(r=-1){this.symbolToIndices=new Map,this.inputIndex=r}addSymbol(r,t){let u=this.symbolToIndices.get(r);u===void 0?u=[t]:u.push(t),this.symbolToIndices.set(r,u)}},oa=class{constructor(r,t){this.equation=t;this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[u,l]=t.includes("->")?t.split("->",2):[t,""];if(!u.match(RegExp(mg)))throw new Error("Invalid LHS term");if(u.split(",").forEach((y,b)=>{let C=r[b].dims.slice();if(!y.match(RegExp(ql)))throw new Error("Invalid LHS term");let m=this.processTerm(y,!0,C,b);this.lhs.push(m)}),l==="")l+=[...this.symbolToInfo.entries()].filter(([y,b])=>b.count===1||y==="...").map(([y])=>y).join("");else if(!l.match(RegExp(mo)))throw new Error("Invalid RHS");l.match(RegExp(na,"g"))?.forEach(y=>{if(y==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let b=this.symbolToInfo.get(y);if(b===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(b.dimValue)}}),this.rhs=this.processTerm(l,!1,this.outputDims)}addSymbol(r,t,u){let l=this.symbolToInfo.get(r);if(l!==void 0){if(l.dimValue!==t&&l.count!==1)throw new Error("Dimension mismatch");l.count++,l.inputIndices.push(u)}else l={count:1,dimValue:t,inputIndices:[u]};this.symbolToInfo.set(r,l)}processTerm(r,t,u,l=-1){let f=u.length,d=!1,y=[],b=0;if(!r.match(RegExp(ql))&&!t&&r!=="")throw new Error("Invalid LHS term");let C=r.match(RegExp(na,"g")),m=new ia(l);return C?.forEach((A,E)=>{if(A==="..."){if(d)throw new Error("Only one ellipsis is allowed per input term");d=!0;let R=f-C.length+1;if(R<0)throw new Error("Ellipsis out of bounds");if(y=u.slice(b,b+R),this.hasEllipsis){if(this.ellipsisDims.length!==y.length||this.ellipsisDims.toString()!==y.toString())throw new Error("Ellipsis dimensions mismatch")}else if(t)this.hasEllipsis=!0,this.ellipsisDims=y;else throw new Error("Ellipsis must be specified in the LHS");for(let P=0;P<y.length;P++){let k=String.fromCharCode("0".charCodeAt(0)+P);m.addSymbol(k,E+P),this.addSymbol(k,u[b++],l)}}else m.addSymbol(A,E+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(A,u[b++],l)}),m}},Kl=e=>e+"_max",hg=(e,r,t,u)=>{let f=e.map(m=>m.length).map((m,A)=>Z(`input${A}`,r,m)),d=X.size(u),y=se("output",r,u.length),b=[...t.symbolToInfo.keys()].filter(m=>!t.rhs.symbolToIndices.has(m)),C=m=>{let A=[],E="var prod = 1.0;",R="var sum = 0.0;",P="sum += prod;",k=[],U=[],V=[],B=[],W=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((q,Q)=>{if(t.rhs.symbolToIndices.has(Q)){let te=t.rhs.symbolToIndices.get(Q)?.[0];te!==void 0&&t.lhs.forEach((ne,J)=>{if(q.inputIndices.includes(J)){let ie=ne.symbolToIndices.get(Q);if(ie===void 0)throw new Error("Invalid symbol error");ie.forEach(Ae=>{A.push(`${f[J].indicesSet(`input${J}Indices`,Ae,y.indicesGet("outputIndices",te))}`)})}})}else t.lhs.forEach((te,ne)=>{if(q.inputIndices.includes(ne)){let J=te.symbolToIndices.get(Q);if(J===void 0)throw new Error("Invalid symbol error");J.forEach(ie=>{k.push(`${f[ne].indicesSet(`input${ne}Indices`,ie,`${Q}`)}`)}),B.push(`prod *= ${f[ne].getByIndices(`input${ne}Indices`)};`)}}),U.push(`for(var ${Q}: u32 = 0; ${Q} < uniforms.${Kl(Q)}; ${Q}++) {`),V.push("}")});let j=W?[...A,`let sum = ${f.map((q,Q)=>q.getByIndices(`input${Q}Indices`)).join(" * ")};`]:[...A,R,...U,...k,E,...B,P,...V];return`\n            ${m.registerUniforms(b.map(q=>({name:`${Kl(q)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...f,y)}\n\n            ${m.mainStart()}\n            ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n            var outputIndices = ${y.offsetToIndices("global_idx")};\n            ${f.map((q,Q)=>`var input${Q}Indices: ${f[Q].type.indices};`).join(`\n`)}\n            ${j.join(`\n`)};\n            ${y.setByOffset("global_idx","sum")};\n          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let m=b.filter(E=>t.symbolToInfo.has(E)).map(E=>({type:12,data:t.symbolToInfo.get(E)?.dimValue||0}));m.push({type:12,data:d});let A=e.map((E,R)=>[...de(E)]).reduce((E,R)=>E.concat(R),m);return A.push(...de(u)),{outputs:[{dims:u,dataType:r}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:A}},getShaderSource:C}},Jl=(e,r)=>{let t=new oa(e.inputs,r.equation),u=t.outputDims,l=e.inputs.map((f,d)=>f.dims);e.compute(hg(l,e.inputs[0].dataType,t,u))},Yl=e=>{let r=e.equation.replace(/\\s+/g,"");return ke({equation:r})}});var gg,Xl,yg,bg,Ql,ed=le(()=>{"use strict";Se();Re();Oe();gg=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),u=t.length<r.length?0:t.length-r.length,l=r.length<t.length?0:r.length-t.length;for(;u<t.length&&l<r.length;++u,++l)if(t[u]!==r[l]&&t[u]!==1&&r[l]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Xl=(e,r)=>{let t=e.length-r.length,u=[];for(let l=0;l<t;++l)u.push(e[l]);for(let l=0;l<r.length;++l)u.push(r[l]===1?e[l+t]:r[l]);return u},yg=(e,r)=>e.length>r.length?Xl(e,r):Xl(r,e),bg=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),u=yg(r,t),l=e[0].dataType,f=l===9?4:1,d=Math.ceil(X.size(u)/f),y=C=>{let m=Z("input",l,r.length,f),A=se("output",l,u.length,f),E;if(l===9){let R=(P,k,U="")=>`\n          let outputIndices${k} = ${A.offsetToIndices(`outputOffset + ${k}u`)};\n          let offset${k} = ${m.broadcastedIndicesToOffset(`outputIndices${k}`,A)};\n          let index${k} = offset${k} / 4u;\n          let component${k} = offset${k} % 4u;\n          ${P}[${k}] = ${U}(${m.getByOffset(`index${k}`)}[component${k}]);\n        `;E=`\n        let outputOffset = global_idx * ${f};\n        var data = vec4<u32>(0);\n        ${R("data",0,"u32")}\n        ${R("data",1,"u32")}\n        ${R("data",2,"u32")}\n        ${R("data",3,"u32")}\n        ${A.setByOffset("global_idx","data")}\n      }`}else E=`\n        let outputIndices = ${A.offsetToIndices("global_idx")};\n        let inputOffset = ${m.broadcastedIndicesToOffset("outputIndices",A)};\n        ${A.setByOffset("global_idx",m.getByOffset("inputOffset"))}\n      }`;return`\n    ${C.registerUniform("vec_size","u32").declareVariables(m,A)}\n    ${C.mainStart()}\n    ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n    ${E}`},b=[{type:12,data:d},...de(r,u)];return{name:"Expand",shaderCache:{hint:`${u.length}`,inputDependencies:["rank"]},getShaderSource:y,getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:b})}},Ql=e=>{gg(e.inputs),e.compute(bg(e.inputs),{inputs:[0]})}});var vg,td,rd=le(()=>{"use strict";Se();Re();Oe();ao();vg=e=>{let r=e[0].dataType,t=X.size(e[0].dims),u=X.size(e[1].dims),l=u%4===0,f=d=>{let y=Z("x",r,[1],4),b=Z("bias",r,[1],4),C=se("y",r,[1],4),m=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],A=R=>`\n      let bias${R}_offset: u32 = (global_idx * 4 + ${R}) % uniforms.bias_size;\n      let bias${R} = ${b.getByOffset(`bias${R}_offset / 4`)}[bias${R}_offset % 4];`,E=l?`\n      let bias = ${b.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${A(0)}${A(1)}${A(2)}${A(3)}\n      let bias = ${y.type.value}(bias0, bias1, bias2, bias3);`;return`${d.registerUniforms(m).declareVariables(y,b,C)}\n\n    ${Fo($t(r))}\n\n    ${d.mainStart(Qi)}\n      ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}\n\n      let x = ${y.getByOffset("global_idx")};\n      ${E}\n      let x_in = x + bias;\n      ${C.setByOffset("global_idx",qo("x_in"))}\n    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${l}`,inputDependencies:["type","type"]},getShaderSource:f,getRunData:d=>({outputs:[{dims:d[0].dims,dataType:d[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:u}],dispatchGroup:{x:Math.ceil(t/Qi/4)}})}},td=e=>{e.inputs.length<2||X.size(e.inputs[1].dims)===0?dl(e):e.compute(vg(e.inputs))}});var wg,_g,nd,id,od=le(()=>{"use strict";Se();Re();ct();Oe();wg=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},_g=(e,r)=>{let t=e[0].dims,u=e[1].dims,l=t.length,f=X.normalizeAxis(r.axis,l),d=t.slice(0);d.splice(f,1,...u);let y=t[f],b=e[0].dataType===9?4:1,C=Math.ceil(X.size(d)/b),m=[{type:12,data:C},{type:6,data:y},{type:12,data:f},...de(e[0].dims,e[1].dims,d)],A=E=>{let R=Z("data",e[0].dataType,e[0].dims.length,b),P=Z("inputIndices",e[1].dataType,e[1].dims.length),k=se("output",e[0].dataType,d.length,b),U=B=>{let W=u.length,j=`var indicesIndices${B}  = ${P.type.indices}(0);`;for(let q=0;q<W;q++)j+=`${W>1?`indicesIndices${B}[${q}]`:`indicesIndices${B}`} = ${d.length>1?`outputIndices${B}[uniforms.axis + ${q}]`:`outputIndices${B}`};`;j+=`\n          var idx${B} = ${P.getByIndices(`indicesIndices${B}`)};\n          if (idx${B} < 0) {\n            idx${B} = idx${B} + uniforms.axisDimLimit;\n          }\n          var dataIndices${B} : ${R.type.indices};\n        `;for(let q=0,Q=0;q<l;q++)q===f?(j+=`${l>1?`dataIndices${B}[${q}]`:`dataIndices${B}`} = u32(idx${B});`,Q+=W):(j+=`${l>1?`dataIndices${B}[${q}]`:`dataIndices${B}`} = ${d.length>1?`outputIndices${B}[${Q}]`:`outputIndices${B}`};`,Q++);return j},V;if(e[0].dataType===9){let B=(W,j,q="")=>`\n          let outputIndices${j} = ${k.offsetToIndices(`outputOffset + ${j}u`)};\n          ${U(j)};\n          let offset${j} = ${R.indicesToOffset(`dataIndices${j}`)};\n          let index${j} = offset${j} / 4u;\n          let component${j} = offset${j} % 4u;\n          ${W}[${j}] = ${q}(${R.getByOffset(`index${j}`)}[component${j}]);\n        `;V=`\n        let outputOffset = global_idx * ${b};\n        var value = vec4<u32>(0);\n        ${B("value",0,"u32")}\n        ${B("value",1,"u32")}\n        ${B("value",2,"u32")}\n        ${B("value",3,"u32")}\n        ${k.setByOffset("global_idx","value")}\n      `}else V=`\n      let outputIndices = ${k.offsetToIndices("global_idx")};\n      ${U("")};\n      let value = ${R.getByIndices("dataIndices")};\n      ${k.setByOffset("global_idx","value")};\n      `;return`\n      ${E.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(R,P,k)}\n      ${E.mainStart()}\n        ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        ${V}\n      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:d,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:m}),getShaderSource:A}},nd=e=>ke({axis:e.axis}),id=(e,r)=>{let t=e.inputs;wg(t),e.compute(_g(e.inputs,r))}});var $g,Cg,ad,sd,ud=le(()=>{"use strict";Se();Re();ct();Oe();$g=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and\n                     indices input tensors be of same rank.`)},Cg=(e,r)=>{let t=e[0].dims,u=e[0].dataType,l=t.length,f=e[1].dims,d=e[1].dataType,y=X.normalizeAxis(r.axis,l),b=t[y],C=f.slice(0),m=X.size(C),A=Z("input",u,l),E=Z("indicesInput",d,f.length),R=se("output",u,C.length),P=[{type:12,data:m},{type:6,data:b},{type:12,data:y}];return P.push(...de(t,f,C)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:C,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(m/64)},programUniforms:P}),getShaderSource:V=>`\n      ${V.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(A,E,R)}\n      ${V.mainStart()}\n      ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n      let outputIndices = ${R.offsetToIndices("global_idx")};\n\n      var idx = ${E.getByOffset("global_idx")};\n      if (idx < 0) {\n        idx = idx + uniforms.axisDimLimit;\n      }\n      var inputIndices = ${A.type.indices}(outputIndices);\n      ${A.indicesSet("inputIndices","uniforms.axis","u32(idx)")};\n      let value = ${A.getByIndices("inputIndices")};\n\n      ${R.setByOffset("global_idx","value")};\n  }`}},ad=e=>ke({axis:e.axis}),sd=(e,r)=>{let t=e.inputs;$g(t),e.compute(Cg(e.inputs,r))}});var Sg,xg,ld,dd,cd=le(()=>{"use strict";Se();Re();Oe();Sg=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},xg=(e,r)=>{let t=e[0].dims.slice(),u=e[1].dims.slice(),[l,f,d]=Yi.getShapeOfGemmResult(t,r.transA,u,r.transB,e.length===3?e[2].dims:void 0),y=[l,f];if(!y)throw new Error("Can\'t use gemm on the given tensors");let b=X.size(y),C=[{type:12,data:b},{type:12,data:l},{type:12,data:f},{type:12,data:d},{type:1,data:r.alpha},{type:1,data:r.beta}],m=["type","type"];e.length===3&&(C.push(...de(e[2].dims)),m.push("rank")),C.push(...de(y));let A=E=>{let R="";r.transA&&r.transB?R="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?R="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?R="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(R="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let P=r.alpha===1?"":"value *= uniforms.alpha;",k=Z("a",e[0].dataType,e[0].dims),U=Z("b",e[1].dataType,e[1].dims),V=k.type.value,B=null,W=[k,U];e.length===3&&(B=Z("c",e[2].dataType,e[2].dims.length),W.push(B));let j=se("output",e[0].dataType,y.length);W.push(j);let q=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`\n  ${E.registerUniforms(q).declareVariables(...W)}\n\n  ${E.mainStart()}\n    ${E.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n    let m = global_idx / uniforms.N;\n    let n = global_idx % uniforms.N;\n\n    var value = ${V}(0);\n    for (var k: u32 = 0u; k < uniforms.K; k++) {\n      ${R}\n    }\n\n    ${P}\n    ${(()=>B!=null?`let cOffset = ${B.broadcastedIndicesToOffset("vec2(m, n)",j)}; value += ${V}(uniforms.beta) * ${B.getByOffset("cOffset")};`:"")()}\n    output[global_idx] = value;\n  }`};return{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:y,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:C}),getShaderSource:A}},ld=e=>{let r=e.transA,t=e.transB,u=e.alpha,l=e.beta;return{transA:r,transB:t,alpha:u,beta:l,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},dd=(e,r)=>{Sg(e.inputs),e.compute(xg(e.inputs,r))}});var Ag,Ig,Tg,fd,pd=le(()=>{"use strict";Se();Re();Oe();Ag=(e,r)=>{let t=e[0].dims,u=t,l=2,f=X.sizeToDimension(t,l),d=X.sizeFromDimension(t,l),y=Ye(d),b=d/y,C=[t[0],t[1],b],m=["rank","type","type"],A=[{type:12,data:d},{type:12,data:b}];A.push(...de(C,C));let E=R=>{let P=Z("x",e[0].dataType,C.length,y),k=Z("scale",e[1].dataType,e[1].dims),U=Z("bias",e[2].dataType,e[2].dims),V=se("output",e[0].dataType,C.length,y),B=[P,k,U,V],W=P.type.value,j=y===1?"f32":`vec${y}<f32>`,q=64,Q=[{name:"normSize",type:"u32"},{name:"normPackedSize",type:"u32"}];return`\n  var<workgroup> meanShared : f32;\n  var<workgroup> squaredNormShared : f32;\n  var<workgroup> workgroupShared : array<${j}, ${q}>;\n  const workgroupSize = ${q}u;\n  ${R.registerUniforms(Q).declareVariables(...B)}\n  ${R.mainStart(q)}\n    let norm = global_idx / workgroupSize;\n    let batch = norm / uniforms.x_shape[1];\n    let channel = norm % uniforms.x_shape[1];\n    let localIndex = local_id.x;\n\n    // initialize workgroup memory\n    var initial = ${j}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      initial = initial + ${j}(${P.get("batch","channel","h")});\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the mean of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      meanShared = ${Ct("workgroupShared[0]",y)} / f32(uniforms.normSize);\n    }\n    workgroupBarrier();\n\n    // reinitialize workgroup memory.\n    initial = ${j}(0);\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let deviation =  ${j}(${P.get("batch","channel","h")}) - ${j}(meanShared);\n      initial = initial + deviation * deviation;\n    }\n    workgroupShared[localIndex] = initial;\n    workgroupBarrier();\n\n    // Calculate the sum of square of deviation of current channel data.\n    for (var currSize = workgroupSize >> 1;  currSize > 0; currSize = currSize >> 1) {\n      if (localIndex < currSize) {\n        workgroupShared[localIndex] = workgroupShared[localIndex] + workgroupShared[localIndex + currSize];\n      }\n      workgroupBarrier();\n    }\n    if (localIndex == 0) {\n      squaredNormShared = ${Ct("workgroupShared[0]",y)};\n    }\n    workgroupBarrier();\n\n    let invStdDev = inverseSqrt(squaredNormShared / f32(uniforms.normSize) + f32(${r.epsilon}));\n    let channelScale = invStdDev * f32(${k.getByOffset("channel")});\n    let channelShift = f32(${U.getByOffset("channel")}) - meanShared * channelScale;\n    for (var h = localIndex; h < uniforms.normPackedSize; h += workgroupSize) {\n      let value = ${P.get("batch","channel","h")} * ${W}(${j}(channelScale)) + ${W}(${j}(channelShift));\n      ${V.set("batch","channel","h","value")};\n    }\n  }`};return{name:"InstanceNormalization",shaderCache:{hint:`${r.epsilon};${y}`,inputDependencies:m},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:f},programUniforms:A}),getShaderSource:E}},Ig=(e,r,t,u,l,f,d,y)=>{let b=Ye(d),C=64,m=b===1?"vec2f":`mat2x${b}f`,A=b===1?"f32":`vec${b}f`,E=(Q,te)=>`${m}(${Q}, ${te})`,R=l*d/b,P=Math.ceil(f/C),k=["type"],U=[{type:12,data:P},{type:12,data:f},{type:12,data:Math.floor(d/b)},{type:12,data:Math.floor(f*d/b)}],V=Q=>{let te=Z("input",r.dataType,r.dims,b);return`\n  ${Q.declareVariables(te)}\n  @group(0) @binding(1) var<storage, read_write> output : array<${m}>;\n  struct Uniforms {wg_size:u32, H:u32, C:u32, image_size:u32};\n  @group(0) @binding(2) var<uniform> uniforms: Uniforms;\n\n  ${Q.mainStart(C)}\n    let currentImageNumber = global_idx / ${C} / uniforms.C;\n    let currentChannelNumber = (global_idx / ${C}) % uniforms.C;\n    let wgId = global_idx % ${C};\n    let wgOffset = wgId * uniforms.wg_size;\n    if (wgOffset >= uniforms.H) {\n        return;\n    }\n    let wgMax = min(wgOffset + uniforms.wg_size, uniforms.H);\n\n    let offset = currentImageNumber * uniforms.image_size + currentChannelNumber;\n    var sum = ${mt("f32",b)};\n    var squaredSum = ${mt("f32",b)};\n    for (var i: u32 = wgOffset; i < wgMax; i++) {\n        let value = ${A}(input[offset + i * uniforms.C]);\n        sum += value;\n        squaredSum += value * value;\n    }\n    output[global_idx] = ${E("sum","squaredSum")};\n  }`},B=e.compute({name:"InstanceNormComputeMean",shaderCache:{hint:`${b}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:[l,d,C,2],dataType:1}],dispatchGroup:{x:l*d/b},programUniforms:U}),getShaderSource:V},{inputs:[r],outputs:[-1]})[0],W=[{type:12,data:R},{type:12,data:f},{type:12,data:Math.floor(d/b)},{type:12,data:Math.floor(C*d/b)}],j=["type","type","type"],q=Q=>{let te=Z("scale",t.dataType,t.dims,b),ne=Z("bias",u.dataType,u.dims,b);return`\n  @group(0) @binding(0) var<storage, read> input : array<${m}>;\n  @group(0) @binding(1) var<storage, read> scale : array<${te.type.storage}>;\n  @group(0) @binding(2) var<storage, read> bias : array<${ne.type.storage}>;\n  @group(0) @binding(3) var<storage, read_write> output : array<${m}>;\n  struct Uniforms {units_of_work : u32, H: u32, C : u32, image_size : u32};\n  @group(0) @binding(4) var<uniform> uniforms: Uniforms;\n\n  ${Q.mainStart()}\n    ${Q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.units_of_work")}\n    let currentImageNumber = global_idx / uniforms.C;\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let offset = currentImageNumber * uniforms.image_size;\n    var sum = ${mt("f32",b)};\n    var squaredSum = ${mt("f32",b)};\n    for (var i: u32 = 0; i < ${C}; i++) {\n        let value = input[offset + i + currentChannelNumber * ${C}];\n        sum += value[0];\n        squaredSum += value[1];\n    }\n    sum = sum / f32(uniforms.H);\n    squaredSum = squaredSum / f32(uniforms.H);\n    let invStdDev = inverseSqrt(squaredSum - sum * sum + f32(${y}));\n    let channelScale = invStdDev * ${A}(scale[currentChannelNumber]);\n    let channelShift = ${A}(bias[currentChannelNumber]) - sum * channelScale;\n\n    output[global_idx] = ${E("channelScale","channelShift")};\n  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${b};${y}`,inputDependencies:j},getRunData:()=>({outputs:[{dims:[l,d,2],dataType:1}],dispatchGroup:{x:Math.ceil(R/64)},programUniforms:W}),getShaderSource:q},{inputs:[B,t,u],outputs:[-1]})[0]},Tg=(e,r,t)=>{let u=r[0].dims,l=u,f=u[0],d=u[u.length-1],y=X.sizeFromDimension(u,1)/d,b=Ye(d),C=X.size(l)/b,m=[{type:12,data:y},{type:12,data:Math.floor(d/b)}],A=["type","type"],E=Ig(e,r[0],r[1],r[2],f,y,d,t.epsilon),R=P=>{let k=He(r[0].dataType),U=b===1?"vec2f":`mat2x${b}f`,V=b===1?k:`vec${b}<${k}>`,B=Z("input",r[0].dataType,r[0].dims,b),W=se("output",r[0].dataType,l,b);return`\n  @group(0) @binding(0) var<storage, read> input : array<${B.type.storage}>;\n  @group(0) @binding(1) var<storage, read> scaleInput : array<${U}>;\n  @group(0) @binding(2) var<storage, read_write> output : array<${W.type.storage}>;\n  struct Uniforms {H: u32, C : u32};\n  @group(0) @binding(3) var<uniform> uniforms: Uniforms;\n\n  ${P.mainStart()}\n    let currentImageNumber = global_idx / (uniforms.C * uniforms.H);\n    let currentChannelNumber = global_idx % uniforms.C;\n\n    let scaleOffset = currentImageNumber * uniforms.C + currentChannelNumber;\n    let scale = scaleInput[scaleOffset];\n    output[global_idx] = fma(input[global_idx], ${V}(scale[0]), ${V}(scale[1]));\n  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${b}`,inputDependencies:A},getRunData:()=>({outputs:[{dims:l,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(C/64)},programUniforms:m}),getShaderSource:R},{inputs:[r[0],E]})},fd=(e,r)=>{r.format==="NHWC"?Tg(e,e.inputs,r):e.compute(Ag(e.inputs,r))}});var Eg,Pg,md,hd=le(()=>{"use strict";Se();Re();Oe();Eg=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},Pg=(e,r,t)=>{let u=e[0].dims,l=e[1],f=e[2],d=u,y=X.normalizeAxis(r.axis,u.length),b=X.sizeToDimension(u,y),C=X.sizeFromDimension(u,y),m=X.size(l.dims),A=f?X.size(f.dims):0;if(m!==C||f&&A!==C)throw new Error(`Size of X.shape()[axis:] == ${C}.\n       Size of scale and bias (if provided) must match this.\n       Got scale size of ${m} and bias size of ${A}`);let E=[];for(let j=0;j<u.length;++j)j<y?E.push(u[j]):E.push(1);let R=Ye(C),P=["type","type"],k=[{type:12,data:b},{type:1,data:C},{type:12,data:Math.floor(C/R)},{type:1,data:r.epsilon}];f&&P.push("type");let U=t>1,V=t>2,B=j=>{let q=He(e[0].dataType),Q=[Z("x",e[0].dataType,e[0].dims,R),Z("scale",l.dataType,l.dims,R)];f&&Q.push(Z("bias",f.dataType,f.dims,R)),Q.push(se("output",e[0].dataType,d,R)),U&&Q.push(se("mean_data_output",1,E)),V&&Q.push(se("inv_std_output",1,E));let te=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`\n  ${j.registerUniforms(te).declareVariables(...Q)}\n  ${j.mainStart()}\n    ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}\n    let offset = global_idx * uniforms.norm_size_vectorized;\n    var mean_vector = ${mt("f32",R)};\n    var mean_square_vector = ${mt("f32",R)};\n\n    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {\n      let value = ${Dt(q,R,"x[h + offset]")};\n      mean_vector += value;\n      mean_square_vector += value * value;\n    }\n    let mean = ${Ct("mean_vector",R)} / uniforms.norm_size;\n    let inv_std_dev = inverseSqrt(${Ct("mean_square_vector",R)} / uniforms.norm_size - mean * mean + uniforms.epsilon);\n\n    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {\n      let f32input = ${Dt(q,R,"x[j + offset]")};\n      let f32scale = ${Dt(q,R,"scale[j]")};\n      output[j + offset] = ${Q[0].type.value}((f32input - mean) * inv_std_dev * f32scale\n        ${f?`+ ${Dt(q,R,"bias[j]")}`:""}\n      );\n    }\n\n    ${U?"mean_data_output[global_idx] = mean":""};\n    ${V?"inv_std_output[global_idx] = inv_std_dev":""};\n  }`},W=[{dims:d,dataType:e[0].dataType}];return U&&W.push({dims:E,dataType:1}),V&&W.push({dims:E,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${R};${t}`,inputDependencies:P},getRunData:()=>({outputs:W,dispatchGroup:{x:Math.ceil(b/64)},programUniforms:k}),getShaderSource:B}},md=(e,r)=>{Eg(e.inputs),e.compute(Pg(e.inputs,r,e.outputCount))}});var Og,kg,gd,yd,bd=le(()=>{"use strict";Se();Re();ct();Oe();Og=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],u=t.dims.length;if(t.dims[u-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let l=Math.floor((r.k+r.blockSize-1)/r.blockSize),f=r.blockSize/8*r.bits,d=e[1];if(!X.areEqual(d.dims,[r.n,l,f]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let b=e[2].dims;if(X.size(b)!==r.n*l)throw new Error("scales input size error.");if(e.length===4){let m=e[3].dims,A=r.bits>4?r.n*l:r.n*Math.floor((l+1)/2);if(X.size(m)!==A)throw new Error("zeroPoints input size error.")}},kg=(e,r)=>{let t=e[0].dims,u=t.length,l=t.slice(0,u-1).concat(r.n),f=t[u-2],y=r.blockSize/8*r.bits/4,b=Ye(f),C=Ye(r.n),m=Ye(r.k),A=Ye(y),E=X.size(l)/C/b,R=[{type:12,data:E},{type:12,data:r.k},{type:12,data:r.n},{type:12,data:r.accuracyLevel},{type:12,data:r.bits},{type:12,data:r.blockSize}],P=t.slice();P.splice(-1,1,r.k/m);let k=X.convertShape(e[1].dims).slice();k.splice(-1,1,y/A),R.push(...de(P)),R.push(...de(k)),R.push(...de(e[2].dims)),e.length===4&&R.push(...de(X.convertShape(e[3].dims)));let U=l.slice();U.splice(-1,1,r.n/C),R.push(...de(U));let V=B=>{let W=Z("a",e[0].dataType,P.length,m),j=Z("b",12,k.length,A),q=Z("scales",e[2].dataType,e[2].dims.length),Q=[W,j,q],te=e.length===4?Z("zero_points",12,e[3].dims.length):void 0;te&&Q.push(te);let ne=se("output",e[0].dataType,l.length,C),J=[{name:"output_size",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"accuracy_level",type:"u32"},{name:"bits",type:"u32"},{name:"block_size",type:"u32"}],ie=Math.floor((r.k+r.blockSize-1)/r.blockSize),Ae=He(e[0].dataType),De=(()=>{switch(m){case 1:return`array<${Ae}, 8>`;case 2:return`mat4x2<${Ae}>`;case 4:return`mat2x4<${Ae}>`;default:throw new Error(`${m}-component is not supported.`)}})(),Fe=`\n        fn dequantize(quantized: ${De}, zero_point: ${Ae}, scale: ${Ae}) -> ${De} {\n          ${(()=>m===1?`var dequantized = ${De}(${Array.from({length:8},(pe,We)=>`(quantized[${We}] - zero_point) * scale`).join(", ")});\n              return dequantized;`:`var zero_points: ${De} = ${De}(${Array(8).fill("zero_point").join(",")});\n              return (quantized - zero_points) * scale;`)()}\n        }`,Ne=`\n        fn ortUnpack8x4snorm(value: u32) -> ${De} {\n          var quantized: ${De};\n          var offset: u32 = 0;\n          let count: u32 = 4;\n          for (var i: u32 = 0; i < 8u; i++) {\n            var result = ${Ae}(extractBits(value, offset, count));\n            ${(()=>{switch(m){case 1:return"quantized[i] = result;";case 2:return"quantized[i / 2][i % 2] = result;";case 4:return"quantized[i / 4][i % 4] = result;";default:throw new Error(`${m}-component is not supported.`)}})()}\n            offset += count;\n          }\n          return quantized;\n        }`,Be=te?`\n          zero_point_offset += 4;\n          if (zero_point_offset == 32) {\n            zero_point_offset = 0;\n            zero_point_index++;\n            zero_point_word = ${te.getByOffset("zero_point_index")};\n          }`:"";return`\n        ${Fe};\n        ${Ne};\n        ${B.registerUniforms(J).declareVariables(...Q,ne)}\n        ${B.mainStart()}\n          ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n          var output_values: array<${ne.type.value}, ${b}>;\n          var output_indices = ${ne.offsetToIndices("global_idx")};\n          var n = ${ne.indicesGet("output_indices",u-1)};\n          var m = ${ne.indicesGet("output_indices",u-2)};\n          var a_indices: ${W.type.indices} = output_indices;\n          // Two zero points are packed into one byte because uniforms.bits <= 4.\n          // zero_point_offset is either 0 or 4. It is bit offset within one byte.\n          // TODO support zero_point_offset for bits > 4\n          ${te?`\n          var zero_point_index: u32 = n * ${C} * ((${ie} + 1) / 2) / 4;\n          var zero_point_word: u32 = ${te.getByOffset("zero_point_index")};\n          var zero_point_offset: u32 = 0;`:""}\n          var scale_index = n * ${ie*C};\n          var b_indices: ${j.type.indices};\n          for (var c: u32 = 0; c < ${C}; c++) {\n            ${j.indicesSet("b_indices","0",`n * ${C} + c`)};\n            var block_offset: u32 = 0;\n            for (var block: u32 = 0; block < ${ie}; block++) {\n              // The scale and zero points are computed per block.\n              let scale = ${q.getByOffset("scale_index")};\n              // The default zero point is 8 for unsigned 4-bit quantization.\n              let zero_point = ${Ae}(${te?"extractBits(zero_point_word, zero_point_offset, 4)":8});\n              ${j.indicesSet("b_indices","1","block")};\n              var word_offset: u32 = block_offset;\n              for (var word: u32 = 0; word < ${y}; word += ${A}) {\n                ${j.indicesSet("b_indices","2","word")};\n                let b_data = ${j.getByIndices("b_indices")};\n                for (var i: u32 = 0; i < ${A}; i++) {\n                  let b_value = ${A===1?"b_data":"b_data[word + i]"};\n                  let b_quantized_values: ${De} = ortUnpack8x4snorm(b_value);\n                  let b_dequantized_values = dequantize(b_quantized_values, zero_point, scale);\n                  // Number of B elements per 32-bit word is 32/bits = 32/4 = 8\n                  var offset: u32 = word_offset;\n                  for (var j: u32 = 0; j < 8/${m}; j++) {\n                    ${W.indicesSet("a_indices",u-1,`offset/${m}`)};\n                    for (var k: u32 = 0; k < ${b}u; k++) {\n                      ${W.indicesSet("a_indices",u-2,`m * ${b} + k`)};\n                      let a_data = ${W.getByIndices("a_indices")};\n                      output_values[k]${C>1?"[c]":""} += ${m===1?"a_data * b_dequantized_values[j]":"dot(a_data, b_dequantized_values[j])"};\n                    }\n                    offset += ${m};\n                  }\n                  word_offset += 8;\n                }\n              }\n              scale_index++;\n              ${Be}\n              block_offset += uniforms.block_size;\n            }\n            // Drop the trailing 4 bits if the zero_poit_offset is not a byte boundary to align with the next byte.\n            ${te?`if (zero_point_offset % 8 > 0) {\n                ${Be}\n              }`:""}\n            }\n            for (var k: u32 = 0u; k < ${b}u; k++) {\n              ${ne.indicesSet("output_indices",u-2,`${b+" * m + k"}`)};\n              ${ne.setByIndices("output_indices","output_values[k]")}\n            }\n        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.cacheKey};${e.length}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:l,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:R}),getShaderSource:V}},gd=(e,r)=>{Og(e.inputs,r),e.compute(kg(e.inputs,r))},yd=e=>ke(e)});var Rg,wd,vd,Bg,aa,_d,$d=le(()=>{"use strict";Se();Re();ct();Ki();Lo();Oe();Fr();Rg=(e,r)=>{let t=e[0],u=e[1],l=e[2],f=e[3],d=e[4],y=e[5],b=e[6],C=e[7];if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let m=!1,A=t.dims[0],E=t.dims[1],R=t.dims.length===3?m?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],P=E,k=0,U=0,V=Math.floor(R/r.numHeads);if(b&&C){if(b.dims.length!==4)throw new Error(\'Input "past_key" is expected to have 4 dimensions\');if(C.dims.length!==4)throw new Error(\'Input "past_value" is expected to have 4 dimensions\');k=b.dims[2],U=b.dims[2]}else if(b||C)throw new Error(\'Input "past_key" and "past_value" shall be both present or both absent\');let B;if(u){if(t.dims.length!==3)throw new Error(\'Input "query" is expected to have 3 dimensions when key is given\');if(u.dims.length<3||u.dims.length>5)throw new Error(\'Input "key" is expected to have 3, 4, or 5 dimensions\');if(t.dims[0]!==u.dims[0])throw new Error(\'Input "query" and "key" shall have same dim 0 (batch size)\');if(u.dims.length===3){if(u.dims[2]!==t.dims[2])throw new Error(\'Input "query" and "key" shall have same dim 2 (hidden_size)\');B=2,P=u.dims[1]}else if(u.dims.length===5){if(u.dims[2]!==r.numHeads||u.dims[3]!==2||u.dims[4]!==V)throw new Error(\'Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv\');if(l)throw new Error(\'Expect "value" be none when "key" has packed kv format.\');B=5,P=u.dims[1]}else{if(u.dims[1]!==r.numHeads||u.dims[3]!==V)throw new Error(\'Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key\');B=0,P=u.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error(\'Input "query" is expected to have 3 or 5 dimensions when key is empty\');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error(\'Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv\');B=3}if(f){if(f.dims.length!==1)throw new Error(\'Input "bias" is expected to have 1 dimension\');if(l&&t.dims.length===5&&t.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let W=0;if(d){W=8;let ne=d.dims;throw ne.length===1?ne[0]===A?W=1:ne[0]===3*A+2&&(W=3):ne.length===2&&ne[0]===A&&ne[1]===P&&(W=5),W===8?new Error(\'Input "key_padding_mask" shape shall be (batch_size) or (batch_size, kv_sequence_length)\'):new Error("Mask not supported")}let j=!1,q=R;if(l){if(l.dims.length!==3&&l.dims.length!==4)throw new Error(\'Input "value" is expected to have 3 or 4 dimensions\');if(t.dims[0]!==l.dims[0])throw new Error(\'Input "query" and "value" shall have same dim 0 (batch_size)\');if(l.dims.length===3){if(P!==l.dims[1])throw new Error(\'Input "key" and "value" shall have the same dim 1 (kv_sequence_length)\');q=l.dims[2]}else{if(P!==l.dims[2])throw new Error(\'Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)\');q=l.dims[1]*l.dims[3],j=!0}}let Q=k+P,te=!1;if(d)throw new Error("Key padding mask is not supported");if(y)throw new Error("extraAddQk is not supported");if(b)throw new Error("pastKey is not supported");if(C)throw new Error("pastValue is not supported");return{batchSize:A,sequenceLength:E,pastSequenceLength:k,kvSequenceLength:P,totalSequenceLength:Q,maxSequenceLength:U,inputHiddenSize:0,hiddenSize:R,vHiddenSize:q,headSize:V,vHeadSize:Math.floor(q/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:W,scale:r.scale,broadcastResPosBias:te,passPastInKv:j,qkvFormat:B}},wd=e=>ke({...e}),vd=ke({perm:[0,2,1,3]}),Bg=(e,r,t,u,l,f,d)=>{let y=[u,l,f],b=X.size(y),C=[{type:12,data:b},{type:12,data:d},{type:12,data:f}],m=A=>{let E=se("qkv_with_bias",r.dataType,y),R=Z("qkv",r.dataType,y),P=Z("bias",t.dataType,y),k=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`\n  ${A.registerUniforms(k).declareVariables(R,P,E)}\n  ${A.mainStart()}\n    ${A.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;\n\n    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];\n  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:y,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(b/64)},programUniforms:C}),getShaderSource:m},{inputs:[r,t],outputs:[-1]})[0]},aa=(e,r,t,u,l,f,d,y)=>{let b=f;if(d){if(u===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return b=Bg(e,f,d,r,u,t*l,y),b=b.reshape([r,u,t,l]),e.compute(kt(b,vd.perm),{inputs:[b],outputs:[-1]})[0]}else return f.dims.length===3&&(b=f.reshape([r,u,t,l])),e.compute(kt(b,vd.perm),{inputs:[b],outputs:[-1]})[0]},_d=(e,r)=>{let t=Rg(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let u=e.inputs[1]&&e.inputs[2]&&e.inputs[1].dims.length===4&&e.inputs[2].dims.length===4,l=aa(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,e.inputs[0],e.inputs[3],0);if(u)return no(e,l,e.inputs[1],e.inputs[2],e.inputs[4],void 0,void 0,void 0,e.inputs[5],t,r);let f=aa(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,e.inputs[1],e.inputs[3],t.hiddenSize),d=aa(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,e.inputs[2],e.inputs[3],2*t.hiddenSize);no(e,l,f,d,e.inputs[4],void 0,e.inputs[6],e.inputs[7],e.inputs[5],t,r)}});var Dg,Mg,zg,Ug,jg,Vg,Ng,Wg,Cd,Sd=le(()=>{"use strict";Se();Re();Oe();Dg=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},Mg=(e,r,t)=>{let u="";for(let l=r-1;l>=0;--l)u+=`\n            k = i32(${e.indicesGet("indices",l)}) - ${_e("uniforms.pads",l,t)};\n            if (k < 0) {\n              break;\n            }\n            if (k >= i32(${_e("uniforms.x_shape",l,r)})) {\n              break;\n            }\n            offset += k * i32(${_e("uniforms.x_strides",l,r)});\n        `;return`\n          value = ${e.type.value}(uniforms.constant_value);\n          for (var i = 0; i < 1; i++) {\n            var offset = 0;\n            var k = 0;\n            ${u}\n            value = x[offset];\n          }\n      `},zg=(e,r,t)=>{let u="";for(let l=r-1;l>=0;--l)u+=`\n                k = i32(${e.indicesGet("indices",l)}) - ${_e("uniforms.pads",l,t)};\n                if (k < 0) {\n                  k = -k;\n                }\n                {\n                  let _2n_1 = 2 * (i32(${_e("uniforms.x_shape",l,r)}) - 1);\n                  k = k % _2n_1;\n                  if(k >= i32(${_e("uniforms.x_shape",l,r)})) {\n                    k = _2n_1 - k;\n                  }\n                }\n                offset += k * i32(${_e("uniforms.x_strides",l,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},Ug=(e,r,t)=>{let u="";for(let l=r-1;l>=0;--l)u+=`\n                k = i32(${e.indicesGet("indices",l)}) - ${_e("uniforms.pads",l,t)};\n                if (k < 0) {\n                  k = 0;\n                }\n                if (k >= i32(${_e("uniforms.x_shape",l,r)})) {\n                  k = i32(${_e("uniforms.x_shape",l,r)}) - 1;\n                }\n                offset += k * i32(${_e("uniforms.x_strides",l,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},jg=(e,r,t)=>{let u="";for(let l=r-1;l>=0;--l)u+=`\n                k = i32(${e.indicesGet("indices",l)}) - ${_e("uniforms.pads",l,t)};\n                if (k < 0)  {\n                  k += i32(${_e("uniforms.x_shape",l,r)}]);\n                }\n                if (k >= i32(${_e("uniforms.x_shape",l,r)})) {\n                  k -= i32(${_e("uniforms.x_shape",l,r)});\n                }\n                offset += k * i32(${_e("uniforms.x_strides",l,r)});\n            `;return`\n              var offset = 0;\n              var k = 0;\n              ${u}\n              value = x[offset];\n          `},Vg=(e,r,t)=>{switch(t.mode){case 0:return Mg(e,r,t.pads.length);case 1:return zg(e,r,t.pads.length);case 2:return Ug(e,r,t.pads.length);case 3:return jg(e,r,t.pads.length);default:throw new Error("Invalid mode")}},Ng=(e,r)=>{let t=X.padShape(e[0].dims.slice(),r.pads),u=e[0].dims,l=X.size(t),f=[{type:12,data:l},{type:12,data:r.pads}];r.mode===0&&f.push({type:e[0].dataType,data:r.value}),f.push(...de(e[0].dims,t));let d=["rank"],y=b=>{let C=se("output",e[0].dataType,t.length),m=Z("x",e[0].dataType,u.length),A=m.type.value,E=Vg(C,u.length,r),R=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&R.push({name:"constant_value",type:A}),`\n            ${b.registerUniforms(R).declareVariables(m,C)}\n            ${b.mainStart()}\n            ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n\n            let indices = ${C.offsetToIndices("global_idx")};\n\n            var value = ${A}(0);\n            ${E}\n            output[global_idx] = value;\n        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(X.size(t)/64)},programUniforms:f}),getShaderSource:y}},Wg=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),u=e.length>=3&&e[2].data?e[2].getFloat32Array()[0]:0,l=e[0].dims.length,f=new Int32Array(2*l).fill(0);if(e.length>=4){let y=e[3].getBigInt64Array();for(let b=0;b<y.length;b++)f[Number(y[b])]=Number(t[b]),f[Number(y[b])+l]=Number(t[b+y.length])}else t.forEach((y,b)=>f[Number(b)]=Number(y));let d=[];return f.forEach(y=>d.push(y)),{mode:r.mode,value:u,pads:d}}else return r},Cd=(e,r)=>{Dg(e.inputs);let t=Wg(e.inputs,r);e.compute(Ng(e.inputs,t),{inputs:[0]})}});var ho,xd,Ad,Id,Td,Gg,Hg,Ed,Pd,Od,kd,Rd,Bd,Dd,Md,zd,Ud,jd,Vd,Nd=le(()=>{"use strict";Hr();Se();Re();Oe();ho=e=>{if(Gr.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},xd=(e,r,t)=>{let u=r.format==="NHWC",l=e.dims.slice();u&&l.splice(1,0,l.pop());let f=Object.hasOwnProperty.call(r,"dilations"),d=r.kernelShape.slice(),y=r.strides.slice(),b=f?r.dilations.slice():[],C=r.pads.slice();yr.adjustPoolAttributes(t,l,d,y,b,C);let m=yr.computePoolOutputShape(t,l,y,b,d,C,r.autoPad),A=Object.assign({},r);f?Object.assign(A,{kernelShape:d,strides:y,pads:C,dilations:b,cacheKey:r.cacheKey}):Object.assign(A,{kernelShape:d,strides:y,pads:C,cacheKey:r.cacheKey});let E=m.slice();return E.push(E.splice(1,1)[0]),[A,u?E:m]},Ad=(e,r)=>{let t=r.format==="NHWC",u=X.size(e),l=X.size(r.kernelShape),f=[{type:12,data:u},{type:12,data:l}],d=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let y=r.kernelShape[r.kernelShape.length-1],b=r.strides[r.strides.length-1],C=r.pads[r.pads.length/2-1],m=r.pads[r.pads.length-1],A=!!(C+m);f.push({type:12,data:y},{type:12,data:b},{type:12,data:C},{type:12,data:m}),d.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let E=!1;if(r.kernelShape.length===2){let R=r.kernelShape[r.kernelShape.length-2],P=r.strides[r.strides.length-2],k=r.pads[r.pads.length/2-2],U=r.pads[r.pads.length-2];E=!!(k+U),f.push({type:12,data:R},{type:12,data:P},{type:12,data:k},{type:12,data:U}),d.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[f,d,!0,A,E]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let y=X.computeStrides(r.kernelShape);f.push({type:12,data:y},{type:12,data:r.pads},{type:12,data:r.strides}),d.push({name:"kernelStrides",type:"u32",length:y.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let b=r.pads.reduce((C,m)=>C+m);return[f,d,!!b,!1,!1]}},Id=(e,r,t,u,l,f,d,y,b,C,m,A)=>{let E=l.format==="NHWC",R=r.type.value,P=se("output",r.type.tensor,u);if(l.kernelShape.length<=2){let k="",U="",V="",B=t-(E?2:1);if(m?k=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${B}] = indices[${B}] * uniforms.sw - uniforms.pwStart + i;\n                  if (xIndices[${B}] < 0 || xIndices[${B}]\n                      >= uniforms.x_shape[${B}]) {\n                    pad++;\n                    continue;\n                  }\n                  let x_val = x[${r.indicesToOffset("xIndices")}];\n                  ${f}\n                }`:k=`\n                for (var i: u32 = 0u; i < uniforms.kw; i++) {\n                  xIndices[${B}] = indices[${B}] * uniforms.sw - uniforms.pwStart + i;\n                  let x_val = x[${r.indicesToOffset("xIndices")}];\n                  ${f}\n                }`,l.kernelShape.length===2){let j=t-(E?3:2);A?U=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${j}] = indices[${j}] * uniforms.sh - uniforms.phStart + j;\n                  if (xIndices[${j}] < 0 || xIndices[${j}] >= uniforms.x_shape[${j}]) {\n                    pad += i32(uniforms.kw);\n                    continue;\n                  }\n              `:U=`\n                for (var j: u32 = 0u; j < uniforms.kh; j++) {\n                  xIndices[${j}] = indices[${j}] * uniforms.sh - uniforms.phStart + j;\n                `,V=`\n              }\n            `}return`\n            ${e.registerUniforms(b).declareVariables(r,P)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n\n              let indices = ${P.offsetToIndices("global_idx")};\n              var xIndices = ${P.offsetToIndices("global_idx")};\n\n              var value = ${R}(${y});\n              var pad = 0;\n              ${U}\n              ${k}\n              ${V}\n              ${d}\n\n              output[global_idx] = value;\n            }`}else{if(E)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let k=l.kernelShape.length,U=l.pads.length,V="";return C?V=`\n                if (xIndices[j] >= uniforms.x_shape[j]) {\n                  pad++;\n                  isPad = true;\n                  break;\n                }\n              }\n              if (!isPad) {\n                let x_val = x[${r.indicesToOffset("xIndices")}];\n                ${f}\n              }`:V=`\n              }\n              let x_val = x[${r.indicesToOffset("xIndices")}];\n              ${f}\n            `,`\n            ${e.registerUniforms(b).declareVariables(r,P)}\n\n            ${e.mainStart()}\n              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n              let indices = ${P.offsetToIndices("global_idx")};\n              var xIndices = ${P.offsetToIndices("global_idx")};\n\n              var offsets: array<u32, ${k}>;\n\n              var value = ${R}(${y});\n              var pad = 0;\n              var isPad = false;\n\n              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {\n                var offset = i;\n                for (var j = 0u; j < ${k-1}u; j++) {\n                  offsets[j] = offset / ${_e("uniforms.kernelStrides","j",k)};\n                  offset -= offsets[j] * ${_e("uniforms.kernelStrides","j",k)};\n                }\n                offsets[${k-1}] = offset;\n\n                isPad = false;\n                for (var j = ${t-k}u; j < ${t}u; j++) {\n                  xIndices[j] = indices[j] * ${_e("uniforms.strides",`j - ${t-k}u`,k)}\n                    + offsets[j - ${t-k}u] - ${_e("uniforms.pads","j - 2u",U)};\n                  ${V}\n              }\n              ${d}\n\n              output[global_idx] = value;\n            }`}},Td=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Gg=e=>`${Td(e)};${e.countIncludePad}`,Hg=e=>`${Td(e)};${e.storageOrder};${e.dilations}`,Ed=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),Pd=(e,r,t,u)=>{let[l,f]=xd(r,u,t),d=Z("x",r.dataType,r.dims.length),y=d.type.value,b="value += x_val;",C="";l.countIncludePad?C+=`value /= ${y}(uniforms.kernelSize);`:C+=`value /= ${y}(i32(uniforms.kernelSize) - pad);`;let[m,A,E,R,P]=Ad(f,l);m.push(...de(r.dims,f));let k=["rank"];return{name:e,shaderCache:{hint:`${u.cacheKey};${E};${R};${P}`,inputDependencies:k},getRunData:()=>({outputs:[{dims:f,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(X.size(f)/64)},programUniforms:m}),getShaderSource:U=>Id(U,d,r.dims.length,f.length,l,b,C,0,A,E,R,P)}},Od=e=>{let r=e.count_include_pad!==0,t=Ed(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let u={countIncludePad:r,...t,cacheKey:""};return{...u,cacheKey:Gg(u)}},kd=(e,r)=>{ho(e.inputs),e.compute(Pd("AveragePool",e.inputs[0],!1,r))},Rd={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Bd=e=>{let r=e.format;return{format:r,...Rd,cacheKey:r}},Dd=(e,r)=>{ho(e.inputs),e.compute(Pd("GlobalAveragePool",e.inputs[0],!0,r))},Md=(e,r,t,u)=>{let[l,f]=xd(r,u,t),d=`\n      value = max(x_val, value);\n    `,y="",b=Z("x",r.dataType,r.dims.length),C=["rank"],[m,A,E,R,P]=Ad(f,l);return m.push(...de(r.dims,f)),{name:e,shaderCache:{hint:`${u.cacheKey};${E};${R};${P}`,inputDependencies:C},getRunData:()=>({outputs:[{dims:f,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(X.size(f)/64)},programUniforms:m}),getShaderSource:k=>Id(k,b,r.dims.length,f.length,l,d,y,-1e5,A,E,R,P)}},zd=(e,r)=>{ho(e.inputs),e.compute(Md("MaxPool",e.inputs[0],!1,r))},Ud=e=>{let r=e.storage_order,t=e.dilations,u=Ed(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(u.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let l={storageOrder:r,dilations:t,...u,cacheKey:""};return{...l,cacheKey:Hg(l)}},jd=e=>{let r=e.format;return{format:r,...Rd,cacheKey:r}},Vd=(e,r)=>{ho(e.inputs),e.compute(Md("GlobalMaxPool",e.inputs[0],!0,r))}});var Fg,qg,Wd,Gd=le(()=>{"use strict";Hr();Se();Oe();Fg=(e,r,t)=>{let u=e===r,l=e<r&&t<0,f=e>r&&t>0;if(u||l||f)throw new Error("Range these inputs\' contents are invalid.")},qg=(e,r,t,u)=>{let l=Math.abs(Math.ceil((r-e)/t)),f=[l],d=l,y=[{type:12,data:d},{type:u,data:e},{type:u,data:t},...de(f)],b=C=>{let m=se("output",u,f.length),A=m.type.value,E=[{name:"outputSize",type:"u32"},{name:"start",type:A},{name:"delta",type:A}];return`\n        ${C.registerUniforms(E).declareVariables(m)}\n        ${C.mainStart()}\n        ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n        output[global_idx] = uniforms.start + ${A}(global_idx) * uniforms.delta;\n      }`};return{name:"Range",shaderCache:{hint:`${u}`},getShaderSource:b,getRunData:()=>({outputs:[{dims:f,dataType:u}],dispatchGroup:{x:Math.ceil(d/64)},programUniforms:y})}},Wd=e=>{let r=0,t=0,u=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],u=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],u=e.inputs[2].getFloat32Array()[0]),Gr.webgpu.validateInputContent&&Fg(r,t,u),e.compute(qg(r,t,u,e.inputs[0].dataType),{inputs:[]})}});var Kg,Jg,Yg,Zg,Xg,Qg,ey,ty,ry,ny,iy,Hd,oy,ay,sy,uy,ly,Ld,Fd,qd=le(()=>{"use strict";Se();Re();ct();Oe();Kg=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and\n            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Jg=(e,r,t)=>{r.every(l=>l>=0&&l<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let u=new Array(t).fill(1);return r.forEach((l,f)=>u[l]=e[f]),u},Yg=(e,r,t,u,l,f)=>{let[d,y,b]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],C=e[0].dims.length;if(d>0&&e.length>d&&e[d].dims.length>0)e[d].getFloat32Array().forEach(m=>f.push(m));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(y>0&&e.length>y&&e[y].dims.length>0){if(e[y].getFloat32Array().forEach(m=>u.push(m)),u.length!==0&&u.length!==C&&t>=18&&u.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Kg(u,r),r.axes.length>0&&Jg(u,r.axes,C).forEach((m,A)=>u[A]=m)}if(b>0&&e.length>b&&(e[b].getBigInt64Array().forEach(m=>l.push(Number(m))),l.length!==C||t>=18&&l.length===r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(u.length!==r.axes.length)throw new Error(\'Resize requires "scales" input size to be of axes rank when axes attributes is specified\');if(l.length!==r.axes.length)throw new Error(\'Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified\')}if(typeof u<"u"&&typeof l<"u"&&u.length>0&&l.length>C)throw new Error("Resize requires only of scales or sizes to be specified")},Zg=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,\n     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`return ${r}(xResized) / ${r}(xScale);`;case"pytorch_half_pixel":return`if (lengthResized > 1) {\n                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;\n                  } else {\n                    return 0.0;\n                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {\n                    return 0.0;\n                  } else {\n                    // The whole part and the fractional part are calculated separately due to inaccuracy of floating\n                    // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an\n                    // offset-by-one error later in floor().\n                    let whole = ${r}(xResized * (lengthOriginal - 1) / (lengthResized - 1));\n                    let fract =\n                        ${r}(xResized * (lengthOriginal - 1) % (lengthResized - 1)) / ${r}(lengthResized - 1);\n                    return whole + fract;\n                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {\n                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +\n                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /\n                        ${r}(lengthResized - 1);\n                  } else {\n                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);\n                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);\n                  const adjustment = ${r}(lengthResized) / outputWidth;\n                  const center = ${r}(lengthOriginal) / 2;\n                  const offset = center * (1 - adjustment);\n                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",Xg=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",Qg=(e,r,t)=>{let u=new Array(t).fill(0).concat(new Array(t).fill(1)),l=e.length===0?u:e.slice();return r.length>0?(r.forEach((f,d)=>{u[f]=l[d],u[d+t]=l[r.length+d]}),u):l},ey=(e,r,t,u)=>{let l=[];if(t.length>0)if(u.length>0){if(e.forEach(f=>l.push(f)),Math.max(...u)>e.length)throw new Error("axes is out of bound");u.forEach((f,d)=>l[f]=t[d])}else t.forEach(f=>l.push(f));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");l=e.map((f,d)=>Math.round(f*r[d]))}return l},ty=(e,r,t)=>{let u=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(f=>r[f]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(f=>r[f]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let l=e.slice();return t.axes.length>0?(t.axes.forEach(f=>r[f]=u),t.axes.forEach(f=>l[f]=Math.round(e[f]*r[f]))):(r.fill(u,0,r.length),l.forEach((f,d)=>l[d]=Math.round(f*r[d]))),l},ry=(e,r,t,u,l)=>`\n    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {\n      var original_indices: array<${e.type.value}, ${t.length}>;\n      for (var i:u32 = 0; i < ${t.length}; i++) {\n        var output_index = ${e.indicesGet("output_indices","i")};\n        var scale = ${_e("uniforms.scales","i",u)};\n        var roi_low = ${_e("uniforms.roi","i",l)};\n        var roi_hi = ${_e("uniforms.roi",`i + ${r.length}`,l)};\n        if (scale == 1.0) {\n          original_indices[i] = ${e.type.value}(output_index);\n        } else {\n          var input_shape_i = ${_e("uniforms.input_shape","i",r.length)};\n          var output_shape_i = ${_e("uniforms.output_shape","i",t.length)};\n          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                           input_shape_i, roi_low, roi_hi);\n        }\n      }\n      return original_indices;\n    }`,ny=(e,r,t,u,l,f,d)=>`\n    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {\n      var input_indices: ${e.type.indices};\n      for (var i:u32 = 0; i < ${u.length}; i++) {\n        var output_index = ${r.indicesGet("output_indices","i")};\n        var input_index: u32;\n        var scale = ${_e("uniforms.scales","i",l)};\n        if (scale == 1.0) {\n          input_index = output_index;\n        } else {\n          var roi_low = ${_e("uniforms.roi","i",f)};\n          var roi_hi = ${_e("uniforms.roi",`i + ${t.length}`,f)};\n          var input_shape_i = ${_e("uniforms.input_shape","i",t.length)};\n          var output_shape_i = ${_e("uniforms.output_shape","i",u.length)};\n          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,\n                                                                        input_shape_i, roi_low, roi_hi);\n          if (!${d} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {\n            if (original_idx < 0) {\n              input_index = 0;\n            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {\n              input_index = input_shape_i - 1;\n            } else {\n              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));\n            }\n          } else {\n            input_index = u32(original_idx);\n          }\n        }\n        ${e.indicesSet("input_indices","i"," input_index")}\n      }\n      return input_indices;\n    }`,iy=(e,r)=>`\n    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {\n      for (var i:u32 = 0; i < ${r.length}; i++) {\n        var input_index = ${e.indicesGet("input_indices","i")};\n        if (input_index < 0 || input_index >= ${_e("uniforms.input_shape","i",r.length)}) {\n          return false;\n        }\n      }\n      return true;\n    }`,Hd=(e,r,t,u)=>e.rank>u?`\n    ${e.indicesSet("input_indices",r,"channel")};\n    ${e.indicesSet("input_indices",t,"batch")};\n`:"",oy=(e,r,t,u,l)=>{let[d,y,b,C]=t.length===2?[-1,0,1,-1]:[0,2,3,1],m=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${m} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",y,`max(0, min(row, ${t[y]} - 1))`)};\n      ${e.indicesSet("input_indices",b,`max(0, min(col, ${t[b]} - 1))`)};\n      ${Hd(e,C,d,2)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${m} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var row:${m} = originalIndices[${y}];\n      var col:${m} = originalIndices[${b}];\n      ${u?`if (row < 0 || row > (${t[y]} - 1) || col < 0 || col > (${t[b]} - 1)) {\n        return ${l};\n      }`:""};\n      row = max(0, min(row, ${t[y]} - 1));\n      col = max(0, min(col, ${t[b]} - 1));\n      var row1: u32 = u32(row);\n      var col1: u32 = u32(col);\n      var row2: u32 = u32(row + 1);\n      var col2: u32 = u32(col + 1);\n      var channel: u32 = ${t.length>2?`u32(originalIndices[${C}])`:"0"};\n      var batch: u32 =  ${t.length>2?`u32(originalIndices[${d}])`:"0"};\n      var x11: ${m} = getInputValue(batch, channel, row1, col1);\n      var x12: ${m} = getInputValue(batch, channel, row1, col2);\n      var x21: ${m} = getInputValue(batch, channel, row2, col1);\n      var x22: ${m} = getInputValue(batch, channel, row2, col2);\n      var dx1: ${m} = abs(row - ${m}(row1));\n      var dx2: ${m} = abs(${m}(row2) - row);\n      var dy1: ${m} = abs(col - ${m}(col1));\n      var dy2: ${m} = abs(${m}(col2) - col);\n      if (row1 == row2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (col1 == col2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);\n    }`},ay=(e,r,t,u,l,f,d,y,b,C)=>{let m=t.length===2,A=!0,[E,R]=m?[0,1]:A?[2,3]:[1,2],P=e.type.value,k=U=>{let V=U===E?"row":"col";return`\n      fn ${V}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${P} {\n        var output_index = ${r.indicesGet("output_indices",U)};\n        var originalIdx: ${P} = getOriginalCoordinateFromResizedCoordinate(output_index, ${l[U]},\n        ${u[U]}, ${t[U]}, ${f[U]}, ${f[U]} + ${t.length});\n        var fractOriginalIdx: ${P} = originalIdx - floor(originalIdx);\n        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);\n\n        if (${y} && (originalIdx < 0 || originalIdx > (${t[U]} - 1))) {\n          return ${b};\n        }\n        var data: array<${P}, 4> = array<${P}, 4>(0.0, 0.0, 0.0, 0.0);\n        for (var i: i32 = -1; i < 3; i++) {\n          var ${V}: ${P} = originalIdx + ${P}(i);\n          if (${V} < 0 || ${V} >= ${t[U]}) {\n            ${(()=>C?`coefs[i + 1] = 0.0;\n                        continue;`:y?`return ${b};`:`${V} = max(0, min(${V}, ${t[U]} - 1));`)()};\n          }\n        var input_indices_copy: ${e.type.indices} = input_indices;\n          ${e.indicesSet("input_indices_copy",U,`u32(${V})`)};\n          data[i + 1] = ${U===E?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};\n        }\n        return cubicInterpolation1D(data, coefs);\n      }`};return`\n    ${k(E)};\n    ${k(R)};\n  fn getCubicInterpolationCoefs(s: ${P}) -> array<${P}, 4> {\n    var absS = abs(s);\n    var coeffs: array<${P}, 4> = array<${P}, 4>(0.0, 0.0, 0.0, 0.0);\n    var oneMinusAbsS: ${P} = 1.0 - absS;\n    var twoMinusAbsS: ${P} = 2.0 - absS;\n    var onePlusAbsS: ${P} = 1.0 + absS;\n    coeffs[0] = ((${d} * onePlusAbsS - 5 * ${d}) * onePlusAbsS + 8 * ${d}) * onePlusAbsS - 4 * ${d};\n    coeffs[1] = ((${d} + 2) * absS - (${d} + 3)) * absS * absS + 1;\n    coeffs[2] = ((${d} + 2) * oneMinusAbsS - (${d} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;\n    coeffs[3] = ((${d} * twoMinusAbsS - 5 * ${d}) * twoMinusAbsS + 8 * ${d}) * twoMinusAbsS - 4 * ${d};\n    return coeffs;\n  }\n\n  fn cubicInterpolation1D(x: array<${P}, 4>, coefs: array<${P}, 4>) -> ${P} {\n    var coefsSum: ${P} = coefs[0] + coefs[1] + coefs[2] + coefs[3];\n    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;\n  }\n\n  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${P} {\n    var input_indices: ${e.type.indices} = output_indices;\n    return colCubicInterpolation(input_indices, output_indices);\n  }\n    `},sy=(e,r,t,u,l)=>{let[d,y,b,C,m]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],A=e.type.value;return`\n    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${A} {\n      var input_indices: ${e.type.indices};\n      ${e.indicesSet("input_indices",y,`max(0, min(depth, ${t[y]} - 1))`)};\n      ${e.indicesSet("input_indices",b,`max(0, min(height, ${t[b]} - 1))`)};\n      ${e.indicesSet("input_indices",C,`max(0, min(width, ${t[C]} - 1))`)};\n      ${Hd(e,m,d,3)}\n      return ${e.getByIndices("input_indices")};\n    }\n\n    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${A} {\n      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);\n      var depth:${A} = originalIndices[${y}];\n      var height:${A} = originalIndices[${b}];\n      var width:${A} = originalIndices[${C}];\n      ${u?`if (depth < 0 || depth > (${t[y]} - 1) || height < 0 || height > (${t[b]} - 1) || width < 0 || (width > ${t[C]} - 1)) {\n      return ${l};\n        }`:""};\n\n    depth = max(0, min(depth, ${t[y]} - 1));\n      height = max(0, min(height, ${t[b]} - 1));\n      width = max(0, min(width, ${t[C]} - 1));\n      var depth1: u32 = u32(depth);\n      var height1: u32 = u32(height);\n      var width1: u32 = u32(width);\n      var depth2: u32 = u32(depth + 1);\n      var height2: u32 = u32(height + 1);\n      var width2: u32 = u32(width + 1);\n      var channel: u32 = ${t.length>3?`u32(originalIndices[${m}])`:"0"};\n      var batch: u32 =  ${t.length>3?`u32(originalIndices[${d}])`:"0"};\n\n      var x111: ${A} = getInputValue(batch, channel, depth1, height1, width1);\n      var x112: ${A} = getInputValue(batch, channel, depth1, height1, width2);\n      var x121: ${A} = getInputValue(batch, channel, depth1, height2, width1);\n      var x122: ${A} = getInputValue(batch, channel, depth1, height2, width2);\n      var x211: ${A} = getInputValue(batch, channel, depth2, height1, width1);\n      var x212: ${A} = getInputValue(batch, channel, depth2, height1, width2);\n      var x221: ${A} = getInputValue(batch, channel, depth2, height2, width1);\n      var x222: ${A} = getInputValue(batch, channel, depth2, height2, width2);\n      var dx1: ${A} = abs(depth - ${A}(depth1));\n      var dx2: ${A} = abs(${A}(depth2) - depth);\n      var dy1: ${A} = abs(height - ${A}(height1));\n      var dy2: ${A} = abs(${A}(height2) - height);\n      var dz1: ${A} = abs(width - ${A}(width1));\n      var dz2: ${A} = abs(${A}(width2) - width);\n      if (depth1 == depth2) {\n        dx1 = 0.5;\n        dx2 = 0.5;\n      }\n      if (height1 == height2) {\n        dy1 = 0.5;\n        dy2 = 0.5;\n      }\n      if (width1 == width2) {\n        dz1 = 0.5;\n        dz2 = 0.5;\n      }\n      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +\n              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);\n    }`},uy=(e,r,t,u,l,f)=>{let d=e.dims,y=Qg(f,r.axes,d.length),b=ey(d,u,l,r.axes),C=u.slice();u.length===0&&(C=d.map((B,W)=>B===0?1:b[W]/B),r.keepAspectRatioPolicy!=="stretch"&&(b=ty(d,C,r)));let m=se("output",e.dataType,b.length),A=Z("input",e.dataType,d.length),E=X.size(b),R=d.length===b.length&&d.every((B,W)=>B===b[W]),P=r.coordinateTransformMode==="tf_crop_and_resize",k=r.extrapolationValue,U=A.type.value,V=B=>`\n      ${R?"":`\n      ${Zg(r.coordinateTransformMode,U)};\n      ${(()=>{switch(r.mode){case"nearest":return`\n              ${iy(A,d)};\n              ${Xg(r.nearestMode,t,U)};\n              ${ny(A,m,d,b,C.length,y.length,P)};\n              `;case"linear":return`\n              ${ry(m,d,b,C.length,y.length)};\n              ${(()=>{if(d.length===2||d.length===4)return`${oy(A,m,d,P,k)}`;if(d.length===3||d.length===5)return`${sy(A,m,d,P,k)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};\n            `;case"cubic":return`\n            ${(()=>{if(d.length===2||d.length===4)return`${ay(A,m,d,b,C,y,r.cubicCoeffA,P,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};\n            `;default:throw Error("Invalid resize mode")}})()};\n      `}\n      ${B.registerUniform("output_size","u32").registerUniform("scales","f32",C.length).registerUniform("roi","f32",y.length).declareVariables(A,m)}\n      ${B.mainStart()}\n        ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n        ${R?"output[global_idx] = input[global_idx];":`\n        let output_indices = ${m.offsetToIndices("global_idx")};\n        var input_indices: ${A.type.indices};\n        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);\n                if (checkInputIndices(input_indices)) {\n                  output[global_idx] = ${A.getByIndices("input_indices")};\n                } else {\n                  output[global_idx] = ${r.extrapolationValue};\n                }`;case"linear":return`output[global_idx] = ${d.length===2||d.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};\n`}\n      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${C.length>0?C:""}|${l.length>0?l:""}|${y.length>0?y:""}|${R}|${d}`,inputDependencies:["rank"]},getShaderSource:V,getRunData:()=>({outputs:[{dims:b,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(E/64)},programUniforms:[{type:12,data:E},{type:1,data:C},{type:1,data:y},...de(d,b)]})}},ly=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},Ld=(e,r)=>{let t=[],u=[],l=[],f=ly(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Yg(e.inputs,r,f,t,u,l),e.compute(uy(e.inputs[0],r,f,t,u,l),{inputs:[0]})},Fd=e=>{let r=e.antialias,t=e.axes,u=e.coordinateTransformMode,l=e.cubicCoeffA,f=e.excludeOutside!==0,d=e.extrapolationValue,y=e.keepAspectRatioPolicy,b=e.mode,C=e.nearestMode===""?"simple":e.nearestMode;return ke({antialias:r,axes:t,coordinateTransformMode:u,cubicCoeffA:l,excludeOutside:f,extrapolationValue:d,keepAspectRatioPolicy:y,mode:b,nearestMode:C})}});var dy,cy,Kd,Jd=le(()=>{"use strict";Se();Re();Oe();dy=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],u=e[2];if(r.dataType!==t.dataType||r.dataType!==u.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let l=r.dims[r.dims.length-1],f=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==l)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==f)throw new Error("Skip must have the same sequence length as input");if(u.dims.length!==1)throw new Error("Gamma must be 1D");if(u.dims[u.dims.length-1]!==l)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let d=e[3];if(d.dims.length!==1)throw new Error("Beta must be 1D");if(d.dims[d.dims.length-1]!==l)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let d=e[4];if(d.dims.length!==1)throw new Error("Bias must be 1D");if(d.dims[d.dims.length-1]!==l)throw new Error("Bias must have the same hidden size as input")}},cy=(e,r,t,u)=>{let l=e[0].dims,f=X.size(l),d=l,y=f,b=l.slice(-1)[0],C=u?l.slice(0,-1).concat(1):[],m=e.length>3,A=e.length>4,E=u&&t>1,R=u&&t>2,P=t>3,k=Ye(b),U=[{type:12,data:y},{type:12,data:k},{type:12,data:b},{type:1,data:r.epsilon}],V=W=>{let j=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],q=[Z("x",e[0].dataType,e[0].dims,k),Z("skip",e[1].dataType,e[1].dims,k),Z("gamma",e[2].dataType,e[2].dims,k)];m&&q.push(Z("beta",e[3].dataType,e[3].dims,k)),A&&q.push(Z("bias",e[4].dataType,e[4].dims,k)),q.push(se("output",e[0].dataType,d,k)),E&&q.push(se("mean_output",1,C)),R&&q.push(se("inv_std_output",1,C)),P&&q.push(se("input_skip_bias_sum",e[0].dataType,d,k));let Q=He(e[0].dataType);return`\n\n      ${W.registerUniforms(j).declareVariables(...q)}\n\n      ${W.mainStart()}\n        ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size / uniforms.hidden_size")}\n        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;\n        let offset = global_idx * hidden_size_vectorized;\n        var sum = ${mt("f32",k)};\n        var squareSum = ${mt("f32",k)};\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          let skip_value = skip[offset + i];\n          let bias_value = ${A?"bias[i]":"0.0"};\n          let input_value = x[offset + i];\n          let value = input_value + skip_value + bias_value;\n          ${P?"input_skip_bias_sum[offset + i] = value;":""}\n          output[offset + i] = value;\n          let f32_value = ${Dt(Q,k,"value")};\n          sum += f32_value;\n          squareSum += f32_value * f32_value;\n        }\n        let mean = ${Ct("sum",k)} / f32(uniforms.hidden_size);\n        let inv_std_dev = inverseSqrt(${Ct("squareSum",k)} / f32(uniforms.hidden_size) - mean * mean + uniforms.epsilon);\n        ${E?"mean_output[global_idx] = mean;":""}\n        ${R?"inv_std_output[global_idx] = inv_std_dev;":""}\n        for (var i: u32 = 0; i < hidden_size_vectorized; i++) {\n          output[offset + i] = (output[offset + i] - ${Q}(mean)) * ${Q}(inv_std_dev) * gamma[i] + ${m?"beta[i]":"0.0"};\n        }\n      }`},B=[{dims:d,dataType:e[0].dataType}];return t>1&&B.push({dims:C,dataType:1}),t>2&&B.push({dims:C,dataType:1}),t>3&&B.push({dims:l,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${k};${E};${R};${P}`,inputDependencies:e.map((W,j)=>"type")},getShaderSource:V,getRunData:()=>({outputs:B,dispatchGroup:{x:Math.ceil(y/b/64)},programUniforms:U})}},Kd=(e,r)=>{dy(e.inputs);let u=[0];e.outputCount>1&&u.push(-3),e.outputCount>2&&u.push(-3),e.outputCount>3&&u.push(3),e.compute(cy(e.inputs,r,e.outputCount,!1),{outputs:u})}});var fy,go,py,Yd,my,hy,Zd,Xd,Qd=le(()=>{"use strict";Se();Re();ct();Oe();fy=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,u)=>{if(e[u+1].dataType!==6&&e[u+1].dataType!==7)throw new Error(`Input ${u} must be an array of int32 or int64`)})},go=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(u=>t.push(Number(u)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(u=>t.push(Number(u)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},py=(e,r)=>{if(e.length>1){let t=go(e,1),u=go(e,2),l=go(e,3);return l.length===0&&(l=[...Array(e[0].dims.length).keys()]),ke({starts:t,ends:u,axes:l})}else return r},Yd=(e,r,t,u,l)=>{let f=e;return e<0&&(f+=t[u[r]]),l[r]<0?Math.max(0,Math.min(f,t[u[r]]-1)):Math.max(0,Math.min(f,t[u[r]]))},my=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {\n          var input_indices: ${e.type.indices};\n          var carry = 0u;\n          for (var i = ${t.length}; i >= 0; i--) {\n            let input_shape_i = ${_e("uniforms.input_shape","i",t.length)};\n            let steps_i = ${_e("uniforms.steps","i",t.length)};\n            let signs_i = ${_e("uniforms.signs","i",t.length)};\n            let starts_i = ${_e("uniforms.starts","i",t.length)};\n            var output_index = ${r.indicesGet("output_indices","i")};\n            var input_index = output_index * steps_i + starts_i + carry;\n            carry = input_index / input_shape_i;\n            input_index = input_index % input_shape_i;\n            if (signs_i < 0) {\n              input_index = input_shape_i - input_index - 1u + starts_i;\n            }\n            ${e.indicesSet("input_indices","i","input_index")};\n          }\n          return input_indices;\n      }`,hy=(e,r)=>{let t=e[0].dims,u=X.size(t),l=r.axes.length>0?X.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],f=go(e,4);f.forEach(V=>V!==0||(()=>{throw new Error("step cannot be 0")})),f.length===0&&(f=Array(l.length).fill(1));let d=r.starts.map((V,B)=>Yd(V,B,t,l,f)),y=r.ends.map((V,B)=>Yd(V,B,t,l,f));if(l.length!==d.length||l.length!==y.length)throw new Error("start, ends and axes should have the same number of elements");if(l.length!==t.length)for(let V=0;V<t.length;++V)l.includes(V)||(d.splice(V,0,0),y.splice(V,0,t[V]),f.splice(V,0,1));let b=f.map(V=>Math.sign(V));f.forEach((V,B,W)=>{if(V<0){let j=(y[B]-d[B])/V,q=d[B],Q=q+j*f[B];d[B]=Q,y[B]=q,W[B]=-V}});let C=t.slice(0);l.forEach((V,B)=>{C[V]=Math.ceil((y[V]-d[V])/f[V])});let m={dims:C,dataType:e[0].dataType},A=se("output",e[0].dataType,C.length),E=Z("input",e[0].dataType,e[0].dims.length),R=X.size(C),P=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:d.length},{name:"signs",type:"i32",length:b.length},{name:"steps",type:"u32",length:f.length}],k=[{type:12,data:R},{type:12,data:d},{type:6,data:b},{type:12,data:f},...de(e[0].dims,C)],U=V=>`\n      ${V.registerUniforms(P).declareVariables(E,A)}\n        ${my(E,A,t)}\n        ${V.mainStart()}\n          ${V.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}\n          let output_indices = ${A.offsetToIndices("global_idx")};\n          let input_indices = calculateInputIndices(output_indices);\n          ${A.setByOffset("global_idx",E.getByIndices("input_indices"))}\n      }`;return{name:"Slice",shaderCache:{hint:`${b.length}_${d.length}_${f.length}`,inputDependencies:["rank"]},getShaderSource:U,getRunData:()=>({outputs:[m],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:k})}},Zd=(e,r)=>{fy(e.inputs,r);let t=py(e.inputs,r);e.compute(hy(e.inputs,t),{inputs:[0]})},Xd=e=>{let r=e.starts,t=e.ends,u=e.axes;return ke({starts:r,ends:t,axes:u})}});var gy,yy,ec,tc,rc=le(()=>{"use strict";Se();Re();ct();Oe();gy=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},yy=(e,r)=>{let t=e.dims,u=X.size(t),l=64,f=r.axis;if(f<0&&(f=t.length+f),f<t.length-1)throw new Error("softmax only supports last axis for now.");let d=t[f],y=u/d,b=Ye(d),C=d/b,m=(U,V)=>V===4?`max(max(${U}.x, ${U}.y), max(${U}.z, ${U}.w))`:V===2?`max(${U}.x, ${U}.y)`:V===3?`max(max(${U}.x, ${U}.y), ${U}.z)`:U,A=Z("x",e.dataType,e.dims,b),E=se("result",e.dataType,e.dims,b),R=A.type.value,P=He(e.dataType)==="f32"?`var threadMax = ${R}(-3.402823e+38f);`:`var threadMax = ${R}(-65504.0h);`,k=U=>`\n      var<workgroup> rowMaxShared : ${R};\n      var<workgroup> rowSumShared : ${R};\n      var<workgroup> threadShared : array<${R}, ${l}>;\n\n      fn getValue(row: i32, col: i32, row_stride: i32) -> ${R} {\n        let index = row * row_stride + col;\n        return x[index];\n      }\n\n      fn setValue(row: i32, col: i32, row_stride: i32, value: ${R}) {\n        let index = row * row_stride + col;\n        result[index] = value;\n      }\n      ${U.registerUniform("packedCols","i32").declareVariables(A,E)}\n      ${U.mainStart()}\n        let gindex = i32(global_idx);\n        let lindex = i32(local_idx);\n        const wg = ${l};\n        let row = gindex / wg;\n        let cols = uniforms.packedCols;\n        let row_stride : i32 = uniforms.packedCols;\n\n        // find the rows max\n        ${P}\n        for (var col = lindex; col < cols; col += wg) {\n          let value = getValue(row, col, row_stride);\n          threadMax = max(threadMax, value);\n        }\n        if (lindex < cols) {\n          threadShared[lindex] = threadMax;\n        }\n        workgroupBarrier();\n\n        var reduceSize = min(cols, wg);\n        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {\n          reduceSize = currSize + (reduceSize & 1);\n          if (lindex < currSize) {\n            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowMaxShared = ${R}(${m("threadShared[0]",b)});\n        }\n        workgroupBarrier();\n\n        // find the rows sum\n        var threadSum = ${R}(0.0);\n        for (var col = lindex; col < cols; col += wg) {\n          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);\n          threadSum += subExp;\n        }\n        threadShared[lindex] = threadSum;\n        workgroupBarrier();\n\n        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {\n          if (lindex < currSize) {\n            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];\n          }\n          workgroupBarrier();\n        }\n        if (lindex == 0) {\n          rowSumShared = ${R}(${Ct("threadShared[0]",b)});\n        }\n        workgroupBarrier();\n\n        // calculate final value for each element in the row\n        for (var col = lindex; col < cols; col += wg) {\n          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;\n          setValue(row, col, row_stride, value);\n        }\n      }`;return{name:"Softmax",shaderCache:{hint:`${b}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.dataType}],dispatchGroup:{x:y},programUniforms:[{type:12,data:C}]}),getShaderSource:k}},ec=(e,r)=>{gy(e.inputs),e.compute(yy(e.inputs[0],r))},tc=e=>ke({axis:e.axis})});var by,vy,wy,_y,$y,nc,ic,oc=le(()=>{"use strict";Se();Re();ct();Oe();by=e=>{if(!e||e.length<1)throw new Error("too few inputs")},vy=(e,r)=>{let t=[],u=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(l=>t.push(Number(l))),u=t.length),ke({numOutputs:u,axis:r.axis,splitSizes:t})},wy=e=>`\nfn calculateOutputIndex(index: u32) -> u32 {\n    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {\n    if (index < ${_e("uniforms.size_in_split_axis","i",e)}) {\n        return i;\n    }\n    }\n    return ${e}u;\n}`,_y=e=>{let r=e.length,t=[];for(let u=0;u<r;++u){let l=e[u].setByIndices("indices","input[global_idx]");r===1?t.push(l):u===0?t.push(`if (output_number == ${u}u) { ${l} }`):u===r-1?t.push(`else { ${l} }`):t.push(`else if (output_number == ${u}) { ${l} }`)}return`\n      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {\n        ${t.join(`\n`)}\n      }`},$y=(e,r)=>{let t=e[0].dims,u=X.size(t),l=e[0].dataType,f=X.normalizeAxis(r.axis,t.length),d=new Array(r.numOutputs),y=Z("input",l,t.length),b=new Array(r.numOutputs),C=[],m=[],A=0,E=[{type:12,data:u}];for(let P=0;P<r.numOutputs;P++){A+=r.splitSizes[P],b[P]=A;let k=t.slice();k[r.axis]=r.splitSizes[P],m.push(k),d[P]=se(`output${P}`,l,k.length),C.push({dims:m[P],dataType:e[0].dataType})}E.push({type:12,data:b},...de(t,...m));let R=P=>`\n  ${P.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",b.length).declareVariables(y,...d)}\n  ${wy(b.length)}\n  ${_y(d)}\n\n  ${P.mainStart()}\n    ${P.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}\n\n    var indices = ${y.offsetToIndices("global_idx")};\n    var index = ${y.indicesGet("indices",f)};\n    let output_number = calculateOutputIndex(index);\n    if (output_number != 0) {\n      index -= ${_e("uniforms.size_in_split_axis","output_number - 1u",b.length)};\n      ${y.indicesSet("indices",f,"index")};\n    }\n    writeBufferData(output_number, indices, global_idx);\n  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:R,getRunData:()=>({outputs:C,dispatchGroup:{x:Math.ceil(u/64)},programUniforms:E})}},nc=(e,r)=>{by(e.inputs);let t=e.inputs.length===1?r:vy(e.inputs,r);e.compute($y(e.inputs,t),{inputs:[0]})},ic=e=>{let r=e.axis,t=e.splitSizes,u=e.numOutputs<0?t.length:e.numOutputs;if(u!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return ke({axis:r,numOutputs:u,splitSizes:t})}});var ac,Cy,Sy,xy,sc,uc=le(()=>{"use strict";Se();Re();Oe();ac=e=>Array.from(e.getBigInt64Array(),Number),Cy=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(ac(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},Sy=(e,r)=>{let t=[];for(let u=0;u<e.length;++u)t.push(e[u]*r[u]);return t},xy=e=>{let r=e[0].dims,t=ac(e[1]),u=Sy(r,t),l=X.size(u),f=e[0].dataType,d=Z("input",f,r.length),y=se("output",f,u.length),b=C=>`\n      const inputShape = ${d.indices(...r)};\n      ${C.registerUniform("output_size","u32").declareVariables(d,y)}\n      ${C.mainStart()}\n      ${C.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}\n      let output_indices = ${y.offsetToIndices("global_idx")};\n      var input_indices: ${d.type.indices};\n      for (var i = 0; i < ${r.length}; i++) {\n        let input_dim_i = ${d.indicesGet("uniforms.input_shape","i")};\n        let input_dim_value = ${y.indicesGet("output_indices","i")}  % input_dim_i;\n\n        ${d.indicesSet("input_indices","i","input_dim_value")}\n      }\n      ${y.setByOffset("global_idx",d.getByIndices("input_indices"))}\n    }`;return{name:"Tile",shaderCache:{hint:`${t}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:u,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:[{type:12,data:l},...de(e[0].dims,u)]}),getShaderSource:b}},sc=e=>{Cy(e.inputs),e.compute(xy(e.inputs),{inputs:[0]})}});var Ay,Iy,lc,dc=le(()=>{"use strict";Se();Re();Oe();Ay=(e,r,t,u,l)=>{let f=se("output_data",l,t.length,4),d=Z("a_data",r[1].dataType,r[1].dims.length,4),y=Z("b_data",r[2].dataType,r[2].dims.length,4),b=Z("c_data",r[0].dataType,r[0].dims.length,4),C,m=(A,E,R)=>`select(${E}, ${A}, ${R})`;if(!u)C=f.setByOffset("global_idx",m(d.getByOffset("global_idx"),y.getByOffset("global_idx"),b.getByOffset("global_idx")));else{let A=(E,R,P="")=>{let k=`a_data[index_a${R}][component_a${R}]`,U=`b_data[index_b${R}][component_b${R}]`,V=`bool(c_data[index_c${R}] & (0xffu << (component_c${R} * 8)))`;return`\n            let output_indices${R} = ${f.offsetToIndices(`global_idx * 4u + ${R}u`)};\n            let offset_a${R} = ${d.broadcastedIndicesToOffset(`output_indices${R}`,f)};\n            let offset_b${R} = ${y.broadcastedIndicesToOffset(`output_indices${R}`,f)};\n            let offset_c${R} = ${b.broadcastedIndicesToOffset(`output_indices${R}`,f)};\n            let index_a${R} = offset_a${R} / 4u;\n            let index_b${R} = offset_b${R} / 4u;\n            let index_c${R} = offset_c${R} / 4u;\n            let component_a${R} = offset_a${R} % 4u;\n            let component_b${R} = offset_b${R} % 4u;\n            let component_c${R} = offset_c${R} % 4u;\n            ${E}[${R}] = ${P}(${m(k,U,V)});\n          `};l===9?C=`\n            var data = vec4<u32>(0);\n            ${A("data",0,"u32")}\n            ${A("data",1,"u32")}\n            ${A("data",2,"u32")}\n            ${A("data",3,"u32")}\n            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:C=`\n            ${A("output_data[global_idx]",0)}\n            ${A("output_data[global_idx]",1)}\n            ${A("output_data[global_idx]",2)}\n            ${A("output_data[global_idx]",3)}\n          `}return`\n        ${e.registerUniform("vec_size","u32").declareVariables(b,d,y,f)}\n        ${e.mainStart()}\n        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}\n        ${C}\n      }`},Iy=e=>{let r=e[1].dims,t=e[2].dims,u=e[0].dims,l=e[1].dataType,f=!(X.areEqual(r,t)&&X.areEqual(t,u)),d=r,y=X.size(r);if(f){let C=Vt.calcShape(Vt.calcShape(r,t,!1),u,!1);if(!C)throw new Error("Can\'t perform where op on the given tensors");d=C,y=X.size(d)}let b=Math.ceil(y/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:C=>Ay(C,e,d,f,l),getRunData:()=>({outputs:[{dims:d,dataType:l}],dispatchGroup:{x:Math.ceil(y/64/4)},programUniforms:[{type:12,data:b},...de(u,r,t,d)]})}},lc=e=>{e.compute(Iy(e.inputs))}});var cc,fc=le(()=>{"use strict";Au();Lo();Eu();Ou();hl();Al();El();Yo();Gl();Fl();Zl();ed();rd();od();ud();cd();pd();hd();Xo();bd();$d();Sd();Nd();Gd();to();qd();Jd();Qd();rc();oc();uc();Fr();ao();dc();cc=new Map([["Abs",[ku]],["Acos",[Ru]],["Acosh",[Bu]],["Add",[gl]],["ArgMax",[xu,Ho]],["ArgMin",[Su,Ho]],["Asin",[Du]],["Asinh",[Mu]],["Atan",[zu]],["Atanh",[Uu]],["Attention",[Iu]],["AveragePool",[kd,Od]],["BatchNormalization",[Tu]],["BiasAdd",[Pu]],["BiasSplitGelu",[ml]],["Cast",[Vu,ju]],["Ceil",[Wu]],["Clip",[Nu]],["Concat",[Il,Tl]],["Conv",[ta,ea]],["ConvTranspose",[Wl,Nl]],["Cos",[Gu]],["Cosh",[Hu]],["CumSum",[Hl,Ll]],["Div",[yl]],["Einsum",[Jl,Yl]],["Elu",[Lu,io]],["Equal",[bl]],["Erf",[Fu]],["Exp",[qu]],["Expand",[Ql]],["FastGelu",[td]],["Floor",[Ku]],["FusedConv",[ta,ea]],["Gather",[id,nd]],["GatherElements",[sd,ad]],["Gelu",[Ju]],["Gemm",[dd,ld]],["GlobalAveragePool",[Dd,Bd]],["GlobalMaxPool",[Vd,jd]],["Greater",[$l]],["GreaterOrEqual",[Sl]],["HardSigmoid",[nl,rl]],["InstanceNormalization",[fd]],["LayerNormalization",[md]],["LeakyRelu",[Yu,io]],["Less",[Cl]],["LessOrEqual",[xl]],["Log",[fl]],["MatMul",[Dl]],["MatMulNBits",[gd,yd]],["MaxPool",[zd,Ud]],["Mul",[vl]],["MultiHeadAttention",[_d,wd]],["Neg",[Xu]],["Not",[Zu]],["Pad",[Cd]],["Pow",[wl]],["Range",[Wd]],["Reciprocal",[Qu]],["ReduceMin",[bu]],["ReduceMean",[pu]],["ReduceMax",[yu]],["ReduceSum",[wu]],["ReduceProd",[vu]],["ReduceL1",[mu]],["ReduceL2",[hu]],["ReduceLogSum",[$u]],["ReduceLogSumExp",[gu]],["ReduceSumSquare",[_u]],["Relu",[el]],["Resize",[Ld,Fd]],["Sigmoid",[tl]],["Sin",[il]],["Sinh",[ol]],["Slice",[Zd,Xd]],["SkipLayerNormalization",[Kd]],["Split",[nc,ic]],["Sqrt",[al]],["Softmax",[ec,tc]],["Sub",[_l]],["Tan",[sl]],["Tanh",[ll]],["ThresholdedRelu",[cl,io]],["Tile",[sc]],["Transpose",[eu,tu]],["Where",[lc]]])});var yo,pc=le(()=>{"use strict";Hr();rr();Oe();yo=class{constructor(r){this.backend=r;this.repo=new Map,this.attributesBound=!1}getArtifact(r){return this.repo.get(r)}setArtifact(r,t){this.repo.set(r,t)}run(r,t,u,l,f){gr(r.programInfo.name);let d=this.backend.device,y=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let b=[];for(let m of t)b.push({binding:b.length,resource:{buffer:m.buffer}});for(let m of u)b.push({binding:b.length,resource:{buffer:m.buffer}});f&&b.push({binding:b.length,resource:f});let C=d.createBindGroup({layout:r.computePipeline.getBindGroupLayout(0),entries:b,label:r.programInfo.name});if(this.backend.sessionStatus==="capturing"){let m={kernelId:this.backend.currentKernelId,computePipeline:r.computePipeline,bindGroup:C,dispatchGroup:l};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(m)}y.setPipeline(r.computePipeline),y.setBindGroup(0,C),y.dispatchWorkgroups(...l),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),tr(r.programInfo.name)}dispose(){}build(r,t){gr(r.name);let u=this.backend.device,l=[];u.features.has("shader-f16")&&l.push("enable f16;");let f=Xs(t),d=r.getShaderSource(f),y=`${l.join(`\n`)}\n${f.additionalImplementations}\n${d}`,b=u.createShaderModule({code:y,label:r.name});Je("verbose",()=>`[WebGPU] ${r.name} shader code: ${y}`);let C=u.createComputePipeline({compute:{module:b,entryPoint:"main"},layout:"auto",label:r.name});return tr(r.name),{programInfo:r,computePipeline:C}}normalizeDispatchGroupSize(r){let t=typeof r=="number"?r:r.x,u=typeof r=="number"?1:r.y||1,l=typeof r=="number"?1:r.z||1,f=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(t<=f&&u<=f&&l<=f)return[t,u,l];let d=t*u*l,y=Math.ceil(Math.sqrt(d));if(y>f){if(y=Math.ceil(Math.cbrt(d)),y>f)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[y,y,y]}else return[y,y,1]}}});var Ty,Ey,sa,bo,mc=le(()=>{"use strict";Hr();Se();rr();qs();Zs();fc();pc();Ty=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let u=0;u<e.length;++u){let l=e[u].dataType;switch(r[u]){case"none":{t.push("");break}case"type":{t.push(`${l}`);break}case"rank":{let f=e[u].dims.length;t.push(`${l};${f}`);break}case"dims":{let f=e[u].dims.join(",");t.push(`${l};${f}`);break}default:throw new Error(`unsupported input dependency: ${r[u]}`)}}return t.join("|")},Ey=(e,r,t)=>{let u=e.name;return e.shaderCache?.hint&&(u+="["+e.shaderCache.hint+"]"),u+=":"+t+`:${Ty(r,e.shaderCache?.inputDependencies??new Array(r.length).fill("dims"))}`,u},sa=class{constructor(r){r&&(this.architecture=r.architecture,this.vendor=r.vendor)}isArchitecture(r){return this.architecture===r}isVendor(r){return this.vendor===r}},bo=class{constructor(){this.currentSessionId=null;this.currentKernelId=null;this.commandEncoder=null;this.computePassEncoder=null;this.maxDispatchNumber=16;this.pendingDispatchNumber=0;this.pendingKernels=[];this.pendingQueries=new Map;this.sessionStatus="default";this.capturedCommandList=new Map;this.capturedPendingKernels=new Map;this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let r=this.kernelCustomData.get(this.currentKernelId);return r||(r={},this.kernelCustomData.set(this.currentKernelId,r)),r}async initialize(r,t){this.env=r;let u=[],l={requiredLimits:{maxComputeWorkgroupStorageSize:t.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:t.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:t.limits.maxStorageBufferBindingSize,maxBufferSize:t.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:t.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:t.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:t.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:t.limits.maxComputeWorkgroupSizeZ},requiredFeatures:u};t.features.has("chromium-experimental-timestamp-query-inside-passes")?u.push("chromium-experimental-timestamp-query-inside-passes"):t.features.has("timestamp-query")&&u.push("timestamp-query"),t.features.has("shader-f16")&&u.push("shader-f16"),this.device=await t.requestDevice(l),this.adapterInfo=new sa(await t.requestAdapterInfo()),this.gpuDataManager=Ys(this),this.programManager=new yo(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,Ls(r.logLevel,!!r.debug),this.device.onuncapturederror=f=>{f.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${f.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device}),Object.defineProperty(this.env.webgpu,"adapter",{value:t}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let r=this.getCommandEncoder(),t={};this.queryType==="at-passes"&&(t.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=r.beginComputePass(t)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;gr(),this.endComputePass();let r;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),r=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(r,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,r,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&r.mapAsync(GPUMapMode.READ).then(()=>{let t=new BigUint64Array(r.getMappedRange()),u=this.pendingQueries.get(r);for(let l=0;l<t.length/2;l++){let f=u[l],d=f.kernelId,y=this.kernels.get(d),b=y.kernelType,C=y.kernelName,m=f.programName,A=f.inputTensorViews,E=f.outputTensorViews,R=t[l*2],P=t[l*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=R);let k=Number(R-this.queryTimeBase),U=Number(P-this.queryTimeBase);if(!Number.isSafeInteger(k)||!Number.isSafeInteger(U))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:A.map(V=>({dims:V.dims,dataType:er(V.dataType)})),outputsMetadata:E.map(V=>({dims:V.dims,dataType:er(V.dataType)})),kernelId:d,kernelType:b,kernelName:C,programName:m,startTime:k,endTime:U});else{let V="";A.forEach((W,j)=>{V+=`input[${j}]: [${W.dims}] | ${er(W.dataType)}, `});let B="";E.forEach((W,j)=>{B+=`output[${j}]: [${W.dims}] | ${er(W.dataType)}, `}),console.log(`[profiling] kernel "${d}|${b}|${C}|${m}" ${V}${B}execution time: ${U-k} ns`)}Bo("GPU",`${m}::${R}::${P}`)}r.unmap(),this.pendingQueries.delete(r)}),tr()}run(r,t,u,l,f){gr(r.name);let d=[];for(let B=0;B<t.length;++B){let W=t[B].data;if(W===0)continue;let j=this.gpuDataManager.get(W);if(!j)throw new Error(`no GPU data for input: ${W}`);d.push(j)}let{outputs:y,dispatchGroup:b,programUniforms:C}=r.getRunData(t),m=u.length===0?y.map((B,W)=>W):u;if(m.length!==y.length)throw new Error(`Output size ${m.length} must be equal to ${y.length}.`);let A=[],E=[];for(let B=0;B<y.length;++B){if(!Number.isInteger(m[B])||m[B]<-3||m[B]>=y.length)throw new Error(`Invalid output index: ${m[B]}`);if(m[B]===-3)continue;let W=m[B]===-1,j=m[B]===-2,q=W||j?f(y[B].dataType,y[B].dims):l(m[B],y[B].dataType,y[B].dims);if(A.push(q),q.data===0)continue;let Q=this.gpuDataManager.get(q.data);if(!Q)throw new Error(`no GPU data for output: ${q.data}`);if(W&&this.temporaryData.push(Q),j){let te=this.kernelPersistentData.get(this.currentKernelId);te||(te=[],this.kernelPersistentData.set(this.currentKernelId,te)),te.push(Q)}E.push(Q)}if(d.length!==t.length||E.length!==A.length){if(E.length===0)return tr(r.name),A;throw new Error(`Program ${r.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let R;if(C){let B=0,W=[];C.forEach(te=>{let ne=typeof te.data=="number"?[te.data]:te.data;if(ne.length===0)return;let J=te.type===10?2:4,ie,Ae;te.type===10?(Ae=ne.length>4?16:ne.length>2?8:ne.length*J,ie=ne.length>4?16:J*ne.length):(Ae=ne.length<=2?ne.length*J:16,ie=16),B=Math.ceil(B/Ae)*Ae,W.push(B);let De=te.type===10?8:4;B+=ne.length>4?Math.ceil(ne.length/De)*ie:ne.length*J});let j=16;B=Math.ceil(B/j)*j;let q=new ArrayBuffer(B);C.forEach((te,ne)=>{let J=W[ne],ie=typeof te.data=="number"?[te.data]:te.data;if(te.type===6)new Int32Array(q,J,ie.length).set(ie);else if(te.type===12)new Uint32Array(q,J,ie.length).set(ie);else if(te.type===10)new Uint16Array(q,J,ie.length).set(ie);else if(te.type===1)new Float32Array(q,J,ie.length).set(ie);else throw new Error(`Unsupported uniform type: ${er(te.type)}`)});let Q=this.gpuDataManager.create(B,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(Q.buffer,0,q,0,B),this.gpuDataManager.release(Q.id),R={offset:0,size:B,buffer:Q.buffer}}let P=this.programManager.normalizeDispatchGroupSize(b),k=P[1]===1&&P[2]===1,U=Ey(r,t,k),V=this.programManager.getArtifact(U);if(V||(V=this.programManager.build(r,P),this.programManager.setArtifact(U,V),Je("info",()=>`[artifact] key: ${U}, programName: ${r.name}`)),Je("info",()=>`[ProgramManager] run "${r.name}" (key=${U}) with ${P[0]}x${P[1]}x${P[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let B={kernelId:this.currentKernelId,programName:V.programInfo.name,inputTensorViews:t,outputTensorViews:A};this.pendingKernels.push(B),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(B)}return this.programManager.run(V,d,E,P,R),tr(r.name),A}upload(r,t){this.gpuDataManager.upload(r,t)}memcpy(r,t){this.gpuDataManager.memcpy(r,t)}async download(r,t){await this.gpuDataManager.download(r,t)}alloc(r){return this.gpuDataManager.create(r).id}free(r){return this.gpuDataManager.release(r)}createKernel(r,t,u,l){let f=cc.get(r);if(!f)throw new Error(`kernel not implemented: ${r}`);let d={kernelType:r,kernelName:l,kernelEntry:f[0],attributes:[f[1],u]};this.kernels.set(t,d)}releaseKernel(r){let t=this.kernelPersistentData.get(r);if(t){for(let u of t)this.gpuDataManager.release(u.id);this.kernelPersistentData.delete(r)}this.kernelCustomData.delete(r),this.kernels.delete(r)}computeKernel(r,t,u){let l=this.kernels.get(r);if(!l)throw new Error(`kernel not created: ${r}`);let f=l.kernelType,d=l.kernelName,y=l.kernelEntry,b=l.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${f}] ${d}" is not allowed to be called recursively`);this.currentKernelId=r,b[0]&&(b[1]=b[0](b[1]),b[0]=void 0),Je("info",()=>`[WebGPU] Start to run kernel "[${f}] ${d}"...`);let C=this.env.debug;this.temporaryData=[];try{return C&&this.device.pushErrorScope("validation"),y(t,b[1]),0}catch(m){return u.push(Promise.resolve(`[WebGPU] Kernel "[${f}] ${d}" failed. ${m}`)),1}finally{C&&u.push(this.device.popErrorScope().then(m=>m?`GPU validation error for kernel "[${f}] ${d}": ${m.message}`:null));for(let m of this.temporaryData)this.gpuDataManager.release(m.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(r,t,u,l){let f=this.sessionExternalDataMapping.get(r);f||(f=new Map,this.sessionExternalDataMapping.set(r,f));let d=f.get(t),y=this.gpuDataManager.registerExternalBuffer(u,l,d?.[1]);return f.set(t,[y,u]),y}unregisterBuffers(r){let t=this.sessionExternalDataMapping.get(r);t&&(t.forEach(u=>this.gpuDataManager.unregisterExternalBuffer(u[1])),this.sessionExternalDataMapping.delete(r))}getBuffer(r){let t=this.gpuDataManager.get(r);if(!t)throw new Error(`no GPU data for buffer: ${r}`);return t.buffer}createDownloader(r,t,u){return async()=>{let l=await zo(this,r,t);return Fs(l.buffer,u)}}writeTimestamp(r){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,r)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Je("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Je("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Je("info","replay"),this.sessionStatus="replaying";let r=this.capturedCommandList.get(this.currentSessionId),t=this.capturedPendingKernels.get(this.currentSessionId),u=r.length;this.pendingKernels=[];for(let l=0;l<u;l++){let f=this.getComputePassEncoder(),d=r[l];this.writeTimestamp(this.pendingDispatchNumber*2),f.setPipeline(d.computePipeline),f.setBindGroup(0,d.bindGroup),f.dispatchWorkgroups(...d.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(t[l]),(this.pendingDispatchNumber>=this.maxDispatchNumber*8||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber*8&&this.flush()}this.flush(),this.sessionStatus="default"}onReleaseSession(r){this.unregisterBuffers(r),this.capturedCommandList.has(r)&&this.capturedCommandList.delete(r),this.capturedPendingKernels.has(r)&&this.capturedPendingKernels.delete(r),this.gpuDataManager.onReleaseSession(r)}onRunStart(r){this.currentSessionId=r,this.setQueryType()}}});var hc={};Wi(hc,{init:()=>Py});var ii,ua,Py,gc=le(()=>{"use strict";Se();mc();rr();Re();ii=class e{constructor(r,t,u,l){this.module=r;this.dataType=t;this.data=u;this.dims=l}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=X.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=X.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=X.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(X.size(r)!==X.size(this.dims))throw new Error("Invalid new shape");return new e(this.module,this.dataType,this.data,r)}},ua=class{constructor(r,t,u){this.module=r;this.backend=t;this.customDataOffset=0;this.customDataSize=0;this.adapterInfo=t.adapterInfo;let l=r.HEAPU32,f=u>>>2;this.opKernelContext=l[f++];let d=l[f++];this.outputCount=l[f++],this.customDataOffset=l[f++],this.customDataSize=l[f++];let y=[];for(let b=0;b<d;b++){let C=l[f++],m=l[f++],A=l[f++],E=[];for(let R=0;R<A;R++)E.push(l[f++]);y.push(new ii(r,C,m,E))}this.inputs=y}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(r,t){let u=t?.inputs?.map(y=>typeof y=="number"?this.inputs[y]:y)??this.inputs,l=t?.outputs??[],f=(y,b,C)=>new ii(this.module,b,this.output(y,C),C),d=(y,b)=>{let C=Qn(y);if(!C)throw new Error(`Unsupported data type: ${y}`);let m=C*X.size(b),A=m>0?this.backend.gpuDataManager.create(m).id:0;return new ii(this.module,y,A,b)};return this.backend.run(r,u,l,f,d)}output(r,t){let u=this.module.stackSave();try{let l=this.module.stackAlloc((1+t.length)*4),f=l>>2;this.module.HEAPU32[f++]=t.length;for(let d=0;d<t.length;d++)this.module.HEAPU32[f++]=t[d];return this.module._JsepOutput(this.opKernelContext,r,l)}catch(l){throw new Error(`Failed to generate kernel\'s output[${r}] with dims [${t}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${l}`)}finally{this.module.stackRestore(u)}}},Py=async(e,r,t,u)=>{let l=r.jsepInit;if(!l)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let f=new bo;await f.initialize(t,u),l("webgpu",[f,d=>f.alloc(d),d=>f.free(d),(d,y,b,C=!1)=>{if(C)Je("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${d}, dst=${y}, size=${b}`),f.memcpy(d,y);else{Je("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${d}, gpuDataId=${y}, size=${b}`);let m=r.HEAPU8.subarray(d>>>0,(d>>>0)+b);f.upload(y,m)}},async(d,y,b)=>{Je("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${d}, dataOffset=${y}, size=${b}`),await f.download(d,()=>r.HEAPU8.subarray(y>>>0,(y>>>0)+b))},(d,y,b)=>f.createKernel(d,y,b,r.UTF8ToString(r._JsepGetNodeName(y))),d=>f.releaseKernel(d),(d,y,b,C)=>{Je("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${b}, kernel=${d}, contextDataOffset=${y}`);let m=new ua(r,f,y);return f.computeKernel(d,m,C)},()=>f.captureBegin(),()=>f.captureEnd(),()=>f.replay()])}else l("webnn")}});var bs;bs=us();var Gm=hs(),Eo,Po=!1,Gi=!1,ys=!1,Hm=e=>{if(e===1)return!1;if(typeof SharedArrayBuffer>"u")return typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+e+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),!1;typeof process<"u"&&process.versions&&process.versions.node&&console.warn("env.wasm.numThreads is set to "+e+", however, currently onnxruntime-web does not support multi-threads in Node.js. Please consider using onnxruntime-node for performance critical scenarios.");try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},Lm=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},Fm=(e,r)=>e?r?"ort-wasm-simd-threaded.wasm":"ort-wasm-simd.wasm":r?"ort-wasm-threaded.wasm":"ort-wasm.wasm",vs=async e=>{if(Po)return Promise.resolve();if(Gi)throw new Error("multiple calls to \'initializeWebAssembly()\' detected.");if(ys)throw new Error("previous call to \'initializeWebAssembly()\' failed.");Gi=!0;let r=e.initTimeout,t=e.numThreads,u=e.simd,l=Hm(t),f=u&&Lm(),d=e.wasmPaths,y=typeof d=="string"?d:void 0,b=Fm(f,l),C=typeof d=="object"?d[b]:void 0,m=!1,A=[];if(r>0&&A.push(new Promise(E=>{setTimeout(()=>{m=!0,E()},r)})),A.push(new Promise((E,R)=>{let P=l?Gm:bs,k={locateFile:(U,V)=>{if(l&&U.endsWith(".worker.js")&&typeof Blob<"u")return URL.createObjectURL(new Blob([gs()],{type:"text/javascript"}));if(U.endsWith(".wasm")){if(C)return C;let B=y??V;return b==="ort-wasm-simd.wasm"?B+"ort-wasm-simd.jsep.wasm":b==="ort-wasm-simd-threaded.wasm"?B+"ort-wasm-simd-threaded.jsep.wasm":B+b}return V+U}};if(l)if(k.numThreads=t,typeof Blob>"u")k.mainScriptUrlOrBlob=(void 0)(__dirname,"ort-wasm-threaded.js");else{let U=`var ortWasmThreaded=${P.toString()};`;k.mainScriptUrlOrBlob=new Blob([U],{type:"text/javascript"})}P(k).then(U=>{Gi=!1,Po=!0,Eo=U,E()},U=>{Gi=!1,ys=!0,R(U)})})),await Promise.race(A),m)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},Qe=()=>{if(Po&&Eo)return Eo;throw new Error("WebAssembly is not initialized yet.")};var et=(e,r)=>{let t=Qe(),u=t.lengthBytesUTF8(e)+1,l=t._malloc(u);return t.stringToUTF8(e,l,u),r.push(l),l},Xn=(e,r,t,u)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([l,f])=>{let d=r?r+l:l;if(typeof f=="object")Xn(f,d+".",t,u);else if(typeof f=="string"||typeof f=="number")u(d,f.toString());else if(typeof f=="boolean")u(d,f?"1":"0");else throw new Error(`Can\'t handle extra config type: ${typeof f}`)})},Ke=e=>{let r=Qe(),t=r.stackSave();try{let u=r.stackAlloc(8);r._OrtGetLastError(u,u+4);let l=r.HEAP32[u/4],f=r.HEAPU32[u/4+1],d=f?r.UTF8ToString(f):"";throw new Error(`${e} ERROR_CODE: ${l}, ERROR_MESSAGE: ${d}`)}finally{r.stackRestore(t)}};var ws=e=>{let r=Qe(),t=0,u=[],l=e||{};try{if(e?.logSeverityLevel===void 0)l.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)l.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(l.terminate=!1);let f=0;return e?.tag!==void 0&&(f=et(e.tag,u)),t=r._OrtCreateRunOptions(l.logSeverityLevel,l.logVerbosityLevel,!!l.terminate,f),t===0&&Ke("Can\'t create run options."),e?.extra!==void 0&&Xn(e.extra,"",new WeakSet,(d,y)=>{let b=et(d,u),C=et(y,u);r._OrtAddRunConfigEntry(t,b,C)!==0&&Ke(`Can\'t set a run config entry: ${d} - ${y}.`)}),[t,u]}catch(f){throw t!==0&&r._OrtReleaseRunOptions(t),u.forEach(d=>r._free(d)),f}};var qm=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},Km=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Jm=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},Ym=(e,r,t)=>{for(let u of r){let l=typeof u=="string"?u:u.name;switch(l){case"webnn":if(l="WEBNN",typeof u!="string"){let d=u;if(d?.deviceType){let y=et("deviceType",t),b=et(d.deviceType,t);Qe()._OrtAddSessionConfigEntry(e,y,b)!==0&&Ke(`Can\'t set a session config entry: \'deviceType\' - ${d.deviceType}.`)}if(d?.numThreads){let y=d.numThreads;(typeof y!="number"||!Number.isInteger(y)||y<0)&&(y=0);let b=et("numThreads",t),C=et(y.toString(),t);Qe()._OrtAddSessionConfigEntry(e,b,C)!==0&&Ke(`Can\'t set a session config entry: \'numThreads\' - ${d.numThreads}.`)}if(d?.powerPreference){let y=et("powerPreference",t),b=et(d.powerPreference,t);Qe()._OrtAddSessionConfigEntry(e,y,b)!==0&&Ke(`Can\'t set a session config entry: \'powerPreference\' - ${d.powerPreference}.`)}}break;case"webgpu":if(l="JS",typeof u!="string"){let d=u;if(d?.preferredLayout){if(d.preferredLayout!=="NCHW"&&d.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either \'NCHW\' or \'NHWC\': ${d.preferredLayout}`);let y=et("preferredLayout",t),b=et(d.preferredLayout,t);Qe()._OrtAddSessionConfigEntry(e,y,b)!==0&&Ke(`Can\'t set a session config entry: \'preferredLayout\' - ${d.preferredLayout}.`)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${l}`)}let f=et(l,t);Qe()._OrtAppendExecutionProvider(e,f)!==0&&Ke(`Can\'t append execution provider: ${l}.`)}},_s=e=>{let r=Qe(),t=0,u=[],l=e||{};Jm(l);try{let f=qm(l.graphOptimizationLevel??"all"),d=Km(l.executionMode??"sequential"),y=typeof l.logId=="string"?et(l.logId,u):0,b=l.logSeverityLevel??2;if(!Number.isInteger(b)||b<0||b>4)throw new Error(`log serverity level is not valid: ${b}`);let C=l.logVerbosityLevel??0;if(!Number.isInteger(C)||C<0||C>4)throw new Error(`log verbosity level is not valid: ${C}`);let m=typeof l.optimizedModelFilePath=="string"?et(l.optimizedModelFilePath,u):0;if(t=r._OrtCreateSessionOptions(f,!!l.enableCpuMemArena,!!l.enableMemPattern,d,!!l.enableProfiling,0,y,b,C,m),t===0&&Ke("Can\'t create session options."),l.executionProviders&&Ym(t,l.executionProviders,u),l.enableGraphCapture!==void 0){if(typeof l.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${l.enableGraphCapture}`);let A=et("enableGraphCapture",u),E=et(l.enableGraphCapture.toString(),u);r._OrtAddSessionConfigEntry(t,A,E)!==0&&Ke(`Can\'t set a session config entry: \'enableGraphCapture\' - ${l.enableGraphCapture}.`)}if(l.freeDimensionOverrides)for(let[A,E]of Object.entries(l.freeDimensionOverrides)){if(typeof A!="string")throw new Error(`free dimension override name must be a string: ${A}`);if(typeof E!="number"||!Number.isInteger(E)||E<0)throw new Error(`free dimension override value must be a non-negative integer: ${E}`);let R=et(A,u);r._OrtAddFreeDimensionOverride(t,R,E)!==0&&Ke(`Can\'t set a free dimension override: ${A} - ${E}.`)}return l.extra!==void 0&&Xn(l.extra,"",new WeakSet,(A,E)=>{let R=et(A,u),P=et(E,u);r._OrtAddSessionConfigEntry(t,R,P)!==0&&Ke(`Can\'t set a session config entry: ${A} - ${E}.`)}),[t,u]}catch(f){throw t!==0&&r._OrtReleaseSessionOptions(t),u.forEach(d=>r._free(d)),f}};Se();var Cs=async e=>{if(typeof e=="string")if(typeof process<"u"&&process.versions&&process.versions.node)try{return new Uint8Array(await(void 0)(e))}catch(r){if(r.code==="ERR_FS_FILE_TOO_LARGE"){let t=(void 0)(e),u=[];for await(let l of t)u.push(l);return new Uint8Array(Buffer.concat(u))}throw r}else{let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),u=t?parseInt(t,10):0;if(u<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let l=r.body.getReader(),f;try{f=new ArrayBuffer(u)}catch(y){if(y instanceof RangeError){let b=Math.ceil(u/65536);f=new WebAssembly.Memory({initial:b,maximum:b}).buffer}else throw y}let d=0;for(;;){let{done:y,value:b}=await l.read();if(y)break;let C=b.byteLength;new Uint8Array(f,d,C).set(b),d+=C}return new Uint8Array(f,0,u)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)};var Oy=(e,r)=>{Qe()._OrtInit(e,r)!==0&&Ke("Can\'t initialize onnxruntime.")},bc=async e=>{Oy(e.wasm.numThreads,ei(e.logLevel))},vc=async(e,r)=>{{let t=(gc(),Wr(hc)).init;if(r==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let u=e.webgpu?.powerPreference;if(u!==void 0&&u!=="low-power"&&u!=="high-performance")throw new Error(`Invalid powerPreference setting: "${u}"`);let l=e.webgpu?.forceFallbackAdapter;if(l!==void 0&&typeof l!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${l}"`);let f=await navigator.gpu.requestAdapter({powerPreference:u,forceFallbackAdapter:l});if(!f)throw new Error(\'Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.\');if(!e.wasm.simd)throw new Error("Not supported for WebGPU=ON and SIMD=OFF. Please set `env.wasm.simd` to true when using `webgpu` EP");await t("webgpu",Qe(),e,f)}if(r==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await t("webnn",Qe(),e)}}},br=new Map,ky=e=>{let r=Qe(),t=r.stackSave();try{let u=r.stackAlloc(8);return r._OrtGetInputOutputCount(e,u,u+4)!==0&&Ke("Can\'t get session input/output count."),[r.HEAP32[u/4],r.HEAP32[u/4+1]]}finally{r.stackRestore(t)}},la=e=>{let r=Qe(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can\'t create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},wc=async(e,r)=>{let t,u,l=Qe();Array.isArray(e)?[t,u]=e:e.buffer===l.HEAPU8.buffer?[t,u]=[e.byteOffset,e.byteLength]:[t,u]=la(e);let f=0,d=0,y=0,b=[],C=[],m=[];try{if([d,b]=_s(r),r?.externalData&&l.mountExternalData){let B=[];for(let W of r.externalData){let j=typeof W=="string"?W:W.path;B.push(Cs(typeof W=="string"?W:W.data).then(q=>{l.mountExternalData(j,q)}))}await Promise.all(B)}f=await l._OrtCreateSession(t,u,d),f===0&&Ke("Can\'t create a session.");let[A,E]=ky(f),R=!!r?.enableGraphCapture,P=[],k=[],U=[];for(let B=0;B<A;B++){let W=l._OrtGetInputName(f,B);W===0&&Ke("Can\'t get an input name."),C.push(W),P.push(l.UTF8ToString(W))}for(let B=0;B<E;B++){let W=l._OrtGetOutputName(f,B);W===0&&Ke("Can\'t get an output name."),m.push(W);let j=l.UTF8ToString(W);k.push(j);{if(R&&r?.preferredOutputLocation===void 0){U.push("gpu-buffer");continue}let q=typeof r?.preferredOutputLocation=="string"?r.preferredOutputLocation:r?.preferredOutputLocation?.[j]??"cpu";if(q!=="cpu"&&q!=="cpu-pinned"&&q!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${q}.`);if(R&&q!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${q}. Only \'gpu-buffer\' location is supported when enableGraphCapture is true.`);U.push(q)}}let V=null;return U.some(B=>B==="gpu-buffer")&&(y=l._OrtCreateBinding(f),y===0&&Ke("Can\'t create IO binding."),V={handle:y,outputPreferredLocations:U,outputPreferredLocationsEncoded:U.map(B=>ko(B))}),br.set(f,[f,C,m,V,R,!1]),[f,P,k]}catch(A){throw C.forEach(E=>l._OrtFree(E)),m.forEach(E=>l._OrtFree(E)),y!==0&&l._OrtReleaseBinding(y),f!==0&&l._OrtReleaseSession(f),A}finally{l._free(t),d!==0&&l._OrtReleaseSessionOptions(d),b.forEach(A=>l._free(A)),l.unmountExternalData?.()}},_c=e=>{let r=Qe(),t=br.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[u,l,f,d,y]=t;d&&(y&&r._OrtClearBoundOutputs(d.handle),r._OrtReleaseBinding(d.handle)),r.jsepOnReleaseSession?.(e),l.forEach(b=>r._OrtFree(b)),f.forEach(b=>r._OrtFree(b)),r._OrtReleaseSession(u),br.delete(e)},yc=(e,r,t,u,l,f=!1)=>{if(!e){r.push(0);return}let d=Qe(),y=e[0],b=e[1],C=e[3],m,A;if(y==="string"&&C==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");if(f&&C!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${l} when enableGraphCapture is true.`);if(C==="gpu-buffer"){let P=e[2].gpuBuffer,k=Qn(Oo(y));A=b.reduce((V,B)=>V*B,1)*k;let U=d.jsepRegisterBuffer;if(!U)throw new Error(\'Tensor location "gpu-buffer" is not supported without using WebGPU.\');m=U(u,l,P,A)}else{let P=e[2];if(Array.isArray(P)){A=4*P.length,m=d._malloc(A),t.push(m);let k=m/4;for(let U=0;U<P.length;U++){if(typeof P[U]!="string")throw new TypeError(`tensor data at index ${U} is not a string`);d.HEAPU32[k++]=et(P[U],t)}}else A=P.byteLength,m=d._malloc(A),t.push(m),d.HEAPU8.set(new Uint8Array(P.buffer,P.byteOffset,A),m)}let E=d.stackSave(),R=d.stackAlloc(4*b.length);try{let P=R/4;b.forEach(U=>d.HEAP32[P++]=U);let k=d._OrtCreateTensor(Oo(y),m,A,R,b.length,ko(C));k===0&&Ke(`Can\'t create tensor for input/output. session=${u}, index=${l}.`),r.push(k)}finally{d.stackRestore(E)}},$c=async(e,r,t,u,l,f)=>{let d=Qe(),y=br.get(e);if(!y)throw new Error(`cannot run inference. invalid session id: ${e}`);let b=y[0],C=y[1],m=y[2],A=y[3],E=y[4],R=y[5],P=r.length,k=u.length,U=0,V=[],B=[],W=[],j=[],q=d.stackSave(),Q=d.stackAlloc(P*4),te=d.stackAlloc(P*4),ne=d.stackAlloc(k*4),J=d.stackAlloc(k*4);try{[U,V]=ws(f);for(let pe=0;pe<P;pe++)yc(t[pe],B,j,e,r[pe],E);for(let pe=0;pe<k;pe++)yc(l[pe],W,j,e,P+u[pe],E);let ie=Q/4,Ae=te/4,De=ne/4,Fe=J/4;for(let pe=0;pe<P;pe++)d.HEAPU32[ie++]=B[pe],d.HEAPU32[Ae++]=C[r[pe]];for(let pe=0;pe<k;pe++)d.HEAPU32[De++]=W[pe],d.HEAPU32[Fe++]=m[u[pe]];if(A&&!R){let{handle:pe,outputPreferredLocations:We,outputPreferredLocationsEncoded:Ie}=A;if(C.length!==P)throw new Error(`input count from feeds (${P}) is expected to be always equal to model\'s input count (${C.length}).`);for(let $e=0;$e<P;$e++){let ge=r[$e];await d._OrtBindInput(pe,C[ge],B[$e])!==0&&Ke(`Can\'t bind input[${$e}] for session=${e}.`)}for(let $e=0;$e<k;$e++){let ge=u[$e];l[$e]?.[3]?d._OrtBindOutput(pe,m[ge],W[$e],0)!==0&&Ke(`Can\'t bind pre-allocated output[${$e}] for session=${e}.`):d._OrtBindOutput(pe,m[ge],0,Ie[ge])!==0&&Ke(`Can\'t bind output[${$e}] to ${We[$e]} for session=${e}.`)}br.set(e,[b,C,m,A,E,!0])}d.jsepOnRunStart?.(b);let Ne;A?Ne=await d._OrtRunWithBinding(b,A.handle,k,ne,U):Ne=await d._OrtRun(b,te,Q,P,J,k,ne,U),Ne!==0&&Ke("failed to call OrtRun().");let Be=[];for(let pe=0;pe<k;pe++){let We=d.HEAPU32[ne/4+pe];if(We===W[pe]){Be.push(l[pe]);continue}let Ie=d.stackSave(),$e=d.stackAlloc(4*4),ge=!1,Te,Ve=0;try{d._OrtGetTensorData(We,$e,$e+4,$e+8,$e+12)!==0&&Ke(`Can\'t access output tensor data on index ${pe}.`);let oe=$e/4,ye=d.HEAPU32[oe++];Ve=d.HEAPU32[oe++];let Me=d.HEAPU32[oe++],ot=d.HEAPU32[oe++],ft=[];for(let at=0;at<ot;at++)ft.push(d.HEAPU32[Me/4+at]);d._OrtFree(Me);let ut=ft.reduce((at,tt)=>at*tt,1);Te=er(ye);let pt=A?.outputPreferredLocations[u[pe]];if(Te==="string"){if(pt==="gpu-buffer")throw new Error("String tensor is not supported on GPU.");let at=[],tt=Ve/4;for(let gt=0;gt<ut;gt++){let St=d.HEAPU32[tt++],Tt=gt===ut-1?void 0:d.HEAPU32[tt]-St;at.push(d.UTF8ToString(St,Tt))}Be.push([Te,ft,at,"cpu"])}else if(pt==="gpu-buffer"&&ut>0){let at=d.jsepGetBuffer;if(!at)throw new Error(\'preferredLocation "gpu-buffer" is not supported without using WebGPU.\');let tt=at(Ve),gt=Qn(ye);if(gt===void 0||!$s(Te))throw new Error(`Unsupported data type: ${Te}`);ge=!0,Be.push([Te,ft,{gpuBuffer:tt,download:d.jsepCreateDownloader(tt,ut*gt,Te),dispose:()=>{d._OrtReleaseTensor(We)}},"gpu-buffer"])}else{let at=Hi(Te),tt=new at(ut);new Uint8Array(tt.buffer,tt.byteOffset,tt.byteLength).set(d.HEAPU8.subarray(Ve,Ve+tt.byteLength)),Be.push([Te,ft,tt,"cpu"])}}finally{d.stackRestore(Ie),Te==="string"&&Ve&&d._free(Ve),ge||d._OrtReleaseTensor(We)}}return A&&!E&&(d._OrtClearBoundOutputs(A.handle),br.set(e,[b,C,m,A,E,!1])),Be}finally{d.stackRestore(q),B.forEach(ie=>d._OrtReleaseTensor(ie)),W.forEach(ie=>d._OrtReleaseTensor(ie)),j.forEach(ie=>d._free(ie)),U!==0&&d._OrtReleaseRunOptions(U),V.forEach(ie=>d._free(ie))}},Cc=e=>{let r=Qe(),t=br.get(e);if(!t)throw new Error("invalid session id");let u=t[0],l=r._OrtEndProfiling(u);l===0&&Ke("Can\'t get an profile file name."),r._OrtFree(l)},Sc=e=>{let r=[];for(let t of e){let u=t[2];!Array.isArray(u)&&"buffer"in u&&r.push(u.buffer)}return r};self.onmessage=e=>{let{type:r,in:t}=e.data;try{switch(r){case"init-wasm":vs(t.wasm).then(()=>{bc(t).then(()=>{postMessage({type:r})},u=>{postMessage({type:r,err:u})})},u=>{postMessage({type:r,err:u})});break;case"init-ep":{let{epName:u,env:l}=t;vc(l,u).then(()=>{postMessage({type:r})},f=>{postMessage({type:r,err:f})});break}case"copy-from":{let{buffer:u}=t,l=la(u);postMessage({type:r,out:l});break}case"create":{let{model:u,options:l}=t;wc(u,l).then(f=>{postMessage({type:r,out:f})},f=>{postMessage({type:r,err:f})});break}case"release":_c(t),postMessage({type:r});break;case"run":{let{sessionId:u,inputIndices:l,inputs:f,outputIndices:d,options:y}=t;$c(u,l,f,d,new Array(d.length).fill(null),y).then(b=>{b.some(C=>C[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:b},Sc([...f,...b]))},b=>{postMessage({type:r,err:b})});break}case"end-profiling":Cc(t),postMessage({type:r});break;default:}}catch(u){postMessage({type:r,err:u})}};})();\n/**\n * @license\n * Copyright 2021 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the "License");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an "AS IS" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n'});var Er,Ut,vn,Ua,Na,Do,jo,ii,ni,D0,ja,hp,gp,yp,bp,vp,wp,_p,Uo=se(()=>{"use strict";Dt();fp();ei();Er=()=>!!Ne.wasm.proxy&&typeof document<"u",vn=!1,Ua=!1,Na=!1,jo=new Map,ii=(e,t)=>{let r=jo.get(e);r?r.push(t):jo.set(e,[t])},ni=()=>{if(vn||!Ua||Na||!Ut)throw new Error("worker not ready")},D0=e=>{switch(e.data.type){case"init-wasm":vn=!1,e.data.err?(Na=!0,Do[1](e.data.err)):(Ua=!0,Do[0]());break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let t=jo.get(e.data.type);e.data.err?t.shift()[1](e.data.err):t.shift()[0](e.data.out);break}default:}},ja=typeof document<"u"?document?.currentScript?.src:void 0,hp=async()=>{if(!Ua){if(vn)throw new Error("multiple calls to 'initWasm()' detected.");if(Na)throw new Error("previous call to 'initWasm()' failed.");if(vn=!0,Er())return Ne.wasm.wasmPaths===void 0&&ja&&ja.indexOf("blob:")!==0&&(Ne.wasm.wasmPaths=ja.substr(0,+ja.lastIndexOf("/")+1)),new Promise((e,t)=>{Ut?.terminate();let r=URL.createObjectURL(new Blob([mp()],{type:"text/javascript"}));Ut=new Worker(r,{name:"ort-wasm-proxy-worker"}),Ut.onerror=s=>t(s),Ut.onmessage=D0,URL.revokeObjectURL(r),Do=[e,t];let o={type:"init-wasm",in:Ne};Ut.postMessage(o)});try{await Iu(Ne.wasm),await op(Ne),Ua=!0}catch(e){throw Na=!0,e}finally{vn=!1}}},gp=async e=>{if(Er())return ni(),new Promise((t,r)=>{ii("init-ep",[t,r]);let o={type:"init-ep",in:{epName:e,env:Ne}};Ut.postMessage(o)});await sp(Ne,e)},yp=async e=>Er()?(ni(),new Promise((t,r)=>{ii("copy-from",[t,r]);let o={type:"copy-from",in:{buffer:e}};Ut.postMessage(o,[e.buffer])})):Mo(e),bp=async(e,t)=>{if(Er()){if(t?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return ni(),new Promise((r,o)=>{ii("create",[r,o]);let s={type:"create",in:{model:e,options:{...t}}},p=[];e instanceof Uint8Array&&p.push(e.buffer),Ut.postMessage(s,p)})}else return up(e,t)},vp=async e=>{if(Er())return ni(),new Promise((t,r)=>{ii("release",[t,r]);let o={type:"release",in:e};Ut.postMessage(o)});lp(e)},wp=async(e,t,r,o,s,p)=>{if(Er()){if(r.some(d=>d[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(s.some(d=>d))throw new Error("pre-allocated output tensor is not supported for proxy.");return ni(),new Promise((d,g)=>{ii("run",[d,g]);let y=r,w={type:"run",in:{sessionId:e,inputIndices:t,inputs:y,outputIndices:o,options:p}};Ut.postMessage(w,pp(y))})}else return dp(e,t,r,o,s,p)},_p=async e=>{if(Er())return ni(),new Promise((t,r)=>{ii("end-profiling",[t,r]);let o={type:"end-profiling",in:e};Ut.postMessage(o)});cp(e)}});var $p,j0,Wa,Cp=se(()=>{"use strict";Dt();Uo();xe();so();$p=(e,t)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];default:throw new Error(`invalid data location: ${e.location} for ${t()}`)}},j0=e=>{switch(e[3]){case"cpu":return new pt(e[0],e[2],e[1]);case"gpu-buffer":{let t=e[0];if(!fa(t))throw new Error(`not supported data type: ${t} for deserializing GPU tensor`);let{gpuBuffer:r,download:o,dispose:s}=e[2];return pt.fromGpuBuffer(r,{dataType:t,dims:e[1],download:o,dispose:s})}default:throw new Error(`invalid data location: ${e[3]}`)}},Wa=class{async fetchModelAndCopyToWasmMemory(t){return yp(await mn(t))}async loadModel(t,r){It();let o;typeof t=="string"?typeof process<"u"&&process.versions&&process.versions.node?o=await mn(t):o=await this.fetchModelAndCopyToWasmMemory(t):o=t,[this.sessionId,this.inputNames,this.outputNames]=await bp(o,r),$t()}async dispose(){return vp(this.sessionId)}async run(t,r,o){It();let s=[],p=[];Object.entries(t).forEach(S=>{let O=S[0],E=S[1],P=this.inputNames.indexOf(O);if(P===-1)throw new Error(`invalid input '${O}'`);s.push(E),p.push(P)});let d=[],g=[];Object.entries(r).forEach(S=>{let O=S[0],E=S[1],P=this.outputNames.indexOf(O);if(P===-1)throw new Error(`invalid output '${O}'`);d.push(E),g.push(P)});let y=s.map((S,O)=>$p(S,()=>`input "${this.inputNames[p[O]]}"`)),w=d.map((S,O)=>S?$p(S,()=>`output "${this.outputNames[g[O]]}"`):null),f=await wp(this.sessionId,p,y,g,w,o),x={};for(let S=0;S<f.length;S++)x[this.outputNames[g[S]]]=d[S]??j0(f[S]);return $t(),x}startProfiling(){}endProfiling(){_p(this.sessionId)}}});var U0,Va,xp=se(()=>{"use strict";Dt();Uo();Cp();U0=()=>{if((typeof Ne.wasm.initTimeout!="number"||Ne.wasm.initTimeout<0)&&(Ne.wasm.initTimeout=0),typeof Ne.wasm.simd!="boolean"&&(Ne.wasm.simd=!0),typeof Ne.wasm.proxy!="boolean"&&(Ne.wasm.proxy=!1),typeof Ne.wasm.trace!="boolean"&&(Ne.wasm.trace=!1),typeof Ne.wasm.numThreads!="number"||!Number.isInteger(Ne.wasm.numThreads)||Ne.wasm.numThreads<=0){(typeof self<"u"&&!self.crossOriginIsolated||typeof process<"u"&&process.versions&&process.versions.node)&&(Ne.wasm.numThreads=1);let e=typeof navigator>"u"?(void 0)().length:navigator.hardwareConcurrency;Ne.wasm.numThreads=Math.min(4,Math.ceil((e||1)/2))}},Va=class{async init(t){U0(),await hp(),await gp(t)}async createInferenceSessionHandler(t,r){let o=new Wa;return await o.loadModel(t,r),Promise.resolve(o)}}});var Sp={};xr(Sp,{wasmBackend:()=>N0});var N0,Ip=se(()=>{"use strict";xp();N0=new Va});var V0={};xr(V0,{InferenceSession:()=>ru,TRACE:()=>dn,TRACE_FUNC_BEGIN:()=>It,TRACE_FUNC_END:()=>$t,Tensor:()=>pt,TrainingSession:()=>lu,default:()=>W0,env:()=>Ne,registerBackend:()=>ur});Dt();Dt();Dt();var cu="1.18.0";var W0=Ya;{let e=(Ip(),sr(Sp)).wasmBackend;ur("webgpu",e,5),ur("webnn",e,5),ur("cpu",e,10),ur("wasm",e,10)}Object.defineProperty(Ne.versions,"web",{value:cu,enumerable:!0});return sr(V0);})();
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
//# sourceMappingURL=ort.webgpu.min.js.map
